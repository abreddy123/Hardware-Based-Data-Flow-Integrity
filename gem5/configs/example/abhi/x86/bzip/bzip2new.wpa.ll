; ModuleID = 'bzip2new.wpa'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.spec_fd_t = type { i32, i32, i32, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }
%struct.UInt64 = type { [8 x i8] }
%struct.DState = type { %struct.bz_stream*, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], i32*, i16*, i8*, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }

@dbglvl = local_unnamed_addr global i32 4, align 4
@seedi = common local_unnamed_addr global i64 0, align 8
@spec_fd = common local_unnamed_addr global [3 x %struct.spec_fd_t] zeroinitializer, align 16
@str.34 = private unnamed_addr constant [10 x i8] c"spec_init\00"
@str = private unnamed_addr constant [35 x i8] c"spec_init: Error mallocing memory!\00"
@str.36 = private unnamed_addr constant [16 x i8] c"Creating Chunks\00"
@.str.3 = private unnamed_addr constant [19 x i8] c"Creating Chunk %d\0A\00", align 1
@str.35 = private unnamed_addr constant [19 x i8] c"Filling input file\00"
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.5 = private unnamed_addr constant [24 x i8] c"Can't open file %s: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"Error reading from %s: %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"Duplicating %d bytes\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"spec_read: %d, %p, %d = \00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"spec_read: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@str.39 = private unnamed_addr constant [4 x i8] c"EOF\00"
@.str.11 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"spec_fread: %p, (%d x %d) fd %d =\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"spec_fread: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"spec_getc: %d = \00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"spec_ungetc: %d = \00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"spec_ungetc: pos %d <= 0\0A\00", align 1
@.str.17 = private unnamed_addr constant [72 x i8] c"spec_ungetc: can't unget something that wasn't what was in the buffer!\0A\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"spec_write: %d, %p, %d = \00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"spec_write: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.20 = private unnamed_addr constant [31 x i8] c"spec_fwrite: %p, %d, %d, %d = \00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"spec_fwrite: fd=%d, > MAX_SPEC_FD!\0A\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"spec_putc: %d, %d = \00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"input.combined\00", align 1
@str.43 = private unnamed_addr constant [19 x i8] c"Loading Input Data\00"
@.str.25 = private unnamed_addr constant [31 x i8] c"Input data %d bytes in length\0A\00", align 1
@str.42 = private unnamed_addr constant [30 x i8] c"main: Error mallocing memory!\00"
@.str.27 = private unnamed_addr constant [34 x i8] c"Compressing Input Data, level %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"Compressed data %d bytes in length\0A\00", align 1
@str.41 = private unnamed_addr constant [19 x i8] c"Uncompressing Data\00"
@.str.30 = private unnamed_addr constant [38 x i8] c"Uncompressed data %d bytes in length\0A\00", align 1
@str.40 = private unnamed_addr constant [37 x i8] c"Uncompressed data compared correctly\00"
@.str.31 = private unnamed_addr constant [35 x i8] c"Tested %dMB buffer: Miscompared!!\0A\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"Tested %dMB buffer: OK!\0A\00", align 1
@.str.6.1 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.7.2 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@incs = internal unnamed_addr constant [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str.8.3 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@.str = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@.str.3.4 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.5.5 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1
@blockSize100k = common local_unnamed_addr global i32 0, align 4
@verbosity = common local_unnamed_addr global i32 0, align 4
@workFactor = common local_unnamed_addr global i32 0, align 4
@outputHandleJustInCase = common local_unnamed_addr global i32 0, align 4
@smallMode = common local_unnamed_addr global i8 0, align 1
@forceOverwrite = common local_unnamed_addr global i8 0, align 1
@noisy = common local_unnamed_addr global i8 0, align 1
@progName = common local_unnamed_addr global i8* null, align 8
@inName = common global [1034 x i8] zeroinitializer, align 16
@keepInputFiles = common local_unnamed_addr global i8 0, align 1
@deleteOutputOnInterrupt = common local_unnamed_addr global i8 0, align 1
@testFailsExist = common local_unnamed_addr global i8 0, align 1
@unzFailsExist = common local_unnamed_addr global i8 0, align 1
@numFileNames = common local_unnamed_addr global i32 0, align 4
@numFilesProcessed = common local_unnamed_addr global i32 0, align 4
@exitValue = common local_unnamed_addr global i32 0, align 4
@opMode = common local_unnamed_addr global i32 0, align 4
@srcMode = common local_unnamed_addr global i32 0, align 4
@longestFileName = common local_unnamed_addr global i32 0, align 4
@outName = common global [1034 x i8] zeroinitializer, align 16
@tmpName = common local_unnamed_addr global [1034 x i8] zeroinitializer, align 16
@progNameReally = common local_unnamed_addr global [1034 x i8] zeroinitializer, align 16
@.str.1.16 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str.2.17 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str.3.18 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str.10 = private unnamed_addr constant [148 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is probably a BUG, but it may be in your COMPILER.  Please do not bother\0A\09the original author.\0A\00", align 1
@.str.11.19 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str.15.20 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str.16.21 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str.17.22 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str.5.25 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str.6.26 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.7.27 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str.8.28 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str.14.29 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str.13.30 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.12.31 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str.34 = private unnamed_addr constant [269 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis may be a bug in bzip2/libbzip2, %s.\0AIt may also be a bug in your compiler.  Please do not bother the\0Aoriginal author of bzip2 with a bug report for this.  He\0Adoesn't know anything about bzip2 as it appears in CPU2006.\0A\0A\00", align 1
@.str.5.35 = private unnamed_addr constant [19 x i8] c"1.0.3, 15-Feb-2005\00", align 1
@.str.1.36 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.2.37 = private unnamed_addr constant [18 x i8] c" {0x%08x, 0x%08x}\00", align 1
@.str.4.38 = private unnamed_addr constant [55 x i8] c"\0A    combined CRCs: stored = 0x%08x, computed = 0x%08x\00", align 1
@bzerrorstrings = internal unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.53, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.54, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.55, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.56, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.57, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.58, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.59, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.60, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18.61, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19.62, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.63, i32 0, i32 0)], align 16
@.str.10.53 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.11.54 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.12.55 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.13.56 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.14.57 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.15.58 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.16.59 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.17.60 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.18.61 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.19.62 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.20.63 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.66 = private unnamed_addr constant [62 x i8] c"    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d\0A\00", align 1
@.str.1.67 = private unnamed_addr constant [36 x i8] c"    final combined CRC = 0x%08x\0A   \00", align 1
@.str.2.68 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str.3.69 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str.4.70 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str.5.71 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.7.72 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str.8.73 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str.9.74 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str.10.75 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@BZ2_crc32Table = local_unnamed_addr global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@.str.80 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str.1.81 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@BZ2_rNums = local_unnamed_addr global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16

; Function Attrs: norecurse nounwind uwtable
define double @ran() local_unnamed_addr #0 {
entry:
  %0 = load i64, i64* @seedi, align 8, !tbaa !2
  %div = sdiv i64 %0, 127773
  %rem = srem i64 %0, 127773
  %mul = mul nsw i64 %rem, 16807
  %1 = mul nsw i64 %div, -2836
  %sub = add nsw i64 %mul, %1
  %cmp = icmp sgt i64 %sub, 0
  %add = add nsw i64 %sub, 2147483647
  %storemerge = select i1 %cmp, i64 %sub, i64 %add
  store i64 %storemerge, i64* @seedi, align 8, !tbaa !2
  %conv = sitofp i64 %storemerge to float
  %div2 = fmul float %conv, 0x3E00000000000000
  %conv3 = fpext float %div2 to double
  ret double %conv3
}

; Function Attrs: nounwind uwtable
define i32 @spec_init() local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr [10 x i8], [10 x i8]* @str.34, i64 0, i64 0
  %puts45 = tail call i32 @puts(i8* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 0
  %3 = load i32, i32* %2, align 16, !tbaa !8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull bitcast ([3 x %struct.spec_fd_t]* @spec_fd to i8*), i8 0, i64 16, i32 16, i1 false)
  %4 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 0
  store i32 %3, i32* %4, align 16, !tbaa !8
  %add = add nsw i32 %3, 1048576
  %conv = sext i32 %add to i64
  %call8 = tail call noalias i8* @malloc(i64 %conv) #2
  %5 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  store i8* %call8, i8** %5, align 16, !tbaa !11
  %cmp14 = icmp eq i8* %call8, null
  br i1 %cmp14, label %if.then16, label %if.end18

if.then16:                                        ; preds = %for.end.1, %for.end, %if.end
  %6 = getelementptr [35 x i8], [35 x i8]* @str, i64 0, i64 0
  %puts = tail call i32 @puts(i8* %6)
  tail call void @exit(i32 0) #13
  unreachable

if.end18:                                         ; preds = %if.end
  %cmp2046 = icmp sgt i32 %3, 0
  br i1 %cmp2046, label %for.body22.lr.ph, label %for.end

for.body22.lr.ph:                                 ; preds = %if.end18
  store i8 0, i8* %call8, align 1, !tbaa !12
  %cmp2057 = icmp sgt i32 %3, 1024
  br i1 %cmp2057, label %for.body22.for.body22_crit_edge.preheader, label %for.end

for.body22.for.body22_crit_edge.preheader:        ; preds = %for.body22.lr.ph
  %7 = sext i32 %3 to i64
  %8 = add nsw i64 %7, -1025
  %9 = lshr i64 %8, 10
  %10 = add nuw nsw i64 %9, 1
  %xtraiter64 = and i64 %10, 3
  %11 = icmp ult i64 %8, 3072
  br i1 %11, label %for.end.loopexit.unr-lcssa, label %for.body22.for.body22_crit_edge.preheader.new

for.body22.for.body22_crit_edge.preheader.new:    ; preds = %for.body22.for.body22_crit_edge.preheader
  %unroll_iter67 = sub nsw i64 %10, %xtraiter64
  br label %for.body22.for.body22_crit_edge

for.body22.for.body22_crit_edge:                  ; preds = %for.body22.for.body22_crit_edge, %for.body22.for.body22_crit_edge.preheader.new
  %indvars.iv.next58 = phi i64 [ 1024, %for.body22.for.body22_crit_edge.preheader.new ], [ %indvars.iv.next.3, %for.body22.for.body22_crit_edge ]
  %niter68 = phi i64 [ %unroll_iter67, %for.body22.for.body22_crit_edge.preheader.new ], [ %niter68.nsub.3, %for.body22.for.body22_crit_edge ]
  %12 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %.pre = load i8*, i8** %12, align 16, !tbaa !11
  %arrayidx27 = getelementptr inbounds i8, i8* %.pre, i64 %indvars.iv.next58
  store i8 0, i8* %arrayidx27, align 1, !tbaa !12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next58, 1024
  %13 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %.pre.1 = load i8*, i8** %13, align 16, !tbaa !11
  %arrayidx27.169 = getelementptr inbounds i8, i8* %.pre.1, i64 %indvars.iv.next
  store i8 0, i8* %arrayidx27.169, align 1, !tbaa !12
  %indvars.iv.next.170 = add nuw nsw i64 %indvars.iv.next58, 2048
  %14 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %.pre.2 = load i8*, i8** %14, align 16, !tbaa !11
  %arrayidx27.271 = getelementptr inbounds i8, i8* %.pre.2, i64 %indvars.iv.next.170
  store i8 0, i8* %arrayidx27.271, align 1, !tbaa !12
  %indvars.iv.next.272 = add nuw nsw i64 %indvars.iv.next58, 3072
  %15 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %.pre.3 = load i8*, i8** %15, align 16, !tbaa !11
  %arrayidx27.3 = getelementptr inbounds i8, i8* %.pre.3, i64 %indvars.iv.next.272
  store i8 0, i8* %arrayidx27.3, align 1, !tbaa !12
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.next58, 4096
  %niter68.nsub.3 = add i64 %niter68, -4
  %niter68.ncmp.3 = icmp eq i64 %niter68.nsub.3, 0
  br i1 %niter68.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body22.for.body22_crit_edge

for.end.loopexit.unr-lcssa:                       ; preds = %for.body22.for.body22_crit_edge, %for.body22.for.body22_crit_edge.preheader
  %indvars.iv.next58.unr = phi i64 [ 1024, %for.body22.for.body22_crit_edge.preheader ], [ %indvars.iv.next.3, %for.body22.for.body22_crit_edge ]
  %lcmp.mod66 = icmp eq i64 %xtraiter64, 0
  br i1 %lcmp.mod66, label %for.end, label %for.body22.for.body22_crit_edge.epil.preheader

for.body22.for.body22_crit_edge.epil.preheader:   ; preds = %for.end.loopexit.unr-lcssa
  br label %for.body22.for.body22_crit_edge.epil

for.body22.for.body22_crit_edge.epil:             ; preds = %for.body22.for.body22_crit_edge.epil, %for.body22.for.body22_crit_edge.epil.preheader
  %indvars.iv.next58.epil = phi i64 [ %indvars.iv.next.epil, %for.body22.for.body22_crit_edge.epil ], [ %indvars.iv.next58.unr, %for.body22.for.body22_crit_edge.epil.preheader ]
  %epil.iter65 = phi i64 [ %epil.iter65.sub, %for.body22.for.body22_crit_edge.epil ], [ %xtraiter64, %for.body22.for.body22_crit_edge.epil.preheader ]
  %16 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %.pre.epil = load i8*, i8** %16, align 16, !tbaa !11
  %arrayidx27.epil = getelementptr inbounds i8, i8* %.pre.epil, i64 %indvars.iv.next58.epil
  store i8 0, i8* %arrayidx27.epil, align 1, !tbaa !12
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.next58.epil, 1024
  %epil.iter65.sub = add i64 %epil.iter65, -1
  %epil.iter65.cmp = icmp eq i64 %epil.iter65.sub, 0
  br i1 %epil.iter65.cmp, label %for.end, label %for.body22.for.body22_crit_edge.epil, !llvm.loop !13

for.end:                                          ; preds = %for.body22.for.body22_crit_edge.epil, %for.end.loopexit.unr-lcssa, %for.body22.lr.ph, %if.end18
  %17 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 0
  %18 = load i32, i32* %17, align 8, !tbaa !8
  %19 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1
  %20 = bitcast %struct.spec_fd_t* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %20, i8 0, i64 16, i32 8, i1 false)
  %21 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 0
  store i32 %18, i32* %21, align 8, !tbaa !8
  %add.1 = add nsw i32 %18, 1048576
  %conv.1 = sext i32 %add.1 to i64
  %call8.1 = tail call noalias i8* @malloc(i64 %conv.1) #2
  %22 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  store i8* %call8.1, i8** %22, align 8, !tbaa !11
  %cmp14.1 = icmp eq i8* %call8.1, null
  br i1 %cmp14.1, label %if.then16, label %if.end18.1

if.end18.1:                                       ; preds = %for.end
  %cmp2046.1 = icmp sgt i32 %18, 0
  br i1 %cmp2046.1, label %for.body22.lr.ph.1, label %for.end.1

for.body22.lr.ph.1:                               ; preds = %if.end18.1
  store i8 0, i8* %call8.1, align 1, !tbaa !12
  %cmp20.155 = icmp sgt i32 %18, 1024
  br i1 %cmp20.155, label %for.body22.1.for.body22.1_crit_edge.preheader, label %for.end.1

for.body22.1.for.body22.1_crit_edge.preheader:    ; preds = %for.body22.lr.ph.1
  %23 = sext i32 %18 to i64
  %24 = add nsw i64 %23, -1025
  %25 = lshr i64 %24, 10
  %26 = add nuw nsw i64 %25, 1
  %xtraiter59 = and i64 %26, 3
  %27 = icmp ult i64 %24, 3072
  br i1 %27, label %for.end.1.loopexit.unr-lcssa, label %for.body22.1.for.body22.1_crit_edge.preheader.new

for.body22.1.for.body22.1_crit_edge.preheader.new: ; preds = %for.body22.1.for.body22.1_crit_edge.preheader
  %unroll_iter62 = sub nsw i64 %26, %xtraiter59
  br label %for.body22.1.for.body22.1_crit_edge

for.body22.1.for.body22.1_crit_edge:              ; preds = %for.body22.1.for.body22.1_crit_edge, %for.body22.1.for.body22.1_crit_edge.preheader.new
  %indvars.iv.next.156 = phi i64 [ 1024, %for.body22.1.for.body22.1_crit_edge.preheader.new ], [ %indvars.iv.next.1.3, %for.body22.1.for.body22.1_crit_edge ]
  %niter63 = phi i64 [ %unroll_iter62, %for.body22.1.for.body22.1_crit_edge.preheader.new ], [ %niter63.nsub.3, %for.body22.1.for.body22.1_crit_edge ]
  %28 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %.pre51 = load i8*, i8** %28, align 8, !tbaa !11
  %arrayidx27.1 = getelementptr inbounds i8, i8* %.pre51, i64 %indvars.iv.next.156
  store i8 0, i8* %arrayidx27.1, align 1, !tbaa !12
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.next.156, 1024
  %29 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %.pre51.1 = load i8*, i8** %29, align 8, !tbaa !11
  %arrayidx27.1.1 = getelementptr inbounds i8, i8* %.pre51.1, i64 %indvars.iv.next.1
  store i8 0, i8* %arrayidx27.1.1, align 1, !tbaa !12
  %indvars.iv.next.1.1 = add nuw nsw i64 %indvars.iv.next.156, 2048
  %30 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %.pre51.2 = load i8*, i8** %30, align 8, !tbaa !11
  %arrayidx27.1.2 = getelementptr inbounds i8, i8* %.pre51.2, i64 %indvars.iv.next.1.1
  store i8 0, i8* %arrayidx27.1.2, align 1, !tbaa !12
  %indvars.iv.next.1.2 = add nuw nsw i64 %indvars.iv.next.156, 3072
  %31 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %.pre51.3 = load i8*, i8** %31, align 8, !tbaa !11
  %arrayidx27.1.3 = getelementptr inbounds i8, i8* %.pre51.3, i64 %indvars.iv.next.1.2
  store i8 0, i8* %arrayidx27.1.3, align 1, !tbaa !12
  %indvars.iv.next.1.3 = add nuw nsw i64 %indvars.iv.next.156, 4096
  %niter63.nsub.3 = add i64 %niter63, -4
  %niter63.ncmp.3 = icmp eq i64 %niter63.nsub.3, 0
  br i1 %niter63.ncmp.3, label %for.end.1.loopexit.unr-lcssa, label %for.body22.1.for.body22.1_crit_edge

for.end.1.loopexit.unr-lcssa:                     ; preds = %for.body22.1.for.body22.1_crit_edge, %for.body22.1.for.body22.1_crit_edge.preheader
  %indvars.iv.next.156.unr = phi i64 [ 1024, %for.body22.1.for.body22.1_crit_edge.preheader ], [ %indvars.iv.next.1.3, %for.body22.1.for.body22.1_crit_edge ]
  %lcmp.mod61 = icmp eq i64 %xtraiter59, 0
  br i1 %lcmp.mod61, label %for.end.1, label %for.body22.1.for.body22.1_crit_edge.epil.preheader

for.body22.1.for.body22.1_crit_edge.epil.preheader: ; preds = %for.end.1.loopexit.unr-lcssa
  br label %for.body22.1.for.body22.1_crit_edge.epil

for.body22.1.for.body22.1_crit_edge.epil:         ; preds = %for.body22.1.for.body22.1_crit_edge.epil, %for.body22.1.for.body22.1_crit_edge.epil.preheader
  %indvars.iv.next.156.epil = phi i64 [ %indvars.iv.next.1.epil, %for.body22.1.for.body22.1_crit_edge.epil ], [ %indvars.iv.next.156.unr, %for.body22.1.for.body22.1_crit_edge.epil.preheader ]
  %epil.iter60 = phi i64 [ %epil.iter60.sub, %for.body22.1.for.body22.1_crit_edge.epil ], [ %xtraiter59, %for.body22.1.for.body22.1_crit_edge.epil.preheader ]
  %32 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %.pre51.epil = load i8*, i8** %32, align 8, !tbaa !11
  %arrayidx27.1.epil = getelementptr inbounds i8, i8* %.pre51.epil, i64 %indvars.iv.next.156.epil
  store i8 0, i8* %arrayidx27.1.epil, align 1, !tbaa !12
  %indvars.iv.next.1.epil = add nuw nsw i64 %indvars.iv.next.156.epil, 1024
  %epil.iter60.sub = add i64 %epil.iter60, -1
  %epil.iter60.cmp = icmp eq i64 %epil.iter60.sub, 0
  br i1 %epil.iter60.cmp, label %for.end.1, label %for.body22.1.for.body22.1_crit_edge.epil, !llvm.loop !15

for.end.1:                                        ; preds = %for.body22.1.for.body22.1_crit_edge.epil, %for.end.1.loopexit.unr-lcssa, %for.body22.lr.ph.1, %if.end18.1
  %33 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 0
  %34 = load i32, i32* %33, align 16, !tbaa !8
  %35 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2
  %36 = bitcast %struct.spec_fd_t* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %36, i8 0, i64 16, i32 16, i1 false)
  %37 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 0
  store i32 %34, i32* %37, align 16, !tbaa !8
  %add.2 = add nsw i32 %34, 1048576
  %conv.2 = sext i32 %add.2 to i64
  %call8.2 = tail call noalias i8* @malloc(i64 %conv.2) #2
  %38 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 3
  store i8* %call8.2, i8** %38, align 16, !tbaa !11
  %cmp14.2 = icmp eq i8* %call8.2, null
  br i1 %cmp14.2, label %if.then16, label %if.end18.2

if.end18.2:                                       ; preds = %for.end.1
  %cmp2046.2 = icmp sgt i32 %34, 0
  br i1 %cmp2046.2, label %for.body22.lr.ph.2, label %for.end.2

for.body22.lr.ph.2:                               ; preds = %if.end18.2
  store i8 0, i8* %call8.2, align 1, !tbaa !12
  %cmp20.253 = icmp sgt i32 %34, 1024
  br i1 %cmp20.253, label %for.body22.2.for.body22.2_crit_edge.preheader, label %for.end.2

for.body22.2.for.body22.2_crit_edge.preheader:    ; preds = %for.body22.lr.ph.2
  %39 = sext i32 %34 to i64
  %40 = add nsw i64 %39, -1025
  %41 = lshr i64 %40, 10
  %42 = add nuw nsw i64 %41, 1
  %xtraiter = and i64 %42, 3
  %43 = icmp ult i64 %40, 3072
  br i1 %43, label %for.end.2.loopexit.unr-lcssa, label %for.body22.2.for.body22.2_crit_edge.preheader.new

for.body22.2.for.body22.2_crit_edge.preheader.new: ; preds = %for.body22.2.for.body22.2_crit_edge.preheader
  %unroll_iter = sub nsw i64 %42, %xtraiter
  br label %for.body22.2.for.body22.2_crit_edge

for.body22.2.for.body22.2_crit_edge:              ; preds = %for.body22.2.for.body22.2_crit_edge, %for.body22.2.for.body22.2_crit_edge.preheader.new
  %indvars.iv.next.254 = phi i64 [ 1024, %for.body22.2.for.body22.2_crit_edge.preheader.new ], [ %indvars.iv.next.2.3, %for.body22.2.for.body22.2_crit_edge ]
  %niter = phi i64 [ %unroll_iter, %for.body22.2.for.body22.2_crit_edge.preheader.new ], [ %niter.nsub.3, %for.body22.2.for.body22.2_crit_edge ]
  %44 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 3
  %.pre52 = load i8*, i8** %44, align 16, !tbaa !11
  %arrayidx27.2 = getelementptr inbounds i8, i8* %.pre52, i64 %indvars.iv.next.254
  store i8 0, i8* %arrayidx27.2, align 1, !tbaa !12
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.next.254, 1024
  %45 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 3
  %.pre52.1 = load i8*, i8** %45, align 16, !tbaa !11
  %arrayidx27.2.1 = getelementptr inbounds i8, i8* %.pre52.1, i64 %indvars.iv.next.2
  store i8 0, i8* %arrayidx27.2.1, align 1, !tbaa !12
  %indvars.iv.next.2.1 = add nuw nsw i64 %indvars.iv.next.254, 2048
  %46 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 3
  %.pre52.2 = load i8*, i8** %46, align 16, !tbaa !11
  %arrayidx27.2.2 = getelementptr inbounds i8, i8* %.pre52.2, i64 %indvars.iv.next.2.1
  store i8 0, i8* %arrayidx27.2.2, align 1, !tbaa !12
  %indvars.iv.next.2.2 = add nuw nsw i64 %indvars.iv.next.254, 3072
  %47 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 3
  %.pre52.3 = load i8*, i8** %47, align 16, !tbaa !11
  %arrayidx27.2.3 = getelementptr inbounds i8, i8* %.pre52.3, i64 %indvars.iv.next.2.2
  store i8 0, i8* %arrayidx27.2.3, align 1, !tbaa !12
  %indvars.iv.next.2.3 = add nuw nsw i64 %indvars.iv.next.254, 4096
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.end.2.loopexit.unr-lcssa, label %for.body22.2.for.body22.2_crit_edge

for.end.2.loopexit.unr-lcssa:                     ; preds = %for.body22.2.for.body22.2_crit_edge, %for.body22.2.for.body22.2_crit_edge.preheader
  %indvars.iv.next.254.unr = phi i64 [ 1024, %for.body22.2.for.body22.2_crit_edge.preheader ], [ %indvars.iv.next.2.3, %for.body22.2.for.body22.2_crit_edge ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.end.2, label %for.body22.2.for.body22.2_crit_edge.epil.preheader

for.body22.2.for.body22.2_crit_edge.epil.preheader: ; preds = %for.end.2.loopexit.unr-lcssa
  br label %for.body22.2.for.body22.2_crit_edge.epil

for.body22.2.for.body22.2_crit_edge.epil:         ; preds = %for.body22.2.for.body22.2_crit_edge.epil, %for.body22.2.for.body22.2_crit_edge.epil.preheader
  %indvars.iv.next.254.epil = phi i64 [ %indvars.iv.next.2.epil, %for.body22.2.for.body22.2_crit_edge.epil ], [ %indvars.iv.next.254.unr, %for.body22.2.for.body22.2_crit_edge.epil.preheader ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body22.2.for.body22.2_crit_edge.epil ], [ %xtraiter, %for.body22.2.for.body22.2_crit_edge.epil.preheader ]
  %48 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 3
  %.pre52.epil = load i8*, i8** %48, align 16, !tbaa !11
  %arrayidx27.2.epil = getelementptr inbounds i8, i8* %.pre52.epil, i64 %indvars.iv.next.254.epil
  store i8 0, i8* %arrayidx27.2.epil, align 1, !tbaa !12
  %indvars.iv.next.2.epil = add nuw nsw i64 %indvars.iv.next.254.epil, 1024
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.end.2, label %for.body22.2.for.body22.2_crit_edge.epil, !llvm.loop !16

for.end.2:                                        ; preds = %for.body22.2.for.body22.2_crit_edge.epil, %for.end.2.loopexit.unr-lcssa, %for.body22.lr.ph.2, %if.end18.2
  ret i32 0
}

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define i32 @spec_random_load(i32 %fd) local_unnamed_addr #1 {
entry:
  %random_text = alloca [32 x [131072 x i8]], align 16
  %0 = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4194304, i8* nonnull %0) #2
  %1 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %1, 4
  br i1 %cmp, label %if.then, label %for.body.preheader

if.then:                                          ; preds = %entry
  %2 = getelementptr [16 x i8], [16 x i8]* @str.36, i64 0, i64 0
  %puts49 = tail call i32 @puts(i8* %2)
  %.pre = load i32, i32* @dbglvl, align 4, !tbaa !6
  br label %for.body.preheader

for.body.preheader:                               ; preds = %if.then, %entry
  %.ph = phi i32 [ %1, %entry ], [ %.pre, %if.then ]
  br label %for.body

for.body:                                         ; preds = %for.inc13, %for.body.preheader
  %indvars.iv67 = phi i64 [ %indvars.iv.next68, %for.inc13 ], [ 0, %for.body.preheader ]
  %3 = phi i32 [ %7, %for.inc13 ], [ %.ph, %for.body.preheader ]
  %cmp2 = icmp sgt i32 %3, 5
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %for.body
  %4 = trunc i64 %indvars.iv67 to i32
  %5 = getelementptr [19 x i8], [19 x i8]* @.str.3, i64 0, i64 0
  %call4 = tail call i32 (i8*, ...) @printf(i8* %5, i32 %4)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %for.body
  %seedi.promoted = load i64, i64* @seedi, align 8, !tbaa !2
  br label %for.body8

for.body8:                                        ; preds = %for.body8, %if.end5
  %indvars.iv65 = phi i64 [ 0, %if.end5 ], [ %indvars.iv.next66, %for.body8 ]
  %storemerge.i63 = phi i64 [ %seedi.promoted, %if.end5 ], [ %storemerge.i, %for.body8 ]
  %div.i = sdiv i64 %storemerge.i63, 127773
  %rem.i = srem i64 %storemerge.i63, 127773
  %mul.i = mul nsw i64 %rem.i, 16807
  %6 = mul nsw i64 %div.i, -2836
  %sub.i = add nsw i64 %mul.i, %6
  %cmp.i = icmp sgt i64 %sub.i, 0
  %add.i = add nsw i64 %sub.i, 2147483647
  %storemerge.i = select i1 %cmp.i, i64 %sub.i, i64 %add.i
  %conv.i = sitofp i64 %storemerge.i to float
  %div2.i = fmul float %conv.i, 0x3E00000000000000
  %conv3.i = fpext float %div2.i to double
  %mul = fmul double %conv3.i, 2.560000e+02
  %conv = fptosi double %mul to i32
  %conv10 = trunc i32 %conv to i8
  %arrayidx12 = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i64 0, i64 %indvars.iv67, i64 %indvars.iv65
  store i9 %conv10, i8* %arrayidx12, align 1, !tbaa !12
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1
  %exitcond = icmp eq i64 %indvars.iv.next66, 131072
  br i1 %exitcond, label %for.inc13, label %for.body8

for.inc13:                                        ; preds = %for.body8
  store i64 %storemerge.i, i64* @seedi, align 8, !tbaa !2
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1
  %7 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %exitcond69 = icmp eq i64 %indvars.iv.next68, 32
  br i1 %exitcond69, label %for.end15, label %for.body

for.end15:                                        ; preds = %for.inc13
  %cmp16 = icmp sgt i32 %7, 4
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %for.end15
  %8 = getelementptr [19 x i8], [19 x i8]* @str.35, i64 0, i64 0
  %puts = tail call i32 @puts(i8* %8)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %for.end15
  %idxprom22 = sext i32 %fd to i64
  %limit = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22, i32 0
  %9 = load i32, i32* %limit, align 8, !tbaa !8
  %cmp2460 = icmp sgt i32 %9, 0
  br i1 %cmp2460, label %for.body26.lr.ph, label %for.end35

for.body26.lr.ph:                                 ; preds = %if.end20
  %buf = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22, i32 3
  br label %for.body26

for.body26:                                       ; preds = %for.body26, %for.body26.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body26.lr.ph ], [ %indvars.iv.next, %for.body26 ]
  %10 = load i8*, i8** %buf, align 8, !tbaa !11
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %indvars.iv
  %11 = load i64, i64* @seedi, align 8, !tbaa !2
  %div.i50 = sdiv i64 %11, 127773
  %rem.i51 = srem i64 %11, 127773
  %mul.i52 = mul nsw i64 %rem.i51, 16807
  %12 = mul nsw i64 %div.i50, -2836
  %sub.i53 = add nsw i64 %mul.i52, %12
  %cmp.i54 = icmp sgt i64 %sub.i53, 0
  %add.i55 = add nsw i64 %sub.i53, 2147483647
  %storemerge.i56 = select i1 %cmp.i54, i64 %sub.i53, i64 %add.i55
  store i64 %storemerge.i56, i64* @seedi, align 8, !tbaa !2
  %conv.i57 = sitofp i64 %storemerge.i56 to float
  %div2.i58 = fmul float %conv.i57, 0x3E00000000000000
  %conv3.i59 = fpext float %div2.i58 to double
  %mul30 = fmul double %conv3.i59, 3.200000e+01
  %conv31 = fptosi double %mul30 to i32
  %idxprom32 = sext i32 %conv31 to i64
  %arraydecay = getelementptr inbounds [32 x [131072 x i8]], [32 x [131072 x i8]]* %random_text, i64 0, i64 %idxprom32, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* nonnull %arraydecay, i64 131072, i32 1, i1 false)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 131072
  %13 = load i32, i32* %limit, align 8, !tbaa !8
  %14 = sext i32 %13 to i64
  %cmp24 = icmp slt i64 %indvars.iv.next, %14
  br i1 %cmp24, label %for.body26, label %for.end35

for.end35:                                        ; preds = %for.body26, %if.end20
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom22, i32 1
  store i32 1048576, i32* %len, align 4, !tbaa !17
  call void @llvm.lifetime.end.p0i8(i64 4194304, i8* nonnull %0) #2
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define i32 @spec_load(i32 %num, i8* %filename, i32 %size) local_unnamed_addr #1 {
entry:
  %call = tail call i32 (i8*, i32, ...) @open(i8* %filename, i32 0) #2
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %call1 = tail call i32* @__errno_location() #14
  %1 = load i32, i32* %call1, align 4, !tbaa !6
  %call2 = tail call i8* @strerror(i32 %1) #2
  %2 = getelementptr [24 x i8], [24 x i8]* @.str.5, i64 0, i64 0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %2, i8* %filename, i8* %call2) #15
  tail call void @exit(i32 0) #13
  br label %UnifiedUnreachableBlock

if.end:                                           ; preds = %entry
  %idxprom = sext i32 %num to i64
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  store i32 0, i32* %len, align 4, !tbaa !17
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  store i32 0, i32* %pos, align 8, !tbaa !19
  %cmp695 = icmp sgt i32 %size, 0
  br i1 %cmp695, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %buf = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  br label %for.body

for.body:                                         ; preds = %if.end20, %for.body.lr.ph
  %i.096 = phi i32 [ 0, %for.body.lr.ph ], [ %add24, %if.end20 ]
  %3 = load i8*, i8** %buf, align 8, !tbaa !11
  %idx.ext = sext i32 %i.096 to i64
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext
  %call9 = tail call i64 @read(i32 %call, i8* %add.ptr, i64 131072) #2
  %conv = trunc i64 %call9 to i32
  %cmp10 = icmp eq i32 %conv, 0
  br i1 %cmp10, label %for.end, label %if.end13

if.end13:                                         ; preds = %for.body
  %cmp14 = icmp slt i32 %conv, 0
  br i1 %cmp14, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.end13
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %call17 = tail call i32* @__errno_location() #14
  %5 = load i32, i32* %call17, align 4, !tbaa !6
  %call18 = tail call i8* @strerror(i32 %5) #2
  %6 = getelementptr [27 x i8], [27 x i8]* @.str.6, i64 0, i64 0
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %6, i8* %filename, i8* %call18) #15
  tail call void @exit(i32 0) #13
  br label %UnifiedUnreachableBlock

if.end20:                                         ; preds = %if.end13
  %7 = load i32, i32* %len, align 4, !tbaa !17
  %add = add nsw i32 %7, %conv
  store i32 %add, i32* %len, align 4, !tbaa !17
  %add24 = add nsw i32 %i.096, %conv
  %cmp6 = icmp slt i32 %add24, %size
  br i1 %cmp6, label %for.body, label %for.end

for.end:                                          ; preds = %if.end20, %for.body, %if.end
  %call25 = tail call i32 @close(i32 %call) #2
  %8 = load i32, i32* %len, align 4, !tbaa !17
  %cmp2994 = icmp slt i32 %8, %size
  br i1 %cmp2994, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %for.end
  %buf51 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  br label %while.body

while.body:                                       ; preds = %if.end48, %while.body.lr.ph
  %9 = phi i32 [ %8, %while.body.lr.ph ], [ %add64, %if.end48 ]
  %sub = sub nsw i32 %size, %9
  %cmp37 = icmp sgt i32 %sub, %9
  %spec.select = select i1 %cmp37, i32 %9, i32 %sub
  %10 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp44 = icmp sgt i32 %10, 3
  br i1 %cmp44, label %if.then46, label %if.end48

if.then46:                                        ; preds = %while.body
  %11 = getelementptr [22 x i8], [22 x i8]* @.str.7, i64 0, i64 0
  %call47 = tail call i32 (i8*, ...) @printf(i8* %11, i32 %spec.select)
  %.pre = load i32, i32* %len, align 4, !tbaa !17
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %while.body
  %12 = phi i32 [ %.pre, %if.then46 ], [ %9, %while.body ]
  %13 = load i8*, i8** %buf51, align 8, !tbaa !11
  %idx.ext55 = sext i32 %12 to i64
  %add.ptr56 = getelementptr inbounds i8, i8* %13, i64 %idx.ext55
  %conv60 = sext i32 %spec.select to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr56, i8* %13, i64 %conv60, i32 1, i1 false)
  %14 = load i32, i32* %len, align 4, !tbaa !17
  %add64 = add nsw i32 %14, %spec.select
  store i32 %add64, i32* %len, align 4, !tbaa !17
  %cmp29 = icmp slt i32 %add64, %size
  br i1 %cmp29, label %while.body, label %while.end

while.end:                                        ; preds = %if.end48, %for.end
  ret i32 0

UnifiedUnreachableBlock:                          ; preds = %if.then16, %if.then
  unreachable
}

declare i32 @open(i8* nocapture readonly, i32, ...) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #4

declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #6

declare i32 @close(i32) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define i32 @spec_read(i32 %fd, i8* %buf, i32 %size) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr [25 x i8], [25 x i8]* @.str.8, i64 0, i64 0
  %call = tail call i32 (i8*, ...) @printf(i8* %1, i32 %fd, i8* %buf, i32 %size)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %3 = getelementptr [34 x i8], [34 x i8]* @.str.9, i64 0, i64 0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %3, i32 %fd) #15
  tail call void @exit(i32 0) #13
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  %4 = load i32, i32* %pos, align 8, !tbaa !19
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  %5 = load i32, i32* %len, align 4, !tbaa !17
  %cmp7 = icmp sgt i32 %5, %4
  br i1 %cmp7, label %if.end13, label %if.then8

if.then8:                                         ; preds = %if.end4
  %6 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp9 = icmp sgt i32 %6, 4
  br i1 %cmp9, label %if.then10, label %cleanup

if.then10:                                        ; preds = %if.then8
  %7 = getelementptr [4 x i8], [4 x i8]* @str.39, i64 0, i64 0
  %puts = tail call i32 @puts(i8* %7)
  br label %cleanup

if.end13:                                         ; preds = %if.end4
  %add = add nsw i32 %4, %size
  %cmp20 = icmp slt i32 %add, %5
  %sub = sub nsw i32 %5, %4
  %rc.0 = select i1 %cmp20, i32 %size, i32 %sub
  %buf31 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %8 = load i8*, i8** %buf31, align 8, !tbaa !11
  %idxprom35 = sext i32 %4 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %8, i64 %idxprom35
  %conv = sext i32 %rc.0 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %buf, i8* %arrayidx36, i64 %conv, i32 1, i1 false)
  %9 = load i32, i32* %pos, align 8, !tbaa !19
  %add40 = add nsw i32 %9, %rc.0
  store i32 %add40, i32* %pos, align 8, !tbaa !19
  %10 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp41 = icmp sgt i32 %10, 4
  br i1 %cmp41, label %if.then43, label %cleanup

if.then43:                                        ; preds = %if.end13
  %11 = getelementptr [4 x i8], [4 x i8]* @.str.11, i64 0, i64 0
  %call44 = tail call i32 (i8*, ...) @printf(i8* %11, i32 %rc.0)
  br label %cleanup

cleanup:                                          ; preds = %if.then43, %if.end13, %if.then10, %if.then8
  %retval.0 = phi i32 [ -1, %if.then10 ], [ -1, %if.then8 ], [ %rc.0, %if.then43 ], [ %rc.0, %if.end13 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @spec_fread(i8* %buf, i32 %size, i32 %num, i32 %fd) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr [34 x i8], [34 x i8]* @.str.12, i64 0, i64 0
  %call = tail call i32 (i8*, ...) @printf(i8* %1, i8* %buf, i32 %size, i32 %num, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %3 = getelementptr [35 x i8], [35 x i8]* @.str.13, i64 0, i64 0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %3, i32 %fd) #15
  tail call void @exit(i32 0) #13
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  %4 = load i32, i32* %pos, align 8, !tbaa !19
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  %5 = load i32, i32* %len, align 4, !tbaa !17
  %cmp7 = icmp sgt i32 %5, %4
  br i1 %cmp7, label %if.end13, label %if.then8

if.then8:                                         ; preds = %if.end4
  %6 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp9 = icmp sgt i32 %6, 4
  br i1 %cmp9, label %if.then10, label %cleanup

if.then10:                                        ; preds = %if.then8
  %7 = getelementptr [4 x i8], [4 x i8]* @str.39, i64 0, i64 0
  %puts = tail call i32 @puts(i8* %7)
  br label %cleanup

if.end13:                                         ; preds = %if.end4
  %mul = mul nsw i32 %num, %size
  %add = add nsw i32 %4, %mul
  %cmp20 = icmp slt i32 %add, %5
  br i1 %cmp20, label %if.end28, label %if.then21

if.then21:                                        ; preds = %if.end13
  %sub = sub nsw i32 %5, %4
  %div = sdiv i32 %sub, %size
  %.pre = mul nsw i32 %div, %size
  br label %if.end28

if.end28:                                         ; preds = %if.then21, %if.end13
  %mul37.pre-phi = phi i32 [ %mul, %if.end13 ], [ %.pre, %if.then21 ]
  %rc.0 = phi i32 [ %num, %if.end13 ], [ %div, %if.then21 ]
  %buf31 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %8 = load i8*, i8** %buf31, align 8, !tbaa !11
  %idxprom35 = sext i32 %4 to i64
  %arrayidx36 = getelementptr inbounds i8, i8* %8, i64 %idxprom35
  %conv = sext i32 %rc.0 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %buf, i8* %arrayidx36, i64 %conv, i32 1, i1 false)
  %9 = load i32, i32* %pos, align 8, !tbaa !19
  %add41 = add nsw i32 %9, %mul37.pre-phi
  store i32 %add41, i32* %pos, align 8, !tbaa !19
  %10 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp42 = icmp sgt i32 %10, 4
  br i1 %cmp42, label %if.then44, label %cleanup

if.then44:                                        ; preds = %if.end28
  %11 = getelementptr [4 x i8], [4 x i8]* @.str.11, i64 0, i64 0
  %call46 = tail call i32 (i8*, ...) @printf(i8* %11, i32 %mul37.pre-phi)
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %if.end28, %if.then10, %if.then8
  %retval.0 = phi i32 [ -1, %if.then10 ], [ -1, %if.then8 ], [ %rc.0, %if.then44 ], [ %rc.0, %if.end28 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @spec_getc(i32 %fd) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr [17 x i8], [17 x i8]* @.str.14, i64 0, i64 0
  %call = tail call i32 (i8*, ...) @printf(i8* %1, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %3 = getelementptr [34 x i8], [34 x i8]* @.str.9, i64 0, i64 0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %3, i32 %fd) #15
  tail call void @exit(i32 0) #13
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  %4 = load i32, i32* %pos, align 8, !tbaa !19
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  %5 = load i32, i32* %len, align 4, !tbaa !17
  %cmp7 = icmp slt i32 %4, %5
  br i1 %cmp7, label %if.end13, label %if.then8

if.then8:                                         ; preds = %if.end4
  %6 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp9 = icmp sgt i32 %6, 4
  br i1 %cmp9, label %if.then10, label %cleanup

if.then10:                                        ; preds = %if.then8
  %7 = getelementptr [4 x i8], [4 x i8]* @str.39, i64 0, i64 0
  %puts = tail call i32 @puts(i8* %7)
  br label %cleanup

if.end13:                                         ; preds = %if.end4
  %buf = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %8 = load i8*, i8** %buf, align 8, !tbaa !11
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %pos, align 8, !tbaa !19
  %idxprom19 = sext i32 %4 to i64
  %arrayidx20 = getelementptr inbounds i8, i8* %8, i64 %idxprom19
  %9 = load i8, i8* %arrayidx20, align 1, !tbaa !12
  %conv = zext i8 %9 to i32
  %10 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp21 = icmp sgt i32 %10, 4
  br i1 %cmp21, label %if.then23, label %cleanup

if.then23:                                        ; preds = %if.end13
  %11 = getelementptr [4 x i8], [4 x i8]* @.str.11, i64 0, i64 0
  %call24 = tail call i32 (i8*, ...) @printf(i8* %11, i32 %conv)
  br label %cleanup

cleanup:                                          ; preds = %if.then23, %if.end13, %if.then10, %if.then8
  %retval.0 = phi i32 [ -1, %if.then10 ], [ -1, %if.then8 ], [ %conv, %if.then23 ], [ %conv, %if.end13 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @spec_ungetc(i8 zeroext %ch, i32 %fd) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr [19 x i8], [19 x i8]* @.str.15, i64 0, i64 0
  %call = tail call i32 (i8*, ...) @printf(i8* %1, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %3 = getelementptr [34 x i8], [34 x i8]* @.str.9, i64 0, i64 0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %3, i32 %fd) #15
  tail call void @exit(i32 0) #13
  br label %UnifiedUnreachableBlock

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  %4 = load i32, i32* %pos, align 8, !tbaa !19
  %cmp5 = icmp slt i32 %4, 1
  br i1 %cmp5, label %if.then6, label %if.end11

if.then6:                                         ; preds = %if.end4
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %6 = getelementptr [26 x i8], [26 x i8]* @.str.16, i64 0, i64 0
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %6, i32 %4) #15
  tail call void @exit(i32 0) #13
  br label %UnifiedUnreachableBlock

if.end11:                                         ; preds = %if.end4
  %buf = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %7 = load i8*, i8** %buf, align 8, !tbaa !11
  %dec = add nsw i32 %4, -1
  store i32 %dec, i32* %pos, align 8, !tbaa !19
  %idxprom17 = sext i32 %dec to i64
  %arrayidx18 = getelementptr inbounds i8, i8* %7, i64 %idxprom17
  %8 = load i8, i8* %arrayidx18, align 1, !tbaa !12
  %conv19 = zext i8 %ch to i32
  %cmp20 = icmp eq i8 %8, %ch
  br i1 %cmp20, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.end11
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %10 = getelementptr [72 x i8], [72 x i8]* @.str.17, i64 0, i64 0
  %11 = tail call i64 @fwrite(i8* %10, i64 71, i64 1, %struct._IO_FILE* %9) #15
  tail call void @exit(i32 0) #13
  br label %UnifiedUnreachableBlock

if.end24:                                         ; preds = %if.end11
  %12 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp25 = icmp sgt i32 %12, 4
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end24
  %13 = getelementptr [4 x i8], [4 x i8]* @.str.11, i64 0, i64 0
  %call28 = tail call i32 (i8*, ...) @printf(i8* %13, i32 0)
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end24
  ret i32 %conv19

UnifiedUnreachableBlock:                          ; preds = %if.then22, %if.then6, %if.then2
  unreachable
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: norecurse nounwind uwtable
define i32 @spec_rewind(i32 %fd) local_unnamed_addr #0 {
entry:
  %idxprom = sext i32 %fd to i64
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  store i32 0, i32* %pos, align 8, !tbaa !19
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @spec_reset(i32 %fd) local_unnamed_addr #1 {
entry:
  %idxprom = sext i32 %fd to i64
  %buf = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %0 = load i8*, i8** %buf, align 8, !tbaa !11
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  %1 = load i32, i32* %len, align 4, !tbaa !17
  %conv = sext i32 %1 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 %conv, i32 1, i1 false)
  store i32 0, i32* %len, align 4, !tbaa !17
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  store i32 0, i32* %pos, align 8, !tbaa !19
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @spec_write(i32 %fd, i8* %buf, i32 returned %size) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr [26 x i8], [26 x i8]* @.str.18, i64 0, i64 0
  %call = tail call i32 (i8*, ...) @printf(i8* %1, i32 %fd, i8* %buf, i32 %size)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %3 = getelementptr [35 x i8], [35 x i8]* @.str.19, i64 0, i64 0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %3, i32 %fd) #15
  tail call void @exit(i32 0) #13
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %buf5 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %4 = load i8*, i8** %buf5, align 8, !tbaa !11
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  %5 = load i32, i32* %pos, align 8, !tbaa !19
  %idxprom8 = sext i32 %5 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %4, i64 %idxprom8
  %conv = sext i32 %size to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx9, i8* %buf, i64 %conv, i32 1, i1 false)
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  %6 = load i32, i32* %len, align 4, !tbaa !17
  %add = add nsw i32 %6, %size
  store i32 %add, i32* %len, align 4, !tbaa !17
  %7 = load i32, i32* %pos, align 8, !tbaa !19
  %add15 = add nsw i32 %7, %size
  store i32 %add15, i32* %pos, align 8, !tbaa !19
  %8 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp16 = icmp sgt i32 %8, 4
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end4
  %9 = getelementptr [4 x i8], [4 x i8]* @.str.11, i64 0, i64 0
  %call19 = tail call i32 (i8*, ...) @printf(i8* %9, i32 %size)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end4
  ret i32 %size
}

; Function Attrs: nounwind uwtable
define i32 @spec_fwrite(i8* %buf, i32 %size, i32 returned %num, i32 %fd) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = getelementptr [31 x i8], [31 x i8]* @.str.20, i64 0, i64 0
  %call = tail call i32 (i8*, ...) @printf(i8* %1, i8* %buf, i32 %size, i32 %num, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %3 = getelementptr [36 x i8], [36 x i8]* @.str.21, i64 0, i64 0
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %3, i32 %fd) #15
  tail call void @exit(i32 0) #13
  unreachable

if.end4:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %buf5 = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %4 = load i8*, i8** %buf5, align 8, !tbaa !11
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  %5 = load i32, i32* %pos, align 8, !tbaa !19
  %idxprom8 = sext i32 %5 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %4, i64 %idxprom8
  %mul = mul nsw i32 %num, %size
  %conv = sext i32 %mul to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arrayidx9, i8* %buf, i64 %conv, i32 1, i1 false)
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  %6 = load i32, i32* %len, align 4, !tbaa !17
  %add = add nsw i32 %6, %mul
  store i32 %add, i32* %len, align 4, !tbaa !17
  %7 = load i32, i32* %pos, align 8, !tbaa !19
  %add17 = add nsw i32 %7, %mul
  store i32 %add17, i32* %pos, align 8, !tbaa !19
  %8 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp18 = icmp sgt i32 %8, 4
  br i1 %cmp18, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end4
  %9 = getelementptr [4 x i8], [4 x i8]* @.str.11, i64 0, i64 0
  %call21 = tail call i32 (i8*, ...) @printf(i8* %9, i32 %num)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end4
  ret i32 %num
}

; Function Attrs: nounwind uwtable
define i32 @spec_putc(i8 zeroext %ch, i32 %fd) local_unnamed_addr #1 {
entry:
  %0 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = zext i8 %ch to i32
  %1 = getelementptr [21 x i8], [21 x i8]* @.str.22, i64 0, i64 0
  %call = tail call i32 (i8*, ...) @printf(i8* %1, i32 %conv, i32 %fd)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp sgt i32 %fd, 3
  br i1 %cmp1, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %3 = getelementptr [35 x i8], [35 x i8]* @.str.19, i64 0, i64 0
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %3, i32 %fd) #15
  tail call void @exit(i32 0) #13
  unreachable

if.end5:                                          ; preds = %if.end
  %idxprom = sext i32 %fd to i64
  %buf = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 3
  %4 = load i8*, i8** %buf, align 8, !tbaa !11
  %pos = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 2
  %5 = load i32, i32* %pos, align 8, !tbaa !19
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %pos, align 8, !tbaa !19
  %idxprom8 = sext i32 %5 to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %4, i64 %idxprom8
  store i8 %ch, i8* %arrayidx9, align 1, !tbaa !12
  %len = getelementptr inbounds [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 %idxprom, i32 1
  %6 = load i32, i32* %len, align 4, !tbaa !17
  %inc12 = add nsw i32 %6, 1
  store i32 %inc12, i32* %len, align 4, !tbaa !17
  %conv13 = zext i8 %ch to i32
  ret i32 %conv13
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #1 {
entry:
  store i64 10, i64* @seedi, align 8, !tbaa !2
  %cmp = icmp sgt i32 %argc, 1
  %0 = getelementptr [15 x i8], [15 x i8]* @.str.23, i64 0, i64 0
  br i1 %cmp, label %if.end, label %if.end9

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1
  %1 = load i8*, i8** %arrayidx, align 8, !tbaa !18
  %cmp1 = icmp eq i32 %argc, 2
  br i1 %cmp1, label %if.end9, label %if.end4

if.end4:                                          ; preds = %if.end
  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 2
  %2 = load i8*, i8** %arrayidx3, align 8, !tbaa !18
  %call.i = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #2
  %conv.i = trunc i64 %call.i to i32
  %cmp5 = icmp sgt i32 %argc, 3
  br i1 %cmp5, label %if.then6, label %if.end9

if.then6:                                         ; preds = %if.end4
  %arrayidx7 = getelementptr inbounds i8*, i8** %argv, i64 3
  %3 = load i8*, i8** %arrayidx7, align 8, !tbaa !18
  %call.i135 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #2
  %conv.i136 = trunc i64 %call.i135 to i32
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.end4, %if.end, %entry
  %input_size.0144 = phi i32 [ %conv.i, %if.then6 ], [ %conv.i, %if.end4 ], [ 64, %if.end ], [ 64, %entry ]
  %input_name.0141143 = phi i8* [ %1, %if.then6 ], [ %1, %if.end4 ], [ %1, %if.end ], [ %0, %entry ]
  %compressed_size.0 = phi i32 [ %conv.i136, %if.then6 ], [ %conv.i, %if.end4 ], [ 64, %if.end ], [ 64, %entry ]
  %mul = shl nsw i32 %input_size.0144, 20
  %4 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 0
  store i32 %mul, i32* %4, align 16, !tbaa !8
  %mul10 = shl nsw i32 %compressed_size.0, 20
  %5 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 0
  store i32 %mul10, i32* %5, align 8, !tbaa !8
  %6 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 2, i32 0
  store i32 %mul, i32* %6, align 16, !tbaa !8
  %call12 = tail call i32 @spec_init()
  %7 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp14 = icmp sgt i32 %7, 2
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end9
  %8 = getelementptr [19 x i8], [19 x i8]* @str.43, i64 0, i64 0
  %puts134 = tail call i32 @puts(i8* %8)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end9
  %call19 = tail call i32 @spec_load(i32 0, i8* %input_name.0141143, i32 %mul)
  %9 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp20 = icmp sgt i32 %9, 3
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end17
  %10 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4, !tbaa !17
  %12 = getelementptr [31 x i8], [31 x i8]* @.str.25, i64 0, i64 0
  %call22 = tail call i32 (i8*, ...) @printf(i8* %12, i32 %11)
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end17
  %div = shl nsw i32 %input_size.0144, 10
  %conv = sext i32 %div to i64
  %call25 = tail call noalias i8* @malloc(i64 %conv) #2
  %cmp26 = icmp eq i8* %call25, null
  br i1 %cmp26, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.end23
  %13 = getelementptr [30 x i8], [30 x i8]* @str.42, i64 0, i64 0
  %puts133 = tail call i32 @puts(i8* %13)
  tail call void @exit(i32 0) #13
  br label %UnifiedUnreachableBlock

if.end30:                                         ; preds = %if.end23
  %cmp33149 = icmp sgt i32 %input_size.0144, 0
  br i1 %cmp33149, label %for.body.lr.ph, label %for.end.thread

for.end.thread:                                   ; preds = %if.end30
  store i8 0, i8* @smallMode, align 1, !tbaa !12
  store i32 0, i32* @verbosity, align 4, !tbaa !6
  store i32 9, i32* @blockSize100k, align 4, !tbaa !6
  store i32 30, i32* @workFactor, align 4, !tbaa !6
  br label %for.end.split

for.body.lr.ph:                                   ; preds = %if.end30
  %14 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %15 = load i8*, i8** %14, align 16, !tbaa !11
  %16 = sext i32 %mul to i64
  %17 = icmp sgt i64 %16, 1027
  %smax = select i1 %17, i64 %16, i64 1027
  %18 = add nsw i64 %smax, -1
  %19 = udiv i64 %18, 1027
  %20 = add nuw nsw i64 %19, 1
  %min.iters.check = icmp ult i64 %20, 16
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %20, 36028797018963952
  %ind.end = mul i64 %n.vec, 1027
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = mul i64 %index, 1027
  %21 = add i64 %offset.idx, 1027
  %22 = add i64 %offset.idx, 2054
  %23 = add i64 %offset.idx, 3081
  %24 = add i64 %offset.idx, 4108
  %25 = add i64 %offset.idx, 5135
  %26 = add i64 %offset.idx, 6162
  %27 = add i64 %offset.idx, 7189
  %28 = add i64 %offset.idx, 8216
  %29 = add i64 %offset.idx, 9243
  %30 = add i64 %offset.idx, 10270
  %31 = add i64 %offset.idx, 11297
  %32 = add i64 %offset.idx, 12324
  %33 = add i64 %offset.idx, 13351
  %34 = add i64 %offset.idx, 14378
  %35 = add i64 %offset.idx, 15405
  %36 = getelementptr inbounds i8, i8* %15, i64 %offset.idx
  %37 = getelementptr inbounds i8, i8* %15, i64 %21
  %38 = getelementptr inbounds i8, i8* %15, i64 %22
  %39 = getelementptr inbounds i8, i8* %15, i64 %23
  %40 = getelementptr inbounds i8, i8* %15, i64 %24
  %41 = getelementptr inbounds i8, i8* %15, i64 %25
  %42 = getelementptr inbounds i8, i8* %15, i64 %26
  %43 = getelementptr inbounds i8, i8* %15, i64 %27
  %44 = getelementptr inbounds i8, i8* %15, i64 %28
  %45 = getelementptr inbounds i8, i8* %15, i64 %29
  %46 = getelementptr inbounds i8, i8* %15, i64 %30
  %47 = getelementptr inbounds i8, i8* %15, i64 %31
  %48 = getelementptr inbounds i8, i8* %15, i64 %32
  %49 = getelementptr inbounds i8, i8* %15, i64 %33
  %50 = getelementptr inbounds i8, i8* %15, i64 %34
  %51 = getelementptr inbounds i8, i8* %15, i64 %35
  %52 = load i8, i8* %36, align 1, !tbaa !12
  %53 = load i8, i8* %37, align 1, !tbaa !12
  %54 = load i8, i8* %38, align 1, !tbaa !12
  %55 = load i8, i8* %39, align 1, !tbaa !12
  %56 = load i8, i8* %40, align 1, !tbaa !12
  %57 = load i8, i8* %41, align 1, !tbaa !12
  %58 = load i8, i8* %42, align 1, !tbaa !12
  %59 = load i8, i8* %43, align 1, !tbaa !12
  %60 = load i8, i8* %44, align 1, !tbaa !12
  %61 = load i8, i8* %45, align 1, !tbaa !12
  %62 = load i8, i8* %46, align 1, !tbaa !12
  %63 = load i8, i8* %47, align 1, !tbaa !12
  %64 = load i8, i8* %48, align 1, !tbaa !12
  %65 = load i8, i8* %49, align 1, !tbaa !12
  %66 = load i8, i8* %50, align 1, !tbaa !12
  %67 = load i8, i8* %51, align 1, !tbaa !12
  %68 = insertelement <16 x i8> undef, i8 %52, i32 0
  %69 = insertelement <16 x i8> %68, i8 %53, i32 1
  %70 = insertelement <16 x i8> %69, i8 %54, i32 2
  %71 = insertelement <16 x i8> %70, i8 %55, i32 3
  %72 = insertelement <16 x i8> %71, i8 %56, i32 4
  %73 = insertelement <16 x i8> %72, i8 %57, i32 5
  %74 = insertelement <16 x i8> %73, i8 %58, i32 6
  %75 = insertelement <16 x i8> %74, i8 %59, i32 7
  %76 = insertelement <16 x i8> %75, i8 %60, i32 8
  %77 = insertelement <16 x i8> %76, i8 %61, i32 9
  %78 = insertelement <16 x i8> %77, i8 %62, i32 10
  %79 = insertelement <16 x i8> %78, i8 %63, i32 11
  %80 = insertelement <16 x i8> %79, i8 %64, i32 12
  %81 = insertelement <16 x i8> %80, i8 %65, i32 13
  %82 = insertelement <16 x i8> %81, i8 %66, i32 14
  %83 = insertelement <16 x i8> %82, i8 %67, i32 15
  %84 = getelementptr inbounds i8, i8* %call25, i64 %index
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %83, <16 x i8>* %85, align 1, !tbaa !12
  %index.next = add i64 %index, 16
  %86 = icmp eq i64 %index.next, %n.vec
  br i1 %86, label %middle.block, label %vector.body, !llvm.loop !20

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %20, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %indvars.iv158.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  %indvars.iv156.ph = phi i64 [ 0, %for.body.lr.ph ], [ %ind.end, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv158 = phi i64 [ %indvars.iv.next159, %for.body ], [ %indvars.iv158.ph, %for.body.preheader ]
  %indvars.iv156 = phi i64 [ %indvars.iv.next157, %for.body ], [ %indvars.iv156.ph, %for.body.preheader ]
  %arrayidx36 = getelementptr inbounds i8, i8* %15, i64 %indvars.iv156
  %87 = load i8, i8* %arrayidx36, align 1, !tbaa !12
  %arrayidx38 = getelementptr inbounds i8, i8* %call25, i64 %indvars.iv158
  store i8 %87, i8* %arrayidx38, align 1, !tbaa !12
  %indvars.iv.next159 = add nuw nsw i64 %indvars.iv158, 1
  %88 = mul nuw nsw i64 %indvars.iv.next159, 1027
  %cmp33 = icmp slt i64 %88, %16
  %indvars.iv.next157 = add nuw nsw i64 %indvars.iv156, 1027
  br i1 %cmp33, label %for.body, label %for.end, !llvm.loop !22

for.end:                                          ; preds = %for.body, %middle.block
  store i8 0, i8* @smallMode, align 1, !tbaa !12
  store i32 0, i32* @verbosity, align 4, !tbaa !6
  store i32 9, i32* @blockSize100k, align 4, !tbaa !6
  store i32 30, i32* @workFactor, align 4, !tbaa !6
  br i1 %cmp33149, label %for.end.split.us, label %for.end.split

for.end.split.us:                                 ; preds = %for.end
  %89 = sext i32 %mul to i64
  %90 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp44.us = icmp sgt i32 %90, 2
  br i1 %cmp44.us, label %if.then46.us, label %if.end48.us

if.then46.us:                                     ; preds = %for.end.split.us
  %91 = getelementptr [34 x i8], [34 x i8]* @.str.27, i64 0, i64 0
  %call47.us = tail call i32 (i8*, ...) @printf(i8* %91, i32 5)
  br label %if.end48.us

if.end48.us:                                      ; preds = %if.then46.us, %for.end.split.us
  store i32 5, i32* @blockSize100k, align 4, !tbaa !6
  tail call void @compressStream(i32 0, i32 1) #2
  %92 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp50.us = icmp sgt i32 %92, 3
  br i1 %cmp50.us, label %if.then52.us, label %if.end54.us

if.then52.us:                                     ; preds = %if.end48.us
  %93 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %94 = load i32, i32* %93, align 4, !tbaa !17
  %95 = getelementptr [36 x i8], [36 x i8]* @.str.28, i64 0, i64 0
  %call53.us = tail call i32 (i8*, ...) @printf(i8* %95, i32 %94)
  br label %if.end54.us

if.end54.us:                                      ; preds = %if.then52.us, %if.end48.us
  %96 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %97 = load i8*, i8** %96, align 16, !tbaa !11
  %98 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %99 = load i32, i32* %98, align 4, !tbaa !17
  %conv.i139.us = sext i32 %99 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %97, i8 0, i64 %conv.i139.us, i32 1, i1 false) #2
  %100 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  store i32 0, i32* %100, align 4, !tbaa !17
  %101 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %101, align 8, !tbaa !19
  %102 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %102, align 8, !tbaa !19
  %103 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp58.us = icmp sgt i32 %103, 2
  br i1 %cmp58.us, label %if.then60.us, label %if.end62.us

if.then60.us:                                     ; preds = %if.end54.us
  %104 = getelementptr [19 x i8], [19 x i8]* @str.41, i64 0, i64 0
  %puts132.us = tail call i32 @puts(i8* %104)
  br label %if.end62.us

if.end62.us:                                      ; preds = %if.then60.us, %if.end54.us
  store i32 0, i32* @blockSize100k, align 4, !tbaa !6
  %call.i138.us = tail call zeroext i8 @uncompressStream(i32 1, i32 0) #2
  %105 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp64.us = icmp sgt i32 %105, 3
  br i1 %cmp64.us, label %if.then66.us, label %for.body74.lr.ph.us

if.then66.us:                                     ; preds = %if.end62.us
  %106 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %107 = load i32, i32* %106, align 4, !tbaa !17
  %108 = getelementptr [38 x i8], [38 x i8]* @.str.30, i64 0, i64 0
  %call67.us = tail call i32 (i8*, ...) @printf(i8* %108, i32 %107)
  br label %for.body74.lr.ph.us

for.cond69.us:                                    ; preds = %for.body74.us
  %109 = mul nuw nsw i64 %indvars.iv.next, 1027
  %mul70.us = mul nuw nsw i32 %inc88.us, 1027
  %cmp72.us = icmp slt i64 %109, %89
  br i1 %cmp72.us, label %for.body74.us, label %for.cond69.for.end89_crit_edge.us

if.then93.us:                                     ; preds = %for.cond69.for.end89_crit_edge.us
  %110 = getelementptr [37 x i8], [37 x i8]* @str.40, i64 0, i64 0
  %puts.us = tail call i32 @puts(i8* %110)
  br label %if.end95.us

if.end95.us:                                      ; preds = %for.cond69.for.end89_crit_edge.us, %if.then93.us
  %111 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %112 = load i8*, i8** %111, align 8, !tbaa !11
  %113 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %114 = load i32, i32* %113, align 4, !tbaa !17
  %conv.i137.us = sext i32 %114 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %112, i8 0, i64 %conv.i137.us, i32 1, i1 false) #2
  %115 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  store i32 0, i32* %115, align 4, !tbaa !17
  %116 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %116, align 8, !tbaa !19
  %117 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %117, align 8, !tbaa !19
  %118 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp44.us.1 = icmp sgt i32 %118, 2
  br i1 %cmp44.us.1, label %if.then46.us.1, label %if.end48.us.1

for.body74.us:                                    ; preds = %for.body74.lr.ph.us, %for.cond69.us
  %indvars.iv = phi i64 [ 0, %for.body74.lr.ph.us ], [ %indvars.iv.next, %for.cond69.us ]
  %mul70147.us = phi i32 [ 0, %for.body74.lr.ph.us ], [ %mul70.us, %for.cond69.us ]
  %i.1146.us = phi i32 [ 0, %for.body74.lr.ph.us ], [ %inc88.us, %for.cond69.us ]
  %arrayidx76.us = getelementptr inbounds i8, i8* %call25, i64 %indvars.iv
  %119 = load i8, i8* %arrayidx76.us, align 1, !tbaa !12
  %120 = zext i32 %mul70147.us to i64
  %arrayidx80.us = getelementptr inbounds i8, i8* %123, i64 %120
  %121 = load i8, i8* %arrayidx80.us, align 1, !tbaa !12
  %cmp82.us = icmp eq i8 %119, %121
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %inc88.us = add nuw nsw i32 %i.1146.us, 1
  br i1 %cmp82.us, label %for.cond69.us, label %if.then84

for.body74.lr.ph.us:                              ; preds = %if.then66.us, %if.end62.us
  %122 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %123 = load i8*, i8** %122, align 16, !tbaa !11
  br label %for.body74.us

for.cond69.for.end89_crit_edge.us:                ; preds = %for.cond69.us
  %124 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp91.us = icmp sgt i32 %124, 3
  br i1 %cmp91.us, label %if.then93.us, label %if.end95.us

for.end.split:                                    ; preds = %for.end, %for.end.thread
  %125 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp44 = icmp sgt i32 %125, 2
  br i1 %cmp44, label %if.then46, label %if.end48

if.then46:                                        ; preds = %for.end.split
  %126 = getelementptr [34 x i8], [34 x i8]* @.str.27, i64 0, i64 0
  %call47 = tail call i32 (i8*, ...) @printf(i8* %126, i32 5)
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %for.end.split
  store i32 5, i32* @blockSize100k, align 4, !tbaa !6
  tail call void @compressStream(i32 0, i32 1) #2
  %127 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp50 = icmp sgt i32 %127, 3
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.end48
  %128 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %129 = load i32, i32* %128, align 4, !tbaa !17
  %130 = getelementptr [36 x i8], [36 x i8]* @.str.28, i64 0, i64 0
  %call53 = tail call i32 (i8*, ...) @printf(i8* %130, i32 %129)
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %if.end48
  %131 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %132 = load i8*, i8** %131, align 16, !tbaa !11
  %133 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %134 = load i32, i32* %133, align 4, !tbaa !17
  %conv.i139 = sext i32 %134 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %132, i8 0, i64 %conv.i139, i32 1, i1 false) #2
  %135 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  store i32 0, i32* %135, align 4, !tbaa !17
  %136 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %136, align 8, !tbaa !19
  %137 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %137, align 8, !tbaa !19
  %138 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp58 = icmp sgt i32 %138, 2
  br i1 %cmp58, label %if.then60, label %if.end62

if.then60:                                        ; preds = %if.end54
  %139 = getelementptr [19 x i8], [19 x i8]* @str.41, i64 0, i64 0
  %puts132 = tail call i32 @puts(i8* %139)
  br label %if.end62

if.end62:                                         ; preds = %if.then60, %if.end54
  store i32 0, i32* @blockSize100k, align 4, !tbaa !6
  %call.i138 = tail call zeroext i8 @uncompressStream(i32 1, i32 0) #2
  %140 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp64 = icmp sgt i32 %140, 3
  br i1 %cmp64, label %for.end89, label %if.end95

if.then84:                                        ; preds = %for.body74.us.2, %for.body74.us.1, %for.body74.us
  %141 = getelementptr [35 x i8], [35 x i8]* @.str.31, i64 0, i64 0
  %call85 = tail call i32 (i8*, ...) @printf(i8* %141, i32 %input_size.0144)
  tail call void @exit(i32 0) #13
  br label %UnifiedUnreachableBlock

for.end89:                                        ; preds = %if.end62
  %142 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %143 = load i32, i32* %142, align 4, !tbaa !17
  %144 = getelementptr [38 x i8], [38 x i8]* @.str.30, i64 0, i64 0
  %call67 = tail call i32 (i8*, ...) @printf(i8* %144, i32 %143)
  %.pre = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp91 = icmp sgt i32 %.pre, 3
  br i1 %cmp91, label %if.then93, label %if.end95

if.then93:                                        ; preds = %for.end89
  %145 = getelementptr [37 x i8], [37 x i8]* @str.40, i64 0, i64 0
  %puts = tail call i32 @puts(i8* %145)
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %for.end89, %if.end62
  %146 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %147 = load i8*, i8** %146, align 8, !tbaa !11
  %148 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %149 = load i32, i32* %148, align 4, !tbaa !17
  %conv.i137 = sext i32 %149 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %147, i8 0, i64 %conv.i137, i32 1, i1 false) #2
  %150 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  store i32 0, i32* %150, align 4, !tbaa !17
  %151 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %151, align 8, !tbaa !19
  %152 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %152, align 8, !tbaa !19
  %153 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp44.1 = icmp sgt i32 %153, 2
  br i1 %cmp44.1, label %if.then46.1, label %if.end48.1

for.end99:                                        ; preds = %if.end95.2, %if.end95.us.2
  %154 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  store i32 0, i32* %154, align 4, !tbaa !17
  %155 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %155, align 8, !tbaa !19
  %156 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %156, align 8, !tbaa !19
  %157 = getelementptr [25 x i8], [25 x i8]* @.str.33, i64 0, i64 0
  %call100 = tail call i32 (i8*, ...) @printf(i8* %157, i32 %input_size.0144)
  ret i32 0

if.then46.us.1:                                   ; preds = %if.end95.us
  %158 = getelementptr [34 x i8], [34 x i8]* @.str.27, i64 0, i64 0
  %call47.us.1 = tail call i32 (i8*, ...) @printf(i8* %158, i32 7)
  br label %if.end48.us.1

if.end48.us.1:                                    ; preds = %if.then46.us.1, %if.end95.us
  store i32 7, i32* @blockSize100k, align 4, !tbaa !6
  tail call void @compressStream(i32 0, i32 1) #2
  %159 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp50.us.1 = icmp sgt i32 %159, 3
  br i1 %cmp50.us.1, label %if.then52.us.1, label %if.end54.us.1

if.then52.us.1:                                   ; preds = %if.end48.us.1
  %160 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %161 = load i32, i32* %160, align 4, !tbaa !17
  %162 = getelementptr [36 x i8], [36 x i8]* @.str.28, i64 0, i64 0
  %call53.us.1 = tail call i32 (i8*, ...) @printf(i8* %162, i32 %161)
  br label %if.end54.us.1

if.end54.us.1:                                    ; preds = %if.then52.us.1, %if.end48.us.1
  %163 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %164 = load i8*, i8** %163, align 16, !tbaa !11
  %165 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %166 = load i32, i32* %165, align 4, !tbaa !17
  %conv.i139.us.1 = sext i32 %166 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %164, i8 0, i64 %conv.i139.us.1, i32 1, i1 false) #2
  %167 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  store i32 0, i32* %167, align 4, !tbaa !17
  %168 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %168, align 8, !tbaa !19
  %169 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %169, align 8, !tbaa !19
  %170 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp58.us.1 = icmp sgt i32 %170, 2
  br i1 %cmp58.us.1, label %if.then60.us.1, label %if.end62.us.1

if.then60.us.1:                                   ; preds = %if.end54.us.1
  %171 = getelementptr [19 x i8], [19 x i8]* @str.41, i64 0, i64 0
  %puts132.us.1 = tail call i32 @puts(i8* %171)
  br label %if.end62.us.1

if.end62.us.1:                                    ; preds = %if.then60.us.1, %if.end54.us.1
  store i32 0, i32* @blockSize100k, align 4, !tbaa !6
  %call.i138.us.1 = tail call zeroext i8 @uncompressStream(i32 1, i32 0) #2
  %172 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp64.us.1 = icmp sgt i32 %172, 3
  br i1 %cmp64.us.1, label %if.then66.us.1, label %for.body74.lr.ph.us.1

if.then66.us.1:                                   ; preds = %if.end62.us.1
  %173 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %174 = load i32, i32* %173, align 4, !tbaa !17
  %175 = getelementptr [38 x i8], [38 x i8]* @.str.30, i64 0, i64 0
  %call67.us.1 = tail call i32 (i8*, ...) @printf(i8* %175, i32 %174)
  br label %for.body74.lr.ph.us.1

for.body74.lr.ph.us.1:                            ; preds = %if.then66.us.1, %if.end62.us.1
  %176 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %177 = load i8*, i8** %176, align 16, !tbaa !11
  br label %for.body74.us.1

for.body74.us.1:                                  ; preds = %for.cond69.us.1, %for.body74.lr.ph.us.1
  %indvars.iv.1 = phi i64 [ 0, %for.body74.lr.ph.us.1 ], [ %indvars.iv.next.1, %for.cond69.us.1 ]
  %mul70147.us.1 = phi i32 [ 0, %for.body74.lr.ph.us.1 ], [ %mul70.us.1, %for.cond69.us.1 ]
  %i.1146.us.1 = phi i32 [ 0, %for.body74.lr.ph.us.1 ], [ %inc88.us.1, %for.cond69.us.1 ]
  %arrayidx76.us.1 = getelementptr inbounds i8, i8* %call25, i64 %indvars.iv.1
  %178 = load i8, i8* %arrayidx76.us.1, align 1, !tbaa !12
  %179 = zext i32 %mul70147.us.1 to i64
  %arrayidx80.us.1 = getelementptr inbounds i8, i8* %177, i64 %179
  %180 = load i8, i8* %arrayidx80.us.1, align 1, !tbaa !12
  %cmp82.us.1 = icmp eq i8 %178, %180
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %inc88.us.1 = add nuw nsw i32 %i.1146.us.1, 1
  br i1 %cmp82.us.1, label %for.cond69.us.1, label %if.then84

for.cond69.us.1:                                  ; preds = %for.body74.us.1
  %181 = mul nuw nsw i64 %indvars.iv.next.1, 1027
  %mul70.us.1 = mul nuw nsw i32 %inc88.us.1, 1027
  %cmp72.us.1 = icmp slt i64 %181, %89
  br i1 %cmp72.us.1, label %for.body74.us.1, label %for.cond69.for.end89_crit_edge.us.1

for.cond69.for.end89_crit_edge.us.1:              ; preds = %for.cond69.us.1
  %182 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp91.us.1 = icmp sgt i32 %182, 3
  br i1 %cmp91.us.1, label %if.then93.us.1, label %if.end95.us.1

if.then93.us.1:                                   ; preds = %for.cond69.for.end89_crit_edge.us.1
  %183 = getelementptr [37 x i8], [37 x i8]* @str.40, i64 0, i64 0
  %puts.us.1 = tail call i32 @puts(i8* %183)
  br label %if.end95.us.1

if.end95.us.1:                                    ; preds = %if.then93.us.1, %for.cond69.for.end89_crit_edge.us.1
  %184 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %185 = load i8*, i8** %184, align 8, !tbaa !11
  %186 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %187 = load i32, i32* %186, align 4, !tbaa !17
  %conv.i137.us.1 = sext i32 %187 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %185, i8 0, i64 %conv.i137.us.1, i32 1, i1 false) #2
  %188 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  store i32 0, i32* %188, align 4, !tbaa !17
  %189 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %189, align 8, !tbaa !19
  %190 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %190, align 8, !tbaa !19
  %191 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp44.us.2 = icmp sgt i32 %191, 2
  br i1 %cmp44.us.2, label %if.then46.us.2, label %if.end48.us.2

if.then46.us.2:                                   ; preds = %if.end95.us.1
  %192 = getelementptr [34 x i8], [34 x i8]* @.str.27, i64 0, i64 0
  %call47.us.2 = tail call i32 (i8*, ...) @printf(i8* %192, i32 9)
  br label %if.end48.us.2

if.end48.us.2:                                    ; preds = %if.then46.us.2, %if.end95.us.1
  store i32 9, i32* @blockSize100k, align 4, !tbaa !6
  tail call void @compressStream(i32 0, i32 1) #2
  %193 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp50.us.2 = icmp sgt i32 %193, 3
  br i1 %cmp50.us.2, label %if.then52.us.2, label %if.end54.us.2

if.then52.us.2:                                   ; preds = %if.end48.us.2
  %194 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %195 = load i32, i32* %194, align 4, !tbaa !17
  %196 = getelementptr [36 x i8], [36 x i8]* @.str.28, i64 0, i64 0
  %call53.us.2 = tail call i32 (i8*, ...) @printf(i8* %196, i32 %195)
  br label %if.end54.us.2

if.end54.us.2:                                    ; preds = %if.then52.us.2, %if.end48.us.2
  %197 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %198 = load i8*, i8** %197, align 16, !tbaa !11
  %199 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %200 = load i32, i32* %199, align 4, !tbaa !17
  %conv.i139.us.2 = sext i32 %200 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %198, i8 0, i64 %conv.i139.us.2, i32 1, i1 false) #2
  %201 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  store i32 0, i32* %201, align 4, !tbaa !17
  %202 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %202, align 8, !tbaa !19
  %203 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %203, align 8, !tbaa !19
  %204 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp58.us.2 = icmp sgt i32 %204, 2
  br i1 %cmp58.us.2, label %if.then60.us.2, label %if.end62.us.2

if.then60.us.2:                                   ; preds = %if.end54.us.2
  %205 = getelementptr [19 x i8], [19 x i8]* @str.41, i64 0, i64 0
  %puts132.us.2 = tail call i32 @puts(i8* %205)
  br label %if.end62.us.2

if.end62.us.2:                                    ; preds = %if.then60.us.2, %if.end54.us.2
  store i32 0, i32* @blockSize100k, align 4, !tbaa !6
  %call.i138.us.2 = tail call zeroext i8 @uncompressStream(i32 1, i32 0) #2
  %206 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp64.us.2 = icmp sgt i32 %206, 3
  br i1 %cmp64.us.2, label %if.then66.us.2, label %for.body74.lr.ph.us.2

if.then66.us.2:                                   ; preds = %if.end62.us.2
  %207 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %208 = load i32, i32* %207, align 4, !tbaa !17
  %209 = getelementptr [38 x i8], [38 x i8]* @.str.30, i64 0, i64 0
  %call67.us.2 = tail call i32 (i8*, ...) @printf(i8* %209, i32 %208)
  br label %for.body74.lr.ph.us.2

for.body74.lr.ph.us.2:                            ; preds = %if.then66.us.2, %if.end62.us.2
  %210 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %211 = load i8*, i8** %210, align 16, !tbaa !11
  br label %for.body74.us.2

for.body74.us.2:                                  ; preds = %for.cond69.us.2, %for.body74.lr.ph.us.2
  %indvars.iv.2 = phi i64 [ 0, %for.body74.lr.ph.us.2 ], [ %indvars.iv.next.2, %for.cond69.us.2 ]
  %mul70147.us.2 = phi i32 [ 0, %for.body74.lr.ph.us.2 ], [ %mul70.us.2, %for.cond69.us.2 ]
  %i.1146.us.2 = phi i32 [ 0, %for.body74.lr.ph.us.2 ], [ %inc88.us.2, %for.cond69.us.2 ]
  %arrayidx76.us.2 = getelementptr inbounds i8, i8* %call25, i64 %indvars.iv.2
  %212 = load i8, i8* %arrayidx76.us.2, align 1, !tbaa !12
  %213 = zext i32 %mul70147.us.2 to i64
  %arrayidx80.us.2 = getelementptr inbounds i8, i8* %211, i64 %213
  %214 = load i8, i8* %arrayidx80.us.2, align 1, !tbaa !12
  %cmp82.us.2 = icmp eq i8 %212, %214
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.2, 1
  %inc88.us.2 = add nuw nsw i32 %i.1146.us.2, 1
  br i1 %cmp82.us.2, label %for.cond69.us.2, label %if.then84

for.cond69.us.2:                                  ; preds = %for.body74.us.2
  %215 = mul nuw nsw i64 %indvars.iv.next.2, 1027
  %mul70.us.2 = mul nuw nsw i32 %inc88.us.2, 1027
  %cmp72.us.2 = icmp slt i64 %215, %89
  br i1 %cmp72.us.2, label %for.body74.us.2, label %for.cond69.for.end89_crit_edge.us.2

for.cond69.for.end89_crit_edge.us.2:              ; preds = %for.cond69.us.2
  %216 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp91.us.2 = icmp sgt i32 %216, 3
  br i1 %cmp91.us.2, label %if.then93.us.2, label %if.end95.us.2

if.then93.us.2:                                   ; preds = %for.cond69.for.end89_crit_edge.us.2
  %217 = getelementptr [37 x i8], [37 x i8]* @str.40, i64 0, i64 0
  %puts.us.2 = tail call i32 @puts(i8* %217)
  br label %if.end95.us.2

if.end95.us.2:                                    ; preds = %if.then93.us.2, %for.cond69.for.end89_crit_edge.us.2
  %218 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %219 = load i8*, i8** %218, align 8, !tbaa !11
  %220 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %221 = load i32, i32* %220, align 4, !tbaa !17
  %conv.i137.us.2 = sext i32 %221 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %219, i8 0, i64 %conv.i137.us.2, i32 1, i1 false) #2
  br label %for.end99

if.then46.1:                                      ; preds = %if.end95
  %222 = getelementptr [34 x i8], [34 x i8]* @.str.27, i64 0, i64 0
  %call47.1 = tail call i32 (i8*, ...) @printf(i8* %222, i32 7)
  br label %if.end48.1

if.end48.1:                                       ; preds = %if.then46.1, %if.end95
  store i32 7, i32* @blockSize100k, align 4, !tbaa !6
  tail call void @compressStream(i32 0, i32 1) #2
  %223 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp50.1 = icmp sgt i32 %223, 3
  br i1 %cmp50.1, label %if.then52.1, label %if.end54.1

if.then52.1:                                      ; preds = %if.end48.1
  %224 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %225 = load i32, i32* %224, align 4, !tbaa !17
  %226 = getelementptr [36 x i8], [36 x i8]* @.str.28, i64 0, i64 0
  %call53.1 = tail call i32 (i8*, ...) @printf(i8* %226, i32 %225)
  br label %if.end54.1

if.end54.1:                                       ; preds = %if.then52.1, %if.end48.1
  %227 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %228 = load i8*, i8** %227, align 16, !tbaa !11
  %229 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %230 = load i32, i32* %229, align 4, !tbaa !17
  %conv.i139.1 = sext i32 %230 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %228, i8 0, i64 %conv.i139.1, i32 1, i1 false) #2
  %231 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  store i32 0, i32* %231, align 4, !tbaa !17
  %232 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %232, align 8, !tbaa !19
  %233 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %233, align 8, !tbaa !19
  %234 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp58.1 = icmp sgt i32 %234, 2
  br i1 %cmp58.1, label %if.then60.1, label %if.end62.1

if.then60.1:                                      ; preds = %if.end54.1
  %235 = getelementptr [19 x i8], [19 x i8]* @str.41, i64 0, i64 0
  %puts132.1 = tail call i32 @puts(i8* %235)
  br label %if.end62.1

if.end62.1:                                       ; preds = %if.then60.1, %if.end54.1
  store i32 0, i32* @blockSize100k, align 4, !tbaa !6
  %call.i138.1 = tail call zeroext i8 @uncompressStream(i32 1, i32 0) #2
  %236 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp64.1 = icmp sgt i32 %236, 3
  br i1 %cmp64.1, label %for.end89.1, label %if.end95.1

for.end89.1:                                      ; preds = %if.end62.1
  %237 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %238 = load i32, i32* %237, align 4, !tbaa !17
  %239 = getelementptr [38 x i8], [38 x i8]* @.str.30, i64 0, i64 0
  %call67.1 = tail call i32 (i8*, ...) @printf(i8* %239, i32 %238)
  %.pre161 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp91.1 = icmp sgt i32 %.pre161, 3
  br i1 %cmp91.1, label %if.then93.1, label %if.end95.1

if.then93.1:                                      ; preds = %for.end89.1
  %240 = getelementptr [37 x i8], [37 x i8]* @str.40, i64 0, i64 0
  %puts.1 = tail call i32 @puts(i8* %240)
  br label %if.end95.1

if.end95.1:                                       ; preds = %if.then93.1, %for.end89.1, %if.end62.1
  %241 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %242 = load i8*, i8** %241, align 8, !tbaa !11
  %243 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %244 = load i32, i32* %243, align 4, !tbaa !17
  %conv.i137.1 = sext i32 %244 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %242, i8 0, i64 %conv.i137.1, i32 1, i1 false) #2
  %245 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  store i32 0, i32* %245, align 4, !tbaa !17
  %246 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %246, align 8, !tbaa !19
  %247 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %247, align 8, !tbaa !19
  %248 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp44.2 = icmp sgt i32 %248, 2
  br i1 %cmp44.2, label %if.then46.2, label %if.end48.2

if.then46.2:                                      ; preds = %if.end95.1
  %249 = getelementptr [34 x i8], [34 x i8]* @.str.27, i64 0, i64 0
  %call47.2 = tail call i32 (i8*, ...) @printf(i8* %249, i32 9)
  br label %if.end48.2

if.end48.2:                                       ; preds = %if.then46.2, %if.end95.1
  store i32 9, i32* @blockSize100k, align 4, !tbaa !6
  tail call void @compressStream(i32 0, i32 1) #2
  %250 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp50.2 = icmp sgt i32 %250, 3
  br i1 %cmp50.2, label %if.then52.2, label %if.end54.2

if.then52.2:                                      ; preds = %if.end48.2
  %251 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %252 = load i32, i32* %251, align 4, !tbaa !17
  %253 = getelementptr [36 x i8], [36 x i8]* @.str.28, i64 0, i64 0
  %call53.2 = tail call i32 (i8*, ...) @printf(i8* %253, i32 %252)
  br label %if.end54.2

if.end54.2:                                       ; preds = %if.then52.2, %if.end48.2
  %254 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 3
  %255 = load i8*, i8** %254, align 16, !tbaa !11
  %256 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %257 = load i32, i32* %256, align 4, !tbaa !17
  %conv.i139.2 = sext i32 %257 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %255, i8 0, i64 %conv.i139.2, i32 1, i1 false) #2
  %258 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  store i32 0, i32* %258, align 4, !tbaa !17
  %259 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 2
  store i32 0, i32* %259, align 8, !tbaa !19
  %260 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 2
  store i32 0, i32* %260, align 8, !tbaa !19
  %261 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp58.2 = icmp sgt i32 %261, 2
  br i1 %cmp58.2, label %if.then60.2, label %if.end62.2

if.then60.2:                                      ; preds = %if.end54.2
  %262 = getelementptr [19 x i8], [19 x i8]* @str.41, i64 0, i64 0
  %puts132.2 = tail call i32 @puts(i8* %262)
  br label %if.end62.2

if.end62.2:                                       ; preds = %if.then60.2, %if.end54.2
  store i32 0, i32* @blockSize100k, align 4, !tbaa !6
  %call.i138.2 = tail call zeroext i8 @uncompressStream(i32 1, i32 0) #2
  %263 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp64.2 = icmp sgt i32 %263, 3
  br i1 %cmp64.2, label %for.end89.2, label %if.end95.2

for.end89.2:                                      ; preds = %if.end62.2
  %264 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 0, i32 1
  %265 = load i32, i32* %264, align 4, !tbaa !17
  %266 = getelementptr [38 x i8], [38 x i8]* @.str.30, i64 0, i64 0
  %call67.2 = tail call i32 (i8*, ...) @printf(i8* %266, i32 %265)
  %.pre162 = load i32, i32* @dbglvl, align 4, !tbaa !6
  %cmp91.2 = icmp sgt i32 %.pre162, 3
  br i1 %cmp91.2, label %if.then93.2, label %if.end95.2

if.then93.2:                                      ; preds = %for.end89.2
  %267 = getelementptr [37 x i8], [37 x i8]* @str.40, i64 0, i64 0
  %puts.2 = tail call i32 @puts(i8* %267)
  br label %if.end95.2

if.end95.2:                                       ; preds = %if.then93.2, %for.end89.2, %if.end62.2
  %268 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 3
  %269 = load i8*, i8** %268, align 8, !tbaa !11
  %270 = getelementptr [3 x %struct.spec_fd_t], [3 x %struct.spec_fd_t]* @spec_fd, i64 0, i64 1, i32 1
  %271 = load i32, i32* %270, align 4, !tbaa !17
  %conv.i137.2 = sext i32 %271 to i64
  tail call void @llvm.memset.p0i8.i64(i8* %269, i8 0, i64 %conv.i137.2, i32 1, i1 false) #2
  br label %for.end99

UnifiedUnreachableBlock:                          ; preds = %if.then84, %if.then28
  unreachable
}

; Function Attrs: nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define void @spec_compress(i32 %in, i32 %out, i32 %lev) local_unnamed_addr #1 {
entry:
  store i32 %lev, i32* @blockSize100k, align 4, !tbaa !6
  tail call void @compressStream(i32 %in, i32 %out) #2
  ret void
}

; Function Attrs: nounwind uwtable
define void @spec_uncompress(i32 %in, i32 %out, i32 %lev) local_unnamed_addr #1 {
entry:
  store i32 0, i32* @blockSize100k, align 4, !tbaa !6
  %call = tail call zeroext i8 @uncompressStream(i32 %in, i32 %out) #2
  ret void
}

; Function Attrs: norecurse nounwind uwtable
define void @spec_initbufs() local_unnamed_addr #0 {
entry:
  store i8 0, i8* @smallMode, align 1, !tbaa !12
  store i32 0, i32* @verbosity, align 4, !tbaa !6
  store i32 9, i32* @blockSize100k, align 4, !tbaa !6
  store i32 30, i32* @workFactor, align 4, !tbaa !6
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @debug_time() local_unnamed_addr #8 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @BZ2_blockSort(%struct.EState* nocapture %s) local_unnamed_addr #1 {
entry:
  %stackLo.i.i = alloca [100 x i32], align 16
  %stackHi.i.i = alloca [100 x i32], align 16
  %stackD.i.i = alloca [100 x i32], align 16
  %runningOrder.i = alloca [256 x i32], align 16
  %bigDone.i = alloca [256 x i8], align 16
  %copyStart.i = alloca [256 x i32], align 16
  %copyEnd.i = alloca [256 x i32], align 16
  %budget = alloca i32, align 4
  %ptr1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 8
  %0 = load i32*, i32** %ptr1, align 8, !tbaa !24
  %block2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 9
  %1 = load i8*, i8** %block2, align 8, !tbaa !26
  %ftab3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 6
  %2 = load i32*, i32** %ftab3, align 8, !tbaa !27
  %nblock4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %3 = load i32, i32* %nblock4, align 4, !tbaa !28
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 28
  %4 = load i32, i32* %verbosity, align 8, !tbaa !29
  %workFactor = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 12
  %5 = load i32, i32* %workFactor, align 8, !tbaa !30
  %6 = bitcast i32* %budget to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #2
  %cmp = icmp slt i32 %3, 10000
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 4
  %7 = load i32*, i32** %arr1, align 8, !tbaa !31
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 5
  %8 = load i32*, i32** %arr2, align 8, !tbaa !32
  tail call fastcc void @fallbackSort(i32* %7, i32* %8, i32* %2, i32 %3, i32 %4)
  br label %if.end33

if.else:                                          ; preds = %entry
  %add = add nsw i32 %3, 34
  %and = and i32 %add, 1
  %tobool = icmp eq i32 %and, 0
  %inc = add nsw i32 %3, 35
  %spec.select = select i1 %tobool, i32 %add, i32 %inc
  %idxprom = sext i32 %spec.select to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %9 = bitcast i8* %arrayidx to i16*
  %10 = icmp sgt i32 %5, 1
  %wfact.0 = select i1 %10, i32 %5, i32 1
  %11 = icmp slt i32 %wfact.0, 100
  %spec.select97 = select i1 %11, i32 %wfact.0, i32 100
  %sub = add nsw i32 %spec.select97, -1
  %div = sdiv i32 %sub, 3
  %mul = mul nsw i32 %div, %3
  store i32 %mul, i32* %budget, align 4, !tbaa !6
  %ftab978.i = bitcast i32* %2 to i8*
  %bigDone947.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 0
  %12 = bitcast [256 x i32]* %runningOrder.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %12) #2
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %bigDone947.i) #2
  %13 = bitcast [256 x i32]* %copyStart.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %13) #2
  %14 = bitcast [256 x i32]* %copyEnd.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %14) #2
  %cmp.i = icmp sgt i32 %4, 3
  br i1 %cmp.i, label %if.then.i, label %for.body6.lr.ph.i

if.then.i:                                        ; preds = %if.else
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %16 = getelementptr [34 x i8], [34 x i8]* @.str.6.1, i64 0, i64 0
  %17 = tail call i64 @fwrite(i8* %16, i64 33, i64 1, %struct._IO_FILE* %15) #16
  br label %for.body6.lr.ph.i

for.body6.lr.ph.i:                                ; preds = %if.then.i, %if.else
  tail call void @llvm.memset.p0i8.i64(i8* %ftab978.i, i8 0, i64 262148, i32 4, i1 false) #2
  %18 = load i8, i8* %1, align 1, !tbaa !12
  %conv.i = zext i8 %18 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 8
  %sub.i = add nsw i32 %3, -1
  %19 = sext i32 %sub.i to i64
  %20 = sub i32 0, %3
  %21 = icmp sgt i32 %20, -7
  %smax973.i = select i1 %21, i32 %20, i32 -7
  %22 = add i32 %3, 3
  %23 = add i32 %22, %smax973.i
  br label %for.body6.i

for.body6.i:                                      ; preds = %for.body6.i, %for.body6.lr.ph.i
  %indvars.iv968.i = phi i64 [ %19, %for.body6.lr.ph.i ], [ %indvars.iv.next969.i, %for.body6.i ]
  %j.0878.i = phi i32 [ %shl.i, %for.body6.lr.ph.i ], [ %or54.i, %for.body6.i ]
  %arrayidx8.i = getelementptr inbounds i16, i16* %9, i64 %indvars.iv968.i
  store i16 0, i16* %arrayidx8.i, align 2, !tbaa !33
  %shr.i = ashr i32 %j.0878.i, 8
  %arrayidx10.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv968.i
  %24 = load i8, i8* %arrayidx10.i, align 1, !tbaa !12
  %conv12.i = zext i8 %24 to i32
  %shl13.i = shl nuw nsw i32 %conv12.i, 8
  %or.i = or i32 %shl13.i, %shr.i
  %idxprom14.i = sext i32 %or.i to i64
  %arrayidx15.i = getelementptr inbounds i32, i32* %2, i64 %idxprom14.i
  %25 = load i32, i32* %arrayidx15.i, align 4, !tbaa !6
  %inc.i = add i32 %25, 1
  store i32 %inc.i, i32* %arrayidx15.i, align 4, !tbaa !6
  %26 = add nsw i64 %indvars.iv968.i, -1
  %arrayidx18.i = getelementptr inbounds i16, i16* %9, i64 %26
  store i16 0, i16* %arrayidx18.i, align 2, !tbaa !33
  %shr19.i = ashr i32 %or.i, 8
  %arrayidx22.i = getelementptr inbounds i8, i8* %1, i64 %26
  %27 = load i8, i8* %arrayidx22.i, align 1, !tbaa !12
  %conv24.i = zext i8 %27 to i32
  %shl25.i = shl nuw nsw i32 %conv24.i, 8
  %or26.i = or i32 %shl25.i, %shr19.i
  %idxprom27.i = sext i32 %or26.i to i64
  %arrayidx28.i = getelementptr inbounds i32, i32* %2, i64 %idxprom27.i
  %28 = load i32, i32* %arrayidx28.i, align 4, !tbaa !6
  %inc29.i = add i32 %28, 1
  store i32 %inc29.i, i32* %arrayidx28.i, align 4, !tbaa !6
  %29 = add nsw i64 %indvars.iv968.i, -2
  %arrayidx32.i = getelementptr inbounds i16, i16* %9, i64 %29
  store i16 0, i16* %arrayidx32.i, align 2, !tbaa !33
  %shr33.i = ashr i32 %or26.i, 8
  %arrayidx36.i = getelementptr inbounds i8, i8* %1, i64 %29
  %30 = load i8, i8* %arrayidx36.i, align 1, !tbaa !12
  %conv38.i = zext i8 %30 to i32
  %shl39.i = shl nuw nsw i32 %conv38.i, 8
  %or40.i = or i32 %shl39.i, %shr33.i
  %idxprom41.i = sext i32 %or40.i to i64
  %arrayidx42.i = getelementptr inbounds i32, i32* %2, i64 %idxprom41.i
  %31 = load i32, i32* %arrayidx42.i, align 4, !tbaa !6
  %inc43.i = add i32 %31, 1
  store i32 %inc43.i, i32* %arrayidx42.i, align 4, !tbaa !6
  %32 = add nsw i64 %indvars.iv968.i, -3
  %arrayidx46.i = getelementptr inbounds i16, i16* %9, i64 %32
  store i16 0, i16* %arrayidx46.i, align 2, !tbaa !33
  %shr47.i = ashr i32 %or40.i, 8
  %arrayidx50.i = getelementptr inbounds i8, i8* %1, i64 %32
  %33 = load i8, i8* %arrayidx50.i, align 1, !tbaa !12
  %conv52.i = zext i8 %33 to i32
  %shl53.i = shl nuw nsw i32 %conv52.i, 8
  %or54.i = or i32 %shl53.i, %shr47.i
  %idxprom55.i = sext i32 %or54.i to i64
  %arrayidx56.i = getelementptr inbounds i32, i32* %2, i64 %idxprom55.i
  %34 = load i32, i32* %arrayidx56.i, align 4, !tbaa !6
  %inc57.i = add i32 %34, 1
  store i32 %inc57.i, i32* %arrayidx56.i, align 4, !tbaa !6
  %indvars.iv.next969.i = add nsw i64 %indvars.iv968.i, -4
  %cmp4.i = icmp sgt i64 %indvars.iv968.i, 6
  br i1 %cmp4.i, label %for.body6.i, label %for.end60.i

for.end60.i:                                      ; preds = %for.body6.i
  %35 = and i32 %23, -4
  %36 = add i32 %3, -5
  %37 = sub i32 %36, %35
  %cmp62874.i = icmp sgt i32 %37, -1
  br i1 %cmp62874.i, label %for.body64.lr.ph.i, label %for.end79.i

for.body64.lr.ph.i:                               ; preds = %for.end60.i
  %38 = sext i32 %37 to i64
  br label %for.body64.i

for.body64.i:                                     ; preds = %for.body64.i, %for.body64.lr.ph.i
  %indvars.iv964.i = phi i64 [ %38, %for.body64.lr.ph.i ], [ %indvars.iv.next965.i, %for.body64.i ]
  %j.1875.i = phi i32 [ %or54.i, %for.body64.lr.ph.i ], [ %or73.i, %for.body64.i ]
  %arrayidx66.i = getelementptr inbounds i16, i16* %9, i64 %indvars.iv964.i
  store i16 0, i16* %arrayidx66.i, align 2, !tbaa !33
  %shr67.i = ashr i32 %j.1875.i, 8
  %arrayidx69.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv964.i
  %39 = load i8, i8* %arrayidx69.i, align 1, !tbaa !12
  %conv71.i = zext i8 %39 to i32
  %shl72.i = shl nuw nsw i32 %conv71.i, 8
  %or73.i = or i32 %shl72.i, %shr67.i
  %idxprom74.i = sext i32 %or73.i to i64
  %arrayidx75.i = getelementptr inbounds i32, i32* %2, i64 %idxprom74.i
  %40 = load i32, i32* %arrayidx75.i, align 4, !tbaa !6
  %inc76.i = add i32 %40, 1
  store i32 %inc76.i, i32* %arrayidx75.i, align 4, !tbaa !6
  %indvars.iv.next965.i = add nsw i64 %indvars.iv964.i, -1
  %cmp62.i = icmp sgt i64 %indvars.iv964.i, 0
  br i1 %cmp62.i, label %for.body64.i, label %for.end79.i

for.end79.i:                                      ; preds = %for.body64.i, %for.end60.i
  %41 = sext i32 %3 to i64
  %42 = load i8, i8* %1, align 1, !tbaa !12
  %arrayidx87.i = getelementptr inbounds i8, i8* %1, i64 %41
  store i8 %42, i8* %arrayidx87.i, align 1, !tbaa !12
  %arrayidx90.i = getelementptr inbounds i16, i16* %9, i64 %41
  store i16 0, i16* %arrayidx90.i, align 2, !tbaa !33
  %arrayidx85.1.i = getelementptr inbounds i8, i8* %1, i64 1
  %43 = load i8, i8* %arrayidx85.1.i, align 1, !tbaa !12
  %44 = add nsw i64 %41, 1
  %arrayidx87.1.i = getelementptr inbounds i8, i8* %1, i64 %44
  store i8 %43, i8* %arrayidx87.1.i, align 1, !tbaa !12
  %arrayidx90.1.i = getelementptr inbounds i16, i16* %9, i64 %44
  store i16 0, i16* %arrayidx90.1.i, align 2, !tbaa !33
  %arrayidx85.2.i = getelementptr inbounds i8, i8* %1, i64 2
  %45 = load i8, i8* %arrayidx85.2.i, align 1, !tbaa !12
  %46 = add nsw i64 %41, 2
  %arrayidx87.2.i = getelementptr inbounds i8, i8* %1, i64 %46
  store i8 %45, i8* %arrayidx87.2.i, align 1, !tbaa !12
  %arrayidx90.2.i = getelementptr inbounds i16, i16* %9, i64 %46
  store i16 0, i16* %arrayidx90.2.i, align 2, !tbaa !33
  %arrayidx85.3.i = getelementptr inbounds i8, i8* %1, i64 3
  %47 = load i8, i8* %arrayidx85.3.i, align 1, !tbaa !12
  %48 = add nsw i64 %41, 3
  %arrayidx87.3.i = getelementptr inbounds i8, i8* %1, i64 %48
  store i8 %47, i8* %arrayidx87.3.i, align 1, !tbaa !12
  %arrayidx90.3.i = getelementptr inbounds i16, i16* %9, i64 %48
  store i16 0, i16* %arrayidx90.3.i, align 2, !tbaa !33
  %arrayidx85.4.i = getelementptr inbounds i8, i8* %1, i64 4
  %49 = load i8, i8* %arrayidx85.4.i, align 1, !tbaa !12
  %50 = add nsw i64 %41, 4
  %arrayidx87.4.i = getelementptr inbounds i8, i8* %1, i64 %50
  store i8 %49, i8* %arrayidx87.4.i, align 1, !tbaa !12
  %arrayidx90.4.i = getelementptr inbounds i16, i16* %9, i64 %50
  store i16 0, i16* %arrayidx90.4.i, align 2, !tbaa !33
  %arrayidx85.5.i = getelementptr inbounds i8, i8* %1, i64 5
  %51 = load i8, i8* %arrayidx85.5.i, align 1, !tbaa !12
  %52 = add nsw i64 %41, 5
  %arrayidx87.5.i = getelementptr inbounds i8, i8* %1, i64 %52
  store i8 %51, i8* %arrayidx87.5.i, align 1, !tbaa !12
  %arrayidx90.5.i = getelementptr inbounds i16, i16* %9, i64 %52
  store i16 0, i16* %arrayidx90.5.i, align 2, !tbaa !33
  %arrayidx85.6.i = getelementptr inbounds i8, i8* %1, i64 6
  %53 = load i8, i8* %arrayidx85.6.i, align 1, !tbaa !12
  %54 = add nsw i64 %41, 6
  %arrayidx87.6.i = getelementptr inbounds i8, i8* %1, i64 %54
  store i8 %53, i8* %arrayidx87.6.i, align 1, !tbaa !12
  %arrayidx90.6.i = getelementptr inbounds i16, i16* %9, i64 %54
  store i16 0, i16* %arrayidx90.6.i, align 2, !tbaa !33
  %arrayidx85.7.i = getelementptr inbounds i8, i8* %1, i64 7
  %55 = load i8, i8* %arrayidx85.7.i, align 1, !tbaa !12
  %56 = add nsw i64 %41, 7
  %arrayidx87.7.i = getelementptr inbounds i8, i8* %1, i64 %56
  store i8 %55, i8* %arrayidx87.7.i, align 1, !tbaa !12
  %arrayidx90.7.i = getelementptr inbounds i16, i16* %9, i64 %56
  store i16 0, i16* %arrayidx90.7.i, align 2, !tbaa !33
  %arrayidx85.8.i = getelementptr inbounds i8, i8* %1, i64 8
  %57 = load i8, i8* %arrayidx85.8.i, align 1, !tbaa !12
  %58 = add nsw i64 %41, 8
  %arrayidx87.8.i = getelementptr inbounds i8, i8* %1, i64 %58
  store i8 %57, i8* %arrayidx87.8.i, align 1, !tbaa !12
  %arrayidx90.8.i = getelementptr inbounds i16, i16* %9, i64 %58
  store i16 0, i16* %arrayidx90.8.i, align 2, !tbaa !33
  %arrayidx85.9.i = getelementptr inbounds i8, i8* %1, i64 9
  %59 = load i8, i8* %arrayidx85.9.i, align 1, !tbaa !12
  %60 = add nsw i64 %41, 9
  %arrayidx87.9.i = getelementptr inbounds i8, i8* %1, i64 %60
  store i8 %59, i8* %arrayidx87.9.i, align 1, !tbaa !12
  %arrayidx90.9.i = getelementptr inbounds i16, i16* %9, i64 %60
  store i16 0, i16* %arrayidx90.9.i, align 2, !tbaa !33
  %arrayidx85.10.i = getelementptr inbounds i8, i8* %1, i64 10
  %61 = load i8, i8* %arrayidx85.10.i, align 1, !tbaa !12
  %62 = add nsw i64 %41, 10
  %arrayidx87.10.i = getelementptr inbounds i8, i8* %1, i64 %62
  store i8 %61, i8* %arrayidx87.10.i, align 1, !tbaa !12
  %arrayidx90.10.i = getelementptr inbounds i16, i16* %9, i64 %62
  store i16 0, i16* %arrayidx90.10.i, align 2, !tbaa !33
  %arrayidx85.11.i = getelementptr inbounds i8, i8* %1, i64 11
  %63 = load i8, i8* %arrayidx85.11.i, align 1, !tbaa !12
  %64 = add nsw i64 %41, 11
  %arrayidx87.11.i = getelementptr inbounds i8, i8* %1, i64 %64
  store i8 %63, i8* %arrayidx87.11.i, align 1, !tbaa !12
  %arrayidx90.11.i = getelementptr inbounds i16, i16* %9, i64 %64
  store i16 0, i16* %arrayidx90.11.i, align 2, !tbaa !33
  %arrayidx85.12.i = getelementptr inbounds i8, i8* %1, i64 12
  %65 = load i8, i8* %arrayidx85.12.i, align 1, !tbaa !12
  %66 = add nsw i64 %41, 12
  %arrayidx87.12.i = getelementptr inbounds i8, i8* %1, i64 %66
  store i8 %65, i8* %arrayidx87.12.i, align 1, !tbaa !12
  %arrayidx90.12.i = getelementptr inbounds i16, i16* %9, i64 %66
  store i16 0, i16* %arrayidx90.12.i, align 2, !tbaa !33
  %arrayidx85.13.i = getelementptr inbounds i8, i8* %1, i64 13
  %67 = load i8, i8* %arrayidx85.13.i, align 1, !tbaa !12
  %68 = add nsw i64 %41, 13
  %arrayidx87.13.i = getelementptr inbounds i8, i8* %1, i64 %68
  store i8 %67, i8* %arrayidx87.13.i, align 1, !tbaa !12
  %arrayidx90.13.i = getelementptr inbounds i16, i16* %9, i64 %68
  store i16 0, i16* %arrayidx90.13.i, align 2, !tbaa !33
  %arrayidx85.14.i = getelementptr inbounds i8, i8* %1, i64 14
  %69 = load i8, i8* %arrayidx85.14.i, align 1, !tbaa !12
  %70 = add nsw i64 %41, 14
  %arrayidx87.14.i = getelementptr inbounds i8, i8* %1, i64 %70
  store i8 %69, i8* %arrayidx87.14.i, align 1, !tbaa !12
  %arrayidx90.14.i = getelementptr inbounds i16, i16* %9, i64 %70
  store i16 0, i16* %arrayidx90.14.i, align 2, !tbaa !33
  %arrayidx85.15.i = getelementptr inbounds i8, i8* %1, i64 15
  %71 = load i8, i8* %arrayidx85.15.i, align 1, !tbaa !12
  %72 = add nsw i64 %41, 15
  %arrayidx87.15.i = getelementptr inbounds i8, i8* %1, i64 %72
  store i8 %71, i8* %arrayidx87.15.i, align 1, !tbaa !12
  %arrayidx90.15.i = getelementptr inbounds i16, i16* %9, i64 %72
  store i16 0, i16* %arrayidx90.15.i, align 2, !tbaa !33
  %arrayidx85.16.i = getelementptr inbounds i8, i8* %1, i64 16
  %73 = load i8, i8* %arrayidx85.16.i, align 1, !tbaa !12
  %74 = add nsw i64 %41, 16
  %arrayidx87.16.i = getelementptr inbounds i8, i8* %1, i64 %74
  store i8 %73, i8* %arrayidx87.16.i, align 1, !tbaa !12
  %arrayidx90.16.i = getelementptr inbounds i16, i16* %9, i64 %74
  store i16 0, i16* %arrayidx90.16.i, align 2, !tbaa !33
  %arrayidx85.17.i = getelementptr inbounds i8, i8* %1, i64 17
  %75 = load i8, i8* %arrayidx85.17.i, align 1, !tbaa !12
  %76 = add nsw i64 %41, 17
  %arrayidx87.17.i = getelementptr inbounds i8, i8* %1, i64 %76
  store i8 %75, i8* %arrayidx87.17.i, align 1, !tbaa !12
  %arrayidx90.17.i = getelementptr inbounds i16, i16* %9, i64 %76
  store i16 0, i16* %arrayidx90.17.i, align 2, !tbaa !33
  %arrayidx85.18.i = getelementptr inbounds i8, i8* %1, i64 18
  %77 = load i8, i8* %arrayidx85.18.i, align 1, !tbaa !12
  %78 = add nsw i64 %41, 18
  %arrayidx87.18.i = getelementptr inbounds i8, i8* %1, i64 %78
  store i8 %77, i8* %arrayidx87.18.i, align 1, !tbaa !12
  %arrayidx90.18.i = getelementptr inbounds i16, i16* %9, i64 %78
  store i16 0, i16* %arrayidx90.18.i, align 2, !tbaa !33
  %arrayidx85.19.i = getelementptr inbounds i8, i8* %1, i64 19
  %79 = load i8, i8* %arrayidx85.19.i, align 1, !tbaa !12
  %80 = add nsw i64 %41, 19
  %arrayidx87.19.i = getelementptr inbounds i8, i8* %1, i64 %80
  store i8 %79, i8* %arrayidx87.19.i, align 1, !tbaa !12
  %arrayidx90.19.i = getelementptr inbounds i16, i16* %9, i64 %80
  store i16 0, i16* %arrayidx90.19.i, align 2, !tbaa !33
  %arrayidx85.20.i = getelementptr inbounds i8, i8* %1, i64 20
  %81 = load i8, i8* %arrayidx85.20.i, align 1, !tbaa !12
  %82 = add nsw i64 %41, 20
  %arrayidx87.20.i = getelementptr inbounds i8, i8* %1, i64 %82
  store i8 %81, i8* %arrayidx87.20.i, align 1, !tbaa !12
  %arrayidx90.20.i = getelementptr inbounds i16, i16* %9, i64 %82
  store i16 0, i16* %arrayidx90.20.i, align 2, !tbaa !33
  %arrayidx85.21.i = getelementptr inbounds i8, i8* %1, i64 21
  %83 = load i8, i8* %arrayidx85.21.i, align 1, !tbaa !12
  %84 = add nsw i64 %41, 21
  %arrayidx87.21.i = getelementptr inbounds i8, i8* %1, i64 %84
  store i8 %83, i8* %arrayidx87.21.i, align 1, !tbaa !12
  %arrayidx90.21.i = getelementptr inbounds i16, i16* %9, i64 %84
  store i16 0, i16* %arrayidx90.21.i, align 2, !tbaa !33
  %arrayidx85.22.i = getelementptr inbounds i8, i8* %1, i64 22
  %85 = load i8, i8* %arrayidx85.22.i, align 1, !tbaa !12
  %86 = add nsw i64 %41, 22
  %arrayidx87.22.i = getelementptr inbounds i8, i8* %1, i64 %86
  store i8 %85, i8* %arrayidx87.22.i, align 1, !tbaa !12
  %arrayidx90.22.i = getelementptr inbounds i16, i16* %9, i64 %86
  store i16 0, i16* %arrayidx90.22.i, align 2, !tbaa !33
  %arrayidx85.23.i = getelementptr inbounds i8, i8* %1, i64 23
  %87 = load i8, i8* %arrayidx85.23.i, align 1, !tbaa !12
  %88 = add nsw i64 %41, 23
  %arrayidx87.23.i = getelementptr inbounds i8, i8* %1, i64 %88
  store i8 %87, i8* %arrayidx87.23.i, align 1, !tbaa !12
  %arrayidx90.23.i = getelementptr inbounds i16, i16* %9, i64 %88
  store i16 0, i16* %arrayidx90.23.i, align 2, !tbaa !33
  %arrayidx85.24.i = getelementptr inbounds i8, i8* %1, i64 24
  %89 = load i8, i8* %arrayidx85.24.i, align 1, !tbaa !12
  %90 = add nsw i64 %41, 24
  %arrayidx87.24.i = getelementptr inbounds i8, i8* %1, i64 %90
  store i8 %89, i8* %arrayidx87.24.i, align 1, !tbaa !12
  %arrayidx90.24.i = getelementptr inbounds i16, i16* %9, i64 %90
  store i16 0, i16* %arrayidx90.24.i, align 2, !tbaa !33
  %arrayidx85.25.i = getelementptr inbounds i8, i8* %1, i64 25
  %91 = load i8, i8* %arrayidx85.25.i, align 1, !tbaa !12
  %92 = add nsw i64 %41, 25
  %arrayidx87.25.i = getelementptr inbounds i8, i8* %1, i64 %92
  store i8 %91, i8* %arrayidx87.25.i, align 1, !tbaa !12
  %arrayidx90.25.i = getelementptr inbounds i16, i16* %9, i64 %92
  store i16 0, i16* %arrayidx90.25.i, align 2, !tbaa !33
  %arrayidx85.26.i = getelementptr inbounds i8, i8* %1, i64 26
  %93 = load i8, i8* %arrayidx85.26.i, align 1, !tbaa !12
  %94 = add nsw i64 %41, 26
  %arrayidx87.26.i = getelementptr inbounds i8, i8* %1, i64 %94
  store i8 %93, i8* %arrayidx87.26.i, align 1, !tbaa !12
  %arrayidx90.26.i = getelementptr inbounds i16, i16* %9, i64 %94
  store i16 0, i16* %arrayidx90.26.i, align 2, !tbaa !33
  %arrayidx85.27.i = getelementptr inbounds i8, i8* %1, i64 27
  %95 = load i8, i8* %arrayidx85.27.i, align 1, !tbaa !12
  %96 = add nsw i64 %41, 27
  %arrayidx87.27.i = getelementptr inbounds i8, i8* %1, i64 %96
  store i8 %95, i8* %arrayidx87.27.i, align 1, !tbaa !12
  %arrayidx90.27.i = getelementptr inbounds i16, i16* %9, i64 %96
  store i16 0, i16* %arrayidx90.27.i, align 2, !tbaa !33
  %arrayidx85.28.i = getelementptr inbounds i8, i8* %1, i64 28
  %97 = load i8, i8* %arrayidx85.28.i, align 1, !tbaa !12
  %98 = add nsw i64 %41, 28
  %arrayidx87.28.i = getelementptr inbounds i8, i8* %1, i64 %98
  store i8 %97, i8* %arrayidx87.28.i, align 1, !tbaa !12
  %arrayidx90.28.i = getelementptr inbounds i16, i16* %9, i64 %98
  store i16 0, i16* %arrayidx90.28.i, align 2, !tbaa !33
  %arrayidx85.29.i = getelementptr inbounds i8, i8* %1, i64 29
  %99 = load i8, i8* %arrayidx85.29.i, align 1, !tbaa !12
  %100 = add nsw i64 %41, 29
  %arrayidx87.29.i = getelementptr inbounds i8, i8* %1, i64 %100
  store i8 %99, i8* %arrayidx87.29.i, align 1, !tbaa !12
  %arrayidx90.29.i = getelementptr inbounds i16, i16* %9, i64 %100
  store i16 0, i16* %arrayidx90.29.i, align 2, !tbaa !33
  %arrayidx85.30.i = getelementptr inbounds i8, i8* %1, i64 30
  %101 = load i8, i8* %arrayidx85.30.i, align 1, !tbaa !12
  %102 = add nsw i64 %41, 30
  %arrayidx87.30.i = getelementptr inbounds i8, i8* %1, i64 %102
  store i8 %101, i8* %arrayidx87.30.i, align 1, !tbaa !12
  %arrayidx90.30.i = getelementptr inbounds i16, i16* %9, i64 %102
  store i16 0, i16* %arrayidx90.30.i, align 2, !tbaa !33
  %arrayidx85.31.i = getelementptr inbounds i8, i8* %1, i64 31
  %103 = load i8, i8* %arrayidx85.31.i, align 1, !tbaa !12
  %104 = add nsw i64 %41, 31
  %arrayidx87.31.i = getelementptr inbounds i8, i8* %1, i64 %104
  store i8 %103, i8* %arrayidx87.31.i, align 1, !tbaa !12
  %arrayidx90.31.i = getelementptr inbounds i16, i16* %9, i64 %104
  store i16 0, i16* %arrayidx90.31.i, align 2, !tbaa !33
  %arrayidx85.32.i = getelementptr inbounds i8, i8* %1, i64 32
  %105 = load i8, i8* %arrayidx85.32.i, align 1, !tbaa !12
  %106 = add nsw i64 %41, 32
  %arrayidx87.32.i = getelementptr inbounds i8, i8* %1, i64 %106
  store i8 %105, i8* %arrayidx87.32.i, align 1, !tbaa !12
  %arrayidx90.32.i = getelementptr inbounds i16, i16* %9, i64 %106
  store i16 0, i16* %arrayidx90.32.i, align 2, !tbaa !33
  %arrayidx85.33.i = getelementptr inbounds i8, i8* %1, i64 33
  %107 = load i8, i8* %arrayidx85.33.i, align 1, !tbaa !12
  %108 = add nsw i64 %41, 33
  %arrayidx87.33.i = getelementptr inbounds i8, i8* %1, i64 %108
  store i8 %107, i8* %arrayidx87.33.i, align 1, !tbaa !12
  %arrayidx90.33.i = getelementptr inbounds i16, i16* %9, i64 %108
  store i16 0, i16* %arrayidx90.33.i, align 2, !tbaa !33
  br i1 %cmp.i, label %if.then96.i, label %if.end98.i

if.then96.i:                                      ; preds = %for.end79.i
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %110 = getelementptr [28 x i8], [28 x i8]* @.str.2, i64 0, i64 0
  %111 = tail call i64 @fwrite(i8* %110, i64 27, i64 1, %struct._IO_FILE* %109) #16
  br label %if.end98.i

if.end98.i:                                       ; preds = %if.then96.i, %for.end79.i
  %.pre.i = load i32, i32* %2, align 4, !tbaa !6
  br label %for.body102.i

for.body102.i:                                    ; preds = %for.body102.i, %if.end98.i
  %112 = phi i32 [ %.pre.i, %if.end98.i ], [ %add108.i.3, %for.body102.i ]
  %indvars.iv955.i = phi i64 [ 1, %if.end98.i ], [ %indvars.iv.next956.i.3, %for.body102.i ]
  %arrayidx107.i = getelementptr inbounds i32, i32* %2, i64 %indvars.iv955.i
  %113 = load i32, i32* %arrayidx107.i, align 4, !tbaa !6
  %add108.i = add i32 %113, %112
  store i32 %add108.i, i32* %arrayidx107.i, align 4, !tbaa !6
  %indvars.iv.next956.i = add nuw nsw i64 %indvars.iv955.i, 1
  %arrayidx107.i.1 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next956.i
  %114 = load i32, i32* %arrayidx107.i.1, align 4, !tbaa !6
  %add108.i.1 = add i32 %114, %add108.i
  store i32 %add108.i.1, i32* %arrayidx107.i.1, align 4, !tbaa !6
  %indvars.iv.next956.i.1 = add nuw nsw i64 %indvars.iv955.i, 2
  %arrayidx107.i.2 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next956.i.1
  %115 = load i32, i32* %arrayidx107.i.2, align 4, !tbaa !6
  %add108.i.2 = add i32 %115, %add108.i.1
  store i32 %add108.i.2, i32* %arrayidx107.i.2, align 4, !tbaa !6
  %indvars.iv.next956.i.2 = add nuw nsw i64 %indvars.iv955.i, 3
  %arrayidx107.i.3 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv.next956.i.2
  %116 = load i32, i32* %arrayidx107.i.3, align 4, !tbaa !6
  %add108.i.3 = add i32 %116, %add108.i.2
  store i32 %add108.i.3, i32* %arrayidx107.i.3, align 4, !tbaa !6
  %indvars.iv.next956.i.3 = add nuw nsw i64 %indvars.iv955.i, 4
  %exitcond958.i.3 = icmp eq i64 %indvars.iv.next956.i.3, 65537
  br i1 %exitcond958.i.3, label %for.body120.lr.ph.i, label %for.body102.i

for.body120.lr.ph.i:                              ; preds = %for.body102.i
  %117 = load i8, i8* %1, align 1, !tbaa !12
  %conv113.i = zext i8 %117 to i16
  %shl114.i = shl nuw i16 %conv113.i, 8
  br label %for.body120.i

for.body120.i:                                    ; preds = %for.body120.i, %for.body120.lr.ph.i
  %indvars.iv950.i = phi i64 [ %19, %for.body120.lr.ph.i ], [ %indvars.iv.next951.i, %for.body120.i ]
  %s.0868.i = phi i16 [ %shl114.i, %for.body120.lr.ph.i ], [ %or177.i, %for.body120.i ]
  %118 = lshr i16 %s.0868.i, 8
  %arrayidx124.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv950.i
  %119 = load i8, i8* %arrayidx124.i, align 1, !tbaa !12
  %conv125.i = zext i8 %119 to i16
  %shl126.i = shl nuw i16 %conv125.i, 8
  %or127.i = or i16 %shl126.i, %118
  %idxprom129.i = zext i16 %or127.i to i64
  %arrayidx130.i = getelementptr inbounds i32, i32* %2, i64 %idxprom129.i
  %120 = load i32, i32* %arrayidx130.i, align 4, !tbaa !6
  %sub131.i = add i32 %120, -1
  store i32 %sub131.i, i32* %arrayidx130.i, align 4, !tbaa !6
  %idxprom134.i = sext i32 %sub131.i to i64
  %arrayidx135.i = getelementptr inbounds i32, i32* %0, i64 %idxprom134.i
  %121 = trunc i64 %indvars.iv950.i to i32
  store i32 %121, i32* %arrayidx135.i, align 4, !tbaa !6
  %122 = zext i8 %119 to i64
  %123 = add nsw i64 %indvars.iv950.i, -1
  %arrayidx140.i = getelementptr inbounds i8, i8* %1, i64 %123
  %124 = load i8, i8* %arrayidx140.i, align 1, !tbaa !12
  %conv141.i = zext i8 %124 to i64
  %shl142.i = shl nuw nsw i64 %conv141.i, 8
  %or143.i = or i64 %shl142.i, %122
  %arrayidx146.i = getelementptr inbounds i32, i32* %2, i64 %or143.i
  %125 = load i32, i32* %arrayidx146.i, align 4, !tbaa !6
  %sub147.i = add i32 %125, -1
  store i32 %sub147.i, i32* %arrayidx146.i, align 4, !tbaa !6
  %idxprom151.i = sext i32 %sub147.i to i64
  %arrayidx152.i = getelementptr inbounds i32, i32* %0, i64 %idxprom151.i
  %126 = trunc i64 %123 to i32
  store i32 %126, i32* %arrayidx152.i, align 4, !tbaa !6
  %127 = add nsw i64 %indvars.iv950.i, -2
  %arrayidx157.i = getelementptr inbounds i8, i8* %1, i64 %127
  %128 = load i8, i8* %arrayidx157.i, align 1, !tbaa !12
  %conv158.i = zext i8 %128 to i64
  %shl159.i = shl nuw nsw i64 %conv158.i, 8
  %or160.i = or i64 %shl159.i, %conv141.i
  %arrayidx163.i = getelementptr inbounds i32, i32* %2, i64 %or160.i
  %129 = load i32, i32* %arrayidx163.i, align 4, !tbaa !6
  %sub164.i = add i32 %129, -1
  store i32 %sub164.i, i32* %arrayidx163.i, align 4, !tbaa !6
  %idxprom168.i = sext i32 %sub164.i to i64
  %arrayidx169.i = getelementptr inbounds i32, i32* %0, i64 %idxprom168.i
  %130 = trunc i64 %127 to i32
  store i32 %130, i32* %arrayidx169.i, align 4, !tbaa !6
  %131 = zext i8 %128 to i16
  %132 = add nsw i64 %indvars.iv950.i, -3
  %arrayidx174.i = getelementptr inbounds i8, i8* %1, i64 %132
  %133 = load i8, i8* %arrayidx174.i, align 1, !tbaa !12
  %conv175.i = zext i8 %133 to i16
  %shl176.i = shl nuw i16 %conv175.i, 8
  %or177.i = or i16 %shl176.i, %131
  %idxprom179.i = zext i16 %or177.i to i64
  %arrayidx180.i = getelementptr inbounds i32, i32* %2, i64 %idxprom179.i
  %134 = load i32, i32* %arrayidx180.i, align 4, !tbaa !6
  %sub181.i = add i32 %134, -1
  store i32 %sub181.i, i32* %arrayidx180.i, align 4, !tbaa !6
  %idxprom185.i = sext i32 %sub181.i to i64
  %arrayidx186.i = getelementptr inbounds i32, i32* %0, i64 %idxprom185.i
  %135 = trunc i64 %132 to i32
  store i32 %135, i32* %arrayidx186.i, align 4, !tbaa !6
  %indvars.iv.next951.i = add nsw i64 %indvars.iv950.i, -4
  %cmp118.i = icmp sgt i64 %indvars.iv950.i, 6
  br i1 %cmp118.i, label %for.body120.i, label %for.end189.i

for.end189.i:                                     ; preds = %for.body120.i
  br i1 %cmp62874.i, label %for.body193.lr.ph.i, label %for.end211.i

for.body193.lr.ph.i:                              ; preds = %for.end189.i
  %136 = sext i32 %37 to i64
  br label %for.body193.i

for.body193.i:                                    ; preds = %for.body193.i, %for.body193.lr.ph.i
  %indvars.iv948.i = phi i64 [ %136, %for.body193.lr.ph.i ], [ %indvars.iv.next949.i, %for.body193.i ]
  %s.1865.i = phi i16 [ %or177.i, %for.body193.lr.ph.i ], [ %or200.i, %for.body193.i ]
  %137 = lshr i16 %s.1865.i, 8
  %arrayidx197.i = getelementptr inbounds i8, i8* %1, i64 %indvars.iv948.i
  %138 = load i8, i8* %arrayidx197.i, align 1, !tbaa !12
  %conv198.i = zext i8 %138 to i16
  %shl199.i = shl nuw i16 %conv198.i, 8
  %or200.i = or i16 %shl199.i, %137
  %idxprom202.i = zext i16 %or200.i to i64
  %arrayidx203.i = getelementptr inbounds i32, i32* %2, i64 %idxprom202.i
  %139 = load i32, i32* %arrayidx203.i, align 4, !tbaa !6
  %sub204.i = add i32 %139, -1
  store i32 %sub204.i, i32* %arrayidx203.i, align 4, !tbaa !6
  %idxprom207.i = sext i32 %sub204.i to i64
  %arrayidx208.i = getelementptr inbounds i32, i32* %0, i64 %idxprom207.i
  %140 = trunc i64 %indvars.iv948.i to i32
  store i32 %140, i32* %arrayidx208.i, align 4, !tbaa !6
  %indvars.iv.next949.i = add nsw i64 %indvars.iv948.i, -1
  %cmp191.i = icmp sgt i64 %indvars.iv948.i, 0
  br i1 %cmp191.i, label %for.body193.i, label %for.end211.i

for.end211.i:                                     ; preds = %for.body193.i, %for.end189.i
  call void @llvm.memset.p0i8.i64(i8* nonnull %bigDone947.i, i8 0, i64 256, i32 16, i1 false) #2
  %141 = bitcast [256 x i32]* %runningOrder.i to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %141, align 16, !tbaa !6
  %142 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 4, i32 5, i32 6, i32 7>, <4 x i32>* %143, align 16, !tbaa !6
  %144 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 8
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 8, i32 9, i32 10, i32 11>, <4 x i32>* %145, align 16, !tbaa !6
  %146 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 12
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 12, i32 13, i32 14, i32 15>, <4 x i32>* %147, align 16, !tbaa !6
  %148 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 16
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 16, i32 17, i32 18, i32 19>, <4 x i32>* %149, align 16, !tbaa !6
  %150 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 20
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 20, i32 21, i32 22, i32 23>, <4 x i32>* %151, align 16, !tbaa !6
  %152 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 24
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 24, i32 25, i32 26, i32 27>, <4 x i32>* %153, align 16, !tbaa !6
  %154 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 28
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 28, i32 29, i32 30, i32 31>, <4 x i32>* %155, align 16, !tbaa !6
  %156 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 32
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 32, i32 33, i32 34, i32 35>, <4 x i32>* %157, align 16, !tbaa !6
  %158 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 36
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 36, i32 37, i32 38, i32 39>, <4 x i32>* %159, align 16, !tbaa !6
  %160 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 40
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 40, i32 41, i32 42, i32 43>, <4 x i32>* %161, align 16, !tbaa !6
  %162 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 44
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 44, i32 45, i32 46, i32 47>, <4 x i32>* %163, align 16, !tbaa !6
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 48
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 48, i32 49, i32 50, i32 51>, <4 x i32>* %165, align 16, !tbaa !6
  %166 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 52
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 52, i32 53, i32 54, i32 55>, <4 x i32>* %167, align 16, !tbaa !6
  %168 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 56
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 56, i32 57, i32 58, i32 59>, <4 x i32>* %169, align 16, !tbaa !6
  %170 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 60
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 60, i32 61, i32 62, i32 63>, <4 x i32>* %171, align 16, !tbaa !6
  %172 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 64
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 64, i32 65, i32 66, i32 67>, <4 x i32>* %173, align 16, !tbaa !6
  %174 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 68
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 68, i32 69, i32 70, i32 71>, <4 x i32>* %175, align 16, !tbaa !6
  %176 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 72
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 72, i32 73, i32 74, i32 75>, <4 x i32>* %177, align 16, !tbaa !6
  %178 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 76
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> <i32 76, i32 77, i32 78, i32 79>, <4 x i32>* %179, align 16, !tbaa !6
  %180 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 80
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> <i32 80, i32 81, i32 82, i32 83>, <4 x i32>* %181, align 16, !tbaa !6
  %182 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 84
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> <i32 84, i32 85, i32 86, i32 87>, <4 x i32>* %183, align 16, !tbaa !6
  %184 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 88
  %185 = bitcast i32* %184 to <4 x i32>*
  store <4 x i32> <i32 88, i32 89, i32 90, i32 91>, <4 x i32>* %185, align 16, !tbaa !6
  %186 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 92
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 92, i32 93, i32 94, i32 95>, <4 x i32>* %187, align 16, !tbaa !6
  %188 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 96
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 96, i32 97, i32 98, i32 99>, <4 x i32>* %189, align 16, !tbaa !6
  %190 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 100
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 100, i32 101, i32 102, i32 103>, <4 x i32>* %191, align 16, !tbaa !6
  %192 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 104
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> <i32 104, i32 105, i32 106, i32 107>, <4 x i32>* %193, align 16, !tbaa !6
  %194 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 108
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> <i32 108, i32 109, i32 110, i32 111>, <4 x i32>* %195, align 16, !tbaa !6
  %196 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 112
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 112, i32 113, i32 114, i32 115>, <4 x i32>* %197, align 16, !tbaa !6
  %198 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 116
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 116, i32 117, i32 118, i32 119>, <4 x i32>* %199, align 16, !tbaa !6
  %200 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 120
  %201 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> <i32 120, i32 121, i32 122, i32 123>, <4 x i32>* %201, align 16, !tbaa !6
  %202 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 124
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> <i32 124, i32 125, i32 126, i32 127>, <4 x i32>* %203, align 16, !tbaa !6
  %204 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 128
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> <i32 128, i32 129, i32 130, i32 131>, <4 x i32>* %205, align 16, !tbaa !6
  %206 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 132
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 132, i32 133, i32 134, i32 135>, <4 x i32>* %207, align 16, !tbaa !6
  %208 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 136
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 136, i32 137, i32 138, i32 139>, <4 x i32>* %209, align 16, !tbaa !6
  %210 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 140
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> <i32 140, i32 141, i32 142, i32 143>, <4 x i32>* %211, align 16, !tbaa !6
  %212 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 144
  %213 = bitcast i32* %212 to <4 x i32>*
  store <4 x i32> <i32 144, i32 145, i32 146, i32 147>, <4 x i32>* %213, align 16, !tbaa !6
  %214 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 148
  %215 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> <i32 148, i32 149, i32 150, i32 151>, <4 x i32>* %215, align 16, !tbaa !6
  %216 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 152
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 152, i32 153, i32 154, i32 155>, <4 x i32>* %217, align 16, !tbaa !6
  %218 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 156
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 156, i32 157, i32 158, i32 159>, <4 x i32>* %219, align 16, !tbaa !6
  %220 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 160
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> <i32 160, i32 161, i32 162, i32 163>, <4 x i32>* %221, align 16, !tbaa !6
  %222 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 164
  %223 = bitcast i32* %222 to <4 x i32>*
  store <4 x i32> <i32 164, i32 165, i32 166, i32 167>, <4 x i32>* %223, align 16, !tbaa !6
  %224 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 168
  %225 = bitcast i32* %224 to <4 x i32>*
  store <4 x i32> <i32 168, i32 169, i32 170, i32 171>, <4 x i32>* %225, align 16, !tbaa !6
  %226 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 172
  %227 = bitcast i32* %226 to <4 x i32>*
  store <4 x i32> <i32 172, i32 173, i32 174, i32 175>, <4 x i32>* %227, align 16, !tbaa !6
  %228 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 176
  %229 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> <i32 176, i32 177, i32 178, i32 179>, <4 x i32>* %229, align 16, !tbaa !6
  %230 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 180
  %231 = bitcast i32* %230 to <4 x i32>*
  store <4 x i32> <i32 180, i32 181, i32 182, i32 183>, <4 x i32>* %231, align 16, !tbaa !6
  %232 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 184
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> <i32 184, i32 185, i32 186, i32 187>, <4 x i32>* %233, align 16, !tbaa !6
  %234 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 188
  %235 = bitcast i32* %234 to <4 x i32>*
  store <4 x i32> <i32 188, i32 189, i32 190, i32 191>, <4 x i32>* %235, align 16, !tbaa !6
  %236 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 192
  %237 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> <i32 192, i32 193, i32 194, i32 195>, <4 x i32>* %237, align 16, !tbaa !6
  %238 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 196
  %239 = bitcast i32* %238 to <4 x i32>*
  store <4 x i32> <i32 196, i32 197, i32 198, i32 199>, <4 x i32>* %239, align 16, !tbaa !6
  %240 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 200
  %241 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> <i32 200, i32 201, i32 202, i32 203>, <4 x i32>* %241, align 16, !tbaa !6
  %242 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 204
  %243 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> <i32 204, i32 205, i32 206, i32 207>, <4 x i32>* %243, align 16, !tbaa !6
  %244 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 208
  %245 = bitcast i32* %244 to <4 x i32>*
  store <4 x i32> <i32 208, i32 209, i32 210, i32 211>, <4 x i32>* %245, align 16, !tbaa !6
  %246 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 212
  %247 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> <i32 212, i32 213, i32 214, i32 215>, <4 x i32>* %247, align 16, !tbaa !6
  %248 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 216
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> <i32 216, i32 217, i32 218, i32 219>, <4 x i32>* %249, align 16, !tbaa !6
  %250 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 220
  %251 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> <i32 220, i32 221, i32 222, i32 223>, <4 x i32>* %251, align 16, !tbaa !6
  %252 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 224
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> <i32 224, i32 225, i32 226, i32 227>, <4 x i32>* %253, align 16, !tbaa !6
  %254 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 228
  %255 = bitcast i32* %254 to <4 x i32>*
  store <4 x i32> <i32 228, i32 229, i32 230, i32 231>, <4 x i32>* %255, align 16, !tbaa !6
  %256 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 232
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> <i32 232, i32 233, i32 234, i32 235>, <4 x i32>* %257, align 16, !tbaa !6
  %258 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 236
  %259 = bitcast i32* %258 to <4 x i32>*
  store <4 x i32> <i32 236, i32 237, i32 238, i32 239>, <4 x i32>* %259, align 16, !tbaa !6
  %260 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 240
  %261 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> <i32 240, i32 241, i32 242, i32 243>, <4 x i32>* %261, align 16, !tbaa !6
  %262 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 244
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> <i32 244, i32 245, i32 246, i32 247>, <4 x i32>* %263, align 16, !tbaa !6
  %264 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 248
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> <i32 248, i32 249, i32 250, i32 251>, <4 x i32>* %265, align 16, !tbaa !6
  %266 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 252
  %267 = bitcast i32* %266 to <4 x i32>*
  store <4 x i32> <i32 252, i32 253, i32 254, i32 255>, <4 x i32>* %267, align 16, !tbaa !6
  br label %for.body230.i

for.body230.i:                                    ; preds = %zero.i, %for.end211.i
  %indvars.iv942.i = phi i64 [ %indvars.iv.next943.i, %zero.i ], [ 121, %for.end211.i ]
  %arrayidx232.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv942.i
  %268 = load i32, i32* %arrayidx232.i, align 4, !tbaa !6
  %add247.i = shl i32 %268, 8
  %shl248.i = add i32 %add247.i, 256
  %idxprom249.i = sext i32 %shl248.i to i64
  %arrayidx250.i = getelementptr inbounds i32, i32* %2, i64 %idxprom249.i
  %269 = load i32, i32* %arrayidx250.i, align 4, !tbaa !6
  %idxprom252.i = sext i32 %add247.i to i64
  %arrayidx253.i = getelementptr inbounds i32, i32* %2, i64 %idxprom252.i
  %270 = load i32, i32* %arrayidx253.i, align 4, !tbaa !6
  %sub254.i = sub i32 %269, %270
  %271 = trunc i64 %indvars.iv942.i to i32
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %for.body230.i
  %j.2.i = phi i32 [ %271, %for.body230.i ], [ %sub233.i, %while.body.i ]
  %sub233.i = add nsw i32 %j.2.i, -121
  %idxprom234.i = sext i32 %sub233.i to i64
  %arrayidx235.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom234.i
  %272 = load i32, i32* %arrayidx235.i, align 4, !tbaa !6
  %add236.i = shl i32 %272, 8
  %shl237.i = add i32 %add236.i, 256
  %idxprom238.i = sext i32 %shl237.i to i64
  %arrayidx239.i = getelementptr inbounds i32, i32* %2, i64 %idxprom238.i
  %273 = load i32, i32* %arrayidx239.i, align 4, !tbaa !6
  %idxprom244.i = sext i32 %add236.i to i64
  %arrayidx245.i = getelementptr inbounds i32, i32* %2, i64 %idxprom244.i
  %274 = load i32, i32* %arrayidx245.i, align 4, !tbaa !6
  %sub246.i = sub i32 %273, %274
  %cmp255.i = icmp ugt i32 %sub246.i, %sub254.i
  %idxprom260.i = sext i32 %j.2.i to i64
  br i1 %cmp255.i, label %while.body.i, label %zero.i

while.body.i:                                     ; preds = %while.cond.i
  %arrayidx261.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i
  store i32 %272, i32* %arrayidx261.i, align 4, !tbaa !6
  %cmp264.i = icmp slt i32 %j.2.i, 242
  br i1 %cmp264.i, label %zero.i, label %while.cond.i

zero.i:                                           ; preds = %while.body.i, %while.cond.i
  %idxprom260.i.pn = phi i64 [ %idxprom260.i, %while.cond.i ], [ %idxprom234.i, %while.body.i ]
  %arrayidx269.pre-phi.i.pre-phi = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.pn
  store i32 %268, i32* %arrayidx269.pre-phi.i.pre-phi, align 4, !tbaa !6
  %indvars.iv.next943.i = add nuw nsw i64 %indvars.iv942.i, 1
  %cmp228.i = icmp ult i64 %indvars.iv942.i, 255
  br i1 %cmp228.i, label %for.body230.i, label %for.body230.i.1.preheader

for.body230.i.1.preheader:                        ; preds = %zero.i
  br label %for.body230.i.1

for.body280.i:                                    ; preds = %do.cond273.i.4, %for.inc507.i
  %indvars.iv940.i = phi i64 [ 0, %do.cond273.i.4 ], [ %indvars.iv.next941.i, %for.inc507.i ]
  %numQSorted.0859.i = phi i32 [ 0, %do.cond273.i.4 ], [ %numQSorted.5.i, %for.inc507.i ]
  %arrayidx282.i = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv940.i
  %275 = load i32, i32* %arrayidx282.i, align 4, !tbaa !6
  %shl290.i = shl i32 %275, 8
  %276 = sext i32 %shl290.i to i64
  %277 = zext i32 %275 to i64
  br label %for.body286.i

for.body286.i:                                    ; preds = %for.inc327.i, %for.body280.i
  %indvars.iv.i = phi i64 [ 0, %for.body280.i ], [ %indvars.iv.next.i, %for.inc327.i ]
  %numQSorted.1847.i = phi i32 [ %numQSorted.0859.i, %for.body280.i ], [ %numQSorted.5.i, %for.inc327.i ]
  %cmp287.i = icmp eq i64 %indvars.iv.i, %277
  br i1 %cmp287.i, label %for.inc327.i, label %if.then289.i

if.then289.i:                                     ; preds = %for.body286.i
  %278 = add nuw nsw i64 %indvars.iv.i, %276
  %arrayidx293.i = getelementptr inbounds i32, i32* %2, i64 %278
  %279 = load i32, i32* %arrayidx293.i, align 4, !tbaa !6
  %and.i = and i32 %279, 2097152
  %tobool.i = icmp eq i32 %and.i, 0
  br i1 %tobool.i, label %if.then294.i, label %if.end322.i

if.then294.i:                                     ; preds = %if.then289.i
  %and297.i = and i32 %279, -2097153
  %280 = add nsw i64 %278, 1
  %arrayidx300.i = getelementptr inbounds i32, i32* %2, i64 %280
  %281 = load i32, i32* %arrayidx300.i, align 4, !tbaa !6
  %and301.i = and i32 %281, -2097153
  %sub302.i = add i32 %and301.i, -1
  %cmp303.i = icmp sgt i32 %sub302.i, %and297.i
  br i1 %cmp303.i, label %if.then305.i, label %if.end322.i

if.then305.i:                                     ; preds = %if.then294.i
  br i1 %cmp.i, label %if.then308.i, label %if.end312.i

if.then308.i:                                     ; preds = %if.then305.i
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %sub309.i = sub i32 1, %and297.i
  %add310.i = add i32 %sub309.i, %sub302.i
  %283 = trunc i64 %indvars.iv.i to i32
  %284 = getelementptr [48 x i8], [48 x i8]* @.str.7.2, i64 0, i64 0
  %call311.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %282, i8* %284, i32 %275, i32 %283, i32 %numQSorted.1847.i, i32 %add310.i) #16
  br label %if.end312.i

if.end312.i:                                      ; preds = %if.then308.i, %if.then305.i
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %527) #2
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %528) #2
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %529) #2
  store i32 %and297.i, i32* %arrayidx.i.i, align 16, !tbaa !6
  store i32 %sub302.i, i32* %arrayidx2.i.i, align 16, !tbaa !6
  store i32 2, i32* %arrayidx4.i.i, align 16, !tbaa !6
  br label %while.body.lr.ph.i.i

while.body.lr.ph.i.i:                             ; preds = %while.cond.outer.backedge.i.i, %if.end312.i
  %sp.0.ph84.i.i = phi i32 [ 1, %if.end312.i ], [ %sp.0.ph.be.i.i, %while.cond.outer.backedge.i.i ]
  %cmp5.i.i = icmp slt i32 %sp.0.ph84.i.i, 100
  %dec.i.i = add nsw i32 %sp.0.ph84.i.i, -1
  %idxprom6.i.i = sext i32 %dec.i.i to i64
  %arrayidx7.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 %idxprom6.i.i
  %arrayidx9.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 %idxprom6.i.i
  %arrayidx11.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 %idxprom6.i.i
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.then120.i.i, %while.body.lr.ph.i.i
  br i1 %cmp5.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i.i
  tail call void @BZ2_bz__AssertH__fail(i32 1001) #2
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i.i
  %285 = load i32, i32* %arrayidx7.i.i, align 4, !tbaa !6
  %286 = load i32, i32* %arrayidx9.i.i, align 4, !tbaa !6
  %287 = load i32, i32* %arrayidx11.i.i, align 4, !tbaa !6
  %sub.i.i = sub nsw i32 %286, %285
  %cmp12.i.i = icmp slt i32 %sub.i.i, 20
  %cmp13.i.i = icmp sgt i32 %287, 14
  %or.cond.i.i = or i1 %cmp12.i.i, %cmp13.i.i
  br i1 %or.cond.i.i, label %if.then14.i.i, label %if.end18.i.i

if.then14.i.i:                                    ; preds = %if.end.i.i
  %cmp.i.i.i = icmp slt i32 %sub.i.i, 1
  br i1 %cmp.i.i.i, label %mainSimpleSort.exit.i.i, label %while.cond.i.i.i.preheader

while.cond.i.i.i.preheader:                       ; preds = %if.then14.i.i
  br label %while.cond.i.i.i

while.cond.i.i.i:                                 ; preds = %while.cond.i.i.i, %while.cond.i.i.i.preheader
  %indvars.iv240.i.i.i = phi i64 [ %indvars.iv.next241.i.i.i, %while.cond.i.i.i ], [ 0, %while.cond.i.i.i.preheader ]
  %arrayidx.i.i.i = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %indvars.iv240.i.i.i
  %288 = load i32, i32* %arrayidx.i.i.i, align 4, !tbaa !6
  %cmp1.i.i.i = icmp sgt i32 %288, %sub.i.i
  %indvars.iv.next241.i.i.i = add nuw i64 %indvars.iv240.i.i.i, 1
  br i1 %cmp1.i.i.i, label %while.end.i.i.i, label %while.cond.i.i.i

while.end.i.i.i:                                  ; preds = %while.cond.i.i.i
  %289 = trunc i64 %indvars.iv240.i.i.i to i32
  %cmp2230.i.i.i = icmp eq i32 %289, 0
  br i1 %cmp2230.i.i.i, label %mainSimpleSort.exit.i.i, label %for.body.lr.ph.i.i.i

for.body.lr.ph.i.i.i:                             ; preds = %while.end.i.i.i
  %290 = sext i32 %286 to i64
  %sext.i.i.i = shl i64 %indvars.iv240.i.i.i, 32
  %291 = ashr exact i64 %sext.i.i.i, 32
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv238.i.i.i = phi i64 [ %291, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next239.i.i.i, %for.inc.i.i.i ]
  %indvars.iv.next239.i.i.i = add nsw i64 %indvars.iv238.i.i.i, -1
  %arrayidx4.i.i.i = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %indvars.iv.next239.i.i.i
  %292 = load i32, i32* %arrayidx4.i.i.i, align 4, !tbaa !6
  %add5.i.i.i = add nsw i32 %292, %285
  %cmp8227.i.i.i = icmp sgt i32 %add5.i.i.i, %286
  br i1 %cmp8227.i.i.i, label %for.inc.i.i.i, label %if.end10.lr.ph.i.i.i

if.end10.lr.ph.i.i.i:                             ; preds = %for.body.i.i.i
  %293 = sext i32 %add5.i.i.i to i64
  %294 = sext i32 %292 to i64
  br label %if.end10.i.i.i

while.cond6.i.i.i:                                ; preds = %while.end89.i.i.i
  %cmp8.i.i.i = icmp sgt i64 %indvars.iv.next.i.i.i, %290
  br i1 %cmp8.i.i.i, label %for.inc.i.i.i, label %if.end10.i.i.i

if.end10.i.i.i:                                   ; preds = %while.cond6.i.i.i, %if.end10.lr.ph.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %293, %if.end10.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i, %while.cond6.i.i.i ]
  %arrayidx12.i.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv.i.i.i
  %295 = load i32, i32* %arrayidx12.i.i.i, align 4, !tbaa !6
  %296 = sub nsw i64 %indvars.iv.i.i.i, %294
  %arrayidx16197.i.i.i = getelementptr inbounds i32, i32* %0, i64 %296
  %297 = load i32, i32* %arrayidx16197.i.i.i, align 4, !tbaa !6
  %add17198.i.i.i = add i32 %297, %287
  %add18.i.i.i = add i32 %295, %287
  %call199.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add17198.i.i.i, i32 %add18.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #2
  %tobool200.i.i.i = icmp eq i8 %call199.i.i.i, 0
  %298 = trunc i64 %indvars.iv.i.i.i to i32
  br i1 %tobool200.i.i.i, label %while.end31.i.i.i, label %while.body19.lr.ph.i.i.i

while.body19.lr.ph.i.i.i:                         ; preds = %if.end10.i.i.i
  %299 = trunc i64 %296 to i32
  br label %while.body19.i.i.i

while.cond13.i.i.i:                               ; preds = %while.body19.i.i.i
  %sub14.i.i.i = sub nsw i32 %sub14202.i.i.i, %292
  %idxprom15.i.i.i = sext i32 %sub14.i.i.i to i64
  %arrayidx16.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom15.i.i.i
  %300 = load i32, i32* %arrayidx16.i.i.i, align 4, !tbaa !6
  %add17.i.i.i = add i32 %300, %287
  %call.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add17.i.i.i, i32 %add18.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #2
  %tobool.i.i.i = icmp eq i8 %call.i.i.i, 0
  br i1 %tobool.i.i.i, label %while.end31.i.i.i, label %while.body19.i.i.i

while.body19.i.i.i:                               ; preds = %while.cond13.i.i.i, %while.body19.lr.ph.i.i.i
  %arrayidx16203.i.i.i = phi i32* [ %arrayidx16197.i.i.i, %while.body19.lr.ph.i.i.i ], [ %arrayidx16.i.i.i, %while.cond13.i.i.i ]
  %sub14202.i.i.i = phi i32 [ %299, %while.body19.lr.ph.i.i.i ], [ %sub14.i.i.i, %while.cond13.i.i.i ]
  %j.0201.i.i.i = phi i32 [ %298, %while.body19.lr.ph.i.i.i ], [ %sub14202.i.i.i, %while.cond13.i.i.i ]
  %301 = load i32, i32* %arrayidx16203.i.i.i, align 4, !tbaa !6
  %idxprom23.i.i.i = sext i32 %j.0201.i.i.i to i64
  %arrayidx24.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom23.i.i.i
  store i32 %301, i32* %arrayidx24.i.i.i, align 4, !tbaa !6
  %cmp28.i.i.i = icmp slt i32 %sub14202.i.i.i, %add5.i.i.i
  br i1 %cmp28.i.i.i, label %while.end31.i.i.i, label %while.cond13.i.i.i

while.end31.i.i.i:                                ; preds = %while.body19.i.i.i, %while.cond13.i.i.i, %if.end10.i.i.i
  %j.1.i.i.i = phi i32 [ %298, %if.end10.i.i.i ], [ %sub14202.i.i.i, %while.cond13.i.i.i ], [ %sub14202.i.i.i, %while.body19.i.i.i ]
  %idxprom32.i.i.i = sext i32 %j.1.i.i.i to i64
  %arrayidx33.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom32.i.i.i
  store i32 %295, i32* %arrayidx33.i.i.i, align 4, !tbaa !6
  %302 = add nsw i64 %indvars.iv.i.i.i, 1
  %cmp35.i.i.i = icmp slt i64 %indvars.iv.i.i.i, %290
  br i1 %cmp35.i.i.i, label %if.end37.i.i.i, label %for.inc.i.i.i

if.end37.i.i.i:                                   ; preds = %while.end31.i.i.i
  %arrayidx39.i.i.i = getelementptr inbounds i32, i32* %0, i64 %302
  %303 = load i32, i32* %arrayidx39.i.i.i, align 4, !tbaa !6
  %304 = sub nsw i64 %302, %294
  %arrayidx43207.i.i.i = getelementptr inbounds i32, i32* %0, i64 %304
  %305 = load i32, i32* %arrayidx43207.i.i.i, align 4, !tbaa !6
  %add44208.i.i.i = add i32 %305, %287
  %add45.i.i.i = add i32 %303, %287
  %call46209.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add44208.i.i.i, i32 %add45.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #2
  %tobool47210.i.i.i = icmp eq i8 %call46209.i.i.i, 0
  %306 = trunc i64 %302 to i32
  br i1 %tobool47210.i.i.i, label %while.end60.i.i.i, label %while.body48.lr.ph.i.i.i

while.body48.lr.ph.i.i.i:                         ; preds = %if.end37.i.i.i
  %307 = trunc i64 %304 to i32
  br label %while.body48.i.i.i

while.cond40.i.i.i:                               ; preds = %while.body48.i.i.i
  %sub41.i.i.i = sub nsw i32 %sub41212.i.i.i, %292
  %idxprom42.i.i.i = sext i32 %sub41.i.i.i to i64
  %arrayidx43.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom42.i.i.i
  %308 = load i32, i32* %arrayidx43.i.i.i, align 4, !tbaa !6
  %add44.i.i.i = add i32 %308, %287
  %call46.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add44.i.i.i, i32 %add45.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #2
  %tobool47.i.i.i = icmp eq i8 %call46.i.i.i, 0
  br i1 %tobool47.i.i.i, label %while.end60.i.i.i, label %while.body48.i.i.i

while.body48.i.i.i:                               ; preds = %while.cond40.i.i.i, %while.body48.lr.ph.i.i.i
  %arrayidx43213.i.i.i = phi i32* [ %arrayidx43207.i.i.i, %while.body48.lr.ph.i.i.i ], [ %arrayidx43.i.i.i, %while.cond40.i.i.i ]
  %sub41212.i.i.i = phi i32 [ %307, %while.body48.lr.ph.i.i.i ], [ %sub41.i.i.i, %while.cond40.i.i.i ]
  %j.2211.i.i.i = phi i32 [ %306, %while.body48.lr.ph.i.i.i ], [ %sub41212.i.i.i, %while.cond40.i.i.i ]
  %309 = load i32, i32* %arrayidx43213.i.i.i, align 4, !tbaa !6
  %idxprom52.i.i.i = sext i32 %j.2211.i.i.i to i64
  %arrayidx53.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom52.i.i.i
  store i32 %309, i32* %arrayidx53.i.i.i, align 4, !tbaa !6
  %cmp57.i.i.i = icmp slt i32 %sub41212.i.i.i, %add5.i.i.i
  br i1 %cmp57.i.i.i, label %while.end60.i.i.i, label %while.cond40.i.i.i

while.end60.i.i.i:                                ; preds = %while.body48.i.i.i, %while.cond40.i.i.i, %if.end37.i.i.i
  %j.3.i.i.i = phi i32 [ %306, %if.end37.i.i.i ], [ %sub41212.i.i.i, %while.cond40.i.i.i ], [ %sub41212.i.i.i, %while.body48.i.i.i ]
  %idxprom61.i.i.i = sext i32 %j.3.i.i.i to i64
  %arrayidx62.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom61.i.i.i
  store i32 %303, i32* %arrayidx62.i.i.i, align 4, !tbaa !6
  %310 = add nsw i64 %indvars.iv.i.i.i, 2
  %cmp64.i.i.i = icmp sgt i64 %310, %290
  br i1 %cmp64.i.i.i, label %for.inc.i.i.i, label %if.end66.i.i.i

if.end66.i.i.i:                                   ; preds = %while.end60.i.i.i
  %arrayidx68.i.i.i = getelementptr inbounds i32, i32* %0, i64 %310
  %311 = load i32, i32* %arrayidx68.i.i.i, align 4, !tbaa !6
  %312 = sub nsw i64 %310, %294
  %arrayidx72218.i.i.i = getelementptr inbounds i32, i32* %0, i64 %312
  %313 = load i32, i32* %arrayidx72218.i.i.i, align 4, !tbaa !6
  %add73219.i.i.i = add i32 %313, %287
  %add74.i.i.i = add i32 %311, %287
  %call75220.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add73219.i.i.i, i32 %add74.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #2
  %tobool76221.i.i.i = icmp eq i8 %call75220.i.i.i, 0
  %314 = trunc i64 %310 to i32
  br i1 %tobool76221.i.i.i, label %while.end89.i.i.i, label %while.body77.lr.ph.i.i.i

while.body77.lr.ph.i.i.i:                         ; preds = %if.end66.i.i.i
  %315 = trunc i64 %312 to i32
  br label %while.body77.i.i.i

while.cond69.i.i.i:                               ; preds = %while.body77.i.i.i
  %sub70.i.i.i = sub nsw i32 %sub70223.i.i.i, %292
  %idxprom71.i.i.i = sext i32 %sub70.i.i.i to i64
  %arrayidx72.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom71.i.i.i
  %316 = load i32, i32* %arrayidx72.i.i.i, align 4, !tbaa !6
  %add73.i.i.i = add i32 %316, %287
  %call75.i.i.i = call fastcc zeroext i8 @mainGtU(i32 %add73.i.i.i, i32 %add74.i.i.i, i8* %1, i16* %9, i32 %3, i32* nonnull %budget) #2
  %tobool76.i.i.i = icmp eq i8 %call75.i.i.i, 0
  br i1 %tobool76.i.i.i, label %while.end89.i.i.i, label %while.body77.i.i.i

while.body77.i.i.i:                               ; preds = %while.cond69.i.i.i, %while.body77.lr.ph.i.i.i
  %arrayidx72224.i.i.i = phi i32* [ %arrayidx72218.i.i.i, %while.body77.lr.ph.i.i.i ], [ %arrayidx72.i.i.i, %while.cond69.i.i.i ]
  %sub70223.i.i.i = phi i32 [ %315, %while.body77.lr.ph.i.i.i ], [ %sub70.i.i.i, %while.cond69.i.i.i ]
  %j.4222.i.i.i = phi i32 [ %314, %while.body77.lr.ph.i.i.i ], [ %sub70223.i.i.i, %while.cond69.i.i.i ]
  %317 = load i32, i32* %arrayidx72224.i.i.i, align 4, !tbaa !6
  %idxprom81.i.i.i = sext i32 %j.4222.i.i.i to i64
  %arrayidx82.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom81.i.i.i
  store i32 %317, i32* %arrayidx82.i.i.i, align 4, !tbaa !6
  %cmp86.i.i.i = icmp slt i32 %sub70223.i.i.i, %add5.i.i.i
  br i1 %cmp86.i.i.i, label %while.end89.i.i.i, label %while.cond69.i.i.i

while.end89.i.i.i:                                ; preds = %while.body77.i.i.i, %while.cond69.i.i.i, %if.end66.i.i.i
  %j.5.i.i.i = phi i32 [ %314, %if.end66.i.i.i ], [ %sub70223.i.i.i, %while.cond69.i.i.i ], [ %sub70223.i.i.i, %while.body77.i.i.i ]
  %idxprom90.i.i.i = sext i32 %j.5.i.i.i to i64
  %arrayidx91.i.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom90.i.i.i
  store i32 %311, i32* %arrayidx91.i.i.i, align 4, !tbaa !6
  %318 = load i32, i32* %budget, align 4, !tbaa !6
  %cmp93.i.i.i = icmp slt i32 %318, 0
  %indvars.iv.next.i.i.i = add nsw i64 %indvars.iv.i.i.i, 3
  br i1 %cmp93.i.i.i, label %mainQSort3.exit.i, label %while.cond6.i.i.i

for.inc.i.i.i:                                    ; preds = %while.end60.i.i.i, %while.end31.i.i.i, %while.cond6.i.i.i, %for.body.i.i.i
  %cmp2.i.i.i = icmp sgt i64 %indvars.iv238.i.i.i, 1
  br i1 %cmp2.i.i.i, label %for.body.i.i.i, label %mainSimpleSort.exit.i.i

mainSimpleSort.exit.i.i:                          ; preds = %for.inc.i.i.i, %while.end.i.i.i, %if.then14.i.i
  %.pr.i.i = load i32, i32* %budget, align 4, !tbaa !6
  %cmp15.i.i = icmp slt i32 %.pr.i.i, 0
  br i1 %cmp15.i.i, label %mainQSort3.exit.i, label %while.cond.outer.backedge.i.i

while.cond.outer.backedge.i.i:                    ; preds = %while.end185.i.i, %mainSimpleSort.exit.i.i
  %sp.0.ph.be.i.i = phi i32 [ %inc301.i.i, %while.end185.i.i ], [ %dec.i.i, %mainSimpleSort.exit.i.i ]
  %cmp.i.i = icmp sgt i32 %sp.0.ph.be.i.i, 0
  br i1 %cmp.i.i, label %while.body.lr.ph.i.i, label %mainQSort3.exitthread-pre-split.i

if.end18.i.i:                                     ; preds = %if.end.i.i
  %idxprom19.i.i = sext i32 %285 to i64
  %arrayidx20.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom19.i.i
  %319 = load i32, i32* %arrayidx20.i.i, align 4, !tbaa !6
  %add.i.i = add i32 %319, %287
  %idxprom21.i.i = zext i32 %add.i.i to i64
  %arrayidx22.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom21.i.i
  %320 = load i8, i8* %arrayidx22.i.i, align 1, !tbaa !12
  %idxprom23.i.i = sext i32 %286 to i64
  %arrayidx24.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom23.i.i
  %321 = load i32, i32* %arrayidx24.i.i, align 4, !tbaa !6
  %add25.i.i = add i32 %321, %287
  %idxprom26.i.i = zext i32 %add25.i.i to i64
  %arrayidx27.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom26.i.i
  %322 = load i8, i8* %arrayidx27.i.i, align 1, !tbaa !12
  %add28.i.i = add nsw i32 %286, %285
  %shr.i.i = ashr i32 %add28.i.i, 1
  %idxprom29.i.i = sext i32 %shr.i.i to i64
  %arrayidx30.i.i = getelementptr inbounds i32, i32* %0, i64 %idxprom29.i.i
  %323 = load i32, i32* %arrayidx30.i.i, align 4, !tbaa !6
  %add31.i.i = add i32 %323, %287
  %idxprom32.i.i = zext i32 %add31.i.i to i64
  %arrayidx33.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom32.i.i
  %324 = load i8, i8* %arrayidx33.i.i, align 1, !tbaa !12
  %cmp.i16.i.i = icmp ugt i8 %320, %322
  %spec.select.i.i.i = select i1 %cmp.i16.i.i, i8 %320, i8 %322
  %spec.select23.i.i.i = select i1 %cmp.i16.i.i, i8 %322, i8 %320
  %cmp5.i.i.i = icmp ugt i8 %spec.select.i.i.i, %324
  %cmp10.i.i.i = icmp ugt i8 %spec.select23.i.i.i, %324
  %spec.select24.i.i.i = select i1 %cmp10.i.i.i, i8 %spec.select23.i.i.i, i8 %324
  %call17.i.i = select i1 %cmp5.i.i.i, i8 %spec.select24.i.i.i, i8 %spec.select.i.i.i
  %conv.i.i = zext i8 %call17.i.i to i32
  br label %while.cond34.i.i

while.cond34.i.i:                                 ; preds = %if.end105.i.i, %if.end18.i.i
  %gtHi.0.i.i = phi i32 [ %286, %if.end18.i.i ], [ %343, %if.end105.i.i ]
  %ltLo.0.i.i = phi i32 [ %285, %if.end18.i.i ], [ %ltLo.1.ph.lcssa.i.i, %if.end105.i.i ]
  %unHi.0.i.i = phi i32 [ %286, %if.end18.i.i ], [ %dec116.i.i, %if.end105.i.i ]
  %unLo.0.i.i = phi i32 [ %285, %if.end18.i.i ], [ %inc115.i.i, %if.end105.i.i ]
  %cmp383946.i.i = icmp sgt i32 %unLo.0.i.i, %unHi.0.i.i
  br i1 %cmp383946.i.i, label %while.end.i.i, label %if.end41.lr.ph.lr.ph.i.i

if.end41.lr.ph.lr.ph.i.i:                         ; preds = %while.cond34.i.i
  %325 = sext i32 %unHi.0.i.i to i64
  %326 = sext i32 %ltLo.0.i.i to i64
  br label %if.end41.lr.ph.i.i

if.end41.lr.ph.i.i:                               ; preds = %if.then51.i.i, %if.end41.lr.ph.lr.ph.i.i
  %indvars.iv129.i.i = phi i64 [ %indvars.iv.next130.i.i, %if.then51.i.i ], [ %326, %if.end41.lr.ph.lr.ph.i.i ]
  %unLo.1.ph48.i.i = phi i32 [ %inc61.i.i, %if.then51.i.i ], [ %unLo.0.i.i, %if.end41.lr.ph.lr.ph.i.i ]
  %327 = sext i32 %unLo.1.ph48.i.i to i64
  br label %if.end41.i.i

if.end41.i.i:                                     ; preds = %if.end66.i.i, %if.end41.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %if.end66.i.i ], [ %327, %if.end41.lr.ph.i.i ]
  %unLo.140.i.i = phi i32 [ %inc67.i.i, %if.end66.i.i ], [ %unLo.1.ph48.i.i, %if.end41.lr.ph.i.i ]
  %arrayidx43.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv.i.i
  %328 = load i32, i32* %arrayidx43.i.i, align 4, !tbaa !6
  %add44.i.i = add i32 %328, %287
  %idxprom45.i.i = zext i32 %add44.i.i to i64
  %arrayidx46.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom45.i.i
  %329 = load i8, i8* %arrayidx46.i.i, align 1, !tbaa !12
  %conv47.i.i = zext i8 %329 to i32
  %sub48.i.i = sub nsw i32 %conv47.i.i, %conv.i.i
  %cmp49.i.i = icmp eq i32 %sub48.i.i, 0
  br i1 %cmp49.i.i, label %if.then51.i.i, label %if.end62.i.i

if.then51.i.i:                                    ; preds = %if.end41.i.i
  %arrayidx43.i.i.le = getelementptr inbounds i32, i32* %0, i64 %indvars.iv.i.i
  %330 = trunc i64 %indvars.iv.i.i to i32
  %arrayidx55.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv129.i.i
  %331 = load i32, i32* %arrayidx55.i.i, align 4, !tbaa !6
  store i32 %331, i32* %arrayidx43.i.i.le, align 4, !tbaa !6
  store i32 %328, i32* %arrayidx55.i.i, align 4, !tbaa !6
  %indvars.iv.next130.i.i = add i64 %indvars.iv129.i.i, 1
  %inc61.i.i = add nsw i32 %330, 1
  %cmp3839.i.i = icmp sgt i32 %unHi.0.i.i, %330
  br i1 %cmp3839.i.i, label %if.end41.lr.ph.i.i, label %while.end.loopexit87.i.i

if.end62.i.i:                                     ; preds = %if.end41.i.i
  %cmp63.i.i = icmp sgt i32 %sub48.i.i, 0
  br i1 %cmp63.i.i, label %while.end.loopexit.split.loop.exit.i.i, label %if.end66.i.i

if.end66.i.i:                                     ; preds = %if.end62.i.i
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, 1
  %inc67.i.i = add nsw i32 %unLo.140.i.i, 1
  %cmp38.i.i = icmp slt i64 %indvars.iv.i.i, %325
  br i1 %cmp38.i.i, label %if.end41.i.i, label %while.end.loopexit.split.loop.exit181.i.i

while.end.loopexit87.i.i:                         ; preds = %if.then51.i.i
  %332 = trunc i64 %indvars.iv.next130.i.i to i32
  br label %while.end.i.i

while.end.loopexit.split.loop.exit.i.i:           ; preds = %if.end62.i.i
  %333 = trunc i64 %indvars.iv129.i.i to i32
  %334 = trunc i64 %indvars.iv.i.i to i32
  br label %while.end.i.i

while.end.loopexit.split.loop.exit181.i.i:        ; preds = %if.end66.i.i
  %335 = trunc i64 %indvars.iv129.i.i to i32
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %while.end.loopexit.split.loop.exit181.i.i, %while.end.loopexit.split.loop.exit.i.i, %while.end.loopexit87.i.i, %while.cond34.i.i
  %ltLo.1.ph.lcssa.i.i = phi i32 [ %ltLo.0.i.i, %while.cond34.i.i ], [ %332, %while.end.loopexit87.i.i ], [ %333, %while.end.loopexit.split.loop.exit.i.i ], [ %335, %while.end.loopexit.split.loop.exit181.i.i ]
  %unLo.1.lcssa.i.i = phi i32 [ %unLo.0.i.i, %while.cond34.i.i ], [ %inc61.i.i, %while.end.loopexit87.i.i ], [ %334, %while.end.loopexit.split.loop.exit.i.i ], [ %inc67.i.i, %while.end.loopexit.split.loop.exit181.i.i ]
  %cmp705163.i.i = icmp sgt i32 %unLo.1.lcssa.i.i, %unHi.0.i.i
  br i1 %cmp705163.i.i, label %while.end117.i.i, label %if.end73.lr.ph.lr.ph.i.i

if.end73.lr.ph.lr.ph.i.i:                         ; preds = %while.end.i.i
  %336 = sext i32 %unLo.1.lcssa.i.i to i64
  %337 = sext i32 %gtHi.0.i.i to i64
  br label %if.end73.lr.ph.i.i

if.end73.lr.ph.i.i:                               ; preds = %if.then83.i.i, %if.end73.lr.ph.lr.ph.i.i
  %indvars.iv133.i.i = phi i64 [ %indvars.iv.next134.i.i, %if.then83.i.i ], [ %337, %if.end73.lr.ph.lr.ph.i.i ]
  %unHi.1.ph65.i.i = phi i32 [ %dec94.i.i, %if.then83.i.i ], [ %unHi.0.i.i, %if.end73.lr.ph.lr.ph.i.i ]
  %338 = sext i32 %unHi.1.ph65.i.i to i64
  br label %if.end73.i.i

if.end73.i.i:                                     ; preds = %if.end99.i.i, %if.end73.lr.ph.i.i
  %indvars.iv131.i.i = phi i64 [ %indvars.iv.next132.i.i, %if.end99.i.i ], [ %338, %if.end73.lr.ph.i.i ]
  %arrayidx75.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv131.i.i
  %339 = load i32, i32* %arrayidx75.i.i, align 4, !tbaa !6
  %add76.i.i = add i32 %339, %287
  %idxprom77.i.i = zext i32 %add76.i.i to i64
  %arrayidx78.i.i = getelementptr inbounds i8, i8* %1, i64 %idxprom77.i.i
  %340 = load i8, i8* %arrayidx78.i.i, align 1, !tbaa !12
  %conv79.i.i = zext i8 %340 to i32
  %sub80.i.i = sub nsw i32 %conv79.i.i, %conv.i.i
  %cmp81.i.i = icmp eq i32 %sub80.i.i, 0
  br i1 %cmp81.i.i, label %if.then83.i.i, label %if.end95.i.i

if.then83.i.i:                                    ; preds = %if.end73.i.i
  %arrayidx75.i.i.le243 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv131.i.i
  %341 = trunc i64 %indvars.iv131.i.i to i32
  %arrayidx88.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv133.i.i
  %342 = load i32, i32* %arrayidx88.i.i, align 4, !tbaa !6
  store i32 %342, i32* %arrayidx75.i.i.le243, align 4, !tbaa !6
  store i32 %339, i32* %arrayidx88.i.i, align 4, !tbaa !6
  %indvars.iv.next134.i.i = add i64 %indvars.iv133.i.i, -1
  %dec94.i.i = add nsw i32 %341, -1
  %cmp7051.i.i = icmp slt i32 %unLo.1.lcssa.i.i, %341
  br i1 %cmp7051.i.i, label %if.end73.lr.ph.i.i, label %while.end117.loopexit86.i.i

if.end95.i.i:                                     ; preds = %if.end73.i.i
  %cmp96.i.i = icmp slt i32 %sub80.i.i, 0
  br i1 %cmp96.i.i, label %if.end105.i.i, label %if.end99.i.i

if.end99.i.i:                                     ; preds = %if.end95.i.i
  %indvars.iv.next132.i.i = add nsw i64 %indvars.iv131.i.i, -1
  %cmp70.i.i = icmp sgt i64 %indvars.iv131.i.i, %336
  br i1 %cmp70.i.i, label %if.end73.i.i, label %while.end117.loopexit.i.i

if.end105.i.i:                                    ; preds = %if.end95.i.i
  %arrayidx75.i.i.le = getelementptr inbounds i32, i32* %0, i64 %indvars.iv131.i.i
  %343 = trunc i64 %indvars.iv133.i.i to i32
  %344 = trunc i64 %indvars.iv131.i.i to i32
  %arrayidx108.i.i = getelementptr inbounds i32, i32* %0, i64 %336
  %345 = load i32, i32* %arrayidx108.i.i, align 4, !tbaa !6
  store i32 %339, i32* %arrayidx108.i.i, align 4, !tbaa !6
  store i32 %345, i32* %arrayidx75.i.i.le, align 4, !tbaa !6
  %inc115.i.i = add nsw i32 %unLo.1.lcssa.i.i, 1
  %dec116.i.i = add nsw i32 %344, -1
  br label %while.cond34.i.i

while.end117.loopexit.i.i:                        ; preds = %if.end99.i.i
  %346 = trunc i64 %indvars.iv133.i.i to i32
  %347 = trunc i64 %indvars.iv.next132.i.i to i32
  br label %while.end117.i.i

while.end117.loopexit86.i.i:                      ; preds = %if.then83.i.i
  %348 = trunc i64 %indvars.iv.next134.i.i to i32
  br label %while.end117.i.i

while.end117.i.i:                                 ; preds = %while.end117.loopexit86.i.i, %while.end117.loopexit.i.i, %while.end.i.i
  %gtHi.1.ph.lcssa27.i.i = phi i32 [ %346, %while.end117.loopexit.i.i ], [ %348, %while.end117.loopexit86.i.i ], [ %gtHi.0.i.i, %while.end.i.i ]
  %unHi.1.lcssa.i.i = phi i32 [ %347, %while.end117.loopexit.i.i ], [ %dec94.i.i, %while.end117.loopexit86.i.i ], [ %unHi.0.i.i, %while.end.i.i ]
  %cmp118.i.i = icmp slt i32 %gtHi.1.ph.lcssa27.i.i, %ltLo.1.ph.lcssa.i.i
  br i1 %cmp118.i.i, label %if.then120.i.i, label %if.end129.i.i

if.then120.i.i:                                   ; preds = %while.end117.i.i
  %add125.i.i = add nsw i32 %287, 1
  store i32 %add125.i.i, i32* %arrayidx11.i.i, align 4, !tbaa !6
  br label %while.body.i.i

if.end129.i.i:                                    ; preds = %while.end117.i.i
  %sub130.i.i = sub nsw i32 %ltLo.1.ph.lcssa.i.i, %285
  %sub131.i.i = sub nsw i32 %unLo.1.lcssa.i.i, %ltLo.1.ph.lcssa.i.i
  %cmp132.i.i = icmp slt i32 %sub130.i.i, %sub131.i.i
  %sub130.sub131.i.i = select i1 %cmp132.i.i, i32 %sub130.i.i, i32 %sub131.i.i
  %cmp13875.i.i = icmp sgt i32 %sub130.sub131.i.i, 0
  br i1 %cmp13875.i.i, label %while.body140.lr.ph.i.i, label %while.end153.i.i

while.body140.lr.ph.i.i:                          ; preds = %if.end129.i.i
  %idxprom19.i.i.le = sext i32 %285 to i64
  %sub136.i.i = sub nsw i32 %unLo.1.lcssa.i.i, %sub130.sub131.i.i
  %349 = sext i32 %sub136.i.i to i64
  %350 = add i32 %285, -1
  %351 = sub i32 %350, %ltLo.1.ph.lcssa.i.i
  %352 = add i32 %ltLo.1.ph.lcssa.i.i, -1
  %353 = sub i32 %352, %unLo.1.lcssa.i.i
  %354 = icmp sgt i32 %351, %353
  %smax341 = select i1 %354, i32 %351, i32 %353
  %355 = icmp sgt i32 %smax341, -2
  %smax342 = select i1 %355, i32 %smax341, i32 -2
  %356 = icmp sgt i32 %351, %353
  %smax343 = select i1 %356, i32 %351, i32 %353
  %357 = sub i32 %smax342, %smax343
  %358 = zext i32 %357 to i64
  %359 = add nuw nsw i64 %358, 1
  %min.iters.check344 = icmp ult i64 %359, 8
  br i1 %min.iters.check344, label %while.body140.i.i.preheader, label %vector.memcheck363

vector.memcheck363:                               ; preds = %while.body140.lr.ph.i.i
  %scevgep346 = getelementptr i32, i32* %0, i64 %idxprom19.i.i.le
  %360 = add i32 %285, -1
  %361 = sub i32 %360, %ltLo.1.ph.lcssa.i.i
  %362 = add i32 %ltLo.1.ph.lcssa.i.i, -1
  %363 = sub i32 %362, %unLo.1.lcssa.i.i
  %364 = icmp sgt i32 %361, %363
  %smax349 = select i1 %364, i32 %361, i32 %363
  %365 = icmp sgt i32 %smax349, -2
  %smax350 = select i1 %365, i32 %smax349, i32 -2
  %366 = icmp sgt i32 %361, %363
  %smax351 = select i1 %366, i32 %361, i32 %363
  %367 = sub i32 %smax350, %smax351
  %368 = zext i32 %367 to i64
  %369 = add nsw i64 %idxprom19.i.i.le, %368
  %scevgep352 = getelementptr i32, i32* %scevgep348, i64 %369
  %scevgep354 = getelementptr i32, i32* %0, i64 %349
  %370 = sext i32 %unLo.1.lcssa.i.i to i64
  %371 = add nsw i64 %370, %368
  %372 = sext i32 %sub130.sub131.i.i to i64
  %373 = sub nsw i64 %371, %372
  %scevgep357 = getelementptr i32, i32* %scevgep356, i64 %373
  %bound0359 = icmp ult i32* %scevgep346, %scevgep357
  %bound1360 = icmp ult i32* %scevgep354, %scevgep352
  %memcheck.conflict362 = and i1 %bound0359, %bound1360
  br i1 %memcheck.conflict362, label %while.body140.i.i.preheader, label %vector.ph364

vector.ph364:                                     ; preds = %vector.memcheck363
  %374 = add i32 %357, 1
  %375 = and i32 %374, 7
  %n.mod.vf365 = zext i32 %375 to i64
  %n.vec366 = sub nsw i64 %359, %n.mod.vf365
  %ind.end370 = add nsw i64 %n.vec366, %idxprom19.i.i.le
  %ind.end372 = add nsw i64 %n.vec366, %349
  %cast.crd374 = trunc i64 %n.vec366 to i32
  %ind.end375 = sub i32 %sub130.sub131.i.i, %cast.crd374
  br label %vector.body338

vector.body338:                                   ; preds = %vector.body338, %vector.ph364
  %index367 = phi i64 [ 0, %vector.ph364 ], [ %index.next368, %vector.body338 ]
  %376 = add i64 %index367, %idxprom19.i.i.le
  %377 = add i64 %index367, %349
  %378 = getelementptr inbounds i32, i32* %0, i64 %376
  %379 = bitcast i32* %378 to <4 x i32>*
  %wide.load392 = load <4 x i32>, <4 x i32>* %379, align 4, !tbaa !6, !alias.scope !35, !noalias !38
  %380 = getelementptr i32, i32* %378, i64 4
  %381 = bitcast i32* %380 to <4 x i32>*
  %wide.load393 = load <4 x i32>, <4 x i32>* %381, align 4, !tbaa !6, !alias.scope !35, !noalias !38
  %382 = getelementptr inbounds i32, i32* %0, i64 %377
  %383 = bitcast i32* %382 to <4 x i32>*
  %wide.load394 = load <4 x i32>, <4 x i32>* %383, align 4, !tbaa !6, !alias.scope !38
  %384 = getelementptr i32, i32* %382, i64 4
  %385 = bitcast i32* %384 to <4 x i32>*
  %wide.load395 = load <4 x i32>, <4 x i32>* %385, align 4, !tbaa !6, !alias.scope !38
  %386 = bitcast i32* %378 to <4 x i32>*
  store <4 x i32> %wide.load394, <4 x i32>* %386, align 4, !tbaa !6, !alias.scope !35, !noalias !38
  %387 = bitcast i32* %380 to <4 x i32>*
  store <4 x i32> %wide.load395, <4 x i32>* %387, align 4, !tbaa !6, !alias.scope !35, !noalias !38
  %388 = bitcast i32* %382 to <4 x i32>*
  store <4 x i32> %wide.load392, <4 x i32>* %388, align 4, !tbaa !6, !alias.scope !38
  %389 = bitcast i32* %384 to <4 x i32>*
  store <4 x i32> %wide.load393, <4 x i32>* %389, align 4, !tbaa !6, !alias.scope !38
  %index.next368 = add i64 %index367, 8
  %390 = icmp eq i64 %index.next368, %n.vec366
  br i1 %390, label %middle.block339, label %vector.body338, !llvm.loop !40

middle.block339:                                  ; preds = %vector.body338
  %cmp.n376 = icmp eq i32 %375, 0
  br i1 %cmp.n376, label %while.end153.i.i, label %while.body140.i.i.preheader

while.body140.i.i.preheader:                      ; preds = %middle.block339, %vector.memcheck363, %while.body140.lr.ph.i.i
  %indvars.iv137.i.i.ph = phi i64 [ %idxprom19.i.i.le, %vector.memcheck363 ], [ %idxprom19.i.i.le, %while.body140.lr.ph.i.i ], [ %ind.end370, %middle.block339 ]
  %indvars.iv135.i.i.ph = phi i64 [ %349, %vector.memcheck363 ], [ %349, %while.body140.lr.ph.i.i ], [ %ind.end372, %middle.block339 ]
  %yyn.078.i.i.ph = phi i32 [ %sub130.sub131.i.i, %vector.memcheck363 ], [ %sub130.sub131.i.i, %while.body140.lr.ph.i.i ], [ %ind.end375, %middle.block339 ]
  br label %while.body140.i.i

while.body140.i.i:                                ; preds = %while.body140.i.i, %while.body140.i.i.preheader
  %indvars.iv137.i.i = phi i64 [ %indvars.iv.next138.i.i, %while.body140.i.i ], [ %indvars.iv137.i.i.ph, %while.body140.i.i.preheader ]
  %indvars.iv135.i.i = phi i64 [ %indvars.iv.next136.i.i, %while.body140.i.i ], [ %indvars.iv135.i.i.ph, %while.body140.i.i.preheader ]
  %yyn.078.i.i = phi i32 [ %dec152.i.i, %while.body140.i.i ], [ %yyn.078.i.i.ph, %while.body140.i.i.preheader ]
  %arrayidx143.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv137.i.i
  %391 = load i32, i32* %arrayidx143.i.i, align 4, !tbaa !6
  %arrayidx145.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv135.i.i
  %392 = load i32, i32* %arrayidx145.i.i, align 4, !tbaa !6
  store i32 %392, i32* %arrayidx143.i.i, align 4, !tbaa !6
  store i32 %391, i32* %arrayidx145.i.i, align 4, !tbaa !6
  %indvars.iv.next138.i.i = add nsw i64 %indvars.iv137.i.i, 1
  %indvars.iv.next136.i.i = add nsw i64 %indvars.iv135.i.i, 1
  %dec152.i.i = add nsw i32 %yyn.078.i.i, -1
  %cmp138.i.i = icmp sgt i32 %yyn.078.i.i, 1
  br i1 %cmp138.i.i, label %while.body140.i.i, label %while.end153.i.i, !llvm.loop !41

while.end153.i.i:                                 ; preds = %while.body140.i.i, %middle.block339, %if.end129.i.i
  %sub154.i.i = sub nsw i32 %286, %gtHi.1.ph.lcssa27.i.i
  %sub155.i.i = sub nsw i32 %gtHi.1.ph.lcssa27.i.i, %unHi.1.lcssa.i.i
  %cmp156.i.i = icmp slt i32 %sub154.i.i, %sub155.i.i
  %sub154.sub155.i.i = select i1 %cmp156.i.i, i32 %sub154.i.i, i32 %sub155.i.i
  %cmp17080.i.i = icmp sgt i32 %sub154.sub155.i.i, 0
  br i1 %cmp17080.i.i, label %while.body172.lr.ph.i.i, label %while.end185.i.i

while.body172.lr.ph.i.i:                          ; preds = %while.end153.i.i
  %sub166.i.i = sub nsw i32 %286, %sub154.sub155.i.i
  %393 = sext i32 %sub166.i.i to i64
  %394 = sext i32 %unLo.1.lcssa.i.i to i64
  %395 = add i32 %gtHi.1.ph.lcssa27.i.i, -1
  %396 = sub i32 %395, %286
  %397 = add i32 %unHi.1.lcssa.i.i, -1
  %398 = sub i32 %397, %gtHi.1.ph.lcssa27.i.i
  %399 = icmp sgt i32 %396, %398
  %smax = select i1 %399, i32 %396, i32 %398
  %400 = icmp sgt i32 %smax, -2
  %smax299 = select i1 %400, i32 %smax, i32 -2
  %401 = icmp sgt i32 %396, %398
  %smax300 = select i1 %401, i32 %396, i32 %398
  %402 = sub i32 %smax299, %smax300
  %403 = zext i32 %402 to i64
  %404 = add nuw nsw i64 %403, 1
  %min.iters.check = icmp ult i64 %404, 8
  br i1 %min.iters.check, label %while.body172.i.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %while.body172.lr.ph.i.i
  %scevgep = getelementptr i32, i32* %0, i64 %394
  %405 = add i32 %gtHi.1.ph.lcssa27.i.i, -1
  %406 = sub i32 %405, %286
  %407 = add i32 %unHi.1.lcssa.i.i, -1
  %408 = sub i32 %407, %gtHi.1.ph.lcssa27.i.i
  %409 = icmp sgt i32 %406, %408
  %smax304 = select i1 %409, i32 %406, i32 %408
  %410 = icmp sgt i32 %smax304, -2
  %smax305 = select i1 %410, i32 %smax304, i32 -2
  %411 = icmp sgt i32 %406, %408
  %smax306 = select i1 %411, i32 %406, i32 %408
  %412 = sub i32 %smax305, %smax306
  %413 = zext i32 %412 to i64
  %414 = add nsw i64 %394, %413
  %scevgep307 = getelementptr i32, i32* %scevgep303, i64 %414
  %scevgep310 = getelementptr i32, i32* %scevgep309, i64 %393
  %415 = sext i32 %286 to i64
  %416 = add nsw i64 %415, %413
  %417 = sext i32 %sub154.sub155.i.i to i64
  %418 = sub nsw i64 %416, %417
  %scevgep313 = getelementptr i32, i32* %scevgep312, i64 %418
  %bound0 = icmp ult i32* %scevgep, %scevgep313
  %bound1 = icmp ult i32* %scevgep310, %scevgep307
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %while.body172.i.i.preheader, label %vector.ph315

vector.ph315:                                     ; preds = %vector.memcheck
  %419 = add i32 %402, 1
  %420 = and i32 %419, 7
  %n.mod.vf = zext i32 %420 to i64
  %n.vec = sub nsw i64 %404, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %394
  %ind.end320 = add nsw i64 %n.vec, %393
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end322 = sub i32 %sub154.sub155.i.i, %cast.crd
  br label %vector.body296

vector.body296:                                   ; preds = %vector.body296, %vector.ph315
  %index316 = phi i64 [ 0, %vector.ph315 ], [ %index.next317, %vector.body296 ]
  %421 = add i64 %index316, %394
  %422 = add i64 %index316, %393
  %423 = add nsw i64 %422, 1
  %424 = getelementptr inbounds i32, i32* %0, i64 %421
  %425 = bitcast i32* %424 to <4 x i32>*
  %wide.load = load <4 x i32>, <4 x i32>* %425, align 4, !tbaa !6, !alias.scope !42, !noalias !45
  %426 = getelementptr i32, i32* %424, i64 4
  %427 = bitcast i32* %426 to <4 x i32>*
  %wide.load335 = load <4 x i32>, <4 x i32>* %427, align 4, !tbaa !6, !alias.scope !42, !noalias !45
  %428 = getelementptr inbounds i32, i32* %0, i64 %423
  %429 = bitcast i32* %428 to <4 x i32>*
  %wide.load336 = load <4 x i32>, <4 x i32>* %429, align 4, !tbaa !6, !alias.scope !45
  %430 = getelementptr i32, i32* %428, i64 4
  %431 = bitcast i32* %430 to <4 x i32>*
  %wide.load337 = load <4 x i32>, <4 x i32>* %431, align 4, !tbaa !6, !alias.scope !45
  %432 = bitcast i32* %424 to <4 x i32>*
  store <4 x i32> %wide.load336, <4 x i32>* %432, align 4, !tbaa !6, !alias.scope !42, !noalias !45
  %433 = bitcast i32* %426 to <4 x i32>*
  store <4 x i32> %wide.load337, <4 x i32>* %433, align 4, !tbaa !6, !alias.scope !42, !noalias !45
  %434 = bitcast i32* %428 to <4 x i32>*
  store <4 x i32> %wide.load, <4 x i32>* %434, align 4, !tbaa !6, !alias.scope !45
  %435 = bitcast i32* %430 to <4 x i32>*
  store <4 x i32> %wide.load335, <4 x i32>* %435, align 4, !tbaa !6, !alias.scope !45
  %index.next317 = add i64 %index316, 8
  %436 = icmp eq i64 %index.next317, %n.vec
  br i1 %436, label %middle.block297, label %vector.body296, !llvm.loop !47

middle.block297:                                  ; preds = %vector.body296
  %cmp.n323 = icmp eq i32 %420, 0
  br i1 %cmp.n323, label %while.end185.i.i, label %while.body172.i.i.preheader

while.body172.i.i.preheader:                      ; preds = %middle.block297, %vector.memcheck, %while.body172.lr.ph.i.i
  %indvars.iv143.i.i.ph = phi i64 [ %394, %vector.memcheck ], [ %394, %while.body172.lr.ph.i.i ], [ %ind.end, %middle.block297 ]
  %indvars.iv141.i.i.ph = phi i64 [ %393, %vector.memcheck ], [ %393, %while.body172.lr.ph.i.i ], [ %ind.end320, %middle.block297 ]
  %yyn168.082.i.i.ph = phi i32 [ %sub154.sub155.i.i, %vector.memcheck ], [ %sub154.sub155.i.i, %while.body172.lr.ph.i.i ], [ %ind.end322, %middle.block297 ]
  br label %while.body172.i.i

while.body172.i.i:                                ; preds = %while.body172.i.i, %while.body172.i.i.preheader
  %indvars.iv143.i.i = phi i64 [ %indvars.iv.next144.i.i, %while.body172.i.i ], [ %indvars.iv143.i.i.ph, %while.body172.i.i.preheader ]
  %indvars.iv141.i.i = phi i64 [ %indvars.iv.next142.i.i, %while.body172.i.i ], [ %indvars.iv141.i.i.ph, %while.body172.i.i.preheader ]
  %yyn168.082.i.i = phi i32 [ %dec184.i.i, %while.body172.i.i ], [ %yyn168.082.i.i.ph, %while.body172.i.i.preheader ]
  %indvars.iv.next142.i.i = add nsw i64 %indvars.iv141.i.i, 1
  %arrayidx175.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv143.i.i
  %437 = load i32, i32* %arrayidx175.i.i, align 4, !tbaa !6
  %arrayidx177.i.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv.next142.i.i
  %438 = load i32, i32* %arrayidx177.i.i, align 4, !tbaa !6
  store i32 %438, i32* %arrayidx175.i.i, align 4, !tbaa !6
  store i32 %437, i32* %arrayidx177.i.i, align 4, !tbaa !6
  %indvars.iv.next144.i.i = add nsw i64 %indvars.iv143.i.i, 1
  %dec184.i.i = add nsw i32 %yyn168.082.i.i, -1
  %cmp170.i.i = icmp sgt i32 %yyn168.082.i.i, 1
  br i1 %cmp170.i.i, label %while.body172.i.i, label %while.end185.i.i, !llvm.loop !48

while.end185.i.i:                                 ; preds = %while.body172.i.i, %middle.block297, %while.end153.i.i
  %add186.i.i = sub i32 %285, %ltLo.1.ph.lcssa.i.i
  %sub187.i.i = add i32 %add186.i.i, %unLo.1.lcssa.i.i
  %sub188.i.i = add nsw i32 %sub187.i.i, -1
  %sub190.i.i = sub nsw i32 %286, %sub155.i.i
  %add191.i.i = add nsw i32 %sub190.i.i, 1
  %add202.i.i = add nsw i32 %287, 1
  %sub206.i.i = sub nsw i32 %sub188.i.i, %285
  %sub209.i.i = sub nsw i32 %286, %add191.i.i
  %cmp210.i.i = icmp slt i32 %sub206.i.i, %sub209.i.i
  %spec.select.i.i = select i1 %cmp210.i.i, i32 %285, i32 %add191.i.i
  %spec.select1.i.i = select i1 %cmp210.i.i, i32 %add191.i.i, i32 %285
  %spec.select2.i.i = select i1 %cmp210.i.i, i32 %sub188.i.i, i32 %286
  %spec.select3.i.i = select i1 %cmp210.i.i, i32 %286, i32 %sub188.i.i
  %sub228.i.i = sub nsw i32 %spec.select2.i.i, %spec.select.i.i
  %sub231.i.i = sub nsw i32 %sub190.i.i, %sub187.i.i
  %cmp232.i.i = icmp slt i32 %sub228.i.i, %sub231.i.i
  %spec.select10.i.i = select i1 %cmp232.i.i, i32 %sub187.i.i, i32 %spec.select.i.i
  %spec.select11.i.i = select i1 %cmp232.i.i, i32 %spec.select2.i.i, i32 %sub190.i.i
  %spec.select12.i.i = select i1 %cmp232.i.i, i32 %sub190.i.i, i32 %spec.select2.i.i
  %spec.select13.i.i = select i1 %cmp232.i.i, i32 %287, i32 %add202.i.i
  %spec.select14.i.i = select i1 %cmp232.i.i, i32 %add202.i.i, i32 %287
  %spec.select15.i.i = select i1 %cmp232.i.i, i32 %spec.select.i.i, i32 %sub187.i.i
  %sub251.i.i = sub nsw i32 %spec.select3.i.i, %spec.select1.i.i
  %sub254.i.i = sub nsw i32 %spec.select12.i.i, %spec.select10.i.i
  %cmp255.i.i = icmp slt i32 %sub251.i.i, %sub254.i.i
  %spec.select4.i.i = select i1 %cmp255.i.i, i32 %spec.select1.i.i, i32 %spec.select10.i.i
  %spec.select5.i.i = select i1 %cmp255.i.i, i32 %spec.select10.i.i, i32 %spec.select1.i.i
  %spec.select6.i.i = select i1 %cmp255.i.i, i32 %spec.select3.i.i, i32 %spec.select12.i.i
  %spec.select7.i.i = select i1 %cmp255.i.i, i32 %spec.select12.i.i, i32 %spec.select3.i.i
  %spec.select8.i.i = select i1 %cmp255.i.i, i32 %287, i32 %spec.select14.i.i
  %spec.select9.i.i = select i1 %cmp255.i.i, i32 %spec.select14.i.i, i32 %287
  store i32 %spec.select5.i.i, i32* %arrayidx7.i.i, align 4, !tbaa !6
  store i32 %spec.select7.i.i, i32* %arrayidx9.i.i, align 4, !tbaa !6
  store i32 %spec.select9.i.i, i32* %arrayidx11.i.i, align 4, !tbaa !6
  %idxprom283.i.i = sext i32 %sp.0.ph84.i.i to i64
  %arrayidx284.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 %idxprom283.i.i
  store i32 %spec.select4.i.i, i32* %arrayidx284.i.i, align 4, !tbaa !6
  %arrayidx287.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 %idxprom283.i.i
  store i32 %spec.select6.i.i, i32* %arrayidx287.i.i, align 4, !tbaa !6
  %arrayidx290.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 %idxprom283.i.i
  store i32 %spec.select8.i.i, i32* %arrayidx290.i.i, align 4, !tbaa !6
  %inc291.i.i = add nsw i32 %sp.0.ph84.i.i, 1
  %idxprom293.i.i = sext i32 %inc291.i.i to i64
  %arrayidx294.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 %idxprom293.i.i
  store i32 %spec.select15.i.i, i32* %arrayidx294.i.i, align 4, !tbaa !6
  %arrayidx297.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 %idxprom293.i.i
  store i32 %spec.select11.i.i, i32* %arrayidx297.i.i, align 4, !tbaa !6
  %arrayidx300.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 %idxprom293.i.i
  store i32 %spec.select13.i.i, i32* %arrayidx300.i.i, align 4, !tbaa !6
  %inc301.i.i = add nsw i32 %sp.0.ph84.i.i, 2
  br label %while.cond.outer.backedge.i.i

mainQSort3.exitthread-pre-split.i:                ; preds = %while.cond.outer.backedge.i.i
  %.pr.i = load i32, i32* %budget, align 4, !tbaa !6
  br label %mainQSort3.exit.i

mainQSort3.exit.i:                                ; preds = %mainQSort3.exitthread-pre-split.i, %mainSimpleSort.exit.i.i, %while.end89.i.i.i
  %439 = phi i32 [ %.pr.i, %mainQSort3.exitthread-pre-split.i ], [ %318, %while.end89.i.i.i ], [ %.pr.i.i, %mainSimpleSort.exit.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %529) #2
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %528) #2
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %527) #2
  %cmp316.i = icmp slt i32 %439, 0
  br i1 %cmp316.i, label %mainSort.exit, label %mainQSort3.exit.if.end322_crit_edge.i

mainQSort3.exit.if.end322_crit_edge.i:            ; preds = %mainQSort3.exit.i
  %sub313.i = add i32 %numQSorted.1847.i, 1
  %add314.i = sub i32 %sub313.i, %and297.i
  %add315.i = add i32 %add314.i, %sub302.i
  %.pre979.i = load i32, i32* %arrayidx293.i, align 4, !tbaa !6
  br label %if.end322.i

if.end322.i:                                      ; preds = %mainQSort3.exit.if.end322_crit_edge.i, %if.then294.i, %if.then289.i
  %440 = phi i32 [ %279, %if.then289.i ], [ %.pre979.i, %mainQSort3.exit.if.end322_crit_edge.i ], [ %279, %if.then294.i ]
  %numQSorted.4.i = phi i32 [ %numQSorted.1847.i, %if.then289.i ], [ %add315.i, %mainQSort3.exit.if.end322_crit_edge.i ], [ %numQSorted.1847.i, %if.then294.i ]
  %or325.i = or i32 %440, 2097152
  store i32 %or325.i, i32* %arrayidx293.i, align 4, !tbaa !6
  br label %for.inc327.i

for.inc327.i:                                     ; preds = %if.end322.i, %for.body286.i
  %numQSorted.5.i = phi i32 [ %numQSorted.4.i, %if.end322.i ], [ %numQSorted.1847.i, %for.body286.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp284.i = icmp ult i64 %indvars.iv.next.i, 256
  br i1 %cmp284.i, label %for.body286.i, label %for.end329.i

for.end329.i:                                     ; preds = %for.inc327.i
  %idxprom330.i = sext i32 %275 to i64
  %arrayidx331.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 %idxprom330.i
  %441 = load i8, i8* %arrayidx331.i, align 1, !tbaa !12
  %tobool332.i = icmp eq i8 %441, 0
  br i1 %tobool332.i, label %for.body338.i.preheader, label %if.then333.i

if.then333.i:                                     ; preds = %for.end329.i
  tail call void @BZ2_bz__AssertH__fail(i32 1006) #2
  br label %for.body338.i.preheader

for.body338.i.preheader:                          ; preds = %if.then333.i, %for.end329.i
  br label %for.body338.i

for.body338.i:                                    ; preds = %for.body338.i, %for.body338.i.preheader
  %indvars.iv925.i = phi i64 [ 0, %for.body338.i.preheader ], [ %indvars.iv.next926.i.1, %for.body338.i ]
  %442 = shl i64 %indvars.iv925.i, 8
  %443 = add nsw i64 %442, %idxprom330.i
  %arrayidx342.i = getelementptr inbounds i32, i32* %2, i64 %443
  %444 = load i32, i32* %arrayidx342.i, align 4, !tbaa !6
  %and343.i = and i32 %444, -2097153
  %arrayidx345.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart.i, i64 0, i64 %indvars.iv925.i
  store i32 %and343.i, i32* %arrayidx345.i, align 8, !tbaa !6
  %445 = add nsw i64 %443, 1
  %arrayidx350.i = getelementptr inbounds i32, i32* %2, i64 %445
  %446 = load i32, i32* %arrayidx350.i, align 4, !tbaa !6
  %and351.i = and i32 %446, -2097153
  %sub352.i = add i32 %and351.i, -1
  %arrayidx354.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd.i, i64 0, i64 %indvars.iv925.i
  store i32 %sub352.i, i32* %arrayidx354.i, align 8, !tbaa !6
  %indvars.iv.next926.i = or i64 %indvars.iv925.i, 1
  %447 = shl i64 %indvars.iv.next926.i, 8
  %448 = add nsw i64 %447, %idxprom330.i
  %arrayidx342.i.1 = getelementptr inbounds i32, i32* %2, i64 %448
  %449 = load i32, i32* %arrayidx342.i.1, align 4, !tbaa !6
  %and343.i.1 = and i32 %449, -2097153
  %arrayidx345.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart.i, i64 0, i64 %indvars.iv.next926.i
  store i32 %and343.i.1, i32* %arrayidx345.i.1, align 4, !tbaa !6
  %450 = add nsw i64 %448, 1
  %arrayidx350.i.1 = getelementptr inbounds i32, i32* %2, i64 %450
  %451 = load i32, i32* %arrayidx350.i.1, align 4, !tbaa !6
  %and351.i.1 = and i32 %451, -2097153
  %sub352.i.1 = add i32 %and351.i.1, -1
  %arrayidx354.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd.i, i64 0, i64 %indvars.iv.next926.i
  store i32 %sub352.i.1, i32* %arrayidx354.i.1, align 4, !tbaa !6
  %indvars.iv.next926.i.1 = add nuw nsw i64 %indvars.iv925.i, 2
  %exitcond.i.1 = icmp eq i64 %indvars.iv.next926.i.1, 256
  br i1 %exitcond.i.1, label %for.end357.i, label %for.body338.i

for.end357.i:                                     ; preds = %for.body338.i
  %arrayidx360.i = getelementptr inbounds i32, i32* %2, i64 %276
  %452 = load i32, i32* %arrayidx360.i, align 4, !tbaa !6
  %and361.i = and i32 %452, -2097153
  %arrayidx364.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart.i, i64 0, i64 %idxprom330.i
  %453 = load i32, i32* %arrayidx364.i, align 4, !tbaa !6
  %cmp365850.i = icmp slt i32 %and361.i, %453
  br i1 %cmp365850.i, label %for.body367.lr.ph.i, label %for.end390.i

for.body367.lr.ph.i:                              ; preds = %for.end357.i
  %454 = sext i32 %and361.i to i64
  br label %for.body367.i

for.body367.i:                                    ; preds = %for.inc388.i, %for.body367.lr.ph.i
  %455 = phi i32 [ %453, %for.body367.lr.ph.i ], [ %460, %for.inc388.i ]
  %indvars.iv930.i = phi i64 [ %454, %for.body367.lr.ph.i ], [ %indvars.iv.next931.i, %for.inc388.i ]
  %arrayidx369.i = getelementptr inbounds i32, i32* %0, i64 %indvars.iv930.i
  %456 = load i32, i32* %arrayidx369.i, align 4, !tbaa !6
  %sub370.i = add i32 %456, -1
  %cmp371.i = icmp slt i32 %sub370.i, 0
  %add374.i = select i1 %cmp371.i, i32 %3, i32 0
  %spec.select.i = add nsw i32 %add374.i, %sub370.i
  %idxprom376.i = sext i32 %spec.select.i to i64
  %arrayidx377.i = getelementptr inbounds i8, i8* %1, i64 %idxprom376.i
  %457 = load i8, i8* %arrayidx377.i, align 1, !tbaa !12
  %idxprom378.i = zext i8 %457 to i64
  %arrayidx379.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 %idxprom378.i
  %458 = load i8, i8* %arrayidx379.i, align 1, !tbaa !12
  %tobool380.i = icmp eq i8 %458, 0
  br i1 %tobool380.i, label %if.then381.i, label %for.inc388.i

if.then381.i:                                     ; preds = %for.body367.i
  %arrayidx383.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyStart.i, i64 0, i64 %idxprom378.i
  %459 = load i32, i32* %arrayidx383.i, align 4, !tbaa !6
  %inc384.i = add nsw i32 %459, 1
  store i32 %inc384.i, i32* %arrayidx383.i, align 4, !tbaa !6
  %idxprom385.i = sext i32 %459 to i64
  %arrayidx386.i = getelementptr inbounds i32, i32* %0, i64 %idxprom385.i
  store i32 %spec.select.i, i32* %arrayidx386.i, align 4, !tbaa !6
  %.pre980.i = load i32, i32* %arrayidx364.i, align 4, !tbaa !6
  br label %for.inc388.i

for.inc388.i:                                     ; preds = %if.then381.i, %for.body367.i
  %460 = phi i32 [ %455, %for.body367.i ], [ %.pre980.i, %if.then381.i ]
  %indvars.iv.next931.i = add nsw i64 %indvars.iv930.i, 1
  %461 = sext i32 %460 to i64
  %cmp365.i = icmp slt i64 %indvars.iv.next931.i, %461
  br i1 %cmp365.i, label %for.body367.i, label %for.end390.i

for.end390.i:                                     ; preds = %for.inc388.i, %for.end357.i
  %.lcssa839.i = phi i32 [ %453, %for.end357.i ], [ %460, %for.inc388.i ]
  %shl392.i = add i32 %shl290.i, 256
  %idxprom393.i = sext i32 %shl392.i to i64
  %arrayidx394.i = getelementptr inbounds i32, i32* %2, i64 %idxprom393.i
  %462 = load i32, i32* %arrayidx394.i, align 4, !tbaa !6
  %and395.i = and i32 %462, -2097153
  %j.7852.i = add i32 %and395.i, -1
  %arrayidx399.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd.i, i64 0, i64 %idxprom330.i
  %463 = load i32, i32* %arrayidx399.i, align 4, !tbaa !6
  %cmp400853.i = icmp sgt i32 %j.7852.i, %463
  br i1 %cmp400853.i, label %for.body402.i.preheader, label %for.end425.i

for.body402.i.preheader:                          ; preds = %for.end390.i
  br label %for.body402.i

for.body402.i:                                    ; preds = %for.inc423.i, %for.body402.i.preheader
  %464 = phi i32 [ %469, %for.inc423.i ], [ %463, %for.body402.i.preheader ]
  %j.7854.i = phi i32 [ %j.7.i, %for.inc423.i ], [ %j.7852.i, %for.body402.i.preheader ]
  %idxprom403.i = sext i32 %j.7854.i to i64
  %arrayidx404.i = getelementptr inbounds i32, i32* %0, i64 %idxprom403.i
  %465 = load i32, i32* %arrayidx404.i, align 4, !tbaa !6
  %sub405.i = add i32 %465, -1
  %cmp406.i = icmp slt i32 %sub405.i, 0
  %add409.i = select i1 %cmp406.i, i32 %3, i32 0
  %spec.select800.i = add nsw i32 %add409.i, %sub405.i
  %idxprom411.i = sext i32 %spec.select800.i to i64
  %arrayidx412.i = getelementptr inbounds i8, i8* %1, i64 %idxprom411.i
  %466 = load i8, i8* %arrayidx412.i, align 1, !tbaa !12
  %idxprom413.i = zext i8 %466 to i64
  %arrayidx414.i = getelementptr inbounds [256 x i8], [256 x i8]* %bigDone.i, i64 0, i64 %idxprom413.i
  %467 = load i8, i8* %arrayidx414.i, align 1, !tbaa !12
  %tobool415.i = icmp eq i8 %467, 0
  br i1 %tobool415.i, label %if.then416.i, label %for.inc423.i

if.then416.i:                                     ; preds = %for.body402.i
  %arrayidx418.i = getelementptr inbounds [256 x i32], [256 x i32]* %copyEnd.i, i64 0, i64 %idxprom413.i
  %468 = load i32, i32* %arrayidx418.i, align 4, !tbaa !6
  %dec419.i = add nsw i32 %468, -1
  store i32 %dec419.i, i32* %arrayidx418.i, align 4, !tbaa !6
  %idxprom420.i = sext i32 %468 to i64
  %arrayidx421.i = getelementptr inbounds i32, i32* %0, i64 %idxprom420.i
  store i32 %spec.select800.i, i32* %arrayidx421.i, align 4, !tbaa !6
  %.pre981.i = load i32, i32* %arrayidx399.i, align 4, !tbaa !6
  br label %for.inc423.i

for.inc423.i:                                     ; preds = %if.then416.i, %for.body402.i
  %469 = phi i32 [ %464, %for.body402.i ], [ %.pre981.i, %if.then416.i ]
  %j.7.i = add i32 %j.7854.i, -1
  %cmp400.i = icmp sgt i32 %j.7.i, %469
  br i1 %cmp400.i, label %for.body402.i, label %for.end425.i

for.end425.i:                                     ; preds = %for.inc423.i, %for.end390.i
  %.lcssa840.i = phi i32 [ %463, %for.end390.i ], [ %469, %for.inc423.i ]
  %sub428.i = add nsw i32 %.lcssa839.i, -1
  %cmp431.i = icmp eq i32 %sub428.i, %.lcssa840.i
  br i1 %cmp431.i, label %for.body447.i.preheader, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.end425.i
  %cmp435.i = icmp eq i32 %.lcssa839.i, 0
  %cmp440.i = icmp eq i32 %.lcssa840.i, %sub.i
  %or.cond.i = and i1 %cmp435.i, %cmp440.i
  br i1 %or.cond.i, label %for.body447.i.preheader, label %if.then442.i

if.then442.i:                                     ; preds = %lor.lhs.false.i
  tail call void @BZ2_bz__AssertH__fail(i32 1007) #2
  br label %for.body447.i.preheader

for.body447.i.preheader:                          ; preds = %if.then442.i, %lor.lhs.false.i, %for.end425.i
  br label %for.body447.i

for.body447.i:                                    ; preds = %for.body447.i, %for.body447.i.preheader
  %indvars.iv932.i = phi i64 [ 0, %for.body447.i.preheader ], [ %indvars.iv.next933.i.1, %for.body447.i ]
  %470 = shl i64 %indvars.iv932.i, 8
  %471 = add nsw i64 %470, %idxprom330.i
  %arrayidx451.i = getelementptr inbounds i32, i32* %2, i64 %471
  %472 = load i32, i32* %arrayidx451.i, align 4, !tbaa !6
  %or452.i = or i32 %472, 2097152
  store i32 %or452.i, i32* %arrayidx451.i, align 4, !tbaa !6
  %indvars.iv.next933.i = shl i64 %indvars.iv932.i, 8
  %473 = or i64 %indvars.iv.next933.i, 256
  %474 = add nsw i64 %473, %idxprom330.i
  %arrayidx451.i.1 = getelementptr inbounds i32, i32* %2, i64 %474
  %475 = load i32, i32* %arrayidx451.i.1, align 4, !tbaa !6
  %or452.i.1 = or i32 %475, 2097152
  store i32 %or452.i.1, i32* %arrayidx451.i.1, align 4, !tbaa !6
  %indvars.iv.next933.i.1 = add nuw nsw i64 %indvars.iv932.i, 2
  %exitcond936.i.1 = icmp eq i64 %indvars.iv.next933.i.1, 256
  br i1 %exitcond936.i.1, label %for.end455.i, label %for.body447.i

for.end455.i:                                     ; preds = %for.body447.i
  store i8 1, i8* %arrayidx331.i, align 1, !tbaa !12
  %cmp458.i = icmp ult i64 %indvars.iv940.i, 255
  br i1 %cmp458.i, label %if.then460.i, label %for.inc507.i

if.then460.i:                                     ; preds = %for.end455.i
  %476 = load i32, i32* %arrayidx360.i, align 4, !tbaa !6
  %and464.i = and i32 %476, -2097153
  %477 = load i32, i32* %arrayidx394.i, align 4, !tbaa !6
  %and469.i = and i32 %477, -2097153
  %sub470.i = sub i32 %and469.i, %and464.i
  br label %while.cond471.i

while.cond471.i:                                  ; preds = %while.cond471.i, %if.then460.i
  %shifts.0.i = phi i32 [ 0, %if.then460.i ], [ %inc476.i, %while.cond471.i ]
  %shr472.i = ashr i32 %sub470.i, %shifts.0.i
  %cmp473.i = icmp sgt i32 %shr472.i, 65534
  %inc476.i = add nuw nsw i32 %shifts.0.i, 1
  br i1 %cmp473.i, label %while.cond471.i, label %while.end477.i

while.end477.i:                                   ; preds = %while.cond471.i
  %sub478.i = add nsw i32 %sub470.i, -1
  %cmp480857.i = icmp sgt i32 %sub470.i, 0
  br i1 %cmp480857.i, label %for.body482.lr.ph.i, label %for.end499.i

for.body482.lr.ph.i:                              ; preds = %while.end477.i
  %478 = sext i32 %sub470.i to i64
  %479 = sext i32 %and464.i to i64
  br label %for.body482.i

for.body482.i:                                    ; preds = %if.end496.i, %for.body482.lr.ph.i
  %indvars.iv937.in.i = phi i64 [ %478, %for.body482.lr.ph.i ], [ %indvars.iv937.i, %if.end496.i ]
  %indvars.iv937.i = add nsw i64 %indvars.iv937.in.i, -1
  %480 = add nsw i64 %indvars.iv937.i, %479
  %arrayidx485.i = getelementptr inbounds i32, i32* %0, i64 %480
  %481 = load i32, i32* %arrayidx485.i, align 4, !tbaa !6
  %482 = trunc i64 %indvars.iv937.i to i32
  %shr486801.i = lshr i32 %482, %shifts.0.i
  %conv487.i = trunc i32 %shr486801.i to i16
  %idxprom488.i = sext i32 %481 to i64
  %arrayidx489.i = getelementptr inbounds i16, i16* %9, i64 %idxprom488.i
  store i16 %conv487.i, i16* %arrayidx489.i, align 2, !tbaa !33
  %cmp490.i = icmp slt i32 %481, 34
  br i1 %cmp490.i, label %if.then492.i, label %if.end496.i

if.then492.i:                                     ; preds = %for.body482.i
  %add493.i = add nsw i32 %481, %3
  %idxprom494.i = sext i32 %add493.i to i64
  %arrayidx495.i = getelementptr inbounds i16, i16* %9, i64 %idxprom494.i
  store i16 %conv487.i, i16* %arrayidx495.i, align 2, !tbaa !33
  br label %if.end496.i

if.end496.i:                                      ; preds = %if.then492.i, %for.body482.i
  %cmp480.i = icmp sgt i64 %indvars.iv937.in.i, 1
  br i1 %cmp480.i, label %for.body482.i, label %for.end499.i

for.end499.i:                                     ; preds = %if.end496.i, %while.end477.i
  %shr501.i = ashr i32 %sub478.i, %shifts.0.i
  %cmp502.i = icmp slt i32 %shr501.i, 65536
  br i1 %cmp502.i, label %for.inc507.i, label %if.then504.i

if.then504.i:                                     ; preds = %for.end499.i
  tail call void @BZ2_bz__AssertH__fail(i32 1002) #2
  br label %for.inc507.i

for.inc507.i:                                     ; preds = %if.then504.i, %for.end499.i, %for.end455.i
  %indvars.iv.next941.i = add nuw nsw i64 %indvars.iv940.i, 1
  %cmp278.i = icmp ult i64 %indvars.iv.next941.i, 256
  br i1 %cmp278.i, label %for.body280.i, label %for.end509.i

for.end509.i:                                     ; preds = %for.inc507.i
  br i1 %cmp.i, label %if.then512.i, label %mainSort.exit

if.then512.i:                                     ; preds = %for.end509.i
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %sub513.i = sub nsw i32 %3, %numQSorted.5.i
  %484 = getelementptr [44 x i8], [44 x i8]* @.str.8.3, i64 0, i64 0
  %call514.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %483, i8* %484, i32 %3, i32 %numQSorted.5.i, i32 %sub513.i) #16
  br label %mainSort.exit

mainSort.exit:                                    ; preds = %if.then512.i, %for.end509.i, %mainQSort3.exit.i
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %14) #2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %13) #2
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %bigDone947.i) #2
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %12) #2
  %cmp12 = icmp sgt i32 %4, 2
  br i1 %cmp12, label %if.then13, label %mainSort.exit.if.end21_crit_edge

mainSort.exit.if.end21_crit_edge:                 ; preds = %mainSort.exit
  %.pre = load i32, i32* %budget, align 4, !tbaa !6
  br label %if.end21

if.then13:                                        ; preds = %mainSort.exit
  %485 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %486 = load i32, i32* %budget, align 4, !tbaa !6
  %sub14 = sub nsw i32 %mul, %486
  %conv = sitofp i32 %sub14 to float
  %cmp16 = icmp eq i32 %3, 0
  %487 = sitofp i32 %3 to float
  %conv18 = select i1 %cmp16, float 1.000000e+00, float %487
  %div19 = fdiv float %conv, %conv18
  %conv20 = fpext float %div19 to double
  %488 = getelementptr [38 x i8], [38 x i8]* @.str, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %485, i8* %488, i32 %sub14, i32 %3, double %conv20) #15
  br label %if.end21

if.end21:                                         ; preds = %if.then13, %mainSort.exit.if.end21_crit_edge
  %489 = phi i32 [ %.pre, %mainSort.exit.if.end21_crit_edge ], [ %486, %if.then13 ]
  %cmp22 = icmp slt i32 %489, 0
  br i1 %cmp22, label %if.then24, label %if.end33

if.then24:                                        ; preds = %if.end21
  %cmp25 = icmp sgt i32 %4, 1
  br i1 %cmp25, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.then24
  %490 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %491 = getelementptr [54 x i8], [54 x i8]* @.str.1, i64 0, i64 0
  %492 = tail call i64 @fwrite(i8* %491, i64 53, i64 1, %struct._IO_FILE* %490) #15
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.then24
  %arr130 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 4
  %493 = load i32*, i32** %arr130, align 8, !tbaa !31
  %arr231 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 5
  %494 = load i32*, i32** %arr231, align 8, !tbaa !32
  tail call fastcc void @fallbackSort(i32* %493, i32* %494, i32* %2, i32 %3, i32 %4)
  br label %if.end33

if.end33:                                         ; preds = %if.end29, %if.end21, %if.then
  %origPtr = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 7
  store i32 -1, i32* %origPtr, align 8, !tbaa !49
  %495 = load i32, i32* %nblock4, align 4, !tbaa !28
  %cmp35140 = icmp sgt i32 %495, 0
  br i1 %cmp35140, label %for.body.lr.ph, label %if.then48

for.body.lr.ph:                                   ; preds = %if.end33
  %496 = sext i32 %495 to i64
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %arrayidx38 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %497 = load i32, i32* %arrayidx38, align 4, !tbaa !6
  %cmp39 = icmp eq i32 %497, 0
  br i1 %cmp39, label %for.end.thread, label %for.inc

for.end.thread:                                   ; preds = %for.body
  %498 = trunc i64 %indvars.iv to i32
  store i32 %498, i32* %origPtr, align 8, !tbaa !49
  br label %if.end49

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp35 = icmp slt i64 %indvars.iv.next, %496
  br i1 %cmp35, label %for.body, label %if.then48

if.then48:                                        ; preds = %for.inc, %if.end33
  tail call void @BZ2_bz__AssertH__fail(i32 1003) #2
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %for.end.thread
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #2
  ret void

for.body230.i.1:                                  ; preds = %zero.i.1, %for.body230.i.1.preheader
  %indvars.iv942.i.1 = phi i64 [ %indvars.iv.next943.i.1, %zero.i.1 ], [ 40, %for.body230.i.1.preheader ]
  %arrayidx232.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv942.i.1
  %499 = load i32, i32* %arrayidx232.i.1, align 4, !tbaa !6
  %add247.i.1 = shl i32 %499, 8
  %shl248.i.1 = add i32 %add247.i.1, 256
  %idxprom249.i.1 = sext i32 %shl248.i.1 to i64
  %arrayidx250.i.1 = getelementptr inbounds i32, i32* %2, i64 %idxprom249.i.1
  %500 = load i32, i32* %arrayidx250.i.1, align 4, !tbaa !6
  %idxprom252.i.1 = sext i32 %add247.i.1 to i64
  %arrayidx253.i.1 = getelementptr inbounds i32, i32* %2, i64 %idxprom252.i.1
  %501 = load i32, i32* %arrayidx253.i.1, align 4, !tbaa !6
  %sub254.i.1 = sub i32 %500, %501
  %502 = trunc i64 %indvars.iv942.i.1 to i32
  br label %while.cond.i.1

while.cond.i.1:                                   ; preds = %while.body.i.1, %for.body230.i.1
  %j.2.i.1 = phi i32 [ %502, %for.body230.i.1 ], [ %sub233.i.1, %while.body.i.1 ]
  %sub233.i.1 = add nsw i32 %j.2.i.1, -40
  %idxprom234.i.1 = sext i32 %sub233.i.1 to i64
  %arrayidx235.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom234.i.1
  %503 = load i32, i32* %arrayidx235.i.1, align 4, !tbaa !6
  %add236.i.1 = shl i32 %503, 8
  %shl237.i.1 = add i32 %add236.i.1, 256
  %idxprom238.i.1 = sext i32 %shl237.i.1 to i64
  %arrayidx239.i.1 = getelementptr inbounds i32, i32* %2, i64 %idxprom238.i.1
  %504 = load i32, i32* %arrayidx239.i.1, align 4, !tbaa !6
  %idxprom244.i.1 = sext i32 %add236.i.1 to i64
  %arrayidx245.i.1 = getelementptr inbounds i32, i32* %2, i64 %idxprom244.i.1
  %505 = load i32, i32* %arrayidx245.i.1, align 4, !tbaa !6
  %sub246.i.1 = sub i32 %504, %505
  %cmp255.i.1 = icmp ugt i32 %sub246.i.1, %sub254.i.1
  %idxprom260.i.1 = sext i32 %j.2.i.1 to i64
  br i1 %cmp255.i.1, label %while.body.i.1, label %zero.i.1

while.body.i.1:                                   ; preds = %while.cond.i.1
  %arrayidx261.i.1 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.1
  store i32 %503, i32* %arrayidx261.i.1, align 4, !tbaa !6
  %cmp264.i.1 = icmp slt i32 %j.2.i.1, 80
  br i1 %cmp264.i.1, label %zero.i.1, label %while.cond.i.1

zero.i.1:                                         ; preds = %while.body.i.1, %while.cond.i.1
  %idxprom260.i.1.pn = phi i64 [ %idxprom260.i.1, %while.cond.i.1 ], [ %idxprom234.i.1, %while.body.i.1 ]
  %arrayidx269.pre-phi.i.1.pre-phi = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.1.pn
  store i32 %499, i32* %arrayidx269.pre-phi.i.1.pre-phi, align 4, !tbaa !6
  %indvars.iv.next943.i.1 = add nuw nsw i64 %indvars.iv942.i.1, 1
  %cmp228.i.1 = icmp ult i64 %indvars.iv942.i.1, 255
  br i1 %cmp228.i.1, label %for.body230.i.1, label %for.body230.i.2.preheader

for.body230.i.2.preheader:                        ; preds = %zero.i.1
  br label %for.body230.i.2

for.body230.i.2:                                  ; preds = %zero.i.2, %for.body230.i.2.preheader
  %indvars.iv942.i.2 = phi i64 [ %indvars.iv.next943.i.2, %zero.i.2 ], [ 13, %for.body230.i.2.preheader ]
  %arrayidx232.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv942.i.2
  %506 = load i32, i32* %arrayidx232.i.2, align 4, !tbaa !6
  %add247.i.2 = shl i32 %506, 8
  %shl248.i.2 = add i32 %add247.i.2, 256
  %idxprom249.i.2 = sext i32 %shl248.i.2 to i64
  %arrayidx250.i.2 = getelementptr inbounds i32, i32* %2, i64 %idxprom249.i.2
  %507 = load i32, i32* %arrayidx250.i.2, align 4, !tbaa !6
  %idxprom252.i.2 = sext i32 %add247.i.2 to i64
  %arrayidx253.i.2 = getelementptr inbounds i32, i32* %2, i64 %idxprom252.i.2
  %508 = load i32, i32* %arrayidx253.i.2, align 4, !tbaa !6
  %sub254.i.2 = sub i32 %507, %508
  %509 = trunc i64 %indvars.iv942.i.2 to i32
  br label %while.cond.i.2

while.cond.i.2:                                   ; preds = %while.body.i.2, %for.body230.i.2
  %j.2.i.2 = phi i32 [ %509, %for.body230.i.2 ], [ %sub233.i.2, %while.body.i.2 ]
  %sub233.i.2 = add nsw i32 %j.2.i.2, -13
  %idxprom234.i.2 = sext i32 %sub233.i.2 to i64
  %arrayidx235.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom234.i.2
  %510 = load i32, i32* %arrayidx235.i.2, align 4, !tbaa !6
  %add236.i.2 = shl i32 %510, 8
  %shl237.i.2 = add i32 %add236.i.2, 256
  %idxprom238.i.2 = sext i32 %shl237.i.2 to i64
  %arrayidx239.i.2 = getelementptr inbounds i32, i32* %2, i64 %idxprom238.i.2
  %511 = load i32, i32* %arrayidx239.i.2, align 4, !tbaa !6
  %idxprom244.i.2 = sext i32 %add236.i.2 to i64
  %arrayidx245.i.2 = getelementptr inbounds i32, i32* %2, i64 %idxprom244.i.2
  %512 = load i32, i32* %arrayidx245.i.2, align 4, !tbaa !6
  %sub246.i.2 = sub i32 %511, %512
  %cmp255.i.2 = icmp ugt i32 %sub246.i.2, %sub254.i.2
  %idxprom260.i.2 = sext i32 %j.2.i.2 to i64
  br i1 %cmp255.i.2, label %while.body.i.2, label %zero.i.2

while.body.i.2:                                   ; preds = %while.cond.i.2
  %arrayidx261.i.2 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.2
  store i32 %510, i32* %arrayidx261.i.2, align 4, !tbaa !6
  %cmp264.i.2 = icmp slt i32 %j.2.i.2, 26
  br i1 %cmp264.i.2, label %zero.i.2, label %while.cond.i.2

zero.i.2:                                         ; preds = %while.body.i.2, %while.cond.i.2
  %idxprom260.i.2.pn = phi i64 [ %idxprom260.i.2, %while.cond.i.2 ], [ %idxprom234.i.2, %while.body.i.2 ]
  %arrayidx269.pre-phi.i.2.pre-phi = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.2.pn
  store i32 %506, i32* %arrayidx269.pre-phi.i.2.pre-phi, align 4, !tbaa !6
  %indvars.iv.next943.i.2 = add nuw nsw i64 %indvars.iv942.i.2, 1
  %cmp228.i.2 = icmp ult i64 %indvars.iv942.i.2, 255
  br i1 %cmp228.i.2, label %for.body230.i.2, label %for.body230.i.3.preheader

for.body230.i.3.preheader:                        ; preds = %zero.i.2
  br label %for.body230.i.3

for.body230.i.3:                                  ; preds = %zero.i.3, %for.body230.i.3.preheader
  %indvars.iv942.i.3 = phi i64 [ %indvars.iv.next943.i.3, %zero.i.3 ], [ 4, %for.body230.i.3.preheader ]
  %arrayidx232.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv942.i.3
  %513 = load i32, i32* %arrayidx232.i.3, align 4, !tbaa !6
  %add247.i.3 = shl i32 %513, 8
  %shl248.i.3 = add i32 %add247.i.3, 256
  %idxprom249.i.3 = sext i32 %shl248.i.3 to i64
  %arrayidx250.i.3 = getelementptr inbounds i32, i32* %2, i64 %idxprom249.i.3
  %514 = load i32, i32* %arrayidx250.i.3, align 4, !tbaa !6
  %idxprom252.i.3 = sext i32 %add247.i.3 to i64
  %arrayidx253.i.3 = getelementptr inbounds i32, i32* %2, i64 %idxprom252.i.3
  %515 = load i32, i32* %arrayidx253.i.3, align 4, !tbaa !6
  %sub254.i.3 = sub i32 %514, %515
  %516 = trunc i64 %indvars.iv942.i.3 to i32
  br label %while.cond.i.3

while.cond.i.3:                                   ; preds = %while.body.i.3, %for.body230.i.3
  %j.2.i.3 = phi i32 [ %516, %for.body230.i.3 ], [ %sub233.i.3, %while.body.i.3 ]
  %sub233.i.3 = add nsw i32 %j.2.i.3, -4
  %idxprom234.i.3 = sext i32 %sub233.i.3 to i64
  %arrayidx235.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom234.i.3
  %517 = load i32, i32* %arrayidx235.i.3, align 4, !tbaa !6
  %add236.i.3 = shl i32 %517, 8
  %shl237.i.3 = add i32 %add236.i.3, 256
  %idxprom238.i.3 = sext i32 %shl237.i.3 to i64
  %arrayidx239.i.3 = getelementptr inbounds i32, i32* %2, i64 %idxprom238.i.3
  %518 = load i32, i32* %arrayidx239.i.3, align 4, !tbaa !6
  %idxprom244.i.3 = sext i32 %add236.i.3 to i64
  %arrayidx245.i.3 = getelementptr inbounds i32, i32* %2, i64 %idxprom244.i.3
  %519 = load i32, i32* %arrayidx245.i.3, align 4, !tbaa !6
  %sub246.i.3 = sub i32 %518, %519
  %cmp255.i.3 = icmp ugt i32 %sub246.i.3, %sub254.i.3
  %idxprom260.i.3 = sext i32 %j.2.i.3 to i64
  br i1 %cmp255.i.3, label %while.body.i.3, label %zero.i.3

while.body.i.3:                                   ; preds = %while.cond.i.3
  %arrayidx261.i.3 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.3
  store i32 %517, i32* %arrayidx261.i.3, align 4, !tbaa !6
  %cmp264.i.3 = icmp slt i32 %j.2.i.3, 8
  br i1 %cmp264.i.3, label %zero.i.3, label %while.cond.i.3

zero.i.3:                                         ; preds = %while.body.i.3, %while.cond.i.3
  %idxprom260.i.3.pn = phi i64 [ %idxprom260.i.3, %while.cond.i.3 ], [ %idxprom234.i.3, %while.body.i.3 ]
  %arrayidx269.pre-phi.i.3.pre-phi = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.3.pn
  store i32 %513, i32* %arrayidx269.pre-phi.i.3.pre-phi, align 4, !tbaa !6
  %indvars.iv.next943.i.3 = add nuw nsw i64 %indvars.iv942.i.3, 1
  %cmp228.i.3 = icmp ult i64 %indvars.iv942.i.3, 255
  br i1 %cmp228.i.3, label %for.body230.i.3, label %for.body230.i.4.preheader

for.body230.i.4.preheader:                        ; preds = %zero.i.3
  br label %for.body230.i.4

for.body230.i.4:                                  ; preds = %zero.i.4, %for.body230.i.4.preheader
  %indvars.iv942.i.4 = phi i64 [ %indvars.iv.next943.i.4, %zero.i.4 ], [ 1, %for.body230.i.4.preheader ]
  %arrayidx232.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %indvars.iv942.i.4
  %520 = load i32, i32* %arrayidx232.i.4, align 4, !tbaa !6
  %add247.i.4 = shl i32 %520, 8
  %shl248.i.4 = add i32 %add247.i.4, 256
  %idxprom249.i.4 = sext i32 %shl248.i.4 to i64
  %arrayidx250.i.4 = getelementptr inbounds i32, i32* %2, i64 %idxprom249.i.4
  %521 = load i32, i32* %arrayidx250.i.4, align 4, !tbaa !6
  %idxprom252.i.4 = sext i32 %add247.i.4 to i64
  %arrayidx253.i.4 = getelementptr inbounds i32, i32* %2, i64 %idxprom252.i.4
  %522 = load i32, i32* %arrayidx253.i.4, align 4, !tbaa !6
  %sub254.i.4 = sub i32 %521, %522
  %523 = trunc i64 %indvars.iv942.i.4 to i32
  br label %while.cond.i.4

while.cond.i.4:                                   ; preds = %while.body.i.4, %for.body230.i.4
  %j.2.i.4 = phi i32 [ %523, %for.body230.i.4 ], [ %sub233.i.4, %while.body.i.4 ]
  %sub233.i.4 = add nsw i32 %j.2.i.4, -1
  %idxprom234.i.4 = sext i32 %sub233.i.4 to i64
  %arrayidx235.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom234.i.4
  %524 = load i32, i32* %arrayidx235.i.4, align 4, !tbaa !6
  %add236.i.4 = shl i32 %524, 8
  %shl237.i.4 = add i32 %add236.i.4, 256
  %idxprom238.i.4 = sext i32 %shl237.i.4 to i64
  %arrayidx239.i.4 = getelementptr inbounds i32, i32* %2, i64 %idxprom238.i.4
  %525 = load i32, i32* %arrayidx239.i.4, align 4, !tbaa !6
  %idxprom244.i.4 = sext i32 %add236.i.4 to i64
  %arrayidx245.i.4 = getelementptr inbounds i32, i32* %2, i64 %idxprom244.i.4
  %526 = load i32, i32* %arrayidx245.i.4, align 4, !tbaa !6
  %sub246.i.4 = sub i32 %525, %526
  %cmp255.i.4 = icmp ugt i32 %sub246.i.4, %sub254.i.4
  %idxprom260.i.4 = sext i32 %j.2.i.4 to i64
  br i1 %cmp255.i.4, label %while.body.i.4, label %zero.i.4

while.body.i.4:                                   ; preds = %while.cond.i.4
  %arrayidx261.i.4 = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.4
  store i32 %524, i32* %arrayidx261.i.4, align 4, !tbaa !6
  %cmp264.i.4 = icmp slt i32 %j.2.i.4, 2
  br i1 %cmp264.i.4, label %zero.i.4, label %while.cond.i.4

zero.i.4:                                         ; preds = %while.body.i.4, %while.cond.i.4
  %idxprom260.i.4.pn = phi i64 [ %idxprom260.i.4, %while.cond.i.4 ], [ %idxprom234.i.4, %while.body.i.4 ]
  %arrayidx269.pre-phi.i.4.pre-phi = getelementptr inbounds [256 x i32], [256 x i32]* %runningOrder.i, i64 0, i64 %idxprom260.i.4.pn
  store i32 %520, i32* %arrayidx269.pre-phi.i.4.pre-phi, align 4, !tbaa !6
  %indvars.iv.next943.i.4 = add nuw nsw i64 %indvars.iv942.i.4, 1
  %cmp228.i.4 = icmp ult i64 %indvars.iv942.i.4, 255
  br i1 %cmp228.i.4, label %for.body230.i.4, label %do.cond273.i.4

do.cond273.i.4:                                   ; preds = %zero.i.4
  %527 = bitcast [100 x i32]* %stackLo.i.i to i8*
  %528 = bitcast [100 x i32]* %stackHi.i.i to i8*
  %529 = bitcast [100 x i32]* %stackD.i.i to i8*
  %arrayidx.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i.i, i64 0, i64 0
  %arrayidx2.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i.i, i64 0, i64 0
  %arrayidx4.i.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackD.i.i, i64 0, i64 0
  %scevgep303 = getelementptr i32, i32* %0, i64 1
  %scevgep309 = getelementptr i32, i32* %0, i64 1
  %scevgep312 = getelementptr i32, i32* %0, i64 2
  %scevgep348 = getelementptr i32, i32* %0, i64 1
  %scevgep356 = getelementptr i32, i32* %0, i64 1
  br label %for.body280.i
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fallbackSort(i32* %fmap, i32* nocapture %eclass, i32* nocapture %bhtab, i32 %nblock, i32 %verb) unnamed_addr #1 {
entry:
  %bhtab562 = bitcast i32* %bhtab to i8*
  %stackLo.i = alloca [100 x i32], align 16
  %stackHi.i = alloca [100 x i32], align 16
  %ftab = alloca [257 x i32], align 16
  %0 = bitcast [257 x i32]* %ftab to i8*
  %ftabCopy = alloca [256 x i32], align 16
  %1 = bitcast [256 x i32]* %ftabCopy to i8*
  call void @llvm.lifetime.start.p0i8(i64 1028, i8* nonnull %0) #2
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %1) #2
  %2 = bitcast i32* %eclass to i8*
  %cmp = icmp sgt i32 %verb, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %4 = getelementptr [28 x i8], [28 x i8]* @.str.2, i64 0, i64 0
  %5 = tail call i64 @fwrite(i8* %4, i64 27, i64 1, %struct._IO_FILE* %3) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.memset.p0i8.i64(i8* nonnull %0, i8 0, i64 1028, i32 16, i1 false)
  %cmp3506 = icmp sgt i32 %nblock, 0
  br i1 %cmp3506, label %for.body4.lr.ph, label %for.end12

for.body4.lr.ph:                                  ; preds = %if.end
  %wide.trip.count576 = zext i32 %nblock to i64
  %6 = add nsw i64 %wide.trip.count576, -1
  %xtraiter794 = and i64 %wide.trip.count576, 3
  %7 = icmp ult i64 %6, 3
  br i1 %7, label %for.end12.loopexit.unr-lcssa, label %for.body4.lr.ph.new

for.body4.lr.ph.new:                              ; preds = %for.body4.lr.ph
  %unroll_iter796 = sub nsw i64 %wide.trip.count576, %xtraiter794
  br label %for.body4

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph.new
  %indvars.iv574 = phi i64 [ 0, %for.body4.lr.ph.new ], [ %indvars.iv.next575.3, %for.body4 ]
  %niter797 = phi i64 [ %unroll_iter796, %for.body4.lr.ph.new ], [ %niter797.nsub.3, %for.body4 ]
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv574
  %8 = load i8, i8* %arrayidx6, align 1, !tbaa !12
  %idxprom7 = zext i8 %8 to i64
  %arrayidx8 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7
  %9 = load i32, i32* %arrayidx8, align 4, !tbaa !6
  %inc9 = add nsw i32 %9, 1
  store i32 %inc9, i32* %arrayidx8, align 4, !tbaa !6
  %indvars.iv.next575 = or i64 %indvars.iv574, 1
  %arrayidx6.1 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next575
  %10 = load i8, i8* %arrayidx6.1, align 1, !tbaa !12
  %idxprom7.1 = zext i8 %10 to i64
  %arrayidx8.1 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7.1
  %11 = load i32, i32* %arrayidx8.1, align 4, !tbaa !6
  %inc9.1 = add nsw i32 %11, 1
  store i32 %inc9.1, i32* %arrayidx8.1, align 4, !tbaa !6
  %indvars.iv.next575.1 = or i64 %indvars.iv574, 2
  %arrayidx6.2 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next575.1
  %12 = load i8, i8* %arrayidx6.2, align 1, !tbaa !12
  %idxprom7.2 = zext i8 %12 to i64
  %arrayidx8.2 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7.2
  %13 = load i32, i32* %arrayidx8.2, align 4, !tbaa !6
  %inc9.2 = add nsw i32 %13, 1
  store i32 %inc9.2, i32* %arrayidx8.2, align 4, !tbaa !6
  %indvars.iv.next575.2 = or i64 %indvars.iv574, 3
  %arrayidx6.3 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next575.2
  %14 = load i8, i8* %arrayidx6.3, align 1, !tbaa !12
  %idxprom7.3 = zext i8 %14 to i64
  %arrayidx8.3 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7.3
  %15 = load i32, i32* %arrayidx8.3, align 4, !tbaa !6
  %inc9.3 = add nsw i32 %15, 1
  store i32 %inc9.3, i32* %arrayidx8.3, align 4, !tbaa !6
  %indvars.iv.next575.3 = add nuw nsw i64 %indvars.iv574, 4
  %niter797.nsub.3 = add i64 %niter797, -4
  %niter797.ncmp.3 = icmp eq i64 %niter797.nsub.3, 0
  br i1 %niter797.ncmp.3, label %for.end12.loopexit.unr-lcssa, label %for.body4

for.end12.loopexit.unr-lcssa:                     ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv574.unr = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next575.3, %for.body4 ]
  %lcmp.mod795 = icmp eq i64 %xtraiter794, 0
  br i1 %lcmp.mod795, label %for.end12.loopexit, label %for.body4.epil.preheader

for.body4.epil.preheader:                         ; preds = %for.end12.loopexit.unr-lcssa
  br label %for.body4.epil

for.body4.epil:                                   ; preds = %for.body4.epil, %for.body4.epil.preheader
  %indvars.iv574.epil = phi i64 [ %indvars.iv574.unr, %for.body4.epil.preheader ], [ %indvars.iv.next575.epil, %for.body4.epil ]
  %epil.iter = phi i64 [ %xtraiter794, %for.body4.epil.preheader ], [ %epil.iter.sub, %for.body4.epil ]
  %arrayidx6.epil = getelementptr inbounds i8, i8* %2, i64 %indvars.iv574.epil
  %16 = load i8, i8* %arrayidx6.epil, align 1, !tbaa !12
  %idxprom7.epil = zext i8 %16 to i64
  %arrayidx8.epil = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom7.epil
  %17 = load i32, i32* %arrayidx8.epil, align 4, !tbaa !6
  %inc9.epil = add nsw i32 %17, 1
  store i32 %inc9.epil, i32* %arrayidx8.epil, align 4, !tbaa !6
  %indvars.iv.next575.epil = add nuw nsw i64 %indvars.iv574.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.end12.loopexit, label %for.body4.epil, !llvm.loop !50

for.end12.loopexit:                               ; preds = %for.body4.epil, %for.end12.loopexit.unr-lcssa
  %arrayidx27.phi.trans.insert.phi.trans.insert = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 0
  %.pre.pre = load i32, i32* %arrayidx27.phi.trans.insert.phi.trans.insert, align 16, !tbaa !6
  br label %for.end12

for.end12:                                        ; preds = %for.end12.loopexit, %if.end
  %.pre = phi i32 [ %.pre.pre, %for.end12.loopexit ], [ 0, %if.end ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %1, i8* nonnull %0, i64 1024, i32 16, i1 false)
  br label %for.body25

for.body25:                                       ; preds = %for.body25, %for.end12
  %18 = phi i32 [ %.pre, %for.end12 ], [ %add.3, %for.body25 ]
  %indvars.iv567 = phi i64 [ 1, %for.end12 ], [ %indvars.iv.next568.3, %for.body25 ]
  %arrayidx29 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv567
  %19 = load i32, i32* %arrayidx29, align 4, !tbaa !6
  %add = add nsw i32 %19, %18
  store i32 %add, i32* %arrayidx29, align 4, !tbaa !6
  %indvars.iv.next568 = add nuw nsw i64 %indvars.iv567, 1
  %arrayidx29.1 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv.next568
  %20 = load i32, i32* %arrayidx29.1, align 4, !tbaa !6
  %add.1 = add nsw i32 %20, %add
  store i32 %add.1, i32* %arrayidx29.1, align 4, !tbaa !6
  %indvars.iv.next568.1 = add nuw nsw i64 %indvars.iv567, 2
  %arrayidx29.2 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv.next568.1
  %21 = load i32, i32* %arrayidx29.2, align 4, !tbaa !6
  %add.2 = add nsw i32 %21, %add.1
  store i32 %add.2, i32* %arrayidx29.2, align 4, !tbaa !6
  %indvars.iv.next568.2 = add nuw nsw i64 %indvars.iv567, 3
  %arrayidx29.3 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv.next568.2
  %22 = load i32, i32* %arrayidx29.3, align 4, !tbaa !6
  %add.3 = add nsw i32 %22, %add.2
  store i32 %add.3, i32* %arrayidx29.3, align 4, !tbaa !6
  %indvars.iv.next568.3 = add nuw nsw i64 %indvars.iv567, 4
  %exitcond570.3 = icmp eq i64 %indvars.iv.next568.3, 257
  br i1 %exitcond570.3, label %for.end32, label %for.body25

for.end32:                                        ; preds = %for.body25
  br i1 %cmp3506, label %for.body35.lr.ph, label %for.end47

for.body35.lr.ph:                                 ; preds = %for.end32
  %wide.trip.count565 = zext i32 %nblock to i64
  %xtraiter = and i64 %wide.trip.count565, 1
  %23 = icmp eq i32 %nblock, 1
  br i1 %23, label %for.end47.loopexit.unr-lcssa, label %for.body35.lr.ph.new

for.body35.lr.ph.new:                             ; preds = %for.body35.lr.ph
  %unroll_iter = sub nsw i64 %wide.trip.count565, %xtraiter
  br label %for.body35

for.body35:                                       ; preds = %for.body35, %for.body35.lr.ph.new
  %indvars.iv563 = phi i64 [ 0, %for.body35.lr.ph.new ], [ %indvars.iv.next564.1, %for.body35 ]
  %niter = phi i64 [ %unroll_iter, %for.body35.lr.ph.new ], [ %niter.nsub.1, %for.body35 ]
  %arrayidx37 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv563
  %24 = load i8, i8* %arrayidx37, align 1, !tbaa !12
  %idxprom38 = zext i8 %24 to i64
  %arrayidx39 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom38
  %25 = load i32, i32* %arrayidx39, align 4, !tbaa !6
  %sub40 = add nsw i32 %25, -1
  store i32 %sub40, i32* %arrayidx39, align 4, !tbaa !6
  %idxprom43 = sext i32 %sub40 to i64
  %arrayidx44 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom43
  %26 = trunc i64 %indvars.iv563 to i32
  store i32 %26, i32* %arrayidx44, align 4, !tbaa !6
  %indvars.iv.next564 = or i64 %indvars.iv563, 1
  %arrayidx37.1 = getelementptr inbounds i8, i8* %2, i64 %indvars.iv.next564
  %27 = load i8, i8* %arrayidx37.1, align 1, !tbaa !12
  %idxprom38.1 = zext i8 %27 to i64
  %arrayidx39.1 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom38.1
  %28 = load i32, i32* %arrayidx39.1, align 4, !tbaa !6
  %sub40.1 = add nsw i32 %28, -1
  store i32 %sub40.1, i32* %arrayidx39.1, align 4, !tbaa !6
  %idxprom43.1 = sext i32 %sub40.1 to i64
  %arrayidx44.1 = getelementptr inbounds i32, i32* %fmap, i64 %idxprom43.1
  %29 = trunc i64 %indvars.iv.next564 to i32
  store i32 %29, i32* %arrayidx44.1, align 4, !tbaa !6
  %indvars.iv.next564.1 = add nuw nsw i64 %indvars.iv563, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.end47.loopexit.unr-lcssa, label %for.body35

for.end47.loopexit.unr-lcssa:                     ; preds = %for.body35, %for.body35.lr.ph
  %indvars.iv563.unr = phi i64 [ 0, %for.body35.lr.ph ], [ %indvars.iv.next564.1, %for.body35 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.end47, label %for.body35.epil

for.body35.epil:                                  ; preds = %for.end47.loopexit.unr-lcssa
  %arrayidx37.epil = getelementptr inbounds i8, i8* %2, i64 %indvars.iv563.unr
  %30 = load i8, i8* %arrayidx37.epil, align 1, !tbaa !12
  %idxprom38.epil = zext i8 %30 to i64
  %arrayidx39.epil = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %idxprom38.epil
  %31 = load i32, i32* %arrayidx39.epil, align 4, !tbaa !6
  %sub40.epil = add nsw i32 %31, -1
  store i32 %sub40.epil, i32* %arrayidx39.epil, align 4, !tbaa !6
  %idxprom43.epil = sext i32 %sub40.epil to i64
  %arrayidx44.epil = getelementptr inbounds i32, i32* %fmap, i64 %idxprom43.epil
  %32 = trunc i64 %indvars.iv563.unr to i32
  store i32 %32, i32* %arrayidx44.epil, align 4, !tbaa !6
  br label %for.end47

for.end47:                                        ; preds = %for.body35.epil, %for.end47.loopexit.unr-lcssa, %for.end32
  %cmp50500 = icmp sgt i32 %nblock, -64
  br i1 %cmp50500, label %for.body52.lr.ph, label %for.body61.preheader

for.body52.lr.ph:                                 ; preds = %for.end47
  %div = sdiv i32 %nblock, 32
  %33 = add nsw i32 %div, 1
  %34 = icmp sgt i32 %33, 0
  %smax = select i1 %34, i32 %33, i32 0
  %35 = zext i32 %smax to i64
  %36 = shl nuw nsw i64 %35, 2
  %37 = add nuw nsw i64 %36, 4
  call void @llvm.memset.p0i8.i64(i8* %bhtab562, i8 0, i64 %37, i32 4, i1 false)
  br label %for.body61.preheader

for.body61.preheader:                             ; preds = %for.body52.lr.ph, %for.end47
  br label %for.body61

for.body61:                                       ; preds = %for.body61, %for.body61.preheader
  %indvars.iv557 = phi i64 [ 0, %for.body61.preheader ], [ %indvars.iv.next558.1, %for.body61 ]
  %arrayidx63 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv557
  %38 = load i32, i32* %arrayidx63, align 8, !tbaa !6
  %and = and i32 %38, 31
  %shl = shl i32 1, %and
  %shr = ashr i32 %38, 5
  %idxprom66 = sext i32 %shr to i64
  %arrayidx67 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom66
  %39 = load i32, i32* %arrayidx67, align 4, !tbaa !6
  %or = or i32 %shl, %39
  store i32 %or, i32* %arrayidx67, align 4, !tbaa !6
  %indvars.iv.next558 = or i64 %indvars.iv557, 1
  %arrayidx63.1 = getelementptr inbounds [257 x i32], [257 x i32]* %ftab, i64 0, i64 %indvars.iv.next558
  %40 = load i32, i32* %arrayidx63.1, align 4, !tbaa !6
  %and.1 = and i32 %40, 31
  %shl.1 = shl i32 1, %and.1
  %shr.1 = ashr i32 %40, 5
  %idxprom66.1 = sext i32 %shr.1 to i64
  %arrayidx67.1 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom66.1
  %41 = load i32, i32* %arrayidx67.1, align 4, !tbaa !6
  %or.1 = or i32 %shl.1, %41
  store i32 %or.1, i32* %arrayidx67.1, align 4, !tbaa !6
  %indvars.iv.next558.1 = add nuw nsw i64 %indvars.iv557, 2
  %exitcond559.1 = icmp eq i64 %indvars.iv.next558.1, 256
  br i1 %exitcond559.1, label %for.body74.preheader, label %for.body61

for.body74.preheader:                             ; preds = %for.body61
  br label %for.body74

for.body74:                                       ; preds = %for.body74, %for.body74.preheader
  %i.7498 = phi i32 [ %inc97, %for.body74 ], [ 0, %for.body74.preheader ]
  %mul = shl nuw nsw i32 %i.7498, 1
  %add75 = add nsw i32 %mul, %nblock
  %and76 = and i32 %add75, 31
  %shl77 = shl i32 1, %and76
  %shr80 = ashr i32 %add75, 5
  %idxprom81 = sext i32 %shr80 to i64
  %arrayidx82 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom81
  %42 = load i32, i32* %arrayidx82, align 4, !tbaa !6
  %or83 = or i32 %42, %shl77
  store i32 %or83, i32* %arrayidx82, align 4, !tbaa !6
  %add86 = add nsw i32 %add75, 1
  %and87 = and i32 %add86, 31
  %shl88 = shl i32 1, %and87
  %neg = xor i32 %shl88, -1
  %shr92 = ashr i32 %add86, 5
  %idxprom93 = sext i32 %shr92 to i64
  %arrayidx94 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom93
  %43 = load i32, i32* %arrayidx94, align 4, !tbaa !6
  %and95 = and i32 %43, %neg
  store i32 %and95, i32* %arrayidx94, align 4, !tbaa !6
  %inc97 = add nuw nsw i32 %i.7498, 1
  %exitcond556 = icmp eq i32 %inc97, 32
  br i1 %exitcond556, label %for.end98, label %for.body74

for.end98:                                        ; preds = %for.body74
  %44 = bitcast [100 x i32]* %stackLo.i to i8*
  %45 = bitcast [100 x i32]* %stackHi.i to i8*
  %arrayidx.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 0
  %arrayidx2.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 0
  %wide.trip.count547 = zext i32 %nblock to i64
  %scevgep668 = getelementptr i32, i32* %fmap, i64 1
  %scevgep674 = getelementptr i32, i32* %fmap, i64 1
  %scevgep677 = getelementptr i32, i32* %fmap, i64 2
  %scevgep708 = getelementptr i32, i32* %fmap, i64 1
  %scevgep716 = getelementptr i32, i32* %fmap, i64 1
  br label %while.cond

while.cond:                                       ; preds = %if.end260, %for.end98
  %H.0 = phi i32 [ 1, %for.end98 ], [ %mul261, %if.end260 ]
  br i1 %cmp, label %if.then101, label %if.end103

if.then101:                                       ; preds = %while.cond
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %47 = getelementptr [23 x i8], [23 x i8]* @.str.3.4, i64 0, i64 0
  %call102 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %47, i32 %H.0) #15
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %while.cond
  br i1 %cmp3506, label %for.body107.preheader, label %while.cond129.preheader

for.body107.preheader:                            ; preds = %if.end103
  br label %for.body107

for.body107:                                      ; preds = %for.body107, %for.body107.preheader
  %indvars.iv545 = phi i64 [ %indvars.iv.next546, %for.body107 ], [ 0, %for.body107.preheader ]
  %j.0485 = phi i32 [ %spec.select, %for.body107 ], [ 0, %for.body107.preheader ]
  %48 = trunc i64 %indvars.iv545 to i32
  %49 = lshr i64 %indvars.iv545, 5
  %50 = and i64 %49, 134217727
  %arrayidx110 = getelementptr inbounds i32, i32* %bhtab, i64 %50
  %51 = load i32, i32* %arrayidx110, align 4, !tbaa !6
  %and111 = and i32 %48, 31
  %shl112 = shl i32 1, %and111
  %and113 = and i32 %51, %shl112
  %tobool = icmp eq i32 %and113, 0
  %spec.select = select i1 %tobool, i32 %j.0485, i32 %48
  %arrayidx117 = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv545
  %52 = load i32, i32* %arrayidx117, align 4, !tbaa !6
  %sub118 = sub i32 %52, %H.0
  %cmp119 = icmp slt i32 %sub118, 0
  %add122 = select i1 %cmp119, i32 %nblock, i32 0
  %k.0 = add nsw i32 %add122, %sub118
  %idxprom124 = sext i32 %k.0 to i64
  %arrayidx125 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom124
  store i32 %spec.select, i32* %arrayidx125, align 4, !tbaa !6
  %indvars.iv.next546 = add nuw nsw i64 %indvars.iv545, 1
  %exitcond548 = icmp eq i64 %indvars.iv.next546, %wide.trip.count547
  br i1 %exitcond548, label %while.cond129.preheader, label %for.body107

while.cond129.preheader:                          ; preds = %for.body107, %if.end103
  br label %while.cond129.outer

while.cond129.outer:                              ; preds = %while.cond129.outer.backedge, %while.cond129.preheader
  %r.0.ph = phi i32 [ -1, %while.cond129.preheader ], [ %sub222, %while.cond129.outer.backedge ]
  %nNotDone.0.ph = phi i32 [ 0, %while.cond129.preheader ], [ %add232, %while.cond129.outer.backedge ]
  br label %while.cond129

while.cond129:                                    ; preds = %if.end226, %while.cond129.outer
  %r.0 = phi i32 [ %sub222, %if.end226 ], [ %r.0.ph, %while.cond129.outer ]
  br label %while.cond132

while.cond132:                                    ; preds = %while.cond132, %while.cond129
  %k.1.in = phi i32 [ %r.0, %while.cond129 ], [ %k.1, %while.cond132 ]
  %k.1 = add nsw i32 %k.1.in, 1
  %shr133 = ashr i32 %k.1, 5
  %idxprom134 = sext i32 %shr133 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom134
  %53 = load i32, i32* %arrayidx135, align 4, !tbaa !6
  %and136 = and i32 %k.1, 31
  %shl137 = shl i32 1, %and136
  %and138 = and i32 %shl137, %53
  %tobool139 = icmp eq i32 %and138, 0
  %tobool141 = icmp eq i32 %and136, 0
  %or.cond441 = or i1 %tobool141, %tobool139
  br i1 %or.cond441, label %while.end, label %while.cond132

while.end:                                        ; preds = %while.cond132
  br i1 %tobool139, label %if.end172, label %while.cond152.preheader

while.cond152.preheader:                          ; preds = %while.end
  br label %while.cond152

while.cond152:                                    ; preds = %while.cond152, %while.cond152.preheader
  %k.2 = phi i32 [ %add159, %while.cond152 ], [ %k.1, %while.cond152.preheader ]
  %shr153 = ashr i32 %k.2, 5
  %idxprom154 = sext i32 %shr153 to i64
  %arrayidx155 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom154
  %54 = load i32, i32* %arrayidx155, align 4, !tbaa !6
  %cmp156 = icmp eq i32 %54, -1
  %add159 = add nsw i32 %k.2, 32
  br i1 %cmp156, label %while.cond152, label %while.cond161.preheader

while.cond161.preheader:                          ; preds = %while.cond152
  br label %while.cond161

while.cond161:                                    ; preds = %while.cond161, %while.cond161.preheader
  %k.3 = phi i32 [ %inc170, %while.cond161 ], [ %k.2, %while.cond161.preheader ]
  %shr162 = ashr i32 %k.3, 5
  %idxprom163 = sext i32 %shr162 to i64
  %arrayidx164 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom163
  %55 = load i32, i32* %arrayidx164, align 4, !tbaa !6
  %and165 = and i32 %k.3, 31
  %shl166 = shl i32 1, %and165
  %and167 = and i32 %shl166, %55
  %tobool168 = icmp eq i32 %and167, 0
  %inc170 = add nsw i32 %k.3, 1
  br i1 %tobool168, label %if.end172, label %while.cond161

if.end172:                                        ; preds = %while.cond161, %while.end
  %k.4 = phi i32 [ %k.1, %while.end ], [ %k.3, %while.cond161 ]
  %cmp174 = icmp sgt i32 %k.4, %nblock
  br i1 %cmp174, label %while.end255, label %while.cond178.preheader

while.cond178.preheader:                          ; preds = %if.end172
  br label %while.cond178

while.cond178:                                    ; preds = %while.cond178, %while.cond178.preheader
  %k.5 = phi i32 [ %inc191, %while.cond178 ], [ %k.4, %while.cond178.preheader ]
  %shr179 = ashr i32 %k.5, 5
  %idxprom180 = sext i32 %shr179 to i64
  %arrayidx181 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom180
  %56 = load i32, i32* %arrayidx181, align 4, !tbaa !6
  %and182 = and i32 %k.5, 31
  %shl183 = shl i32 1, %and182
  %and184 = and i32 %shl183, %56
  %tobool185 = icmp ne i32 %and184, 0
  %tobool188 = icmp eq i32 %and182, 0
  %or.cond442 = or i1 %tobool188, %tobool185
  %inc191 = add nsw i32 %k.5, 1
  br i1 %or.cond442, label %while.end192, label %while.cond178

while.end192:                                     ; preds = %while.cond178
  %tobool199 = icmp eq i32 %and184, 0
  br i1 %tobool199, label %while.cond201.preheader, label %if.end221

while.cond201.preheader:                          ; preds = %while.end192
  br label %while.cond201

while.cond201:                                    ; preds = %while.cond201, %while.cond201.preheader
  %k.6 = phi i32 [ %add208, %while.cond201 ], [ %k.5, %while.cond201.preheader ]
  %shr202 = ashr i32 %k.6, 5
  %idxprom203 = sext i32 %shr202 to i64
  %arrayidx204 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom203
  %57 = load i32, i32* %arrayidx204, align 4, !tbaa !6
  %cmp205 = icmp eq i32 %57, 0
  %add208 = add nsw i32 %k.6, 32
  br i1 %cmp205, label %while.cond201, label %while.cond210.preheader

while.cond210.preheader:                          ; preds = %while.cond201
  br label %while.cond210

while.cond210:                                    ; preds = %while.cond210, %while.cond210.preheader
  %k.7 = phi i32 [ %inc219, %while.cond210 ], [ %k.6, %while.cond210.preheader ]
  %shr211 = ashr i32 %k.7, 5
  %idxprom212 = sext i32 %shr211 to i64
  %arrayidx213 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom212
  %58 = load i32, i32* %arrayidx213, align 4, !tbaa !6
  %and214 = and i32 %k.7, 31
  %shl215 = shl i32 1, %and214
  %and216 = and i32 %shl215, %58
  %tobool217 = icmp eq i32 %and216, 0
  %inc219 = add nsw i32 %k.7, 1
  br i1 %tobool217, label %while.cond210, label %if.end221

if.end221:                                        ; preds = %while.cond210, %while.end192
  %k.8 = phi i32 [ %k.5, %while.end192 ], [ %k.7, %while.cond210 ]
  %sub222 = add nsw i32 %k.8, -1
  %cmp223 = icmp sgt i32 %k.8, %nblock
  br i1 %cmp223, label %while.end255, label %if.end226

if.end226:                                        ; preds = %if.end221
  %cmp227 = icmp sgt i32 %k.8, %k.4
  br i1 %cmp227, label %if.then229, label %while.cond129

if.then229:                                       ; preds = %if.end226
  %sub173.le = add nsw i32 %k.4, -1
  %sub173.neg = sub i32 1, %k.4
  %sub230 = add i32 %nNotDone.0.ph, 1
  %add231 = add i32 %sub230, %sub173.neg
  %add232 = add i32 %add231, %sub222
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %44) #2
  call void @llvm.lifetime.start.p0i8(i64 400, i8* nonnull %45) #2
  store i32 %sub173.le, i32* %arrayidx.i, align 16, !tbaa !6
  store i32 %sub222, i32* %arrayidx2.i, align 16, !tbaa !6
  br label %while.body.lr.ph.i

while.body.lr.ph.i:                               ; preds = %while.cond.outer.backedge.i, %if.then229
  %r.0.ph415.i = phi i32 [ 0, %if.then229 ], [ %rem.i, %while.cond.outer.backedge.i ]
  %sp.0.ph414.i = phi i32 [ 1, %if.then229 ], [ %sp.0.ph.be.i, %while.cond.outer.backedge.i ]
  %59 = sext i32 %sp.0.ph414.i to i64
  br label %while.body.i

while.body.i:                                     ; preds = %fallbackSimpleSort.exit.i, %while.body.lr.ph.i
  %indvars.iv.i = phi i64 [ %59, %while.body.lr.ph.i ], [ %indvars.iv.next.i, %fallbackSimpleSort.exit.i ]
  %cmp3.i = icmp slt i64 %indvars.iv.i, 100
  br i1 %cmp3.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  tail call void @BZ2_bz__AssertH__fail(i32 1004) #2
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx5.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 %indvars.iv.next.i
  %60 = load i32, i32* %arrayidx5.i, align 4, !tbaa !6
  %arrayidx7.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 %indvars.iv.next.i
  %61 = load i32, i32* %arrayidx7.i, align 4, !tbaa !6
  %sub.i = sub nsw i32 %61, %60
  %cmp8.i = icmp slt i32 %sub.i, 10
  br i1 %cmp8.i, label %if.then9.i, label %if.end10.i

if.then9.i:                                       ; preds = %if.end.i
  %cmp.i.i = icmp eq i32 %61, %60
  br i1 %cmp.i.i, label %fallbackSimpleSort.exit.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then9.i
  %cmp1.i.i = icmp sgt i32 %sub.i, 3
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.end26.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  %sub3.i.i = add nsw i32 %61, -4
  %cmp4121.i.i = icmp slt i32 %sub3.i.i, %60
  br i1 %cmp4121.i.i, label %if.end26.i.i, label %for.body.lr.ph.i.i

for.body.lr.ph.i.i:                               ; preds = %if.then2.i.i
  %62 = sext i32 %61 to i64
  %63 = sext i32 %sub3.i.i to i64
  %64 = sext i32 %60 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv130.i.i = phi i64 [ %indvars.iv.next131.i.i, %for.end.i.i ], [ %63, %for.body.lr.ph.i.i ]
  %indvars.iv126.i.i = phi i32 [ %indvars.iv.next127.i.i, %for.end.i.i ], [ %61, %for.body.lr.ph.i.i ]
  %arrayidx.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv130.i.i
  %65 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !6
  %idxprom5.i.i = sext i32 %65 to i64
  %arrayidx6.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom5.i.i
  %66 = load i32, i32* %arrayidx6.i.i, align 4, !tbaa !6
  %67 = add nsw i64 %indvars.iv130.i.i, 4
  %cmp8116.i.i = icmp sgt i64 %67, %62
  %68 = trunc i64 %indvars.iv130.i.i to i32
  br i1 %cmp8116.i.i, label %for.end.i.i, label %land.rhs.lr.ph.i.i

land.rhs.lr.ph.i.i:                               ; preds = %for.body.i.i
  %69 = sext i32 %indvars.iv126.i.i to i64
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %for.body14.i.i, %land.rhs.lr.ph.i.i
  %indvars.iv128.i.i = phi i64 [ %69, %land.rhs.lr.ph.i.i ], [ %indvars.iv.next129.i.i, %for.body14.i.i ]
  %j.0.in117.i.i = phi i32 [ %68, %land.rhs.lr.ph.i.i ], [ %72, %for.body14.i.i ]
  %arrayidx10.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv128.i.i
  %70 = load i32, i32* %arrayidx10.i.i, align 4, !tbaa !6
  %idxprom11.i.i = zext i32 %70 to i64
  %arrayidx12.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom11.i.i
  %71 = load i32, i32* %arrayidx12.i.i, align 4, !tbaa !6
  %cmp13.i.i = icmp ugt i32 %66, %71
  br i1 %cmp13.i.i, label %for.body14.i.i, label %for.end.i.i

for.body14.i.i:                                   ; preds = %land.rhs.i.i
  %idxprom18.i.i = sext i32 %j.0.in117.i.i to i64
  %arrayidx19.i.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom18.i.i
  store i32 %70, i32* %arrayidx19.i.i, align 4, !tbaa !6
  %indvars.iv.next129.i.i = add nsw i64 %indvars.iv128.i.i, 4
  %cmp8.i.i = icmp sgt i64 %indvars.iv.next129.i.i, %62
  %72 = trunc i64 %indvars.iv128.i.i to i32
  br i1 %cmp8.i.i, label %for.end.i.i.loopexit.split.loop.exit, label %land.rhs.i.i

for.end.i.i.loopexit.split.loop.exit:             ; preds = %for.body14.i.i
  %73 = trunc i64 %indvars.iv128.i.i to i32
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.end.i.i.loopexit.split.loop.exit, %land.rhs.i.i, %for.body.i.i
  %j.0.in.lcssa.i.i = phi i32 [ %68, %for.body.i.i ], [ %73, %for.end.i.i.loopexit.split.loop.exit ], [ %j.0.in117.i.i, %land.rhs.i.i ]
  %idxprom22.i.i = sext i32 %j.0.in.lcssa.i.i to i64
  %arrayidx23.i.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom22.i.i
  store i32 %65, i32* %arrayidx23.i.i, align 4, !tbaa !6
  %indvars.iv.next131.i.i = add nsw i64 %indvars.iv130.i.i, -1
  %cmp4.i.i = icmp sgt i64 %indvars.iv130.i.i, %64
  %indvars.iv.next127.i.i = add i32 %indvars.iv126.i.i, -1
  br i1 %cmp4.i.i, label %for.body.i.i, label %if.end26.i.i

if.end26.i.i:                                     ; preds = %for.end.i.i, %if.then2.i.i, %if.end.i.i
  %cmp29112.i.i = icmp sgt i32 %61, %60
  br i1 %cmp29112.i.i, label %for.body30.lr.ph.i.i, label %fallbackSimpleSort.exit.i

for.body30.lr.ph.i.i:                             ; preds = %if.end26.i.i
  %74 = sext i32 %61 to i64
  %75 = sext i32 %60 to i64
  br label %for.body30.i.i

for.body30.i.i:                                   ; preds = %for.end52.i.i, %for.body30.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ %74, %for.body30.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.end52.i.i ]
  %i.1114.in.i.i = phi i32 [ %61, %for.body30.lr.ph.i.i ], [ %i.1114.i.i, %for.end52.i.i ]
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, -1
  %i.1114.i.i = add nsw i32 %i.1114.in.i.i, -1
  %arrayidx32.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv.next.i.i
  %76 = load i32, i32* %arrayidx32.i.i, align 4, !tbaa !6
  %idxprom33.i.i = sext i32 %76 to i64
  %arrayidx34.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom33.i.i
  %77 = load i32, i32* %arrayidx34.i.i, align 4, !tbaa !6
  %cmp37108.i.i = icmp sgt i32 %i.1114.in.i.i, %61
  br i1 %cmp37108.i.i, label %for.end52.i.i, label %land.rhs38.i.i.preheader

land.rhs38.i.i.preheader:                         ; preds = %for.body30.i.i
  br label %land.rhs38.i.i

land.rhs38.i.i:                                   ; preds = %for.body45.i.i, %land.rhs38.i.i.preheader
  %indvars.iv123.i.i = phi i64 [ %indvars.iv.next124.i.i, %for.body45.i.i ], [ %indvars.iv.i.i, %land.rhs38.i.i.preheader ]
  %j.1109.i.i = phi i32 [ %inc.i.i, %for.body45.i.i ], [ %i.1114.in.i.i, %land.rhs38.i.i.preheader ]
  %arrayidx40.i.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv123.i.i
  %78 = load i32, i32* %arrayidx40.i.i, align 4, !tbaa !6
  %idxprom41.i.i = zext i32 %78 to i64
  %arrayidx42.i.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom41.i.i
  %79 = load i32, i32* %arrayidx42.i.i, align 4, !tbaa !6
  %cmp43.i.i = icmp ugt i32 %77, %79
  br i1 %cmp43.i.i, label %for.body45.i.i, label %for.end52.loopexit.split.loop.exit.i.i

for.body45.i.i:                                   ; preds = %land.rhs38.i.i
  %80 = add nsw i64 %indvars.iv123.i.i, -1
  %arrayidx50.i.i = getelementptr inbounds i32, i32* %fmap, i64 %80
  store i32 %78, i32* %arrayidx50.i.i, align 4, !tbaa !6
  %indvars.iv.next124.i.i = add nsw i64 %indvars.iv123.i.i, 1
  %inc.i.i = add nsw i32 %j.1109.i.i, 1
  %cmp37.i.i = icmp slt i64 %indvars.iv123.i.i, %74
  br i1 %cmp37.i.i, label %land.rhs38.i.i, label %for.end52.loopexit.i.i

for.end52.loopexit.split.loop.exit.i.i:           ; preds = %land.rhs38.i.i
  %81 = trunc i64 %indvars.iv123.i.i to i32
  br label %for.end52.loopexit.i.i

for.end52.loopexit.i.i:                           ; preds = %for.end52.loopexit.split.loop.exit.i.i, %for.body45.i.i
  %j.1.lcssa.ph.i.i = phi i32 [ %81, %for.end52.loopexit.split.loop.exit.i.i ], [ %inc.i.i, %for.body45.i.i ]
  %.pre.i.i = add nsw i32 %j.1.lcssa.ph.i.i, -1
  br label %for.end52.i.i

for.end52.i.i:                                    ; preds = %for.end52.loopexit.i.i, %for.body30.i.i
  %sub53.pre-phi.i.i = phi i32 [ %.pre.i.i, %for.end52.loopexit.i.i ], [ %i.1114.i.i, %for.body30.i.i ]
  %idxprom54.i.i = sext i32 %sub53.pre-phi.i.i to i64
  %arrayidx55.i.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom54.i.i
  store i32 %76, i32* %arrayidx55.i.i, align 4, !tbaa !6
  %cmp29.i.i = icmp sgt i64 %indvars.iv.next.i.i, %75
  br i1 %cmp29.i.i, label %for.body30.i.i, label %fallbackSimpleSort.exit.i

fallbackSimpleSort.exit.i:                        ; preds = %for.end52.i.i, %if.end26.i.i, %if.then9.i
  %cmp.i = icmp sgt i64 %indvars.iv.i, 1
  br i1 %cmp.i, label %while.body.i, label %fallbackQSort3.exit

if.end10.i:                                       ; preds = %if.end.i
  %arrayidx5.i.le = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 %indvars.iv.next.i
  %arrayidx7.i.le = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 %indvars.iv.next.i
  %82 = trunc i64 %indvars.iv.i to i32
  %83 = trunc i64 %indvars.iv.next.i to i32
  %mul.i = mul nuw nsw i32 %r.0.ph415.i, 7621
  %add.i = add nuw nsw i32 %mul.i, 1
  %rem.i = and i32 %add.i, 32767
  %rem11.i = urem i32 %rem.i, 3
  %trunc.i = trunc i32 %rem11.i to i2
  switch i2 %trunc.i, label %if.else25.i [
    i2 0, label %if.end31.i
    i2 1, label %if.then19.i
  ]

if.then19.i:                                      ; preds = %if.end10.i
  %add20.i = add nsw i32 %61, %60
  %shr.i = ashr i32 %add20.i, 1
  br label %if.end31.i

if.else25.i:                                      ; preds = %if.end10.i
  br label %if.end31.i

if.end31.i:                                       ; preds = %if.else25.i, %if.then19.i, %if.end10.i
  %.sink = phi i32 [ %61, %if.else25.i ], [ %shr.i, %if.then19.i ], [ %60, %if.end10.i ]
  %idxprom26.i = sext i32 %.sink to i64
  %arrayidx27.i = getelementptr inbounds i32, i32* %fmap, i64 %idxprom26.i
  %84 = load i32, i32* %arrayidx27.i, align 4, !tbaa !6
  %idxprom28.i = zext i32 %84 to i64
  %arrayidx29.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom28.i
  %med.0.i = load i32, i32* %arrayidx29.i, align 4, !tbaa !6
  br label %while.cond32.i

while.cond32.i:                                   ; preds = %if.end92.i, %if.end31.i
  %gtHi.0.i = phi i32 [ %61, %if.end31.i ], [ %103, %if.end92.i ]
  %ltLo.0.i = phi i32 [ %60, %if.end31.i ], [ %ltLo.1.ph.lcssa.i, %if.end92.i ]
  %unHi.0.i = phi i32 [ %61, %if.end31.i ], [ %dec103.i, %if.end92.i ]
  %unLo.0.i = phi i32 [ %60, %if.end31.i ], [ %inc102.i, %if.end92.i ]
  %cmp36370377.i = icmp sgt i32 %unLo.0.i, %unHi.0.i
  br i1 %cmp36370377.i, label %while.end.i, label %if.end38.lr.ph.lr.ph.i

if.end38.lr.ph.lr.ph.i:                           ; preds = %while.cond32.i
  %85 = sext i32 %unHi.0.i to i64
  %86 = sext i32 %ltLo.0.i to i64
  br label %if.end38.lr.ph.i

if.end38.lr.ph.i:                                 ; preds = %if.then45.i, %if.end38.lr.ph.lr.ph.i
  %indvars.iv455.i = phi i64 [ %indvars.iv.next456.i, %if.then45.i ], [ %86, %if.end38.lr.ph.lr.ph.i ]
  %unLo.1.ph379.i = phi i32 [ %inc55.i, %if.then45.i ], [ %unLo.0.i, %if.end38.lr.ph.lr.ph.i ]
  %87 = sext i32 %unLo.1.ph379.i to i64
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.end59.i, %if.end38.lr.ph.i
  %indvars.iv453.i = phi i64 [ %indvars.iv.next454.i, %if.end59.i ], [ %87, %if.end38.lr.ph.i ]
  %unLo.1371.i = phi i32 [ %inc60.i, %if.end59.i ], [ %unLo.1.ph379.i, %if.end38.lr.ph.i ]
  %arrayidx40.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv453.i
  %88 = load i32, i32* %arrayidx40.i, align 4, !tbaa !6
  %idxprom41.i = zext i32 %88 to i64
  %arrayidx42.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom41.i
  %89 = load i32, i32* %arrayidx42.i, align 4, !tbaa !6
  %sub43.i = sub nsw i32 %89, %med.0.i
  %cmp44.i = icmp eq i32 %sub43.i, 0
  br i1 %cmp44.i, label %if.then45.i, label %if.end56.i

if.then45.i:                                      ; preds = %if.end38.i
  %arrayidx40.i.le = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv453.i
  %90 = trunc i64 %indvars.iv453.i to i32
  %arrayidx49.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv455.i
  %91 = load i32, i32* %arrayidx49.i, align 4, !tbaa !6
  store i32 %91, i32* %arrayidx40.i.le, align 4, !tbaa !6
  store i32 %88, i32* %arrayidx49.i, align 4, !tbaa !6
  %indvars.iv.next456.i = add i64 %indvars.iv455.i, 1
  %inc55.i = add nsw i32 %90, 1
  %cmp36370.i = icmp sgt i32 %unHi.0.i, %90
  br i1 %cmp36370.i, label %if.end38.lr.ph.i, label %while.end.loopexit417.i

if.end56.i:                                       ; preds = %if.end38.i
  %cmp57.i = icmp sgt i32 %sub43.i, 0
  br i1 %cmp57.i, label %while.end.loopexit.split.loop.exit.i, label %if.end59.i

if.end59.i:                                       ; preds = %if.end56.i
  %indvars.iv.next454.i = add nsw i64 %indvars.iv453.i, 1
  %inc60.i = add nsw i32 %unLo.1371.i, 1
  %cmp36.i = icmp slt i64 %indvars.iv453.i, %85
  br i1 %cmp36.i, label %if.end38.i, label %while.end.loopexit.split.loop.exit514.i

while.end.loopexit417.i:                          ; preds = %if.then45.i
  %92 = trunc i64 %indvars.iv.next456.i to i32
  br label %while.end.i

while.end.loopexit.split.loop.exit.i:             ; preds = %if.end56.i
  %93 = trunc i64 %indvars.iv455.i to i32
  %94 = trunc i64 %indvars.iv453.i to i32
  br label %while.end.i

while.end.loopexit.split.loop.exit514.i:          ; preds = %if.end59.i
  %95 = trunc i64 %indvars.iv455.i to i32
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.loopexit.split.loop.exit514.i, %while.end.loopexit.split.loop.exit.i, %while.end.loopexit417.i, %while.cond32.i
  %ltLo.1.ph.lcssa.i = phi i32 [ %ltLo.0.i, %while.cond32.i ], [ %92, %while.end.loopexit417.i ], [ %93, %while.end.loopexit.split.loop.exit.i ], [ %95, %while.end.loopexit.split.loop.exit514.i ]
  %unLo.1.lcssa.i = phi i32 [ %unLo.0.i, %while.cond32.i ], [ %inc55.i, %while.end.loopexit417.i ], [ %94, %while.end.loopexit.split.loop.exit.i ], [ %inc60.i, %while.end.loopexit.split.loop.exit514.i ]
  %cmp63382394.i = icmp sgt i32 %unLo.1.lcssa.i, %unHi.0.i
  br i1 %cmp63382394.i, label %while.end104.i, label %if.end65.lr.ph.lr.ph.i

if.end65.lr.ph.lr.ph.i:                           ; preds = %while.end.i
  %96 = sext i32 %unLo.1.lcssa.i to i64
  %97 = sext i32 %gtHi.0.i to i64
  br label %if.end65.lr.ph.i

if.end65.lr.ph.i:                                 ; preds = %if.then72.i, %if.end65.lr.ph.lr.ph.i
  %indvars.iv459.i = phi i64 [ %indvars.iv.next460.i, %if.then72.i ], [ %97, %if.end65.lr.ph.lr.ph.i ]
  %unHi.1.ph396.i = phi i32 [ %dec83.i, %if.then72.i ], [ %unHi.0.i, %if.end65.lr.ph.lr.ph.i ]
  %98 = sext i32 %unHi.1.ph396.i to i64
  br label %if.end65.i

if.end65.i:                                       ; preds = %if.end87.i, %if.end65.lr.ph.i
  %indvars.iv457.i = phi i64 [ %indvars.iv.next458.i, %if.end87.i ], [ %98, %if.end65.lr.ph.i ]
  %arrayidx67.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv457.i
  %99 = load i32, i32* %arrayidx67.i, align 4, !tbaa !6
  %idxprom68.i = zext i32 %99 to i64
  %arrayidx69.i = getelementptr inbounds i32, i32* %eclass, i64 %idxprom68.i
  %100 = load i32, i32* %arrayidx69.i, align 4, !tbaa !6
  %sub70.i = sub nsw i32 %100, %med.0.i
  %cmp71.i = icmp eq i32 %sub70.i, 0
  br i1 %cmp71.i, label %if.then72.i, label %if.end84.i

if.then72.i:                                      ; preds = %if.end65.i
  %arrayidx67.i.le628 = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv457.i
  %101 = trunc i64 %indvars.iv457.i to i32
  %arrayidx77.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv459.i
  %102 = load i32, i32* %arrayidx77.i, align 4, !tbaa !6
  store i32 %102, i32* %arrayidx67.i.le628, align 4, !tbaa !6
  store i32 %99, i32* %arrayidx77.i, align 4, !tbaa !6
  %indvars.iv.next460.i = add i64 %indvars.iv459.i, -1
  %dec83.i = add nsw i32 %101, -1
  %cmp63382.i = icmp slt i32 %unLo.1.lcssa.i, %101
  br i1 %cmp63382.i, label %if.end65.lr.ph.i, label %while.end104.loopexit416.i

if.end84.i:                                       ; preds = %if.end65.i
  %cmp85.i = icmp slt i32 %sub70.i, 0
  br i1 %cmp85.i, label %if.end92.i, label %if.end87.i

if.end87.i:                                       ; preds = %if.end84.i
  %indvars.iv.next458.i = add nsw i64 %indvars.iv457.i, -1
  %cmp63.i = icmp sgt i64 %indvars.iv457.i, %96
  br i1 %cmp63.i, label %if.end65.i, label %while.end104.loopexit.i

if.end92.i:                                       ; preds = %if.end84.i
  %arrayidx67.i.le = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv457.i
  %103 = trunc i64 %indvars.iv459.i to i32
  %104 = trunc i64 %indvars.iv457.i to i32
  %arrayidx95.i = getelementptr inbounds i32, i32* %fmap, i64 %96
  %105 = load i32, i32* %arrayidx95.i, align 4, !tbaa !6
  store i32 %99, i32* %arrayidx95.i, align 4, !tbaa !6
  store i32 %105, i32* %arrayidx67.i.le, align 4, !tbaa !6
  %inc102.i = add nsw i32 %unLo.1.lcssa.i, 1
  %dec103.i = add nsw i32 %104, -1
  br label %while.cond32.i

while.end104.loopexit.i:                          ; preds = %if.end87.i
  %106 = trunc i64 %indvars.iv459.i to i32
  %107 = trunc i64 %indvars.iv.next458.i to i32
  br label %while.end104.i

while.end104.loopexit416.i:                       ; preds = %if.then72.i
  %108 = trunc i64 %indvars.iv.next460.i to i32
  br label %while.end104.i

while.end104.i:                                   ; preds = %while.end104.loopexit416.i, %while.end104.loopexit.i, %while.end.i
  %gtHi.1.ph.lcssa364.i = phi i32 [ %106, %while.end104.loopexit.i ], [ %108, %while.end104.loopexit416.i ], [ %gtHi.0.i, %while.end.i ]
  %unHi.1.lcssa.i = phi i32 [ %107, %while.end104.loopexit.i ], [ %dec83.i, %while.end104.loopexit416.i ], [ %unHi.0.i, %while.end.i ]
  %cmp105.i = icmp slt i32 %gtHi.1.ph.lcssa364.i, %ltLo.1.ph.lcssa.i
  br i1 %cmp105.i, label %while.cond.outer.backedge.i, label %if.end107.i

while.cond.outer.backedge.i:                      ; preds = %if.end191.i, %while.end104.i
  %sp.0.ph.be.i = phi i32 [ %sp.1.i, %if.end191.i ], [ %83, %while.end104.i ]
  %cmp367.i = icmp sgt i32 %sp.0.ph.be.i, 0
  br i1 %cmp367.i, label %while.body.lr.ph.i, label %fallbackQSort3.exit

if.end107.i:                                      ; preds = %while.end104.i
  %sub108.i = sub nsw i32 %ltLo.1.ph.lcssa.i, %60
  %sub109.i = sub nsw i32 %unLo.1.lcssa.i, %ltLo.1.ph.lcssa.i
  %cmp110.i = icmp slt i32 %sub108.i, %sub109.i
  %sub108.sub109.i = select i1 %cmp110.i, i32 %sub108.i, i32 %sub109.i
  %cmp115405.i = icmp sgt i32 %sub108.sub109.i, 0
  br i1 %cmp115405.i, label %while.body116.lr.ph.i, label %while.end129.i

while.body116.lr.ph.i:                            ; preds = %if.end107.i
  %sub113.i = sub nsw i32 %unLo.1.lcssa.i, %sub108.sub109.i
  %109 = sext i32 %sub113.i to i64
  %110 = sext i32 %60 to i64
  %111 = add i32 %ltLo.1.ph.lcssa.i, -1
  %112 = sub i32 %111, %unLo.1.lcssa.i
  %113 = add i32 %60, -1
  %114 = sub i32 %113, %ltLo.1.ph.lcssa.i
  %115 = icmp sgt i32 %112, %114
  %smax701 = select i1 %115, i32 %112, i32 %114
  %116 = icmp sgt i32 %smax701, -2
  %smax702 = select i1 %116, i32 %smax701, i32 -2
  %117 = icmp sgt i32 %112, %114
  %smax703 = select i1 %117, i32 %112, i32 %114
  %118 = sub i32 %smax702, %smax703
  %119 = zext i32 %118 to i64
  %120 = add nuw nsw i64 %119, 1
  %min.iters.check704 = icmp ult i64 %120, 8
  br i1 %min.iters.check704, label %while.body116.i.preheader, label %vector.memcheck723

vector.memcheck723:                               ; preds = %while.body116.lr.ph.i
  %scevgep706 = getelementptr i32, i32* %fmap, i64 %110
  %121 = add i32 %ltLo.1.ph.lcssa.i, -1
  %122 = sub i32 %121, %unLo.1.lcssa.i
  %123 = add i32 %60, -1
  %124 = sub i32 %123, %ltLo.1.ph.lcssa.i
  %125 = icmp sgt i32 %122, %124
  %smax709 = select i1 %125, i32 %122, i32 %124
  %126 = icmp sgt i32 %smax709, -2
  %smax710 = select i1 %126, i32 %smax709, i32 -2
  %127 = icmp sgt i32 %122, %124
  %smax711 = select i1 %127, i32 %122, i32 %124
  %128 = sub i32 %smax710, %smax711
  %129 = zext i32 %128 to i64
  %130 = add nsw i64 %110, %129
  %scevgep712 = getelementptr i32, i32* %scevgep708, i64 %130
  %scevgep714 = getelementptr i32, i32* %fmap, i64 %109
  %131 = sext i32 %unLo.1.lcssa.i to i64
  %132 = add nsw i64 %131, %129
  %133 = sext i32 %sub108.sub109.i to i64
  %134 = sub nsw i64 %132, %133
  %scevgep717 = getelementptr i32, i32* %scevgep716, i64 %134
  %bound0719 = icmp ult i32* %scevgep706, %scevgep717
  %bound1720 = icmp ult i32* %scevgep714, %scevgep712
  %memcheck.conflict722 = and i1 %bound0719, %bound1720
  br i1 %memcheck.conflict722, label %while.body116.i.preheader, label %vector.ph724

vector.ph724:                                     ; preds = %vector.memcheck723
  %135 = add i32 %118, 1
  %136 = and i32 %135, 7
  %n.mod.vf725 = zext i32 %136 to i64
  %n.vec726 = sub nsw i64 %120, %n.mod.vf725
  %ind.end730 = add nsw i64 %n.vec726, %110
  %ind.end732 = add nsw i64 %n.vec726, %109
  %cast.crd734 = trunc i64 %n.vec726 to i32
  %ind.end735 = sub i32 %sub108.sub109.i, %cast.crd734
  br label %vector.body698

vector.body698:                                   ; preds = %vector.body698, %vector.ph724
  %index727 = phi i64 [ 0, %vector.ph724 ], [ %index.next728, %vector.body698 ]
  %137 = add i64 %index727, %110
  %138 = add i64 %index727, %109
  %139 = getelementptr inbounds i32, i32* %fmap, i64 %137
  %140 = bitcast i32* %139 to <4 x i32>*
  %wide.load752 = load <4 x i32>, <4 x i32>* %140, align 4, !tbaa !6, !alias.scope !51, !noalias !54
  %141 = getelementptr i32, i32* %139, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  %wide.load753 = load <4 x i32>, <4 x i32>* %142, align 4, !tbaa !6, !alias.scope !51, !noalias !54
  %143 = getelementptr inbounds i32, i32* %fmap, i64 %138
  %144 = bitcast i32* %143 to <4 x i32>*
  %wide.load754 = load <4 x i32>, <4 x i32>* %144, align 4, !tbaa !6, !alias.scope !54
  %145 = getelementptr i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  %wide.load755 = load <4 x i32>, <4 x i32>* %146, align 4, !tbaa !6, !alias.scope !54
  %147 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %wide.load754, <4 x i32>* %147, align 4, !tbaa !6, !alias.scope !51, !noalias !54
  %148 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %wide.load755, <4 x i32>* %148, align 4, !tbaa !6, !alias.scope !51, !noalias !54
  %149 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %wide.load752, <4 x i32>* %149, align 4, !tbaa !6, !alias.scope !54
  %150 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %wide.load753, <4 x i32>* %150, align 4, !tbaa !6, !alias.scope !54
  %index.next728 = add i64 %index727, 8
  %151 = icmp eq i64 %index.next728, %n.vec726
  br i1 %151, label %middle.block699, label %vector.body698, !llvm.loop !56

middle.block699:                                  ; preds = %vector.body698
  %cmp.n736 = icmp eq i32 %136, 0
  br i1 %cmp.n736, label %while.end129.i, label %while.body116.i.preheader

while.body116.i.preheader:                        ; preds = %middle.block699, %vector.memcheck723, %while.body116.lr.ph.i
  %indvars.iv463.i.ph = phi i64 [ %110, %vector.memcheck723 ], [ %110, %while.body116.lr.ph.i ], [ %ind.end730, %middle.block699 ]
  %indvars.iv461.i.ph = phi i64 [ %109, %vector.memcheck723 ], [ %109, %while.body116.lr.ph.i ], [ %ind.end732, %middle.block699 ]
  %yyn.0408.i.ph = phi i32 [ %sub108.sub109.i, %vector.memcheck723 ], [ %sub108.sub109.i, %while.body116.lr.ph.i ], [ %ind.end735, %middle.block699 ]
  br label %while.body116.i

while.body116.i:                                  ; preds = %while.body116.i, %while.body116.i.preheader
  %indvars.iv463.i = phi i64 [ %indvars.iv.next464.i, %while.body116.i ], [ %indvars.iv463.i.ph, %while.body116.i.preheader ]
  %indvars.iv461.i = phi i64 [ %indvars.iv.next462.i, %while.body116.i ], [ %indvars.iv461.i.ph, %while.body116.i.preheader ]
  %yyn.0408.i = phi i32 [ %dec128.i, %while.body116.i ], [ %yyn.0408.i.ph, %while.body116.i.preheader ]
  %arrayidx119.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv463.i
  %152 = load i32, i32* %arrayidx119.i, align 4, !tbaa !6
  %arrayidx121.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv461.i
  %153 = load i32, i32* %arrayidx121.i, align 4, !tbaa !6
  store i32 %153, i32* %arrayidx119.i, align 4, !tbaa !6
  store i32 %152, i32* %arrayidx121.i, align 4, !tbaa !6
  %indvars.iv.next464.i = add nsw i64 %indvars.iv463.i, 1
  %indvars.iv.next462.i = add nsw i64 %indvars.iv461.i, 1
  %dec128.i = add nsw i32 %yyn.0408.i, -1
  %cmp115.i = icmp sgt i32 %yyn.0408.i, 1
  br i1 %cmp115.i, label %while.body116.i, label %while.end129.i, !llvm.loop !57

while.end129.i:                                   ; preds = %while.body116.i, %middle.block699, %if.end107.i
  %sub130.i = sub nsw i32 %61, %gtHi.1.ph.lcssa364.i
  %sub131.i = sub nsw i32 %gtHi.1.ph.lcssa364.i, %unHi.1.lcssa.i
  %cmp132.i = icmp slt i32 %sub130.i, %sub131.i
  %sub130.sub131.i = select i1 %cmp132.i, i32 %sub130.i, i32 %sub131.i
  %cmp145410.i = icmp sgt i32 %sub130.sub131.i, 0
  br i1 %cmp145410.i, label %while.body146.lr.ph.i, label %while.end159.i

while.body146.lr.ph.i:                            ; preds = %while.end129.i
  %sub141.i = sub nsw i32 %61, %sub130.sub131.i
  %154 = sext i32 %sub141.i to i64
  %155 = sext i32 %unLo.1.lcssa.i to i64
  %156 = add i32 %gtHi.1.ph.lcssa364.i, -1
  %157 = sub i32 %156, %61
  %158 = add i32 %unHi.1.lcssa.i, -1
  %159 = sub i32 %158, %gtHi.1.ph.lcssa364.i
  %160 = icmp sgt i32 %157, %159
  %smax664 = select i1 %160, i32 %157, i32 %159
  %161 = icmp sgt i32 %smax664, -2
  %smax665 = select i1 %161, i32 %smax664, i32 -2
  %162 = icmp sgt i32 %157, %159
  %smax666 = select i1 %162, i32 %157, i32 %159
  %163 = sub i32 %smax665, %smax666
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %164, 1
  %min.iters.check = icmp ult i64 %165, 8
  br i1 %min.iters.check, label %while.body146.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %while.body146.lr.ph.i
  %scevgep = getelementptr i32, i32* %fmap, i64 %155
  %166 = add i32 %gtHi.1.ph.lcssa364.i, -1
  %167 = sub i32 %166, %61
  %168 = add i32 %unHi.1.lcssa.i, -1
  %169 = sub i32 %168, %gtHi.1.ph.lcssa364.i
  %170 = icmp sgt i32 %167, %169
  %smax669 = select i1 %170, i32 %167, i32 %169
  %171 = icmp sgt i32 %smax669, -2
  %smax670 = select i1 %171, i32 %smax669, i32 -2
  %172 = icmp sgt i32 %167, %169
  %smax671 = select i1 %172, i32 %167, i32 %169
  %173 = sub i32 %smax670, %smax671
  %174 = zext i32 %173 to i64
  %175 = add nsw i64 %155, %174
  %scevgep672 = getelementptr i32, i32* %scevgep668, i64 %175
  %scevgep675 = getelementptr i32, i32* %scevgep674, i64 %154
  %176 = sext i32 %61 to i64
  %177 = add nsw i64 %176, %174
  %178 = sext i32 %sub130.sub131.i to i64
  %179 = sub nsw i64 %177, %178
  %scevgep678 = getelementptr i32, i32* %scevgep677, i64 %179
  %bound0 = icmp ult i32* %scevgep, %scevgep678
  %bound1 = icmp ult i32* %scevgep675, %scevgep672
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %while.body146.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %180 = add i32 %163, 1
  %181 = and i32 %180, 7
  %n.mod.vf = zext i32 %181 to i64
  %n.vec = sub nsw i64 %165, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %155
  %ind.end681 = add nsw i64 %n.vec, %154
  %cast.crd = trunc i64 %n.vec to i32
  %ind.end683 = sub i32 %sub130.sub131.i, %cast.crd
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %182 = add i64 %index, %155
  %183 = add i64 %index, %154
  %184 = add nsw i64 %183, 1
  %185 = getelementptr inbounds i32, i32* %fmap, i64 %182
  %186 = bitcast i32* %185 to <4 x i32>*
  %wide.load = load <4 x i32>, <4 x i32>* %186, align 4, !tbaa !6, !alias.scope !58, !noalias !61
  %187 = getelementptr i32, i32* %185, i64 4
  %188 = bitcast i32* %187 to <4 x i32>*
  %wide.load695 = load <4 x i32>, <4 x i32>* %188, align 4, !tbaa !6, !alias.scope !58, !noalias !61
  %189 = getelementptr inbounds i32, i32* %fmap, i64 %184
  %190 = bitcast i32* %189 to <4 x i32>*
  %wide.load696 = load <4 x i32>, <4 x i32>* %190, align 4, !tbaa !6, !alias.scope !61
  %191 = getelementptr i32, i32* %189, i64 4
  %192 = bitcast i32* %191 to <4 x i32>*
  %wide.load697 = load <4 x i32>, <4 x i32>* %192, align 4, !tbaa !6, !alias.scope !61
  %193 = bitcast i32* %185 to <4 x i32>*
  store <4 x i32> %wide.load696, <4 x i32>* %193, align 4, !tbaa !6, !alias.scope !58, !noalias !61
  %194 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %wide.load697, <4 x i32>* %194, align 4, !tbaa !6, !alias.scope !58, !noalias !61
  %195 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %wide.load, <4 x i32>* %195, align 4, !tbaa !6, !alias.scope !61
  %196 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %wide.load695, <4 x i32>* %196, align 4, !tbaa !6, !alias.scope !61
  %index.next = add i64 %index, 8
  %197 = icmp eq i64 %index.next, %n.vec
  br i1 %197, label %middle.block, label %vector.body, !llvm.loop !63

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i32 %181, 0
  br i1 %cmp.n, label %while.end159.i, label %while.body146.i.preheader

while.body146.i.preheader:                        ; preds = %middle.block, %vector.memcheck, %while.body146.lr.ph.i
  %indvars.iv469.i.ph = phi i64 [ %155, %vector.memcheck ], [ %155, %while.body146.lr.ph.i ], [ %ind.end, %middle.block ]
  %indvars.iv467.i.ph = phi i64 [ %154, %vector.memcheck ], [ %154, %while.body146.lr.ph.i ], [ %ind.end681, %middle.block ]
  %yyn143.0412.i.ph = phi i32 [ %sub130.sub131.i, %vector.memcheck ], [ %sub130.sub131.i, %while.body146.lr.ph.i ], [ %ind.end683, %middle.block ]
  br label %while.body146.i

while.body146.i:                                  ; preds = %while.body146.i, %while.body146.i.preheader
  %indvars.iv469.i = phi i64 [ %indvars.iv.next470.i, %while.body146.i ], [ %indvars.iv469.i.ph, %while.body146.i.preheader ]
  %indvars.iv467.i = phi i64 [ %indvars.iv.next468.i, %while.body146.i ], [ %indvars.iv467.i.ph, %while.body146.i.preheader ]
  %yyn143.0412.i = phi i32 [ %dec158.i, %while.body146.i ], [ %yyn143.0412.i.ph, %while.body146.i.preheader ]
  %indvars.iv.next468.i = add nsw i64 %indvars.iv467.i, 1
  %arrayidx149.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv469.i
  %198 = load i32, i32* %arrayidx149.i, align 4, !tbaa !6
  %arrayidx151.i = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv.next468.i
  %199 = load i32, i32* %arrayidx151.i, align 4, !tbaa !6
  store i32 %199, i32* %arrayidx149.i, align 4, !tbaa !6
  store i32 %198, i32* %arrayidx151.i, align 4, !tbaa !6
  %indvars.iv.next470.i = add nsw i64 %indvars.iv469.i, 1
  %dec158.i = add nsw i32 %yyn143.0412.i, -1
  %cmp145.i = icmp sgt i32 %yyn143.0412.i, 1
  br i1 %cmp145.i, label %while.body146.i, label %while.end159.i, !llvm.loop !64

while.end159.i:                                   ; preds = %while.body146.i, %middle.block, %while.end129.i
  %add160.i = add i32 %60, -1
  %sub161.i = sub i32 %add160.i, %ltLo.1.ph.lcssa.i
  %sub162.i = add i32 %sub161.i, %unLo.1.lcssa.i
  %sub164.i = sub nsw i32 %61, %sub131.i
  %add165.i = add nsw i32 %sub164.i, 1
  %sub166.i = sub nsw i32 %sub162.i, %60
  %sub167.i = sub nsw i32 %61, %add165.i
  %cmp168.i = icmp sgt i32 %sub166.i, %sub167.i
  br i1 %cmp168.i, label %if.then169.i, label %if.else180.i

if.then169.i:                                     ; preds = %while.end159.i
  store i32 %sub162.i, i32* %arrayidx7.i.le, align 4, !tbaa !6
  br label %if.end191.i

if.else180.i:                                     ; preds = %while.end159.i
  store i32 %add165.i, i32* %arrayidx5.i.le, align 4, !tbaa !6
  br label %if.end191.i

if.end191.i:                                      ; preds = %if.else180.i, %if.then169.i
  %.sink756 = phi i32 [ %60, %if.else180.i ], [ %add165.i, %if.then169.i ]
  %sub162.i.sink = phi i32 [ %sub162.i, %if.else180.i ], [ %61, %if.then169.i ]
  %sext.i = shl i64 %indvars.iv.i, 32
  %idxprom186.i = ashr exact i64 %sext.i, 32
  %arrayidx187.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackLo.i, i64 0, i64 %idxprom186.i
  store i32 %.sink756, i32* %arrayidx187.i, align 4, !tbaa !6
  %arrayidx189.i = getelementptr inbounds [100 x i32], [100 x i32]* %stackHi.i, i64 0, i64 %idxprom186.i
  store i32 %sub162.i.sink, i32* %arrayidx189.i, align 4, !tbaa !6
  %sp.1.i = add nsw i32 %82, 1
  br label %while.cond.outer.backedge.i

fallbackQSort3.exit:                              ; preds = %while.cond.outer.backedge.i, %fallbackSimpleSort.exit.i
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %45) #2
  call void @llvm.lifetime.end.p0i8(i64 400, i8* nonnull %44) #2
  %cmp234495 = icmp sgt i32 %k.4, %k.8
  br i1 %cmp234495, label %while.cond129.outer.backedge, label %for.body236.lr.ph

while.cond129.outer.backedge:                     ; preds = %for.inc251, %fallbackQSort3.exit
  br label %while.cond129.outer

for.body236.lr.ph:                                ; preds = %fallbackQSort3.exit
  %200 = sext i32 %sub173.le to i64
  %201 = sext i32 %k.8 to i64
  br label %for.body236

for.body236:                                      ; preds = %for.inc251, %for.body236.lr.ph
  %indvars.iv554 = phi i64 [ %200, %for.body236.lr.ph ], [ %indvars.iv.next555, %for.inc251 ]
  %cc.0496 = phi i32 [ -1, %for.body236.lr.ph ], [ %cc.1, %for.inc251 ]
  %arrayidx238 = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv554
  %202 = load i32, i32* %arrayidx238, align 4, !tbaa !6
  %idxprom239 = zext i32 %202 to i64
  %arrayidx240 = getelementptr inbounds i32, i32* %eclass, i64 %idxprom239
  %203 = load i32, i32* %arrayidx240, align 4, !tbaa !6
  %cmp241 = icmp eq i32 %cc.0496, %203
  br i1 %cmp241, label %for.inc251, label %if.then243

if.then243:                                       ; preds = %for.body236
  %204 = trunc i64 %indvars.iv554 to i32
  %and244 = and i32 %204, 31
  %shl245 = shl i32 1, %and244
  %shr246 = ashr i32 %204, 5
  %idxprom247 = sext i32 %shr246 to i64
  %arrayidx248 = getelementptr inbounds i32, i32* %bhtab, i64 %idxprom247
  %205 = load i32, i32* %arrayidx248, align 4, !tbaa !6
  %or249 = or i32 %205, %shl245
  store i32 %or249, i32* %arrayidx248, align 4, !tbaa !6
  br label %for.inc251

for.inc251:                                       ; preds = %if.then243, %for.body236
  %cc.1 = phi i32 [ %203, %if.then243 ], [ %cc.0496, %for.body236 ]
  %indvars.iv.next555 = add nsw i64 %indvars.iv554, 1
  %cmp234 = icmp slt i64 %indvars.iv.next555, %201
  br i1 %cmp234, label %for.body236, label %while.cond129.outer.backedge

while.end255:                                     ; preds = %if.end221, %if.end172
  br i1 %cmp, label %if.then258, label %if.end260

if.then258:                                       ; preds = %while.end255
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %207 = getelementptr [24 x i8], [24 x i8]* @.str.4, i64 0, i64 0
  %call259 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* %207, i32 %nNotDone.0.ph) #15
  br label %if.end260

if.end260:                                        ; preds = %if.then258, %while.end255
  %mul261 = shl nsw i32 %H.0, 1
  %cmp262 = icmp sgt i32 %mul261, %nblock
  %cmp264 = icmp eq i32 %nNotDone.0.ph, 0
  %or.cond = or i1 %cmp262, %cmp264
  br i1 %or.cond, label %while.end268, label %while.cond

while.end268:                                     ; preds = %if.end260
  br i1 %cmp, label %if.then271, label %if.end273

if.then271:                                       ; preds = %while.end268
  %208 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %209 = getelementptr [34 x i8], [34 x i8]* @.str.5.5, i64 0, i64 0
  %210 = tail call i64 @fwrite(i8* %209, i64 33, i64 1, %struct._IO_FILE* %208) #15
  br label %if.end273

if.end273:                                        ; preds = %if.then271, %while.end268
  br i1 %cmp3506, label %for.body277.lr.ph, label %if.end299

for.body277.lr.ph:                                ; preds = %if.end273
  %wide.trip.count = zext i32 %nblock to i64
  br label %for.body277

for.body277:                                      ; preds = %while.end285, %for.body277.lr.ph
  %indvars.iv543 = phi i64 [ 0, %for.body277.lr.ph ], [ %indvars.iv.next544, %while.end285 ]
  %j.2482 = phi i64 [ 0, %for.body277.lr.ph ], [ %indvars.iv, %while.end285 ]
  %sext = shl i64 %j.2482, 32
  %211 = ashr exact i64 %sext, 32
  br label %while.cond278

while.cond278:                                    ; preds = %while.cond278, %for.body277
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.cond278 ], [ %211, %for.body277 ]
  %arrayidx280 = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %indvars.iv
  %212 = load i32, i32* %arrayidx280, align 4, !tbaa !6
  %cmp281 = icmp eq i32 %212, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %cmp281, label %while.cond278, label %while.end285

while.end285:                                     ; preds = %while.cond278
  %arrayidx280.le = getelementptr inbounds [256 x i32], [256 x i32]* %ftabCopy, i64 0, i64 %indvars.iv
  %dec = add nsw i32 %212, -1
  store i32 %dec, i32* %arrayidx280.le, align 4, !tbaa !6
  %conv288 = trunc i64 %indvars.iv to i8
  %arrayidx290 = getelementptr inbounds i32, i32* %fmap, i64 %indvars.iv543
  %213 = load i32, i32* %arrayidx290, align 4, !tbaa !6
  %idxprom291 = zext i32 %213 to i64
  %arrayidx292 = getelementptr inbounds i8, i8* %2, i64 %idxprom291
  store i8 %conv288, i8* %arrayidx292, align 1, !tbaa !12
  %indvars.iv.next544 = add nuw nsw i64 %indvars.iv543, 1
  %exitcond = icmp eq i64 %indvars.iv.next544, %wide.trip.count
  br i1 %exitcond, label %for.end295, label %for.body277

for.end295:                                       ; preds = %while.end285
  %214 = trunc i64 %indvars.iv to i32
  %phitmp = icmp slt i32 %214, 256
  br i1 %phitmp, label %if.end299, label %if.then298

if.then298:                                       ; preds = %for.end295
  tail call void @BZ2_bz__AssertH__fail(i32 1005) #2
  br label %if.end299

if.end299:                                        ; preds = %if.then298, %for.end295, %if.end273
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 1028, i8* nonnull %0) #2
  ret void
}

; Function Attrs: norecurse nounwind uwtable
define internal fastcc zeroext i8 @mainGtU(i32 %i1, i32 %i2, i8* readonly %block, i16* nocapture readonly %quadrant, i32 %nblock, i32* nocapture %budget) unnamed_addr #0 {
entry:
  %idxprom = zext i32 %i1 to i64
  %arrayidx = getelementptr inbounds i8, i8* %block, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !12
  %idxprom1 = zext i32 %i2 to i64
  %arrayidx2 = getelementptr inbounds i8, i8* %block, i64 %idxprom1
  %1 = load i8, i8* %arrayidx2, align 1, !tbaa !12
  %cmp = icmp eq i8 %0, %1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cmp7 = icmp ugt i8 %0, %1
  br label %cleanup

if.end:                                           ; preds = %entry
  %inc = add i32 %i1, 1
  %inc10 = add i32 %i2, 1
  %idxprom11 = zext i32 %inc to i64
  %arrayidx12 = getelementptr inbounds i8, i8* %block, i64 %idxprom11
  %2 = load i8, i8* %arrayidx12, align 1, !tbaa !12
  %idxprom13 = zext i32 %inc10 to i64
  %arrayidx14 = getelementptr inbounds i8, i8* %block, i64 %idxprom13
  %3 = load i8, i8* %arrayidx14, align 1, !tbaa !12
  %cmp17 = icmp eq i8 %2, %3
  br i1 %cmp17, label %if.end25, label %if.then19

if.then19:                                        ; preds = %if.end
  %cmp22 = icmp ugt i8 %2, %3
  br label %cleanup

if.end25:                                         ; preds = %if.end
  %inc26 = add i32 %i1, 2
  %inc27 = add i32 %i2, 2
  %idxprom28 = zext i32 %inc26 to i64
  %arrayidx29 = getelementptr inbounds i8, i8* %block, i64 %idxprom28
  %4 = load i8, i8* %arrayidx29, align 1, !tbaa !12
  %idxprom30 = zext i32 %inc27 to i64
  %arrayidx31 = getelementptr inbounds i8, i8* %block, i64 %idxprom30
  %5 = load i8, i8* %arrayidx31, align 1, !tbaa !12
  %cmp34 = icmp eq i8 %4, %5
  br i1 %cmp34, label %if.end42, label %if.then36

if.then36:                                        ; preds = %if.end25
  %cmp39 = icmp ugt i8 %4, %5
  br label %cleanup

if.end42:                                         ; preds = %if.end25
  %inc43 = add i32 %i1, 3
  %inc44 = add i32 %i2, 3
  %idxprom45 = zext i32 %inc43 to i64
  %arrayidx46 = getelementptr inbounds i8, i8* %block, i64 %idxprom45
  %6 = load i8, i8* %arrayidx46, align 1, !tbaa !12
  %idxprom47 = zext i32 %inc44 to i64
  %arrayidx48 = getelementptr inbounds i8, i8* %block, i64 %idxprom47
  %7 = load i8, i8* %arrayidx48, align 1, !tbaa !12
  %cmp51 = icmp eq i8 %6, %7
  br i1 %cmp51, label %if.end59, label %if.then53

if.then53:                                        ; preds = %if.end42
  %cmp56 = icmp ugt i8 %6, %7
  br label %cleanup

if.end59:                                         ; preds = %if.end42
  %inc60 = add i32 %i1, 4
  %inc61 = add i32 %i2, 4
  %idxprom62 = zext i32 %inc60 to i64
  %arrayidx63 = getelementptr inbounds i8, i8* %block, i64 %idxprom62
  %8 = load i8, i8* %arrayidx63, align 1, !tbaa !12
  %idxprom64 = zext i32 %inc61 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %block, i64 %idxprom64
  %9 = load i8, i8* %arrayidx65, align 1, !tbaa !12
  %cmp68 = icmp eq i8 %8, %9
  br i1 %cmp68, label %if.end76, label %if.then70

if.then70:                                        ; preds = %if.end59
  %cmp73 = icmp ugt i8 %8, %9
  br label %cleanup

if.end76:                                         ; preds = %if.end59
  %inc77 = add i32 %i1, 5
  %inc78 = add i32 %i2, 5
  %idxprom79 = zext i32 %inc77 to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %block, i64 %idxprom79
  %10 = load i8, i8* %arrayidx80, align 1, !tbaa !12
  %idxprom81 = zext i32 %inc78 to i64
  %arrayidx82 = getelementptr inbounds i8, i8* %block, i64 %idxprom81
  %11 = load i8, i8* %arrayidx82, align 1, !tbaa !12
  %cmp85 = icmp eq i8 %10, %11
  br i1 %cmp85, label %if.end93, label %if.then87

if.then87:                                        ; preds = %if.end76
  %cmp90 = icmp ugt i8 %10, %11
  br label %cleanup

if.end93:                                         ; preds = %if.end76
  %inc94 = add i32 %i1, 6
  %inc95 = add i32 %i2, 6
  %idxprom96 = zext i32 %inc94 to i64
  %arrayidx97 = getelementptr inbounds i8, i8* %block, i64 %idxprom96
  %12 = load i8, i8* %arrayidx97, align 1, !tbaa !12
  %idxprom98 = zext i32 %inc95 to i64
  %arrayidx99 = getelementptr inbounds i8, i8* %block, i64 %idxprom98
  %13 = load i8, i8* %arrayidx99, align 1, !tbaa !12
  %cmp102 = icmp eq i8 %12, %13
  br i1 %cmp102, label %if.end110, label %if.then104

if.then104:                                       ; preds = %if.end93
  %cmp107 = icmp ugt i8 %12, %13
  br label %cleanup

if.end110:                                        ; preds = %if.end93
  %inc111 = add i32 %i1, 7
  %inc112 = add i32 %i2, 7
  %idxprom113 = zext i32 %inc111 to i64
  %arrayidx114 = getelementptr inbounds i8, i8* %block, i64 %idxprom113
  %14 = load i8, i8* %arrayidx114, align 1, !tbaa !12
  %idxprom115 = zext i32 %inc112 to i64
  %arrayidx116 = getelementptr inbounds i8, i8* %block, i64 %idxprom115
  %15 = load i8, i8* %arrayidx116, align 1, !tbaa !12
  %cmp119 = icmp eq i8 %14, %15
  br i1 %cmp119, label %if.end127, label %if.then121

if.then121:                                       ; preds = %if.end110
  %cmp124 = icmp ugt i8 %14, %15
  br label %cleanup

if.end127:                                        ; preds = %if.end110
  %inc128 = add i32 %i1, 8
  %inc129 = add i32 %i2, 8
  %idxprom130 = zext i32 %inc128 to i64
  %arrayidx131 = getelementptr inbounds i8, i8* %block, i64 %idxprom130
  %16 = load i8, i8* %arrayidx131, align 1, !tbaa !12
  %idxprom132 = zext i32 %inc129 to i64
  %arrayidx133 = getelementptr inbounds i8, i8* %block, i64 %idxprom132
  %17 = load i8, i8* %arrayidx133, align 1, !tbaa !12
  %cmp136 = icmp eq i8 %16, %17
  br i1 %cmp136, label %if.end144, label %if.then138

if.then138:                                       ; preds = %if.end127
  %cmp141 = icmp ugt i8 %16, %17
  br label %cleanup

if.end144:                                        ; preds = %if.end127
  %inc145 = add i32 %i1, 9
  %inc146 = add i32 %i2, 9
  %idxprom147 = zext i32 %inc145 to i64
  %arrayidx148 = getelementptr inbounds i8, i8* %block, i64 %idxprom147
  %18 = load i8, i8* %arrayidx148, align 1, !tbaa !12
  %idxprom149 = zext i32 %inc146 to i64
  %arrayidx150 = getelementptr inbounds i8, i8* %block, i64 %idxprom149
  %19 = load i8, i8* %arrayidx150, align 1, !tbaa !12
  %cmp153 = icmp eq i8 %18, %19
  br i1 %cmp153, label %if.end161, label %if.then155

if.then155:                                       ; preds = %if.end144
  %cmp158 = icmp ugt i8 %18, %19
  br label %cleanup

if.end161:                                        ; preds = %if.end144
  %inc162 = add i32 %i1, 10
  %inc163 = add i32 %i2, 10
  %idxprom164 = zext i32 %inc162 to i64
  %arrayidx165 = getelementptr inbounds i8, i8* %block, i64 %idxprom164
  %20 = load i8, i8* %arrayidx165, align 1, !tbaa !12
  %idxprom166 = zext i32 %inc163 to i64
  %arrayidx167 = getelementptr inbounds i8, i8* %block, i64 %idxprom166
  %21 = load i8, i8* %arrayidx167, align 1, !tbaa !12
  %cmp170 = icmp eq i8 %20, %21
  br i1 %cmp170, label %if.end178, label %if.then172

if.then172:                                       ; preds = %if.end161
  %cmp175 = icmp ugt i8 %20, %21
  br label %cleanup

if.end178:                                        ; preds = %if.end161
  %inc179 = add i32 %i1, 11
  %inc180 = add i32 %i2, 11
  %idxprom181 = zext i32 %inc179 to i64
  %arrayidx182 = getelementptr inbounds i8, i8* %block, i64 %idxprom181
  %22 = load i8, i8* %arrayidx182, align 1, !tbaa !12
  %idxprom183 = zext i32 %inc180 to i64
  %arrayidx184 = getelementptr inbounds i8, i8* %block, i64 %idxprom183
  %23 = load i8, i8* %arrayidx184, align 1, !tbaa !12
  %cmp187 = icmp eq i8 %22, %23
  br i1 %cmp187, label %if.end195, label %if.then189

if.then189:                                       ; preds = %if.end178
  %cmp192 = icmp ugt i8 %22, %23
  br label %cleanup

if.end195:                                        ; preds = %if.end178
  %inc196 = add i32 %i1, 12
  %inc197 = add i32 %i2, 12
  %add = add i32 %nblock, 8
  br label %do.body

do.body:                                          ; preds = %if.end451, %if.end195
  %i2.addr.0 = phi i32 [ %inc197, %if.end195 ], [ %i2.addr.1, %if.end451 ]
  %i1.addr.0 = phi i32 [ %inc196, %if.end195 ], [ %spec.select, %if.end451 ]
  %k.0 = phi i32 [ %add, %if.end195 ], [ %sub463, %if.end451 ]
  %idxprom198 = zext i32 %i1.addr.0 to i64
  %arrayidx199 = getelementptr inbounds i8, i8* %block, i64 %idxprom198
  %24 = load i8, i8* %arrayidx199, align 1, !tbaa !12
  %idxprom200 = zext i32 %i2.addr.0 to i64
  %arrayidx201 = getelementptr inbounds i8, i8* %block, i64 %idxprom200
  %25 = load i8, i8* %arrayidx201, align 1, !tbaa !12
  %cmp204 = icmp eq i8 %24, %25
  br i1 %cmp204, label %if.end212, label %if.then206

if.then206:                                       ; preds = %do.body
  %cmp209 = icmp ugt i8 %24, %25
  br label %cleanup

if.end212:                                        ; preds = %do.body
  %arrayidx214 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom198
  %26 = load i16, i16* %arrayidx214, align 2, !tbaa !33
  %arrayidx216 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom200
  %27 = load i16, i16* %arrayidx216, align 2, !tbaa !33
  %cmp219 = icmp eq i16 %26, %27
  br i1 %cmp219, label %if.end227, label %if.then221

if.then221:                                       ; preds = %if.end212
  %cmp224 = icmp ugt i16 %26, %27
  br label %cleanup

if.end227:                                        ; preds = %if.end212
  %inc228 = add i32 %i1.addr.0, 1
  %inc229 = add i32 %i2.addr.0, 1
  %idxprom230 = zext i32 %inc228 to i64
  %arrayidx231 = getelementptr inbounds i8, i8* %block, i64 %idxprom230
  %28 = load i8, i8* %arrayidx231, align 1, !tbaa !12
  %idxprom232 = zext i32 %inc229 to i64
  %arrayidx233 = getelementptr inbounds i8, i8* %block, i64 %idxprom232
  %29 = load i8, i8* %arrayidx233, align 1, !tbaa !12
  %cmp236 = icmp eq i8 %28, %29
  br i1 %cmp236, label %if.end244, label %if.then238

if.then238:                                       ; preds = %if.end227
  %cmp241 = icmp ugt i8 %28, %29
  br label %cleanup

if.end244:                                        ; preds = %if.end227
  %arrayidx246 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom230
  %30 = load i16, i16* %arrayidx246, align 2, !tbaa !33
  %arrayidx248 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom232
  %31 = load i16, i16* %arrayidx248, align 2, !tbaa !33
  %cmp251 = icmp eq i16 %30, %31
  br i1 %cmp251, label %if.end259, label %if.then253

if.then253:                                       ; preds = %if.end244
  %cmp256 = icmp ugt i16 %30, %31
  br label %cleanup

if.end259:                                        ; preds = %if.end244
  %inc260 = add i32 %i1.addr.0, 2
  %inc261 = add i32 %i2.addr.0, 2
  %idxprom262 = zext i32 %inc260 to i64
  %arrayidx263 = getelementptr inbounds i8, i8* %block, i64 %idxprom262
  %32 = load i8, i8* %arrayidx263, align 1, !tbaa !12
  %idxprom264 = zext i32 %inc261 to i64
  %arrayidx265 = getelementptr inbounds i8, i8* %block, i64 %idxprom264
  %33 = load i8, i8* %arrayidx265, align 1, !tbaa !12
  %cmp268 = icmp eq i8 %32, %33
  br i1 %cmp268, label %if.end276, label %if.then270

if.then270:                                       ; preds = %if.end259
  %cmp273 = icmp ugt i8 %32, %33
  br label %cleanup

if.end276:                                        ; preds = %if.end259
  %arrayidx278 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom262
  %34 = load i16, i16* %arrayidx278, align 2, !tbaa !33
  %arrayidx280 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom264
  %35 = load i16, i16* %arrayidx280, align 2, !tbaa !33
  %cmp283 = icmp eq i16 %34, %35
  br i1 %cmp283, label %if.end291, label %if.then285

if.then285:                                       ; preds = %if.end276
  %cmp288 = icmp ugt i16 %34, %35
  br label %cleanup

if.end291:                                        ; preds = %if.end276
  %inc292 = add i32 %i1.addr.0, 3
  %inc293 = add i32 %i2.addr.0, 3
  %idxprom294 = zext i32 %inc292 to i64
  %arrayidx295 = getelementptr inbounds i8, i8* %block, i64 %idxprom294
  %36 = load i8, i8* %arrayidx295, align 1, !tbaa !12
  %idxprom296 = zext i32 %inc293 to i64
  %arrayidx297 = getelementptr inbounds i8, i8* %block, i64 %idxprom296
  %37 = load i8, i8* %arrayidx297, align 1, !tbaa !12
  %cmp300 = icmp eq i8 %36, %37
  br i1 %cmp300, label %if.end308, label %if.then302

if.then302:                                       ; preds = %if.end291
  %cmp305 = icmp ugt i8 %36, %37
  br label %cleanup

if.end308:                                        ; preds = %if.end291
  %arrayidx310 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom294
  %38 = load i16, i16* %arrayidx310, align 2, !tbaa !33
  %arrayidx312 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom296
  %39 = load i16, i16* %arrayidx312, align 2, !tbaa !33
  %cmp315 = icmp eq i16 %38, %39
  br i1 %cmp315, label %if.end323, label %if.then317

if.then317:                                       ; preds = %if.end308
  %cmp320 = icmp ugt i16 %38, %39
  br label %cleanup

if.end323:                                        ; preds = %if.end308
  %inc324 = add i32 %i1.addr.0, 4
  %inc325 = add i32 %i2.addr.0, 4
  %idxprom326 = zext i32 %inc324 to i64
  %arrayidx327 = getelementptr inbounds i8, i8* %block, i64 %idxprom326
  %40 = load i8, i8* %arrayidx327, align 1, !tbaa !12
  %idxprom328 = zext i32 %inc325 to i64
  %arrayidx329 = getelementptr inbounds i8, i8* %block, i64 %idxprom328
  %41 = load i8, i8* %arrayidx329, align 1, !tbaa !12
  %cmp332 = icmp eq i8 %40, %41
  br i1 %cmp332, label %if.end340, label %if.then334

if.then334:                                       ; preds = %if.end323
  %cmp337 = icmp ugt i8 %40, %41
  br label %cleanup

if.end340:                                        ; preds = %if.end323
  %arrayidx342 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom326
  %42 = load i16, i16* %arrayidx342, align 2, !tbaa !33
  %arrayidx344 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom328
  %43 = load i16, i16* %arrayidx344, align 2, !tbaa !33
  %cmp347 = icmp eq i16 %42, %43
  br i1 %cmp347, label %if.end355, label %if.then349

if.then349:                                       ; preds = %if.end340
  %cmp352 = icmp ugt i16 %42, %43
  br label %cleanup

if.end355:                                        ; preds = %if.end340
  %inc356 = add i32 %i1.addr.0, 5
  %inc357 = add i32 %i2.addr.0, 5
  %idxprom358 = zext i32 %inc356 to i64
  %arrayidx359 = getelementptr inbounds i8, i8* %block, i64 %idxprom358
  %44 = load i8, i8* %arrayidx359, align 1, !tbaa !12
  %idxprom360 = zext i32 %inc357 to i64
  %arrayidx361 = getelementptr inbounds i8, i8* %block, i64 %idxprom360
  %45 = load i8, i8* %arrayidx361, align 1, !tbaa !12
  %cmp364 = icmp eq i8 %44, %45
  br i1 %cmp364, label %if.end372, label %if.then366

if.then366:                                       ; preds = %if.end355
  %cmp369 = icmp ugt i8 %44, %45
  br label %cleanup

if.end372:                                        ; preds = %if.end355
  %arrayidx374 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom358
  %46 = load i16, i16* %arrayidx374, align 2, !tbaa !33
  %arrayidx376 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom360
  %47 = load i16, i16* %arrayidx376, align 2, !tbaa !33
  %cmp379 = icmp eq i16 %46, %47
  br i1 %cmp379, label %if.end387, label %if.then381

if.then381:                                       ; preds = %if.end372
  %cmp384 = icmp ugt i16 %46, %47
  br label %cleanup

if.end387:                                        ; preds = %if.end372
  %inc388 = add i32 %i1.addr.0, 6
  %inc389 = add i32 %i2.addr.0, 6
  %idxprom390 = zext i32 %inc388 to i64
  %arrayidx391 = getelementptr inbounds i8, i8* %block, i64 %idxprom390
  %48 = load i8, i8* %arrayidx391, align 1, !tbaa !12
  %idxprom392 = zext i32 %inc389 to i64
  %arrayidx393 = getelementptr inbounds i8, i8* %block, i64 %idxprom392
  %49 = load i8, i8* %arrayidx393, align 1, !tbaa !12
  %cmp396 = icmp eq i8 %48, %49
  br i1 %cmp396, label %if.end404, label %if.then398

if.then398:                                       ; preds = %if.end387
  %cmp401 = icmp ugt i8 %48, %49
  br label %cleanup

if.end404:                                        ; preds = %if.end387
  %arrayidx406 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom390
  %50 = load i16, i16* %arrayidx406, align 2, !tbaa !33
  %arrayidx408 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom392
  %51 = load i16, i16* %arrayidx408, align 2, !tbaa !33
  %cmp411 = icmp eq i16 %50, %51
  br i1 %cmp411, label %if.end419, label %if.then413

if.then413:                                       ; preds = %if.end404
  %cmp416 = icmp ugt i16 %50, %51
  br label %cleanup

if.end419:                                        ; preds = %if.end404
  %inc420 = add i32 %i1.addr.0, 7
  %inc421 = add i32 %i2.addr.0, 7
  %idxprom422 = zext i32 %inc420 to i64
  %arrayidx423 = getelementptr inbounds i8, i8* %block, i64 %idxprom422
  %52 = load i8, i8* %arrayidx423, align 1, !tbaa !12
  %idxprom424 = zext i32 %inc421 to i64
  %arrayidx425 = getelementptr inbounds i8, i8* %block, i64 %idxprom424
  %53 = load i8, i8* %arrayidx425, align 1, !tbaa !12
  %cmp428 = icmp eq i8 %52, %53
  br i1 %cmp428, label %if.end436, label %if.then430

if.then430:                                       ; preds = %if.end419
  %cmp433 = icmp ugt i8 %52, %53
  br label %cleanup

if.end436:                                        ; preds = %if.end419
  %arrayidx438 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom422
  %54 = load i16, i16* %arrayidx438, align 2, !tbaa !33
  %arrayidx440 = getelementptr inbounds i16, i16* %quadrant, i64 %idxprom424
  %55 = load i16, i16* %arrayidx440, align 2, !tbaa !33
  %cmp443 = icmp eq i16 %54, %55
  br i1 %cmp443, label %if.end451, label %if.then445

if.then445:                                       ; preds = %if.end436
  %cmp448 = icmp ugt i16 %54, %55
  br label %cleanup

if.end451:                                        ; preds = %if.end436
  %inc452 = add i32 %i1.addr.0, 8
  %inc453 = add i32 %i2.addr.0, 8
  %cmp454 = icmp ult i32 %inc452, %nblock
  %sub = select i1 %cmp454, i32 0, i32 %nblock
  %spec.select = sub i32 %inc452, %sub
  %cmp458 = icmp ult i32 %inc453, %nblock
  %sub461 = select i1 %cmp458, i32 0, i32 %nblock
  %i2.addr.1 = sub i32 %inc453, %sub461
  %sub463 = add nsw i32 %k.0, -8
  %56 = load i32, i32* %budget, align 4, !tbaa !6
  %dec = add nsw i32 %56, -1
  store i32 %dec, i32* %budget, align 4, !tbaa !6
  %cmp464 = icmp sgt i32 %k.0, 7
  br i1 %cmp464, label %do.body, label %cleanup

cleanup:                                          ; preds = %if.end451, %if.then445, %if.then430, %if.then413, %if.then398, %if.then381, %if.then366, %if.then349, %if.then334, %if.then317, %if.then302, %if.then285, %if.then270, %if.then253, %if.then238, %if.then221, %if.then206, %if.then189, %if.then172, %if.then155, %if.then138, %if.then121, %if.then104, %if.then87, %if.then70, %if.then53, %if.then36, %if.then19, %if.then
  %retval.0.shrunk = phi i1 [ %cmp7, %if.then ], [ %cmp22, %if.then19 ], [ %cmp39, %if.then36 ], [ %cmp56, %if.then53 ], [ %cmp73, %if.then70 ], [ %cmp90, %if.then87 ], [ %cmp107, %if.then104 ], [ %cmp124, %if.then121 ], [ %cmp141, %if.then138 ], [ %cmp158, %if.then155 ], [ %cmp175, %if.then172 ], [ %cmp192, %if.then189 ], [ %cmp209, %if.then206 ], [ %cmp224, %if.then221 ], [ %cmp241, %if.then238 ], [ %cmp256, %if.then253 ], [ %cmp273, %if.then270 ], [ %cmp288, %if.then285 ], [ %cmp305, %if.then302 ], [ %cmp320, %if.then317 ], [ %cmp337, %if.then334 ], [ %cmp352, %if.then349 ], [ %cmp369, %if.then366 ], [ %cmp384, %if.then381 ], [ %cmp401, %if.then398 ], [ %cmp416, %if.then413 ], [ %cmp433, %if.then430 ], [ %cmp448, %if.then445 ], [ false, %if.end451 ]
  %retval.0 = zext i1 %retval.0.shrunk to i8
  ret i8 %retval.0
}

; Function Attrs: nounwind uwtable
define void @compressStream(i32 %stream, i32 %zStream) local_unnamed_addr #1 {
entry:
  %ibuf = alloca [5000 x i8], align 16
  %nbytes_in_lo32 = alloca i32, align 4
  %nbytes_in_hi32 = alloca i32, align 4
  %nbytes_out_lo32 = alloca i32, align 4
  %nbytes_out_hi32 = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %buf_nin = alloca [32 x i8], align 16
  %buf_nout = alloca [32 x i8], align 16
  %nbytes_in = alloca %struct.UInt64, align 1
  %nbytes_out = alloca %struct.UInt64, align 1
  %0 = getelementptr inbounds [5000 x i8], [5000 x i8]* %ibuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5000, i8* nonnull %0) #2
  %1 = bitcast i32* %nbytes_in_lo32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %2 = bitcast i32* %nbytes_in_hi32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  %3 = bitcast i32* %nbytes_out_lo32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  %4 = bitcast i32* %nbytes_out_hi32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #2
  %5 = bitcast i32* %bzerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #2
  %6 = bitcast i32* %bzerr_dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #2
  %7 = load i32, i32* @blockSize100k, align 4, !tbaa !6
  %8 = load i32, i32* @verbosity, align 4, !tbaa !6
  %9 = load i32, i32* @workFactor, align 4, !tbaa !6
  %call = call i8* @BZ2_bzWriteOpen(i32* nonnull %bzerr, i32 %zStream, i32 %7, i32 %8, i32 %9) #2
  %10 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %if.end, label %errhandler

if.end:                                           ; preds = %entry
  %11 = load i32, i32* @verbosity, align 4, !tbaa !6
  %cmp1 = icmp sgt i32 %11, 1
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %fputc = call i32 @fputc(i32 10, %struct._IO_FILE* %12) #15
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  %call.i132 = call i32 @spec_getc(i32 %stream) #2
  %cmp.i133 = icmp eq i32 %call.i132, -1
  br i1 %cmp.i133, label %while.end, label %if.end7.preheader

if.end7.preheader:                                ; preds = %if.end4
  br label %if.end7

while.cond:                                       ; preds = %if.end12
  %call.i = call i32 @spec_getc(i32 %stream) #2
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %while.end, label %if.end7

if.end7:                                          ; preds = %while.cond, %if.end7.preheader
  %call.i134 = phi i32 [ %call.i, %while.cond ], [ %call.i132, %if.end7.preheader ]
  %conv.i = trunc i32 %call.i134 to i8
  %call1.i = call i32 @spec_ungetc(i8 zeroext %conv.i, i32 %stream) #2
  %call8 = call i32 @spec_fread(i8* nonnull %0, i32 1, i32 5000, i32 %stream) #2
  %cmp9 = icmp sgt i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @BZ2_bzWrite(i32* nonnull %bzerr, i8* %call, i8* nonnull %0, i32 %call8) #2
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7
  %13 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp13 = icmp eq i32 %13, 0
  br i1 %cmp13, label %while.cond, label %errhandler

while.end:                                        ; preds = %while.cond, %if.end4
  call void @BZ2_bzWriteClose64(i32* nonnull %bzerr, i8* %call, i32 0, i32* nonnull %nbytes_in_lo32, i32* nonnull %nbytes_in_hi32, i32* nonnull %nbytes_out_lo32, i32* nonnull %nbytes_out_hi32) #2
  %14 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp16 = icmp eq i32 %14, 0
  br i1 %cmp16, label %if.end21, label %errhandler

if.end21:                                         ; preds = %while.end
  %cmp22 = icmp eq i32 %zStream, 1
  br i1 %cmp22, label %if.end27, label %if.then23

if.then23:                                        ; preds = %if.end21
  store i32 0, i32* @outputHandleJustInCase, align 4, !tbaa !6
  br label %if.end27

if.end27:                                         ; preds = %if.then23, %if.end21
  store i32 0, i32* @outputHandleJustInCase, align 4, !tbaa !6
  %15 = load i32, i32* @verbosity, align 4, !tbaa !6
  %cmp31 = icmp sgt i32 %15, 0
  br i1 %cmp31, label %if.then32, label %cleanup

if.then32:                                        ; preds = %if.end27
  %16 = load i32, i32* %nbytes_in_lo32, align 4, !tbaa !6
  %17 = load i32, i32* %nbytes_in_hi32, align 4
  %18 = or i32 %17, %16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %if.then35, label %if.else

if.then35:                                        ; preds = %if.then32
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %21 = getelementptr [22 x i8], [22 x i8]* @.str.1.16, i64 0, i64 0
  %22 = call i64 @fwrite(i8* %21, i64 21, i64 1, %struct._IO_FILE* %20) #15
  br label %cleanup

if.else:                                          ; preds = %if.then32
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nin, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #2
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %buf_nout, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #2
  %25 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #2
  %26 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #2
  %shr.i = lshr i32 %17, 24
  %conv.i76 = trunc i32 %shr.i to i8
  %arrayidx.i = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 7
  store i8 %conv.i76, i8* %arrayidx.i, align 1, !tbaa !12
  %shr1.i = lshr i32 %17, 16
  %conv3.i = trunc i32 %shr1.i to i8
  %arrayidx5.i = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 6
  store i8 %conv3.i, i8* %arrayidx5.i, align 1, !tbaa !12
  %shr6.i = lshr i32 %17, 8
  %conv8.i = trunc i32 %shr6.i to i8
  %arrayidx10.i = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 5
  store i8 %conv8.i, i8* %arrayidx10.i, align 1, !tbaa !12
  %conv12.i = trunc i32 %17 to i8
  %arrayidx14.i = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 4
  store i8 %conv12.i, i8* %arrayidx14.i, align 1, !tbaa !12
  %shr15.i = lshr i32 %16, 24
  %conv17.i = trunc i32 %shr15.i to i8
  %arrayidx19.i = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 3
  store i8 %conv17.i, i8* %arrayidx19.i, align 1, !tbaa !12
  %shr20.i = lshr i32 %16, 16
  %conv22.i = trunc i32 %shr20.i to i8
  %arrayidx24.i = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 2
  store i8 %conv22.i, i8* %arrayidx24.i, align 1, !tbaa !12
  %shr25.i = lshr i32 %16, 8
  %conv27.i = trunc i32 %shr25.i to i8
  %arrayidx29.i = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_in, i64 0, i32 0, i64 1
  store i8 %conv27.i, i8* %arrayidx29.i, align 1, !tbaa !12
  %conv31.i = trunc i32 %16 to i8
  store i8 %conv31.i, i8* %25, align 1, !tbaa !12
  %27 = load i32, i32* %nbytes_out_lo32, align 4, !tbaa !6
  %28 = load i32, i32* %nbytes_out_hi32, align 4, !tbaa !6
  %shr.i77 = lshr i32 %28, 24
  %conv.i78 = trunc i32 %shr.i77 to i8
  %arrayidx.i79 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 7
  store i8 %conv.i78, i8* %arrayidx.i79, align 1, !tbaa !12
  %shr1.i80 = lshr i32 %28, 16
  %conv3.i81 = trunc i32 %shr1.i80 to i8
  %arrayidx5.i82 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 6
  store i8 %conv3.i81, i8* %arrayidx5.i82, align 1, !tbaa !12
  %shr6.i83 = lshr i32 %28, 8
  %conv8.i84 = trunc i32 %shr6.i83 to i8
  %arrayidx10.i85 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 5
  store i8 %conv8.i84, i8* %arrayidx10.i85, align 1, !tbaa !12
  %conv12.i86 = trunc i32 %28 to i8
  %arrayidx14.i87 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 4
  store i8 %conv12.i86, i8* %arrayidx14.i87, align 1, !tbaa !12
  %shr15.i88 = lshr i32 %27, 24
  %conv17.i89 = trunc i32 %shr15.i88 to i8
  %arrayidx19.i90 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 3
  store i8 %conv17.i89, i8* %arrayidx19.i90, align 1, !tbaa !12
  %shr20.i91 = lshr i32 %27, 16
  %conv22.i92 = trunc i32 %shr20.i91 to i8
  %arrayidx24.i93 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 2
  store i8 %conv22.i92, i8* %arrayidx24.i93, align 1, !tbaa !12
  %shr25.i94 = lshr i32 %27, 8
  %conv27.i95 = trunc i32 %shr25.i94 to i8
  %arrayidx29.i96 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %nbytes_out, i64 0, i32 0, i64 1
  store i8 %conv27.i95, i8* %arrayidx29.i96, align 1, !tbaa !12
  %conv31.i97 = trunc i32 %27 to i8
  store i8 %conv31.i97, i8* %26, align 1, !tbaa !12
  %conv.i100 = uitofp i8 %conv31.i to double
  %conv.1.i = uitofp i8 %conv27.i to double
  %mul.1.i = fmul double %conv.1.i, 2.560000e+02
  %add.1.i = fadd double %mul.1.i, %conv.i100
  %conv.2.i = uitofp i8 %conv22.i to double
  %mul.2.i = fmul double %conv.2.i, 6.553600e+04
  %add.2.i = fadd double %mul.2.i, %add.1.i
  %conv.3.i = uitofp i8 %conv17.i to double
  %mul.3.i = fmul double %conv.3.i, 0x4170000000000000
  %add.3.i = fadd double %mul.3.i, %add.2.i
  %conv.4.i = uitofp i8 %conv12.i to double
  %mul.4.i = fmul double %conv.4.i, 0x41F0000000000000
  %add.4.i = fadd double %mul.4.i, %add.3.i
  %conv.5.i = uitofp i8 %conv8.i to double
  %mul.5.i = fmul double %conv.5.i, 0x4270000000000000
  %add.5.i = fadd double %mul.5.i, %add.4.i
  %conv.6.i = uitofp i8 %conv3.i to double
  %mul.6.i = fmul double %conv.6.i, 0x42F0000000000000
  %add.6.i = fadd double %mul.6.i, %add.5.i
  %conv.7.i = uitofp i8 %conv.i76 to double
  %mul.7.i = fmul double %conv.7.i, 0x4370000000000000
  %add.7.i = fadd double %mul.7.i, %add.6.i
  %conv.i102 = uitofp i8 %conv31.i97 to double
  %conv.1.i104 = uitofp i8 %conv27.i95 to double
  %mul.1.i105 = fmul double %conv.1.i104, 2.560000e+02
  %add.1.i106 = fadd double %mul.1.i105, %conv.i102
  %conv.2.i108 = uitofp i8 %conv22.i92 to double
  %mul.2.i109 = fmul double %conv.2.i108, 6.553600e+04
  %add.2.i110 = fadd double %mul.2.i109, %add.1.i106
  %conv.3.i112 = uitofp i8 %conv17.i89 to double
  %mul.3.i113 = fmul double %conv.3.i112, 0x4170000000000000
  %add.3.i114 = fadd double %mul.3.i113, %add.2.i110
  %conv.4.i116 = uitofp i8 %conv12.i86 to double
  %mul.4.i117 = fmul double %conv.4.i116, 0x41F0000000000000
  %add.4.i118 = fadd double %mul.4.i117, %add.3.i114
  %conv.5.i120 = uitofp i8 %conv8.i84 to double
  %mul.5.i121 = fmul double %conv.5.i120, 0x4270000000000000
  %add.5.i122 = fadd double %mul.5.i121, %add.4.i118
  %conv.6.i124 = uitofp i8 %conv3.i81 to double
  %mul.6.i125 = fmul double %conv.6.i124, 0x42F0000000000000
  %add.6.i126 = fadd double %mul.6.i125, %add.5.i122
  %conv.7.i128 = uitofp i8 %conv.i78 to double
  %mul.7.i129 = fmul double %conv.7.i128, 0x4370000000000000
  %add.7.i130 = fadd double %mul.7.i129, %add.6.i126
  call fastcc void @uInt64_toAscii(i8* nonnull %23, %struct.UInt64* nonnull %nbytes_in)
  call fastcc void @uInt64_toAscii(i8* nonnull %24, %struct.UInt64* nonnull %nbytes_out)
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %div = fdiv double %add.7.i, %add.7.i130
  %mul = fmul double %add.7.i130, 8.000000e+00
  %div41 = fdiv double %mul, %add.7.i
  %div42 = fdiv double %add.7.i130, %add.7.i
  %sub = fsub double 1.000000e+00, %div42
  %mul43 = fmul double %sub, 1.000000e+02
  %30 = getelementptr [57 x i8], [57 x i8]* @.str.2.17, i64 0, i64 0
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* %30, double %div, double %div41, double %mul43, i8* nonnull %23, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #2
  br label %cleanup

errhandler:                                       ; preds = %while.end, %if.end12, %entry
  call void @BZ2_bzWriteClose64(i32* nonnull %bzerr_dummy, i8* %call, i32 1, i32* nonnull %nbytes_in_lo32, i32* nonnull %nbytes_in_hi32, i32* nonnull %nbytes_out_lo32, i32* nonnull %nbytes_out_hi32) #2
  %31 = load i32, i32* %bzerr, align 4, !tbaa !6
  switch i32 %31, label %sw.default [
    i32 -9, label %sw.bb
    i32 -3, label %sw.bb49
    i32 -6, label %errhandler_io
  ]

sw.bb:                                            ; preds = %errhandler
  call fastcc void @configError()
  br label %UnifiedUnreachableBlock

sw.bb49:                                          ; preds = %errhandler
  call fastcc void @outOfMemory()
  br label %UnifiedUnreachableBlock

errhandler_io:                                    ; preds = %errhandler
  call fastcc void @ioError()
  br label %UnifiedUnreachableBlock

sw.default:                                       ; preds = %errhandler
  %32 = getelementptr [26 x i8], [26 x i8]* @.str.3.18, i64 0, i64 0
  call fastcc void @panic(i8* %32)
  br label %UnifiedUnreachableBlock

cleanup:                                          ; preds = %if.else, %if.then35, %if.end27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 5000, i8* nonnull %0) #2
  ret void

UnifiedUnreachableBlock:                          ; preds = %sw.default, %errhandler_io, %sw.bb49, %sw.bb
  unreachable
}

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @uInt64_toAscii(i8* nocapture %outbuf, %struct.UInt64* nocapture readonly %n) unnamed_addr #1 {
entry:
  %buf = alloca [32 x i8], align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #2
  %1 = bitcast %struct.UInt64* %n to i64*
  %2 = load i64, i64* %1, align 1, !tbaa !12
  %n_copy.sroa.0.0.extract.trunc = trunc i64 %2 to i32
  %n_copy.sroa.6.0.extract.shift = lshr i64 %2, 8
  %n_copy.sroa.6.0.extract.trunc = trunc i64 %n_copy.sroa.6.0.extract.shift to i32
  %n_copy.sroa.9.0.extract.shift = lshr i64 %2, 16
  %n_copy.sroa.9.0.extract.trunc = trunc i64 %n_copy.sroa.9.0.extract.shift to i32
  %n_copy.sroa.12.0.extract.shift = lshr i64 %2, 24
  %n_copy.sroa.12.0.extract.trunc = trunc i64 %n_copy.sroa.12.0.extract.shift to i32
  %n_copy.sroa.15.0.extract.shift = lshr i64 %2, 32
  %n_copy.sroa.15.0.extract.trunc = trunc i64 %n_copy.sroa.15.0.extract.shift to i32
  %n_copy.sroa.18.0.extract.shift = lshr i64 %2, 40
  %n_copy.sroa.18.0.extract.trunc = trunc i64 %n_copy.sroa.18.0.extract.shift to i32
  %n_copy.sroa.21.0.extract.shift = lshr i64 %2, 48
  %n_copy.sroa.21.0.extract.trunc = trunc i64 %n_copy.sroa.21.0.extract.shift to i32
  %n_copy.sroa.24.0.extract.shift = lshr i64 %2, 56
  %n_copy.sroa.24.0.extract.trunc = trunc i64 %n_copy.sroa.24.0.extract.shift to i8
  br label %do.body

do.body:                                          ; preds = %do.body, %entry
  %indvars.iv45 = phi i64 [ %indvars.iv.next46, %do.body ], [ 0, %entry ]
  %n_copy.sroa.24.0 = phi i8 [ %div.i, %do.body ], [ %n_copy.sroa.24.0.extract.trunc, %entry ]
  %n_copy.sroa.21.0 = phi i32 [ %div.1.i, %do.body ], [ %n_copy.sroa.21.0.extract.trunc, %entry ]
  %n_copy.sroa.18.0 = phi i32 [ %div.2.i, %do.body ], [ %n_copy.sroa.18.0.extract.trunc, %entry ]
  %n_copy.sroa.15.0 = phi i32 [ %div.3.i, %do.body ], [ %n_copy.sroa.15.0.extract.trunc, %entry ]
  %n_copy.sroa.12.0 = phi i32 [ %div.4.i, %do.body ], [ %n_copy.sroa.12.0.extract.trunc, %entry ]
  %n_copy.sroa.9.0 = phi i32 [ %div.5.i, %do.body ], [ %n_copy.sroa.9.0.extract.trunc, %entry ]
  %n_copy.sroa.6.0 = phi i32 [ %div.6.i, %do.body ], [ %n_copy.sroa.6.0.extract.trunc, %entry ]
  %n_copy.sroa.0.0 = phi i32 [ %div.7.i, %do.body ], [ %n_copy.sroa.0.0.extract.trunc, %entry ]
  %div.i = udiv i8 %n_copy.sroa.24.0, 10
  %3 = urem i8 %n_copy.sroa.24.0, 10
  %rem5.i = zext i8 %3 to i32
  %mul.1.i = shl nuw nsw i32 %rem5.i, 8
  %conv.1.i = and i32 %n_copy.sroa.21.0, 255
  %add.1.i = or i32 %mul.1.i, %conv.1.i
  %div.1.i = udiv i32 %add.1.i, 10
  %rem5.1.i = urem i32 %add.1.i, 10
  %mul.2.i = shl nuw nsw i32 %rem5.1.i, 8
  %conv.2.i = and i32 %n_copy.sroa.18.0, 255
  %add.2.i = or i32 %mul.2.i, %conv.2.i
  %div.2.i = udiv i32 %add.2.i, 10
  %rem5.2.i = urem i32 %add.2.i, 10
  %mul.3.i = shl nuw nsw i32 %rem5.2.i, 8
  %conv.3.i = and i32 %n_copy.sroa.15.0, 255
  %add.3.i = or i32 %mul.3.i, %conv.3.i
  %div.3.i = udiv i32 %add.3.i, 10
  %rem5.3.i = urem i32 %add.3.i, 10
  %mul.4.i = shl nuw nsw i32 %rem5.3.i, 8
  %conv.4.i = and i32 %n_copy.sroa.12.0, 255
  %add.4.i = or i32 %mul.4.i, %conv.4.i
  %div.4.i = udiv i32 %add.4.i, 10
  %rem5.4.i = urem i32 %add.4.i, 10
  %mul.5.i = shl nuw nsw i32 %rem5.4.i, 8
  %conv.5.i = and i32 %n_copy.sroa.9.0, 255
  %add.5.i = or i32 %mul.5.i, %conv.5.i
  %div.5.i = udiv i32 %add.5.i, 10
  %rem5.5.i = urem i32 %add.5.i, 10
  %mul.6.i = shl nuw nsw i32 %rem5.5.i, 8
  %conv.6.i = and i32 %n_copy.sroa.6.0, 255
  %add.6.i = or i32 %mul.6.i, %conv.6.i
  %div.6.i = udiv i32 %add.6.i, 10
  %rem5.6.i = urem i32 %add.6.i, 10
  %mul.7.i = shl nuw nsw i32 %rem5.6.i, 8
  %conv.7.i = and i32 %n_copy.sroa.0.0, 255
  %add.7.i = or i32 %mul.7.i, %conv.7.i
  %div.7.i = udiv i32 %add.7.i, 10
  %rem5.7.i = urem i32 %add.7.i, 10
  %4 = trunc i32 %rem5.7.i to i8
  %conv = or i8 %4, 48
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %indvars.iv45
  store i8 %conv, i8* %arrayidx, align 1, !tbaa !12
  %indvars.iv.next46 = add nuw i64 %indvars.iv45, 1
  %5 = or i32 %div.2.i, %div.1.i
  %6 = or i32 %5, %div.3.i
  %7 = or i32 %6, %div.4.i
  %8 = or i32 %7, %div.5.i
  %9 = or i32 %8, %div.6.i
  %10 = or i32 %9, %div.7.i
  %11 = trunc i32 %10 to i8
  %12 = icmp ne i8 %11, 0
  %13 = icmp ugt i8 %n_copy.sroa.24.0, 9
  %tobool = or i1 %13, %12
  br i1 %tobool, label %do.body, label %do.end

do.end:                                           ; preds = %do.body
  %14 = and i64 %indvars.iv.next46, 4294967295
  %arrayidx3 = getelementptr inbounds i8, i8* %outbuf, i64 %14
  store i8 0, i8* %arrayidx3, align 1, !tbaa !12
  %15 = add i64 %indvars.iv45, 1
  %wide.trip.count = and i64 %15, 4294967295
  %min.iters.check = icmp ult i64 %wide.trip.count, 32
  br i1 %min.iters.check, label %for.body.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %do.end
  %16 = add nsw i64 %wide.trip.count, -1
  %17 = trunc i64 %indvars.iv45 to i32
  %18 = trunc i64 %16 to i32
  %19 = sub i32 %17, %18
  %20 = icmp sgt i32 %19, %17
  %21 = icmp ugt i64 %16, 4294967295
  %22 = or i1 %20, %21
  br i1 %22, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.scevcheck
  %n.mod.vf = and i64 %15, 31
  %n.vec = sub nsw i64 %wide.trip.count, %n.mod.vf
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %23 = sub i64 %indvars.iv45, %index
  %24 = shl i64 %23, 32
  %25 = ashr exact i64 %24, 32
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %25
  %27 = getelementptr i8, i8* %26, i64 -15
  %28 = bitcast i8* %27 to <16 x i8>*
  %wide.load = load <16 x i8>, <16 x i8>* %28, align 1, !tbaa !12
  %reverse = shufflevector <16 x i8> %wide.load, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %29 = getelementptr i8, i8* %26, i64 -31
  %30 = bitcast i8* %29 to <16 x i8>*
  %wide.load48 = load <16 x i8>, <16 x i8>* %30, align 1, !tbaa !12
  %reverse49 = shufflevector <16 x i8> %wide.load48, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %31 = getelementptr inbounds i8, i8* %outbuf, i64 %index
  %32 = bitcast i8* %31 to <16 x i8>*
  store <16 x i8> %reverse, <16 x i8>* %32, align 1, !tbaa !12
  %33 = getelementptr i8, i8* %31, i64 16
  %34 = bitcast i8* %33 to <16 x i8>*
  store <16 x i8> %reverse49, <16 x i8>* %34, align 1, !tbaa !12
  %index.next = add i64 %index, 32
  %35 = icmp eq i64 %index.next, %n.vec
  br i1 %35, label %middle.block, label %vector.body, !llvm.loop !65

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %middle.block, %vector.scevcheck, %do.end
  %indvars.iv.ph = phi i64 [ 0, %vector.scevcheck ], [ 0, %do.end ], [ %n.vec, %middle.block ]
  %36 = sub i64 %15, %indvars.iv.ph
  %37 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %36, 1
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.prol.loopexit, label %for.body.prol

for.body.prol:                                    ; preds = %for.body.preheader
  %sub5.prol = sub i64 %indvars.iv45, %indvars.iv.ph
  %sext.prol = shl i64 %sub5.prol, 32
  %idxprom6.prol = ashr exact i64 %sext.prol, 32
  %arrayidx7.prol = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %idxprom6.prol
  %38 = load i8, i8* %arrayidx7.prol, align 1, !tbaa !12
  %arrayidx9.prol = getelementptr inbounds i8, i8* %outbuf, i64 %indvars.iv.ph
  store i8 %38, i8* %arrayidx9.prol, align 1, !tbaa !12
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.ph, 1
  br label %for.body.prol.loopexit

for.body.prol.loopexit:                           ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body.preheader ], [ %indvars.iv.next.prol, %for.body.prol ]
  %39 = icmp eq i64 %37, %indvars.iv.ph
  br i1 %39, label %for.end, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.prol.loopexit
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %indvars.iv = phi i64 [ %indvars.iv.unr, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.body ]
  %sub5 = sub i64 %indvars.iv45, %indvars.iv
  %sext = shl i64 %sub5, 32
  %idxprom6 = ashr exact i64 %sext, 32
  %arrayidx7 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %idxprom6
  %40 = load i8, i8* %arrayidx7, align 1, !tbaa !12
  %arrayidx9 = getelementptr inbounds i8, i8* %outbuf, i64 %indvars.iv
  store i8 %40, i8* %arrayidx9, align 1, !tbaa !12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %sub5.1 = sub i64 %indvars.iv45, %indvars.iv.next
  %sext.1 = shl i64 %sub5.1, 32
  %idxprom6.1 = ashr exact i64 %sext.1, 32
  %arrayidx7.1 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i64 0, i64 %idxprom6.1
  %41 = load i8, i8* %arrayidx7.1, align 1, !tbaa !12
  %arrayidx9.1 = getelementptr inbounds i8, i8* %outbuf, i64 %indvars.iv.next
  store i8 %41, i8* %arrayidx9.1, align 1, !tbaa !12
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, %wide.trip.count
  br i1 %exitcond.1, label %for.end, label %for.body, !llvm.loop !66

for.end:                                          ; preds = %for.body, %for.body.prol.loopexit, %middle.block
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #2
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @configError() unnamed_addr #9 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1 = getelementptr [236 x i8], [236 x i8]* @.str.17.22, i64 0, i64 0
  %2 = tail call i64 @fwrite(i8* %1, i64 235, i64 1, %struct._IO_FILE* %0) #15
  store i32 0, i32* @exitValue, align 4, !tbaa !6
  tail call void @exit(i32 0) #13
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @outOfMemory() unnamed_addr #9 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1 = load i8*, i8** @progName, align 8, !tbaa !18
  %2 = getelementptr [38 x i8], [38 x i8]* @.str.16.21, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %2, i8* %1) #15
  tail call fastcc void @showFileNames()
  tail call fastcc void @cleanUpAndFail()
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @ioError() unnamed_addr #9 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1 = load i8*, i8** @progName, align 8, !tbaa !18
  %2 = getelementptr [65 x i8], [65 x i8]* @.str.15.20, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %2, i8* %1) #15
  %3 = load i8*, i8** @progName, align 8, !tbaa !18
  tail call void @perror(i8* %3) #15
  tail call fastcc void @showFileNames()
  tail call fastcc void @cleanUpAndFail()
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @panic(i8* %s) unnamed_addr #9 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1 = load i8*, i8** @progName, align 8, !tbaa !18
  %2 = getelementptr [148 x i8], [148 x i8]* @.str.10, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %2, i8* %1, i8* %s) #15
  tail call fastcc void @showFileNames()
  tail call fastcc void @cleanUpAndFail()
  unreachable
}

; Function Attrs: nounwind uwtable
define internal fastcc void @showFileNames() unnamed_addr #1 {
entry:
  %0 = load i8, i8* @noisy, align 1, !tbaa !12
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %2 = getelementptr [36 x i8], [36 x i8]* @.str.11.19, i64 0, i64 0
  %3 = getelementptr [1034 x i8], [1034 x i8]* @inName, i64 0, i64 0
  %4 = getelementptr [1034 x i8], [1034 x i8]* @outName, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %2, i8* %3, i8* %4) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @cleanUpAndFail() unnamed_addr #9 {
entry:
  store i32 0, i32* @exitValue, align 4, !tbaa !6
  tail call void @exit(i32 0) #13
  unreachable
}

; Function Attrs: nounwind
declare void @perror(i8* nocapture readonly) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define zeroext i8 @uncompressStream(i32 %zStream, i32 %stream) local_unnamed_addr #1 {
entry:
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %obuf = alloca [5000 x i8], align 16
  %unused = alloca [5000 x i8], align 16
  %unused226 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 0
  %nUnused = alloca i32, align 4
  %unusedTmpV = alloca i8*, align 8
  %0 = bitcast i32* %bzerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %bzerr_dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %2 = getelementptr inbounds [5000 x i8], [5000 x i8]* %obuf, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5000, i8* nonnull %2) #2
  %3 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5000, i8* nonnull %3) #2
  %4 = bitcast i32* %nUnused to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #2
  %5 = bitcast i8** %unusedTmpV to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #2
  store i32 0, i32* %nUnused, align 4, !tbaa !6
  %6 = load i32, i32* @verbosity, align 4, !tbaa !6
  %7 = load i8, i8* @smallMode, align 1, !tbaa !12
  %conv181 = zext i8 %7 to i32
  %call182 = call i8* @BZ2_bzReadOpen(i32* nonnull %bzerr, i32 %zStream, i32 %6, i32 %conv181, i8* nonnull %3, i32 0) #2
  %cmp183 = icmp eq i8* %call182, null
  %8 = load i32, i32* %bzerr, align 4
  %cmp2184 = icmp ne i32 %8, 0
  %or.cond185 = or i1 %cmp183, %cmp2184
  br i1 %or.cond185, label %errhandler, label %if.end.preheader

if.end.preheader:                                 ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.end48, %if.end.preheader
  %call187 = phi i8* [ %call, %if.end48 ], [ %call182, %if.end.preheader ]
  %streamNo.0186 = phi i32 [ %inc, %if.end48 ], [ 0, %if.end.preheader ]
  %inc = add nuw nsw i32 %streamNo.0186, 1
  br label %while.cond4

while.cond4:                                      ; preds = %while.cond4.backedge, %if.end
  %9 = phi i32 [ 0, %if.end ], [ %.be, %while.cond4.backedge ]
  switch i32 %9, label %errhandler [
    i32 0, label %while.body7
    i32 4, label %if.end28
  ]

while.body7:                                      ; preds = %while.cond4
  %call9 = call i32 @BZ2_bzRead(i32* nonnull %bzerr, i8* %call187, i8* nonnull %2, i32 5000) #2
  %10 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp10 = icmp eq i32 %10, -5
  br i1 %cmp10, label %trycat, label %if.end13

if.end13:                                         ; preds = %while.body7
  %11 = or i32 %10, 4
  %12 = icmp eq i32 %11, 4
  %cmp19 = icmp sgt i32 %call9, 0
  %or.cond122 = and i1 %cmp19, %12
  br i1 %or.cond122, label %if.then21, label %while.cond4.backedge

while.cond4.backedge:                             ; preds = %if.then21, %if.end13
  %.be = phi i32 [ %10, %if.end13 ], [ %.pr.pre, %if.then21 ]
  br label %while.cond4

if.then21:                                        ; preds = %if.end13
  %call23 = call i32 @spec_fwrite(i8* nonnull %2, i32 1, i32 %call9, i32 %stream) #2
  %.pr.pre = load i32, i32* %bzerr, align 4, !tbaa !6
  br label %while.cond4.backedge

if.end28:                                         ; preds = %while.cond4
  call void @BZ2_bzReadGetUnused(i32* nonnull %bzerr, i8* %call187, i8** nonnull %unusedTmpV, i32* nonnull %nUnused) #2
  %13 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp29 = icmp eq i32 %13, 0
  br i1 %cmp29, label %if.end32, label %if.then31

if.then31:                                        ; preds = %if.end28
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.5.25, i64 0, i64 0
  call fastcc void @panic(i8* %14)
  br label %UnifiedUnreachableBlock

if.end32:                                         ; preds = %if.end28
  %15 = load i8*, i8** %unusedTmpV, align 8, !tbaa !18
  %16 = load i32, i32* %nUnused, align 4, !tbaa !6
  %cmp33179 = icmp sgt i32 %16, 0
  br i1 %cmp33179, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end32
  %17 = sext i32 %16 to i64
  %min.iters.check = icmp ult i32 %16, 32
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %17
  %scevgep227 = getelementptr i8, i8* %15, i64 %17
  %bound0 = icmp ult i8* %unused226, %scevgep227
  %bound1 = icmp ult i8* %15, %scevgep
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %17, -32
  %18 = add nsw i64 %n.vec, -32
  %19 = lshr exact i64 %18, 5
  %20 = add nuw nsw i64 %19, 1
  %xtraiter = and i64 %20, 3
  %21 = icmp ult i64 %18, 96
  br i1 %21, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %20, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %22 = getelementptr inbounds i8, i8* %15, i64 %index
  %23 = bitcast i8* %22 to <16 x i8>*
  %wide.load = load <16 x i8>, <16 x i8>* %23, align 1, !tbaa !12, !alias.scope !67
  %24 = getelementptr i8, i8* %22, i64 16
  %25 = bitcast i8* %24 to <16 x i8>*
  %wide.load229 = load <16 x i8>, <16 x i8>* %25, align 1, !tbaa !12, !alias.scope !67
  %26 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %index
  %27 = bitcast i8* %26 to <16 x i8>*
  store <16 x i8> %wide.load, <16 x i8>* %27, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %28 = getelementptr i8, i8* %26, i64 16
  %29 = bitcast i8* %28 to <16 x i8>*
  store <16 x i8> %wide.load229, <16 x i8>* %29, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %index.next = or i64 %index, 32
  %30 = getelementptr inbounds i8, i8* %15, i64 %index.next
  %31 = bitcast i8* %30 to <16 x i8>*
  %wide.load.1 = load <16 x i8>, <16 x i8>* %31, align 1, !tbaa !12, !alias.scope !67
  %32 = getelementptr i8, i8* %30, i64 16
  %33 = bitcast i8* %32 to <16 x i8>*
  %wide.load229.1 = load <16 x i8>, <16 x i8>* %33, align 1, !tbaa !12, !alias.scope !67
  %34 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %index.next
  %35 = bitcast i8* %34 to <16 x i8>*
  store <16 x i8> %wide.load.1, <16 x i8>* %35, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %36 = getelementptr i8, i8* %34, i64 16
  %37 = bitcast i8* %36 to <16 x i8>*
  store <16 x i8> %wide.load229.1, <16 x i8>* %37, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %index.next.1 = or i64 %index, 64
  %38 = getelementptr inbounds i8, i8* %15, i64 %index.next.1
  %39 = bitcast i8* %38 to <16 x i8>*
  %wide.load.2 = load <16 x i8>, <16 x i8>* %39, align 1, !tbaa !12, !alias.scope !67
  %40 = getelementptr i8, i8* %38, i64 16
  %41 = bitcast i8* %40 to <16 x i8>*
  %wide.load229.2 = load <16 x i8>, <16 x i8>* %41, align 1, !tbaa !12, !alias.scope !67
  %42 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %index.next.1
  %43 = bitcast i8* %42 to <16 x i8>*
  store <16 x i8> %wide.load.2, <16 x i8>* %43, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %44 = getelementptr i8, i8* %42, i64 16
  %45 = bitcast i8* %44 to <16 x i8>*
  store <16 x i8> %wide.load229.2, <16 x i8>* %45, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %index.next.2 = or i64 %index, 96
  %46 = getelementptr inbounds i8, i8* %15, i64 %index.next.2
  %47 = bitcast i8* %46 to <16 x i8>*
  %wide.load.3 = load <16 x i8>, <16 x i8>* %47, align 1, !tbaa !12, !alias.scope !67
  %48 = getelementptr i8, i8* %46, i64 16
  %49 = bitcast i8* %48 to <16 x i8>*
  %wide.load229.3 = load <16 x i8>, <16 x i8>* %49, align 1, !tbaa !12, !alias.scope !67
  %50 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %index.next.2
  %51 = bitcast i8* %50 to <16 x i8>*
  store <16 x i8> %wide.load.3, <16 x i8>* %51, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %52 = getelementptr i8, i8* %50, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  store <16 x i8> %wide.load229.3, <16 x i8>* %53, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %index.next.3 = add i64 %index, 128
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !72

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %54 = getelementptr inbounds i8, i8* %15, i64 %index.epil
  %55 = bitcast i8* %54 to <16 x i8>*
  %wide.load.epil = load <16 x i8>, <16 x i8>* %55, align 1, !tbaa !12, !alias.scope !67
  %56 = getelementptr i8, i8* %54, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  %wide.load229.epil = load <16 x i8>, <16 x i8>* %57, align 1, !tbaa !12, !alias.scope !67
  %58 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %index.epil
  %59 = bitcast i8* %58 to <16 x i8>*
  store <16 x i8> %wide.load.epil, <16 x i8>* %59, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %60 = getelementptr i8, i8* %58, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %wide.load229.epil, <16 x i8>* %61, align 16, !tbaa !12, !alias.scope !70, !noalias !67
  %index.next.epil = add i64 %index.epil, 32
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !73

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %17
  br i1 %cmp.n, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 %indvars.iv
  %62 = load i8, i8* %arrayidx, align 1, !tbaa !12
  %arrayidx36 = getelementptr inbounds [5000 x i8], [5000 x i8]* %unused, i64 0, i64 %indvars.iv
  store i8 %62, i8* %arrayidx36, align 1, !tbaa !12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp33 = icmp slt i64 %indvars.iv.next, %17
  br i1 %cmp33, label %for.body, label %for.end, !llvm.loop !74

for.end:                                          ; preds = %for.body, %middle.block, %if.end32
  call void @BZ2_bzReadClose(i32* nonnull %bzerr, i8* %call187) #2
  %63 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp38 = icmp eq i32 %63, 0
  br i1 %cmp38, label %if.end41, label %if.then40

if.then40:                                        ; preds = %for.end
  %64 = getelementptr [27 x i8], [27 x i8]* @.str.5.25, i64 0, i64 0
  call fastcc void @panic(i8* %64)
  br label %UnifiedUnreachableBlock

if.end41:                                         ; preds = %for.end
  %65 = load i32, i32* %nUnused, align 4, !tbaa !6
  %cmp42 = icmp eq i32 %65, 0
  br i1 %cmp42, label %land.lhs.true44, label %if.end48

land.lhs.true44:                                  ; preds = %if.end41
  %call.i = call i32 @spec_getc(i32 %zStream) #2
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %if.end57, label %myfeof.exit.thread

myfeof.exit.thread:                               ; preds = %land.lhs.true44
  %conv.i = trunc i32 %call.i to i8
  %call1.i = call i32 @spec_ungetc(i8 zeroext %conv.i, i32 %zStream) #2
  %.pre = load i32, i32* %nUnused, align 4, !tbaa !6
  br label %if.end48

if.end48:                                         ; preds = %myfeof.exit.thread, %if.end41
  %66 = phi i32 [ %.pre, %myfeof.exit.thread ], [ %65, %if.end41 ]
  %67 = load i32, i32* @verbosity, align 4, !tbaa !6
  %68 = load i8, i8* @smallMode, align 1, !tbaa !12
  %conv = zext i8 %68 to i32
  %call = call i8* @BZ2_bzReadOpen(i32* nonnull %bzerr, i32 %zStream, i32 %67, i32 %conv, i8* nonnull %3, i32 %66) #2
  %cmp = icmp eq i8* %call, null
  %69 = load i32, i32* %bzerr, align 4
  %cmp2 = icmp ne i32 %69, 0
  %or.cond = or i1 %cmp, %cmp2
  br i1 %or.cond, label %errhandler, label %if.end

if.end57:                                         ; preds = %if.end87, %if.then72, %land.lhs.true44
  %cmp58 = icmp eq i32 %stream, 1
  br i1 %cmp58, label %if.end65, label %if.then60

if.then60:                                        ; preds = %if.end57
  store i32 0, i32* @outputHandleJustInCase, align 4, !tbaa !6
  br label %if.end65

if.end65:                                         ; preds = %if.then60, %if.end57
  store i32 0, i32* @outputHandleJustInCase, align 4, !tbaa !6
  %70 = load i32, i32* @verbosity, align 4, !tbaa !6
  %cmp66 = icmp sgt i32 %70, 1
  br i1 %cmp66, label %if.then68, label %cleanup

if.then68:                                        ; preds = %if.end65
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %72 = getelementptr [6 x i8], [6 x i8]* @.str.6.26, i64 0, i64 0
  %73 = call i64 @fwrite(i8* %72, i64 5, i64 1, %struct._IO_FILE* %71) #15
  br label %cleanup

trycat:                                           ; preds = %while.body7
  %74 = load i8, i8* @forceOverwrite, align 1, !tbaa !12
  %tobool71 = icmp eq i8 %74, 0
  br i1 %tobool71, label %errhandler, label %if.then72

if.then72:                                        ; preds = %trycat
  %call73 = call i32 @spec_rewind(i32 %zStream) #2
  %call.i150176 = call i32 @spec_getc(i32 %zStream) #2
  %cmp.i151177 = icmp eq i32 %call.i150176, -1
  br i1 %cmp.i151177, label %if.end57, label %if.end79.preheader

if.end79.preheader:                               ; preds = %if.then72
  br label %if.end79

if.end79:                                         ; preds = %if.end87, %if.end79.preheader
  %call.i150178 = phi i32 [ %call.i150, %if.end87 ], [ %call.i150176, %if.end79.preheader ]
  %conv.i152 = trunc i32 %call.i150178 to i8
  %call1.i153 = call i32 @spec_ungetc(i8 zeroext %conv.i152, i32 %zStream) #2
  %call81 = call i32 @spec_fread(i8* nonnull %2, i32 1, i32 5000, i32 %zStream) #2
  %cmp82 = icmp sgt i32 %call81, 0
  br i1 %cmp82, label %if.then84, label %if.end87

if.then84:                                        ; preds = %if.end79
  %call86 = call i32 @spec_fwrite(i8* nonnull %2, i32 1, i32 %call81, i32 %stream) #2
  br label %if.end87

if.end87:                                         ; preds = %if.then84, %if.end79
  %call.i150 = call i32 @spec_getc(i32 %zStream) #2
  %cmp.i151 = icmp eq i32 %call.i150, -1
  br i1 %cmp.i151, label %if.end57, label %if.end79

errhandler:                                       ; preds = %trycat, %if.end48, %while.cond4, %entry
  %call166 = phi i8* [ %call187, %trycat ], [ %call182, %entry ], [ %call187, %while.cond4 ], [ %call, %if.end48 ]
  %streamNo.1 = phi i32 [ %inc, %trycat ], [ 0, %entry ], [ %inc, %while.cond4 ], [ %inc, %if.end48 ]
  call void @BZ2_bzReadClose(i32* nonnull %bzerr_dummy, i8* %call166) #2
  %75 = load i32, i32* %bzerr, align 4, !tbaa !6
  switch i32 %75, label %sw.default [
    i32 -9, label %sw.bb
    i32 -6, label %errhandler_io
    i32 -4, label %sw.bb91
    i32 -3, label %sw.bb92
    i32 -7, label %sw.bb93
    i32 -5, label %sw.bb94
  ]

sw.bb:                                            ; preds = %errhandler
  call fastcc void @configError()
  br label %UnifiedUnreachableBlock

errhandler_io:                                    ; preds = %errhandler
  call fastcc void @ioError()
  br label %UnifiedUnreachableBlock

sw.bb91:                                          ; preds = %errhandler
  call fastcc void @crcError()
  br label %UnifiedUnreachableBlock

sw.bb92:                                          ; preds = %errhandler
  call fastcc void @outOfMemory()
  br label %UnifiedUnreachableBlock

sw.bb93:                                          ; preds = %errhandler
  call fastcc void @compressedStreamEOF()
  br label %UnifiedUnreachableBlock

sw.bb94:                                          ; preds = %errhandler
  %cmp103 = icmp eq i32 %streamNo.1, 1
  br i1 %cmp103, label %cleanup, label %if.else

if.else:                                          ; preds = %sw.bb94
  %76 = load i8, i8* @noisy, align 1, !tbaa !12
  %tobool106 = icmp eq i8 %76, 0
  br i1 %tobool106, label %cleanup, label %if.then107

if.then107:                                       ; preds = %if.else
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %78 = load i8*, i8** @progName, align 8, !tbaa !18
  %79 = getelementptr [45 x i8], [45 x i8]* @.str.7.27, i64 0, i64 0
  %80 = getelementptr [1034 x i8], [1034 x i8]* @inName, i64 0, i64 0
  %call108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* %79, i8* %78, i8* %80) #15
  br label %cleanup

sw.default:                                       ; preds = %errhandler
  %81 = getelementptr [28 x i8], [28 x i8]* @.str.8.28, i64 0, i64 0
  call fastcc void @panic(i8* %81)
  br label %UnifiedUnreachableBlock

cleanup:                                          ; preds = %if.then107, %if.else, %sw.bb94, %if.then68, %if.end65
  %retval.0 = phi i8 [ 1, %if.then68 ], [ 1, %if.end65 ], [ 0, %sw.bb94 ], [ 1, %if.else ], [ 1, %if.then107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #2
  call void @llvm.lifetime.end.p0i8(i64 5000, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 5000, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  ret i8 %retval.0

UnifiedUnreachableBlock:                          ; preds = %sw.default, %sw.bb93, %sw.bb92, %sw.bb91, %errhandler_io, %sw.bb, %if.then40, %if.then31
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @crcError() unnamed_addr #9 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1 = load i8*, i8** @progName, align 8, !tbaa !18
  %2 = getelementptr [47 x i8], [47 x i8]* @.str.12.31, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %2, i8* %1) #15
  tail call fastcc void @showFileNames()
  tail call fastcc void @cadvise()
  tail call fastcc void @cleanUpAndFail()
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @compressedStreamEOF() unnamed_addr #9 {
entry:
  %0 = load i8, i8* @noisy, align 1, !tbaa !12
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %2 = load i8*, i8** @progName, align 8, !tbaa !18
  %3 = getelementptr [95 x i8], [95 x i8]* @.str.14.29, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2) #15
  %4 = load i8*, i8** @progName, align 8, !tbaa !18
  tail call void @perror(i8* %4) #15
  %5 = load i8, i8* @noisy, align 1, !tbaa !12
  %tobool.i = icmp eq i8 %5, 0
  br i1 %tobool.i, label %if.end, label %showFileNames.exit

showFileNames.exit:                               ; preds = %if.then
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %7 = getelementptr [36 x i8], [36 x i8]* @.str.11.19, i64 0, i64 0
  %8 = getelementptr [1034 x i8], [1034 x i8]* @inName, i64 0, i64 0
  %9 = getelementptr [1034 x i8], [1034 x i8]* @outName, i64 0, i64 0
  %call.i = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* %7, i8* %8, i8* %9) #16
  %.pr = load i8, i8* @noisy, align 1, !tbaa !12
  %tobool.i1 = icmp eq i8 %.pr, 0
  br i1 %tobool.i1, label %if.end, label %if.then.i2

if.then.i2:                                       ; preds = %showFileNames.exit
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %11 = getelementptr [241 x i8], [241 x i8]* @.str.13.30, i64 0, i64 0
  %12 = tail call i64 @fwrite(i8* %11, i64 240, i64 1, %struct._IO_FILE* %10) #16
  br label %if.end

if.end:                                           ; preds = %if.then.i2, %showFileNames.exit, %if.then, %entry
  tail call fastcc void @cleanUpAndFail()
  unreachable
}

; Function Attrs: nounwind uwtable
define internal fastcc void @cadvise() unnamed_addr #1 {
entry:
  %0 = load i8, i8* @noisy, align 1, !tbaa !12
  %tobool = icmp eq i8 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %2 = getelementptr [241 x i8], [241 x i8]* @.str.13.30, i64 0, i64 0
  %3 = tail call i64 @fwrite(i8* %2, i64 240, i64 1, %struct._IO_FILE* %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define void @BZ2_bz__AssertH__fail(i32 %errcode) local_unnamed_addr #9 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1 = getelementptr [269 x i8], [269 x i8]* @.str.34, i64 0, i64 0
  %2 = getelementptr [19 x i8], [19 x i8]* @.str.5.35, i64 0, i64 0
  %call1 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %1, i32 %errcode, i8* %2) #15
  %cmp = icmp eq i32 %errcode, 1007
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %4 = getelementptr [1057 x i8], [1057 x i8]* @.str.1.36, i64 0, i64 0
  %5 = tail call i64 @fwrite(i8* %4, i64 1056, i64 1, %struct._IO_FILE* %3) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @exit(i32 0) #13
  unreachable
}

; Function Attrs: norecurse nounwind readnone uwtable
define i8* @BZ2_bzlibVersion() local_unnamed_addr #8 {
entry:
  %0 = getelementptr [19 x i8], [19 x i8]* @.str.5.35, i64 0, i64 0
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  %blockSize100k.off = add i32 %blockSize100k, -1
  %0 = icmp ugt i32 %blockSize100k.off, 8
  %1 = or i1 %cmp, %0
  %2 = icmp ugt i32 %workFactor, 250
  %3 = or i1 %2, %1
  br i1 %3, label %cleanup, label %if.end9

if.end9:                                          ; preds = %entry
  %cmp10 = icmp eq i32 %workFactor, 0
  %spec.select = select i1 %cmp10, i32 30, i32 %workFactor
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 9
  %4 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  %cmp13 = icmp eq i8* (i8*, i32, i32)* %4, null
  br i1 %cmp13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end9
  %5 = phi i8* (i8*, i32, i32)* [ @default_bzalloc, %if.then14 ], [ %4, %if.end9 ]
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %6 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %cmp17 = icmp eq void (i8*, i8*)* %6, null
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end16
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end16
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %7 = load i8*, i8** %opaque, align 8, !tbaa !78
  %call22 = tail call i8* %5(i8* %7, i32 55768, i32 1) #2
  %cmp23 = icmp eq i8* %call22, null
  br i1 %cmp23, label %cleanup, label %if.end25

if.end25:                                         ; preds = %if.end20
  %strm26 = bitcast i8* %call22 to %struct.bz_stream**
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm26, align 8, !tbaa !79
  %arr1 = getelementptr inbounds i8, i8* %call22, i64 24
  %8 = bitcast i8* %arr1 to i32**
  %arr2 = getelementptr inbounds i8, i8* %call22, i64 32
  %9 = bitcast i8* %arr2 to i32**
  %ftab = getelementptr inbounds i8, i8* %call22, i64 40
  %10 = bitcast i8* %ftab to i32**
  %mul = mul nsw i32 %blockSize100k, 100000
  call void @llvm.memset.p0i8.i64(i8* nonnull %arr1, i8 0, i64 24, i32 8, i1 false)
  %11 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  %12 = load i8*, i8** %opaque, align 8, !tbaa !78
  %mul29 = mul i32 %blockSize100k, 400000
  %call31 = tail call i8* %11(i8* %12, i32 %mul29, i32 1) #2
  %13 = bitcast i8* %arr1 to i8**
  store i8* %call31, i8** %13, align 8, !tbaa !31
  %14 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  %15 = load i8*, i8** %opaque, align 8, !tbaa !78
  %mul36 = add i32 %mul29, 136
  %call38 = tail call i8* %14(i8* %15, i32 %mul36, i32 1) #2
  %16 = bitcast i8* %arr2 to i8**
  store i8* %call38, i8** %16, align 8, !tbaa !32
  %17 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  %18 = load i8*, i8** %opaque, align 8, !tbaa !78
  %call42 = tail call i8* %17(i8* %18, i32 262148, i32 1) #2
  %19 = bitcast i8* %ftab to i8**
  store i8* %call42, i8** %19, align 8, !tbaa !27
  %20 = load i32*, i32** %8, align 8, !tbaa !31
  %cmp45 = icmp eq i32* %20, null
  %21 = ptrtoint i32* %20 to i64
  br i1 %cmp45, label %if.end63, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.end25
  %22 = load i32*, i32** %9, align 8, !tbaa !32
  %cmp49 = icmp eq i32* %22, null
  %cmp53 = icmp eq i8* %call42, null
  %or.cond = or i1 %cmp53, %cmp49
  br i1 %or.cond, label %if.then59, label %if.end86

if.then59:                                        ; preds = %lor.lhs.false47
  %23 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %24 = load i8*, i8** %opaque, align 8, !tbaa !78
  %25 = bitcast i32* %20 to i8*
  tail call void %23(i8* %24, i8* %25) #2
  br label %if.end63

if.end63:                                         ; preds = %if.then59, %if.end25
  %26 = load i32*, i32** %9, align 8, !tbaa !32
  %cmp65 = icmp eq i32* %26, null
  br i1 %cmp65, label %if.end71, label %if.then67

if.then67:                                        ; preds = %if.end63
  %27 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %28 = load i8*, i8** %opaque, align 8, !tbaa !78
  %29 = bitcast i32* %26 to i8*
  tail call void %27(i8* %28, i8* %29) #2
  br label %if.end71

if.end71:                                         ; preds = %if.then67, %if.end63
  %30 = load i32*, i32** %10, align 8, !tbaa !27
  %cmp73 = icmp eq i32* %30, null
  br i1 %cmp73, label %if.then82, label %if.then75

if.then75:                                        ; preds = %if.end71
  %31 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %32 = load i8*, i8** %opaque, align 8, !tbaa !78
  %33 = bitcast i32* %30 to i8*
  tail call void %31(i8* %32, i8* %33) #2
  br label %if.then82

if.then82:                                        ; preds = %if.then75, %if.end71
  %34 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %35 = load i8*, i8** %opaque, align 8, !tbaa !78
  tail call void %34(i8* %35, i8* nonnull %call22) #2
  br label %cleanup

if.end86:                                         ; preds = %lor.lhs.false47
  %36 = ptrtoint i32* %22 to i64
  %blockNo = getelementptr inbounds i8, i8* %call22, i64 660
  %37 = bitcast i8* %blockNo to i32*
  %state = getelementptr inbounds i8, i8* %call22, i64 12
  %38 = bitcast i8* %state to i32*
  store i32 2, i32* %38, align 4, !tbaa !80
  %mode = getelementptr inbounds i8, i8* %call22, i64 8
  %39 = bitcast i8* %mode to i32*
  store i32 2, i32* %39, align 8, !tbaa !81
  %combinedCRC = getelementptr inbounds i8, i8* %call22, i64 652
  %40 = bitcast i8* %combinedCRC to i32*
  store i32 0, i32* %40, align 4, !tbaa !82
  %blockSize100k87 = getelementptr inbounds i8, i8* %call22, i64 664
  %41 = bitcast i8* %blockSize100k87 to i32*
  store i32 %blockSize100k, i32* %41, align 8, !tbaa !83
  %sub = add nsw i32 %mul, -19
  %nblockMAX = getelementptr inbounds i8, i8* %call22, i64 112
  %42 = bitcast i8* %nblockMAX to i32*
  store i32 %sub, i32* %42, align 8, !tbaa !84
  %verbosity89 = getelementptr inbounds i8, i8* %call22, i64 656
  %43 = bitcast i8* %verbosity89 to i32*
  store i32 %verbosity, i32* %43, align 8, !tbaa !29
  %workFactor90 = getelementptr inbounds i8, i8* %call22, i64 88
  %44 = bitcast i8* %workFactor90 to i32*
  store i32 %spec.select, i32* %44, align 8, !tbaa !30
  %block = getelementptr inbounds i8, i8* %call22, i64 64
  %45 = bitcast i8* %block to i64*
  store i64 %36, i64* %45, align 8, !tbaa !26
  %mtfv = getelementptr inbounds i8, i8* %call22, i64 72
  %46 = bitcast i8* %mtfv to i64*
  store i64 %21, i64* %46, align 8, !tbaa !85
  %zbits = getelementptr inbounds i8, i8* %call22, i64 80
  %47 = bitcast i8* %zbits to i8**
  store i8* null, i8** %47, align 8, !tbaa !86
  %ptr = getelementptr inbounds i8, i8* %call22, i64 56
  %48 = bitcast i8* %ptr to i64*
  store i64 %21, i64* %48, align 8, !tbaa !24
  %state94 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  store i8* %call22, i8** %state94, align 8, !tbaa !87
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 2
  store i32 0, i32* %total_in_lo32, align 4, !tbaa !88
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 3
  store i32 0, i32* %total_in_hi32, align 8, !tbaa !89
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 6
  store i32 0, i32* %total_out_lo32, align 4, !tbaa !90
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 7
  store i32 0, i32* %total_out_hi32, align 8, !tbaa !91
  %state_in_ch.i = getelementptr inbounds i8, i8* %call22, i64 92
  %49 = bitcast i8* %state_in_ch.i to i32*
  store i32 256, i32* %49, align 4, !tbaa !92
  %state_in_len.i = getelementptr inbounds i8, i8* %call22, i64 96
  %50 = bitcast i8* %state_in_len.i to i32*
  store i32 0, i32* %50, align 8, !tbaa !93
  %nblock.i = getelementptr inbounds i8, i8* %call22, i64 108
  %51 = bitcast i8* %nblock.i to i32*
  store i32 0, i32* %51, align 4, !tbaa !28
  %numZ.i = getelementptr inbounds i8, i8* %call22, i64 116
  %52 = bitcast i8* %numZ.i to i32*
  store i32 0, i32* %52, align 4, !tbaa !94
  %state_out_pos.i = getelementptr inbounds i8, i8* %call22, i64 120
  %53 = bitcast i8* %state_out_pos.i to i32*
  store i32 0, i32* %53, align 8, !tbaa !95
  %blockCRC.i = getelementptr inbounds i8, i8* %call22, i64 648
  %54 = bitcast i8* %blockCRC.i to i32*
  store i32 -1, i32* %54, align 8, !tbaa !96
  %55 = getelementptr i8, i8* %call22, i64 128
  tail call void @llvm.memset.p0i8.i64(i8* %55, i8 0, i64 256, i32 1, i1 false) #2
  store i32 1, i32* %37, align 4, !tbaa !97
  br label %cleanup

cleanup:                                          ; preds = %if.end86, %if.then82, %if.end20, %entry
  %retval.0 = phi i32 [ -3, %if.then82 ], [ 0, %if.end86 ], [ -2, %entry ], [ -3, %if.end20 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal noalias i8* @default_bzalloc(i8* nocapture readnone %opaque, i32 %items, i32 %size) #1 {
entry:
  %mul = mul nsw i32 %size, %items
  %conv = sext i32 %mul to i64
  %call = tail call noalias i8* @malloc(i64 %conv) #2
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @default_bzfree(i8* nocapture readnone %opaque, i8* %addr) #1 {
entry:
  %cmp = icmp eq i8* %addr, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @free(i8* nonnull %addr) #2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzCompress(%struct.bz_stream* readonly %strm, i32 %action) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  %0 = bitcast i8** %state to %struct.EState**
  %1 = load %struct.EState*, %struct.EState** %0, align 8, !tbaa !87
  %cmp1 = icmp eq %struct.EState* %1, null
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 0
  %2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !79
  %cmp5 = icmp eq %struct.bz_stream* %2, %strm
  br i1 %cmp5, label %if.end7, label %cleanup

if.end7:                                          ; preds = %if.end3
  %mode = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 1
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 1
  %avail_in_expect = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 3
  switch i32 %action, label %preswitch [
    i32 0, label %preswitch.us
    i32 1, label %if.end7.split.split.us
    i32 2, label %if.end7.split.split.split.us
  ]

preswitch.us:                                     ; preds = %if.end7
  %3 = load i32, i32* %mode, align 8, !tbaa !81
  switch i32 %3, label %cleanup [
    i32 1, label %cleanup.loopexit
    i32 2, label %if.then10
    i32 3, label %sw.bb23.thread
    i32 4, label %sw.bb47.thread
  ]

if.end7.split.split.us:                           ; preds = %if.end7
  %.pre142 = load i32, i32* %mode, align 8, !tbaa !81
  br label %preswitch.us125

preswitch.us125:                                  ; preds = %if.then13.us128, %if.end7.split.split.us
  %4 = phi i32 [ 3, %if.then13.us128 ], [ %.pre142, %if.end7.split.split.us ]
  switch i32 %4, label %cleanup [
    i32 1, label %cleanup.loopexit
    i32 2, label %if.then13.us128
    i32 3, label %sw.bb23
    i32 4, label %sw.bb47
  ]

if.then13.us128:                                  ; preds = %preswitch.us125
  %5 = load i32, i32* %avail_in, align 8, !tbaa !98
  store i32 %5, i32* %avail_in_expect, align 8, !tbaa !99
  store i32 3, i32* %mode, align 8, !tbaa !81
  br label %preswitch.us125

if.end7.split.split.split.us:                     ; preds = %if.end7
  %.pre = load i32, i32* %mode, align 8, !tbaa !81
  br label %preswitch.us131

preswitch.us131:                                  ; preds = %if.then18.us133, %if.end7.split.split.split.us
  %6 = phi i32 [ 4, %if.then18.us133 ], [ %.pre, %if.end7.split.split.split.us ]
  switch i32 %6, label %cleanup [
    i32 1, label %cleanup.loopexit
    i32 2, label %if.then18.us133
    i32 3, label %sw.bb23
    i32 4, label %sw.bb47
  ]

if.then18.us133:                                  ; preds = %preswitch.us131
  %7 = load i32, i32* %avail_in, align 8, !tbaa !98
  store i32 %7, i32* %avail_in_expect, align 8, !tbaa !99
  store i32 4, i32* %mode, align 8, !tbaa !81
  br label %preswitch.us131

preswitch:                                        ; preds = %if.end7
  %8 = load i32, i32* %mode, align 8, !tbaa !81
  switch i32 %8, label %cleanup [
    i32 1, label %cleanup.loopexit
    i32 2, label %sw.bb8
    i32 3, label %sw.bb23.thread
    i32 4, label %sw.bb47.thread
  ]

sw.bb8:                                           ; preds = %preswitch
  br label %cleanup.loopexit

if.then10:                                        ; preds = %preswitch.us
  %call = tail call fastcc zeroext i8 @handle_compress(%struct.bz_stream* nonnull %strm)
  %tobool = icmp eq i8 %call, 0
  %cond = select i1 %tobool, i32 -2, i32 1
  br label %cleanup

sw.bb23.thread:                                   ; preds = %preswitch, %preswitch.us
  br label %cleanup

sw.bb23:                                          ; preds = %preswitch.us131, %preswitch.us125
  %cmp24 = icmp eq i32 %action, 1
  br i1 %cmp24, label %if.end27, label %cleanup

if.end27:                                         ; preds = %sw.bb23
  %9 = load i32, i32* %avail_in_expect, align 8, !tbaa !99
  %10 = load i32, i32* %avail_in, align 8, !tbaa !98
  %cmp31 = icmp eq i32 %9, %10
  br i1 %cmp31, label %if.end34, label %cleanup

if.end34:                                         ; preds = %if.end27
  %call35 = tail call fastcc zeroext i8 @handle_compress(%struct.bz_stream* nonnull %strm)
  %11 = load i32, i32* %avail_in_expect, align 8, !tbaa !99
  %cmp37 = icmp eq i32 %11, 0
  br i1 %cmp37, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %if.end34
  %state_in_ch.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 13
  %12 = load i32, i32* %state_in_ch.i, align 4, !tbaa !92
  %cmp.i = icmp ult i32 %12, 256
  br i1 %cmp.i, label %land.lhs.true.i, label %lor.lhs.false41

land.lhs.true.i:                                  ; preds = %lor.lhs.false
  %state_in_len.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 14
  %13 = load i32, i32* %state_in_len.i, align 8, !tbaa !93
  %cmp1.i = icmp sgt i32 %13, 0
  br i1 %cmp1.i, label %cleanup, label %lor.lhs.false41

lor.lhs.false41:                                  ; preds = %land.lhs.true.i, %lor.lhs.false
  %state_out_pos = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 20
  %14 = load i32, i32* %state_out_pos, align 8, !tbaa !95
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 19
  %15 = load i32, i32* %numZ, align 4, !tbaa !94
  %cmp42 = icmp slt i32 %14, %15
  br i1 %cmp42, label %cleanup, label %if.end45

if.end45:                                         ; preds = %lor.lhs.false41
  store i32 2, i32* %mode, align 8, !tbaa !81
  br label %cleanup

sw.bb47.thread:                                   ; preds = %preswitch, %preswitch.us
  br label %cleanup

sw.bb47:                                          ; preds = %preswitch.us131, %preswitch.us125
  %cmp48 = icmp eq i32 %action, 2
  br i1 %cmp48, label %if.end51, label %cleanup

if.end51:                                         ; preds = %sw.bb47
  %16 = load i32, i32* %avail_in_expect, align 8, !tbaa !99
  %17 = load i32, i32* %avail_in, align 8, !tbaa !98
  %cmp55 = icmp eq i32 %16, %17
  br i1 %cmp55, label %if.end58, label %cleanup

if.end58:                                         ; preds = %if.end51
  %call59 = tail call fastcc zeroext i8 @handle_compress(%struct.bz_stream* nonnull %strm)
  %tobool60 = icmp eq i8 %call59, 0
  br i1 %tobool60, label %cleanup, label %if.end62

if.end62:                                         ; preds = %if.end58
  %18 = load i32, i32* %avail_in_expect, align 8, !tbaa !99
  %cmp64 = icmp eq i32 %18, 0
  br i1 %cmp64, label %lor.lhs.false66, label %cleanup

lor.lhs.false66:                                  ; preds = %if.end62
  %state_in_ch.i111 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 13
  %19 = load i32, i32* %state_in_ch.i111, align 4, !tbaa !92
  %cmp.i112 = icmp ult i32 %19, 256
  br i1 %cmp.i112, label %land.lhs.true.i115, label %lor.lhs.false69

land.lhs.true.i115:                               ; preds = %lor.lhs.false66
  %state_in_len.i113 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 14
  %20 = load i32, i32* %state_in_len.i113, align 8, !tbaa !93
  %cmp1.i114 = icmp sgt i32 %20, 0
  br i1 %cmp1.i114, label %cleanup, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %land.lhs.true.i115, %lor.lhs.false66
  %state_out_pos70 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 20
  %21 = load i32, i32* %state_out_pos70, align 8, !tbaa !95
  %numZ71 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 19
  %22 = load i32, i32* %numZ71, align 4, !tbaa !94
  %cmp72 = icmp slt i32 %21, %22
  br i1 %cmp72, label %cleanup, label %if.end75

if.end75:                                         ; preds = %lor.lhs.false69
  store i32 1, i32* %mode, align 8, !tbaa !81
  br label %cleanup

cleanup.loopexit:                                 ; preds = %sw.bb8, %preswitch, %preswitch.us131, %preswitch.us125, %preswitch.us
  %retval.0.ph = phi i32 [ -1, %preswitch.us ], [ -1, %preswitch ], [ -2, %sw.bb8 ], [ -1, %preswitch.us125 ], [ -1, %preswitch.us131 ]
  br label %cleanup

cleanup:                                          ; preds = %cleanup.loopexit, %if.end75, %lor.lhs.false69, %land.lhs.true.i115, %if.end62, %if.end58, %if.end51, %sw.bb47, %sw.bb47.thread, %if.end45, %lor.lhs.false41, %land.lhs.true.i, %if.end34, %if.end27, %sw.bb23, %sw.bb23.thread, %if.then10, %preswitch, %preswitch.us131, %preswitch.us125, %preswitch.us, %if.end3, %if.end, %entry
  %retval.0 = phi i32 [ 4, %if.end75 ], [ 1, %if.end45 ], [ %cond, %if.then10 ], [ -2, %entry ], [ -2, %if.end ], [ -2, %if.end3 ], [ -1, %sw.bb23 ], [ -1, %if.end27 ], [ 2, %if.end34 ], [ 2, %lor.lhs.false41 ], [ -1, %sw.bb47 ], [ -1, %if.end51 ], [ -1, %if.end58 ], [ 3, %if.end62 ], [ 3, %lor.lhs.false69 ], [ 2, %land.lhs.true.i ], [ 3, %land.lhs.true.i115 ], [ %retval.0.ph, %cleanup.loopexit ], [ 0, %preswitch ], [ 0, %preswitch.us ], [ -1, %sw.bb23.thread ], [ -1, %sw.bb47.thread ], [ 0, %preswitch.us125 ], [ 0, %preswitch.us131 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @handle_compress(%struct.bz_stream* nocapture readonly %strm) unnamed_addr #1 {
entry:
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  %0 = bitcast i8** %state to %struct.EState**
  %1 = load %struct.EState*, %struct.EState** %0, align 8, !tbaa !87
  %state_in_ch.i101 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 13
  %state_in_len.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 14
  %state1 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 2
  %state_out_pos.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 20
  %strm.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 0
  %mode.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 1
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 19
  %zbits.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 11
  %nblock.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 17
  %nblockMAX.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 18
  %avail_in_expect.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 3
  %blockCRC.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 26
  %block.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 9
  %scevgep.i = getelementptr %struct.EState, %struct.EState* %1, i64 0, i32 22, i64 0
  %blockNo.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 29
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %entry
  %progress_out.0.ph = phi i8 [ 0, %entry ], [ %progress_out.1134, %while.cond.outer.backedge ]
  %progress_in.0.ph = phi i8 [ 0, %entry ], [ %or3897, %while.cond.outer.backedge ]
  %2 = load i32, i32* %state1, align 4, !tbaa !80
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %while.cond.outer
  switch i32 %2, label %while.cond [
    i32 1, label %if.then
    i32 2, label %if.end30.if.then34_crit_edge
  ]

if.then:                                          ; preds = %while.cond
  %3 = load %struct.bz_stream*, %struct.bz_stream** %strm.i, align 8, !tbaa !79
  %avail_out31.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3, i64 0, i32 5
  %4 = load i32, i32* %avail_out31.i, align 8, !tbaa !100
  %cmp32.i = icmp eq i32 %4, 0
  %.pre = load i32, i32* %state_out_pos.i, align 8, !tbaa !95
  br i1 %cmp32.i, label %copy_output_until_stop.exit, label %if.end.i.preheader

if.end.i.preheader:                               ; preds = %if.then
  br label %if.end.i

if.end.i:                                         ; preds = %if.end19.i, %if.end.i.preheader
  %5 = phi i32 [ %inc.i, %if.end19.i ], [ %.pre, %if.end.i.preheader ]
  %6 = phi %struct.bz_stream* [ %12, %if.end19.i ], [ %3, %if.end.i.preheader ]
  %progress_out.033.i = phi i8 [ 1, %if.end19.i ], [ 0, %if.end.i.preheader ]
  %7 = load i32, i32* %numZ, align 4, !tbaa !94
  %cmp1.i = icmp slt i32 %5, %7
  br i1 %cmp1.i, label %if.end3.i, label %copy_output_until_stop.exit

if.end3.i:                                        ; preds = %if.end.i
  %8 = load i8*, i8** %zbits.i, align 8, !tbaa !86
  %idxprom.i = sext i32 %5 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %8, i64 %idxprom.i
  %9 = load i8, i8* %arrayidx.i, align 1, !tbaa !12
  %next_out.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %6, i64 0, i32 4
  %10 = load i8*, i8** %next_out.i, align 8, !tbaa !101
  store i8 %9, i8* %10, align 1, !tbaa !12
  %11 = load i32, i32* %state_out_pos.i, align 8, !tbaa !95
  %inc.i = add nsw i32 %11, 1
  store i32 %inc.i, i32* %state_out_pos.i, align 8, !tbaa !95
  %12 = load %struct.bz_stream*, %struct.bz_stream** %strm.i, align 8, !tbaa !79
  %avail_out8.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i64 0, i32 5
  %13 = load i32, i32* %avail_out8.i, align 8, !tbaa !100
  %dec.i = add i32 %13, -1
  store i32 %dec.i, i32* %avail_out8.i, align 8, !tbaa !100
  %next_out10.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i64 0, i32 4
  %14 = load i8*, i8** %next_out10.i, align 8, !tbaa !101
  %incdec.ptr.i = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %incdec.ptr.i, i8** %next_out10.i, align 8, !tbaa !101
  %total_out_lo32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i64 0, i32 6
  %15 = load i32, i32* %total_out_lo32.i, align 4, !tbaa !90
  %inc12.i = add i32 %15, 1
  store i32 %inc12.i, i32* %total_out_lo32.i, align 4, !tbaa !90
  %cmp15.i = icmp eq i32 %inc12.i, 0
  br i1 %cmp15.i, label %if.then16.i, label %if.end19.i

if.then16.i:                                      ; preds = %if.end3.i
  %total_out_hi32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i64 0, i32 7
  %16 = load i32, i32* %total_out_hi32.i, align 8, !tbaa !91
  %inc18.i = add i32 %16, 1
  store i32 %inc18.i, i32* %total_out_hi32.i, align 8, !tbaa !91
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then16.i, %if.end3.i
  %cmp.i = icmp eq i32 %dec.i, 0
  br i1 %cmp.i, label %copy_output_until_stop.exit, label %if.end.i

copy_output_until_stop.exit:                      ; preds = %if.end19.i, %if.end.i, %if.then
  %17 = phi i32 [ %.pre, %if.then ], [ %inc.i, %if.end19.i ], [ %5, %if.end.i ]
  %progress_out.0.lcssa.i = phi i8 [ 0, %if.then ], [ 1, %if.end19.i ], [ %progress_out.033.i, %if.end.i ]
  %or98 = or i8 %progress_out.0.lcssa.i, %progress_out.0.ph
  %18 = load i32, i32* %numZ, align 4, !tbaa !94
  %cmp4 = icmp slt i32 %17, %18
  br i1 %cmp4, label %while.end, label %if.end

if.end:                                           ; preds = %copy_output_until_stop.exit
  %19 = load i32, i32* %mode.i, align 8, !tbaa !81
  %cmp7 = icmp eq i32 %19, 4
  br i1 %cmp7, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %if.end
  %20 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %cmp9 = icmp eq i32 %20, 0
  br i1 %cmp9, label %land.lhs.true11, label %if.end15

land.lhs.true11:                                  ; preds = %land.lhs.true
  %21 = load i32, i32* %state_in_ch.i101, align 4, !tbaa !92
  %cmp.i102 = icmp ult i32 %21, 256
  br i1 %cmp.i102, label %land.lhs.true.i, label %while.end

land.lhs.true.i:                                  ; preds = %land.lhs.true11
  %22 = load i32, i32* %state_in_len.i, align 8, !tbaa !93
  %cmp1.i103 = icmp sgt i32 %22, 0
  br i1 %cmp1.i103, label %if.end15, label %while.end

if.end15:                                         ; preds = %land.lhs.true.i, %land.lhs.true, %if.end
  store i32 0, i32* %nblock.i, align 4, !tbaa !28
  store i32 0, i32* %numZ, align 4, !tbaa !94
  store i32 0, i32* %state_out_pos.i, align 8, !tbaa !95
  store i32 -1, i32* %blockCRC.i, align 8, !tbaa !96
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %scevgep.i, i8 0, i64 256, i32 1, i1 false) #2
  %23 = load i32, i32* %blockNo.i, align 4, !tbaa !97
  %inc1.i = add nsw i32 %23, 1
  store i32 %inc1.i, i32* %blockNo.i, align 4, !tbaa !97
  store i32 2, i32* %state1, align 4, !tbaa !80
  %cmp18 = icmp eq i32 %19, 3
  br i1 %cmp18, label %land.lhs.true20, label %if.then34

land.lhs.true20:                                  ; preds = %if.end15
  %24 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %cmp22 = icmp eq i32 %24, 0
  br i1 %cmp22, label %land.lhs.true24, label %if.end30.if.then34_crit_edge

land.lhs.true24:                                  ; preds = %land.lhs.true20
  %25 = load i32, i32* %state_in_ch.i101, align 4, !tbaa !92
  %cmp.i123 = icmp ult i32 %25, 256
  br i1 %cmp.i123, label %land.lhs.true.i126, label %while.end

land.lhs.true.i126:                               ; preds = %land.lhs.true24
  %26 = load i32, i32* %state_in_len.i, align 8, !tbaa !93
  %cmp1.i125 = icmp sgt i32 %26, 0
  br i1 %cmp1.i125, label %if.end30.if.then34_crit_edge, label %while.end

if.end30.if.then34_crit_edge:                     ; preds = %land.lhs.true.i126, %land.lhs.true20, %while.cond
  %progress_out.1142 = phi i8 [ %or98, %land.lhs.true.i126 ], [ %or98, %land.lhs.true20 ], [ %progress_out.0.ph, %while.cond ]
  %.pre139 = load i32, i32* %mode.i, align 8, !tbaa !81
  br label %if.then34

if.then34:                                        ; preds = %if.end30.if.then34_crit_edge, %if.end15
  %27 = phi i32 [ %.pre139, %if.end30.if.then34_crit_edge ], [ %19, %if.end15 ]
  %progress_out.1134 = phi i8 [ %progress_out.1142, %if.end30.if.then34_crit_edge ], [ %or98, %if.end15 ]
  %cmp.i104 = icmp eq i32 %27, 2
  %28 = load i32, i32* %nblock.i, align 4, !tbaa !28
  %29 = load i32, i32* %nblockMAX.i, align 8, !tbaa !84
  %cmp1226.i = icmp slt i32 %28, %29
  br i1 %cmp.i104, label %if.then.i106, label %if.else59.i

if.then.i106:                                     ; preds = %if.then34
  br i1 %cmp1226.i, label %if.end.lr.ph.i108, label %copy_input_until_stop.exit

if.end.lr.ph.i108:                                ; preds = %if.then.i106
  %.pre237.i = load %struct.bz_stream*, %struct.bz_stream** %strm.i, align 8, !tbaa !79
  %avail_in.phi.trans.insert.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre237.i, i64 0, i32 1
  %.pre238.i = load i32, i32* %avail_in.phi.trans.insert.i, align 8, !tbaa !98
  br label %if.end.i109

if.end.i109:                                      ; preds = %if.end58.i, %if.end.lr.ph.i108
  %30 = phi i32 [ %29, %if.end.lr.ph.i108 ], [ %48, %if.end58.i ]
  %31 = phi i32 [ %.pre238.i, %if.end.lr.ph.i108 ], [ %dec.i115, %if.end58.i ]
  %32 = phi %struct.bz_stream* [ %.pre237.i, %if.end.lr.ph.i108 ], [ %42, %if.end58.i ]
  %33 = phi i32 [ %28, %if.end.lr.ph.i108 ], [ %47, %if.end58.i ]
  %progress_in.0227.i = phi i8 [ 0, %if.end.lr.ph.i108 ], [ 1, %if.end58.i ]
  %cmp3.i = icmp eq i32 %31, 0
  br i1 %cmp3.i, label %copy_input_until_stop.exit, label %if.end5.i

if.end5.i:                                        ; preds = %if.end.i109
  %next_in.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %32, i64 0, i32 0
  %34 = load i8*, i8** %next_in.i, align 8, !tbaa !102
  %35 = load i8, i8* %34, align 1, !tbaa !12
  %conv.i = zext i8 %35 to i32
  %36 = load i32, i32* %state_in_ch.i101, align 4, !tbaa !92
  %cmp7.i = icmp eq i32 %36, %conv.i
  %37 = load i32, i32* %state_in_len.i, align 8, !tbaa !93
  br i1 %cmp7.i, label %lor.lhs.false.i, label %land.lhs.true.i110

land.lhs.true.i110:                               ; preds = %if.end5.i
  %cmp9.i = icmp eq i32 %37, 1
  br i1 %cmp9.i, label %if.then11.i, label %if.then32.i

if.then11.i:                                      ; preds = %land.lhs.true.i110
  %conv13.i = trunc i32 %36 to i8
  %38 = load i32, i32* %blockCRC.i, align 8, !tbaa !96
  %shl.i = shl i32 %38, 8
  %shr.i = lshr i32 %38, 24
  %conv15.i = and i32 %36, 255
  %xor.i = xor i32 %shr.i, %conv15.i
  %idxprom.i111 = zext i32 %xor.i to i64
  %arrayidx.i112 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom.i111
  %39 = load i32, i32* %arrayidx.i112, align 4, !tbaa !6
  %xor16.i = xor i32 %shl.i, %39
  store i32 %xor16.i, i32* %blockCRC.i, align 8, !tbaa !96
  %idxprom19.i = zext i32 %36 to i64
  %arrayidx20.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 22, i64 %idxprom19.i
  store i8 1, i8* %arrayidx20.i, align 1, !tbaa !12
  %40 = load i8*, i8** %block.i, align 8, !tbaa !26
  %idxprom22.i = sext i32 %33 to i64
  %arrayidx23.i = getelementptr inbounds i8, i8* %40, i64 %idxprom22.i
  store i8 %conv13.i, i8* %arrayidx23.i, align 1, !tbaa !12
  %41 = load i32, i32* %nblock.i, align 4, !tbaa !28
  %inc.i113 = add nsw i32 %41, 1
  store i32 %inc.i113, i32* %nblock.i, align 4, !tbaa !28
  store i32 %conv.i, i32* %state_in_ch.i101, align 4, !tbaa !92
  br label %if.end44.i

lor.lhs.false.i:                                  ; preds = %if.end5.i
  %cmp30.i = icmp eq i32 %37, 255
  br i1 %cmp30.i, label %if.then32.i, label %if.else40.i

if.then32.i:                                      ; preds = %lor.lhs.false.i, %land.lhs.true.i110
  %cmp34.i = icmp ult i32 %36, 256
  br i1 %cmp34.i, label %if.then36.i, label %if.end37.i

if.then36.i:                                      ; preds = %if.then32.i
  tail call fastcc void @add_pair_to_block(%struct.EState* nonnull %1) #2
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.then36.i, %if.then32.i
  store i32 %conv.i, i32* %state_in_ch.i101, align 4, !tbaa !92
  store i32 1, i32* %state_in_len.i, align 8, !tbaa !93
  br label %if.end44.i

if.else40.i:                                      ; preds = %lor.lhs.false.i
  %inc42.i = add nsw i32 %37, 1
  store i32 %inc42.i, i32* %state_in_len.i, align 8, !tbaa !93
  br label %if.end44.i

if.end44.i:                                       ; preds = %if.else40.i, %if.end37.i, %if.then11.i
  %42 = load %struct.bz_stream*, %struct.bz_stream** %strm.i, align 8, !tbaa !79
  %next_in46.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i64 0, i32 0
  %43 = load i8*, i8** %next_in46.i, align 8, !tbaa !102
  %incdec.ptr.i114 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %incdec.ptr.i114, i8** %next_in46.i, align 8, !tbaa !102
  %avail_in48.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i64 0, i32 1
  %44 = load i32, i32* %avail_in48.i, align 8, !tbaa !98
  %dec.i115 = add i32 %44, -1
  store i32 %dec.i115, i32* %avail_in48.i, align 8, !tbaa !98
  %total_in_lo32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i64 0, i32 2
  %45 = load i32, i32* %total_in_lo32.i, align 4, !tbaa !88
  %inc50.i = add i32 %45, 1
  store i32 %inc50.i, i32* %total_in_lo32.i, align 4, !tbaa !88
  %cmp53.i = icmp eq i32 %inc50.i, 0
  br i1 %cmp53.i, label %if.then55.i, label %if.end58.i

if.then55.i:                                      ; preds = %if.end44.i
  %total_in_hi32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i64 0, i32 3
  %46 = load i32, i32* %total_in_hi32.i, align 8, !tbaa !89
  %inc57.i = add i32 %46, 1
  store i32 %inc57.i, i32* %total_in_hi32.i, align 8, !tbaa !89
  br label %if.end58.i

if.end58.i:                                       ; preds = %if.then55.i, %if.end44.i
  %47 = load i32, i32* %nblock.i, align 4, !tbaa !28
  %48 = load i32, i32* %nblockMAX.i, align 8, !tbaa !84
  %cmp1.i116 = icmp slt i32 %47, %48
  br i1 %cmp1.i116, label %if.end.i109, label %copy_input_until_stop.exit

if.else59.i:                                      ; preds = %if.then34
  br i1 %cmp1226.i, label %if.end67.lr.ph.i, label %copy_input_until_stop.exit

if.end67.lr.ph.i:                                 ; preds = %if.else59.i
  %.pre.i117 = load %struct.bz_stream*, %struct.bz_stream** %strm.i, align 8, !tbaa !79
  %avail_in69.phi.trans.insert.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre.i117, i64 0, i32 1
  %.pre236.i = load i32, i32* %avail_in69.phi.trans.insert.i, align 8, !tbaa !98
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.end152.i, %if.end67.lr.ph.i
  %49 = phi i32 [ %29, %if.end67.lr.ph.i ], [ %69, %if.end152.i ]
  %50 = phi i32 [ %.pre236.i, %if.end67.lr.ph.i ], [ %dec140.i, %if.end152.i ]
  %51 = phi %struct.bz_stream* [ %.pre.i117, %if.end67.lr.ph.i ], [ %62, %if.end152.i ]
  %52 = phi i32 [ %28, %if.end67.lr.ph.i ], [ %68, %if.end152.i ]
  %progress_in.1230.i = phi i8 [ 0, %if.end67.lr.ph.i ], [ 1, %if.end152.i ]
  %cmp70.i = icmp eq i32 %50, 0
  br i1 %cmp70.i, label %copy_input_until_stop.exit, label %if.end73.i

if.end73.i:                                       ; preds = %if.end67.i
  %53 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %cmp74.i = icmp eq i32 %53, 0
  br i1 %cmp74.i, label %copy_input_until_stop.exit, label %if.end77.i

if.end77.i:                                       ; preds = %if.end73.i
  %next_in80.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %51, i64 0, i32 0
  %54 = load i8*, i8** %next_in80.i, align 8, !tbaa !102
  %55 = load i8, i8* %54, align 1, !tbaa !12
  %conv81.i = zext i8 %55 to i32
  %56 = load i32, i32* %state_in_ch.i101, align 4, !tbaa !92
  %cmp83.i = icmp eq i32 %56, %conv81.i
  %57 = load i32, i32* %state_in_len.i, align 8, !tbaa !93
  br i1 %cmp83.i, label %lor.lhs.false118.i, label %land.lhs.true85.i

land.lhs.true85.i:                                ; preds = %if.end77.i
  %cmp87.i = icmp eq i32 %57, 1
  br i1 %cmp87.i, label %if.then89.i, label %if.then122.i

if.then89.i:                                      ; preds = %land.lhs.true85.i
  %conv92.i = trunc i32 %56 to i8
  %58 = load i32, i32* %blockCRC.i, align 8, !tbaa !96
  %shl94.i = shl i32 %58, 8
  %shr96.i = lshr i32 %58, 24
  %conv97.i = and i32 %56, 255
  %xor98.i = xor i32 %shr96.i, %conv97.i
  %idxprom99.i = zext i32 %xor98.i to i64
  %arrayidx100.i = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom99.i
  %59 = load i32, i32* %arrayidx100.i, align 4, !tbaa !6
  %xor101.i = xor i32 %shl94.i, %59
  store i32 %xor101.i, i32* %blockCRC.i, align 8, !tbaa !96
  %idxprom105.i = zext i32 %56 to i64
  %arrayidx106.i = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 22, i64 %idxprom105.i
  store i8 1, i8* %arrayidx106.i, align 1, !tbaa !12
  %60 = load i8*, i8** %block.i, align 8, !tbaa !26
  %idxprom109.i = sext i32 %52 to i64
  %arrayidx110.i = getelementptr inbounds i8, i8* %60, i64 %idxprom109.i
  store i8 %conv92.i, i8* %arrayidx110.i, align 1, !tbaa !12
  %61 = load i32, i32* %nblock.i, align 4, !tbaa !28
  %inc112.i = add nsw i32 %61, 1
  store i32 %inc112.i, i32* %nblock.i, align 4, !tbaa !28
  store i32 %conv81.i, i32* %state_in_ch.i101, align 4, !tbaa !92
  br label %if.end134.i

lor.lhs.false118.i:                               ; preds = %if.end77.i
  %cmp120.i = icmp eq i32 %57, 255
  br i1 %cmp120.i, label %if.then122.i, label %if.else130.i

if.then122.i:                                     ; preds = %lor.lhs.false118.i, %land.lhs.true85.i
  %cmp124.i = icmp ult i32 %56, 256
  br i1 %cmp124.i, label %if.then126.i, label %if.end127.i

if.then126.i:                                     ; preds = %if.then122.i
  tail call fastcc void @add_pair_to_block(%struct.EState* nonnull %1) #2
  br label %if.end127.i

if.end127.i:                                      ; preds = %if.then126.i, %if.then122.i
  store i32 %conv81.i, i32* %state_in_ch.i101, align 4, !tbaa !92
  store i32 1, i32* %state_in_len.i, align 8, !tbaa !93
  br label %if.end134.i

if.else130.i:                                     ; preds = %lor.lhs.false118.i
  %inc132.i = add nsw i32 %57, 1
  store i32 %inc132.i, i32* %state_in_len.i, align 8, !tbaa !93
  br label %if.end134.i

if.end134.i:                                      ; preds = %if.else130.i, %if.end127.i, %if.then89.i
  %62 = load %struct.bz_stream*, %struct.bz_stream** %strm.i, align 8, !tbaa !79
  %next_in136.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %62, i64 0, i32 0
  %63 = load i8*, i8** %next_in136.i, align 8, !tbaa !102
  %incdec.ptr137.i = getelementptr inbounds i8, i8* %63, i64 1
  store i8* %incdec.ptr137.i, i8** %next_in136.i, align 8, !tbaa !102
  %avail_in139.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %62, i64 0, i32 1
  %64 = load i32, i32* %avail_in139.i, align 8, !tbaa !98
  %dec140.i = add i32 %64, -1
  store i32 %dec140.i, i32* %avail_in139.i, align 8, !tbaa !98
  %total_in_lo32142.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %62, i64 0, i32 2
  %65 = load i32, i32* %total_in_lo32142.i, align 4, !tbaa !88
  %inc143.i = add i32 %65, 1
  store i32 %inc143.i, i32* %total_in_lo32142.i, align 4, !tbaa !88
  %cmp146.i = icmp eq i32 %inc143.i, 0
  br i1 %cmp146.i, label %if.then148.i, label %if.end152.i

if.then148.i:                                     ; preds = %if.end134.i
  %total_in_hi32150.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %62, i64 0, i32 3
  %66 = load i32, i32* %total_in_hi32150.i, align 8, !tbaa !89
  %inc151.i = add i32 %66, 1
  store i32 %inc151.i, i32* %total_in_hi32150.i, align 8, !tbaa !89
  br label %if.end152.i

if.end152.i:                                      ; preds = %if.then148.i, %if.end134.i
  %67 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %dec154.i = add i32 %67, -1
  store i32 %dec154.i, i32* %avail_in_expect.i, align 8, !tbaa !99
  %68 = load i32, i32* %nblock.i, align 4, !tbaa !28
  %69 = load i32, i32* %nblockMAX.i, align 8, !tbaa !84
  %cmp64.i = icmp slt i32 %68, %69
  br i1 %cmp64.i, label %if.end67.i, label %copy_input_until_stop.exit

copy_input_until_stop.exit:                       ; preds = %if.end152.i, %if.end73.i, %if.end67.i, %if.else59.i, %if.end58.i, %if.end.i109, %if.then.i106
  %70 = phi i32 [ %29, %if.then.i106 ], [ %29, %if.else59.i ], [ %48, %if.end58.i ], [ %30, %if.end.i109 ], [ %69, %if.end152.i ], [ %49, %if.end67.i ], [ %49, %if.end73.i ]
  %71 = phi i32 [ %28, %if.then.i106 ], [ %28, %if.else59.i ], [ %47, %if.end58.i ], [ %33, %if.end.i109 ], [ %68, %if.end152.i ], [ %52, %if.end67.i ], [ %52, %if.end73.i ]
  %progress_in.2.i = phi i8 [ 0, %if.then.i106 ], [ 0, %if.else59.i ], [ 1, %if.end58.i ], [ %progress_in.0227.i, %if.end.i109 ], [ 1, %if.end152.i ], [ %progress_in.1230.i, %if.end67.i ], [ %progress_in.1230.i, %if.end73.i ]
  %or3897 = or i8 %progress_in.2.i, %progress_in.0.ph
  %72 = load i32, i32* %mode.i, align 8, !tbaa !81
  %cmp41 = icmp eq i32 %72, 2
  br i1 %cmp41, label %if.else, label %land.lhs.true43

land.lhs.true43:                                  ; preds = %copy_input_until_stop.exit
  %73 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %cmp45 = icmp eq i32 %73, 0
  br i1 %cmp45, label %if.then47, label %if.else

if.then47:                                        ; preds = %land.lhs.true43
  %74 = load i32, i32* %state_in_ch.i101, align 4, !tbaa !92
  %cmp.i99 = icmp ult i32 %74, 256
  br i1 %cmp.i99, label %if.then.i, label %flush_RL.exit

if.then.i:                                        ; preds = %if.then47
  tail call fastcc void @add_pair_to_block(%struct.EState* nonnull %1) #2
  %.pre140 = load i32, i32* %mode.i, align 8, !tbaa !81
  br label %flush_RL.exit

flush_RL.exit:                                    ; preds = %if.then.i, %if.then47
  %75 = phi i32 [ %72, %if.then47 ], [ %.pre140, %if.then.i ]
  store i32 256, i32* %state_in_ch.i101, align 4, !tbaa !92
  store i32 0, i32* %state_in_len.i, align 8, !tbaa !93
  %cmp49 = icmp eq i32 %75, 4
  %conv51 = zext i1 %cmp49 to i8
  tail call void @BZ2_compressBlock(%struct.EState* nonnull %1, i8 zeroext %conv51) #2
  store i32 1, i32* %state1, align 4, !tbaa !80
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.else57, %if.then55, %flush_RL.exit
  br label %while.cond.outer

if.else:                                          ; preds = %land.lhs.true43, %copy_input_until_stop.exit
  %cmp53 = icmp slt i32 %71, %70
  br i1 %cmp53, label %if.else57, label %if.then55

if.then55:                                        ; preds = %if.else
  tail call void @BZ2_compressBlock(%struct.EState* nonnull %1, i8 zeroext 0) #2
  store i32 1, i32* %state1, align 4, !tbaa !80
  br label %while.cond.outer.backedge

if.else57:                                        ; preds = %if.else
  %76 = load %struct.bz_stream*, %struct.bz_stream** %strm.i, align 8, !tbaa !79
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %76, i64 0, i32 1
  %77 = load i32, i32* %avail_in, align 8, !tbaa !98
  %cmp59 = icmp eq i32 %77, 0
  br i1 %cmp59, label %while.end, label %while.cond.outer.backedge

while.end:                                        ; preds = %if.else57, %land.lhs.true.i126, %land.lhs.true24, %land.lhs.true.i, %land.lhs.true11, %copy_output_until_stop.exit
  %progress_out.2 = phi i8 [ %or98, %copy_output_until_stop.exit ], [ %progress_out.1134, %if.else57 ], [ %or98, %land.lhs.true11 ], [ %or98, %land.lhs.true.i ], [ %or98, %land.lhs.true24 ], [ %or98, %land.lhs.true.i126 ]
  %progress_in.2 = phi i8 [ %progress_in.0.ph, %copy_output_until_stop.exit ], [ %or3897, %if.else57 ], [ %progress_in.0.ph, %land.lhs.true11 ], [ %progress_in.0.ph, %land.lhs.true.i ], [ %progress_in.0.ph, %land.lhs.true24 ], [ %progress_in.0.ph, %land.lhs.true.i126 ]
  %78 = or i8 %progress_in.2, %progress_out.2
  %79 = icmp ne i8 %78, 0
  %conv70 = zext i1 %79 to i8
  ret i8 %conv70
}

; Function Attrs: norecurse nounwind uwtable
define internal fastcc void @add_pair_to_block(%struct.EState* nocapture %s) unnamed_addr #0 {
entry:
  %state_in_ch = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 13
  %0 = load i32, i32* %state_in_ch, align 4, !tbaa !92
  %conv = trunc i32 %0 to i8
  %state_in_len = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 14
  %1 = load i32, i32* %state_in_len, align 8, !tbaa !93
  %cmp137 = icmp sgt i32 %1, 0
  br i1 %cmp137, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 26
  %conv3 = and i32 %0, 255
  %.pre = load i32, i32* %blockCRC, align 8, !tbaa !96
  %xtraiter = and i32 %1, 1
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub i32 %1, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %3 = phi i32 [ %.pre, %for.body.lr.ph.new ], [ %xor4.1, %for.body ]
  %niter = phi i32 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.1, %for.body ]
  %shl = shl i32 %3, 8
  %shr = lshr i32 %3, 24
  %xor = xor i32 %shr, %conv3
  %idxprom = zext i32 %xor to i64
  %arrayidx = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !6
  %xor4 = xor i32 %shl, %4
  store i32 %xor4, i32* %blockCRC, align 8, !tbaa !96
  %shl.1 = shl i32 %xor4, 8
  %shr.1 = lshr i32 %xor4, 24
  %xor.1 = xor i32 %shr.1, %conv3
  %idxprom.1 = zext i32 %xor.1 to i64
  %arrayidx.1 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom.1
  %5 = load i32, i32* %arrayidx.1, align 4, !tbaa !6
  %xor4.1 = xor i32 %shl.1, %5
  store i32 %xor4.1, i32* %blockCRC, align 8, !tbaa !96
  %niter.nsub.1 = add i32 %niter, -2
  %niter.ncmp.1 = icmp eq i32 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %.unr = phi i32 [ %.pre, %for.body.lr.ph ], [ %xor4.1, %for.body ]
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa
  %shl.epil = shl i32 %.unr, 8
  %shr.epil = lshr i32 %.unr, 24
  %xor.epil = xor i32 %shr.epil, %conv3
  %idxprom.epil = zext i32 %xor.epil to i64
  %arrayidx.epil = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom.epil
  %6 = load i32, i32* %arrayidx.epil, align 4, !tbaa !6
  %xor4.epil = xor i32 %shl.epil, %6
  store i32 %xor4.epil, i32* %blockCRC, align 8, !tbaa !96
  br label %for.end

for.end:                                          ; preds = %for.body.epil, %for.end.loopexit.unr-lcssa, %entry
  %idxprom7 = zext i32 %0 to i64
  %arrayidx8 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %idxprom7
  store i8 1, i8* %arrayidx8, align 1, !tbaa !12
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb14
    i32 3, label %sw.bb27
  ]

sw.bb:                                            ; preds = %for.end
  %block = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 9
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %7 = load i32, i32* %nblock, align 4, !tbaa !28
  br label %sw.epilog

sw.bb14:                                          ; preds = %for.end
  %block15 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 9
  %8 = load i8*, i8** %block15, align 8, !tbaa !26
  %nblock16 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %9 = load i32, i32* %nblock16, align 4, !tbaa !28
  %idxprom17 = sext i32 %9 to i64
  %arrayidx18 = getelementptr inbounds i8, i8* %8, i64 %idxprom17
  store i8 %conv, i8* %arrayidx18, align 1, !tbaa !12
  %10 = load i32, i32* %nblock16, align 4, !tbaa !28
  %inc20 = add nsw i32 %10, 1
  store i32 %inc20, i32* %nblock16, align 4, !tbaa !28
  br label %sw.epilog

sw.bb27:                                          ; preds = %for.end
  %block28 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 9
  %11 = load i8*, i8** %block28, align 8, !tbaa !26
  %nblock29 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %12 = load i32, i32* %nblock29, align 4, !tbaa !28
  %idxprom30 = sext i32 %12 to i64
  %arrayidx31 = getelementptr inbounds i8, i8* %11, i64 %idxprom30
  store i8 %conv, i8* %arrayidx31, align 1, !tbaa !12
  %13 = load i32, i32* %nblock29, align 4, !tbaa !28
  %inc33 = add nsw i32 %13, 1
  store i32 %inc33, i32* %nblock29, align 4, !tbaa !28
  %14 = load i8*, i8** %block28, align 8, !tbaa !26
  %idxprom36 = sext i32 %inc33 to i64
  %arrayidx37 = getelementptr inbounds i8, i8* %14, i64 %idxprom36
  store i8 %conv, i8* %arrayidx37, align 1, !tbaa !12
  %15 = load i32, i32* %nblock29, align 4, !tbaa !28
  %inc39 = add nsw i32 %15, 1
  store i32 %inc39, i32* %nblock29, align 4, !tbaa !28
  br label %sw.epilog

sw.default:                                       ; preds = %for.end
  %sub = add nsw i32 %1, -4
  %idxprom48 = sext i32 %sub to i64
  %arrayidx49 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %idxprom48
  store i8 1, i8* %arrayidx49, align 1, !tbaa !12
  %block50 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 9
  %16 = load i8*, i8** %block50, align 8, !tbaa !26
  %nblock51 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %17 = load i32, i32* %nblock51, align 4, !tbaa !28
  %idxprom52 = sext i32 %17 to i64
  %arrayidx53 = getelementptr inbounds i8, i8* %16, i64 %idxprom52
  store i8 %conv, i8* %arrayidx53, align 1, !tbaa !12
  %18 = load i32, i32* %nblock51, align 4, !tbaa !28
  %inc55 = add nsw i32 %18, 1
  store i32 %inc55, i32* %nblock51, align 4, !tbaa !28
  %19 = load i8*, i8** %block50, align 8, !tbaa !26
  %idxprom58 = sext i32 %inc55 to i64
  %arrayidx59 = getelementptr inbounds i8, i8* %19, i64 %idxprom58
  store i8 %conv, i8* %arrayidx59, align 1, !tbaa !12
  %20 = load i32, i32* %nblock51, align 4, !tbaa !28
  %inc61 = add nsw i32 %20, 1
  store i32 %inc61, i32* %nblock51, align 4, !tbaa !28
  %21 = load i8*, i8** %block50, align 8, !tbaa !26
  %idxprom64 = sext i32 %inc61 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %21, i64 %idxprom64
  store i8 %conv, i8* %arrayidx65, align 1, !tbaa !12
  %22 = load i32, i32* %nblock51, align 4, !tbaa !28
  %inc67 = add nsw i32 %22, 1
  store i32 %inc67, i32* %nblock51, align 4, !tbaa !28
  %23 = load i8*, i8** %block50, align 8, !tbaa !26
  %idxprom70 = sext i32 %inc67 to i64
  %arrayidx71 = getelementptr inbounds i8, i8* %23, i64 %idxprom70
  store i8 %conv, i8* %arrayidx71, align 1, !tbaa !12
  %24 = load i32, i32* %nblock51, align 4, !tbaa !28
  %inc73 = add nsw i32 %24, 1
  store i32 %inc73, i32* %nblock51, align 4, !tbaa !28
  %25 = load i32, i32* %state_in_len, align 8, !tbaa !93
  %26 = trunc i32 %25 to i8
  %conv76 = add i8 %26, -4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb27, %sw.bb14, %sw.bb
  %inc73.sink = phi i32 [ %inc73, %sw.default ], [ %inc39, %sw.bb27 ], [ %inc20, %sw.bb14 ], [ %7, %sw.bb ]
  %.sink.in = phi i8** [ %block50, %sw.default ], [ %block28, %sw.bb27 ], [ %block15, %sw.bb14 ], [ %block, %sw.bb ]
  %conv76.sink = phi i8 [ %conv76, %sw.default ], [ %conv, %sw.bb27 ], [ %conv, %sw.bb14 ], [ %conv, %sw.bb ]
  %nblock51.sink141 = phi i32* [ %nblock51, %sw.default ], [ %nblock29, %sw.bb27 ], [ %nblock16, %sw.bb14 ], [ %nblock, %sw.bb ]
  %.sink = load i8*, i8** %.sink.in, align 8, !tbaa !26
  %idxprom79 = sext i32 %inc73.sink to i64
  %arrayidx80 = getelementptr inbounds i8, i8* %.sink, i64 %idxprom79
  store i8 %conv76.sink, i8* %arrayidx80, align 1, !tbaa !12
  %27 = load i32, i32* %nblock51.sink141, align 4, !tbaa !28
  %inc82 = add nsw i32 %27, 1
  store i32 %inc82, i32* %nblock51.sink141, align 4, !tbaa !28
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  %0 = bitcast i8** %state to %struct.EState**
  %1 = load %struct.EState*, %struct.EState** %0, align 8, !tbaa !87
  %cmp1 = icmp eq %struct.EState* %1, null
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 0
  %2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !79
  %cmp5 = icmp eq %struct.bz_stream* %2, %strm
  br i1 %cmp5, label %if.end7, label %cleanup

if.end7:                                          ; preds = %if.end3
  %arr1 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 4
  %3 = load i32*, i32** %arr1, align 8, !tbaa !31
  %cmp8 = icmp eq i32* %3, null
  br i1 %cmp8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end7
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %5 = load i8*, i8** %opaque, align 8, !tbaa !78
  %6 = bitcast i32* %3 to i8*
  tail call void %4(i8* %5, i8* %6) #2
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 5
  %7 = load i32*, i32** %arr2, align 8, !tbaa !32
  %cmp12 = icmp eq i32* %7, null
  br i1 %cmp12, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.end11
  %bzfree14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree14, align 8, !tbaa !77
  %opaque15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %9 = load i8*, i8** %opaque15, align 8, !tbaa !78
  %10 = bitcast i32* %7 to i8*
  tail call void %8(i8* %9, i8* %10) #2
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end11
  %ftab = getelementptr inbounds %struct.EState, %struct.EState* %1, i64 0, i32 6
  %11 = load i32*, i32** %ftab, align 8, !tbaa !27
  %cmp18 = icmp eq i32* %11, null
  %.pre = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  br i1 %cmp18, label %if.end17.if.end23_crit_edge, label %if.then19

if.end17.if.end23_crit_edge:                      ; preds = %if.end17
  %.pre48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  br label %if.end23

if.then19:                                        ; preds = %if.end17
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre, align 8, !tbaa !77
  %opaque21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %13 = load i8*, i8** %opaque21, align 8, !tbaa !78
  %14 = bitcast i32* %11 to i8*
  tail call void %12(i8* %13, i8* %14) #2
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17.if.end23_crit_edge
  %opaque25.pre-phi = phi i8** [ %.pre48, %if.end17.if.end23_crit_edge ], [ %opaque21, %if.then19 ]
  %15 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre, align 8, !tbaa !77
  %16 = load i8*, i8** %opaque25.pre-phi, align 8, !tbaa !78
  %17 = load i8*, i8** %state, align 8, !tbaa !87
  tail call void %15(i8* %16, i8* %17) #2
  store i8* null, i8** %state, align 8, !tbaa !87
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end3, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end23 ], [ -2, %entry ], [ -2, %if.end ], [ -2, %if.end3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %verbosity, i32 %small) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  %0 = icmp ugt i32 %small, 1
  %or.cond = or i1 %cmp, %0
  %1 = icmp ugt i32 %verbosity, 4
  %or.cond57 = or i1 %1, %or.cond
  br i1 %or.cond57, label %cleanup, label %if.end10

if.end10:                                         ; preds = %entry
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 9
  %2 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  %cmp11 = icmp eq i8* (i8*, i32, i32)* %2, null
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10
  %3 = phi i8* (i8*, i32, i32)* [ @default_bzalloc, %if.then12 ], [ %2, %if.end10 ]
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %cmp15 = icmp eq void (i8*, i8*)* %4, null
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %5 = load i8*, i8** %opaque, align 8, !tbaa !78
  %call20 = tail call i8* %3(i8* %5, i32 64144, i32 1) #2
  %cmp21 = icmp eq i8* %call20, null
  br i1 %cmp21, label %cleanup, label %if.end23

if.end23:                                         ; preds = %if.end18
  %strm24 = bitcast i8* %call20 to %struct.bz_stream**
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm24, align 8, !tbaa !103
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  store i8* %call20, i8** %state, align 8, !tbaa !87
  %state25 = getelementptr inbounds i8, i8* %call20, i64 8
  %6 = bitcast i8* %state25 to i32*
  store i32 10, i32* %6, align 8, !tbaa !105
  %bsLive = getelementptr inbounds i8, i8* %call20, i64 36
  %7 = bitcast i8* %bsLive to i32*
  store i32 0, i32* %7, align 4, !tbaa !106
  %bsBuff = getelementptr inbounds i8, i8* %call20, i64 32
  %8 = bitcast i8* %bsBuff to i32*
  store i32 0, i32* %8, align 8, !tbaa !107
  %calculatedCombinedCRC = getelementptr inbounds i8, i8* %call20, i64 3188
  %9 = bitcast i8* %calculatedCombinedCRC to i32*
  store i32 0, i32* %9, align 4, !tbaa !108
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 2
  store i32 0, i32* %total_in_lo32, align 4, !tbaa !88
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 3
  store i32 0, i32* %total_in_hi32, align 8, !tbaa !89
  %total_out_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 6
  store i32 0, i32* %total_out_lo32, align 4, !tbaa !90
  %total_out_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 7
  store i32 0, i32* %total_out_hi32, align 8, !tbaa !91
  %conv = trunc i32 %small to i8
  %10 = getelementptr inbounds i8, i8* %call20, i64 44
  store i8 %conv, i8* %10, align 4, !tbaa !109
  %tt = getelementptr inbounds i8, i8* %call20, i64 3152
  %currBlockNo = getelementptr inbounds i8, i8* %call20, i64 48
  %11 = bitcast i8* %currBlockNo to i32*
  store i32 0, i32* %11, align 8, !tbaa !110
  %verbosity26 = getelementptr inbounds i8, i8* %call20, i64 52
  %12 = bitcast i8* %verbosity26 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull %tt, i8 0, i64 24, i32 8, i1 false)
  store i32 %verbosity, i32* %12, align 4, !tbaa !111
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end18, %entry
  %retval.0 = phi i32 [ 0, %if.end23 ], [ -2, %entry ], [ -3, %if.end18 ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @BZ2_indexIntoF(i32 %indx, i32* nocapture readonly %cftab) local_unnamed_addr #10 {
entry:
  br label %do.body

do.body:                                          ; preds = %do.body, %entry
  %na.0 = phi i32 [ 256, %entry ], [ %shr.na.0, %do.body ]
  %nb.0 = phi i32 [ 0, %entry ], [ %nb.0.shr, %do.body ]
  %add = add nsw i32 %nb.0, %na.0
  %shr = ashr i32 %add, 1
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds i32, i32* %cftab, i64 %idxprom
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !6
  %cmp = icmp sgt i32 %0, %indx
  %shr.na.0 = select i1 %cmp, i32 %shr, i32 %na.0
  %nb.0.shr = select i1 %cmp, i32 %nb.0, i32 %shr
  %sub = sub nsw i32 %shr.na.0, %nb.0.shr
  %cmp1 = icmp eq i32 %sub, 1
  br i1 %cmp1, label %do.end, label %do.body

do.end:                                           ; preds = %do.body
  ret i32 %nb.0.shr
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzDecompress(%struct.bz_stream* readonly %strm) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %cleanup71, label %if.end

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  %0 = bitcast i8** %state to %struct.DState**
  %1 = load %struct.DState*, %struct.DState** %0, align 8, !tbaa !87
  %cmp1 = icmp eq %struct.DState* %1, null
  br i1 %cmp1, label %cleanup71, label %if.end3

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 0
  %2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %cmp5 = icmp eq %struct.bz_stream* %2, %strm
  br i1 %cmp5, label %if.end7, label %cleanup71

if.end7:                                          ; preds = %if.end3
  %state8 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 1
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 10
  %blockRandomised.i108 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 4
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 17
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 51
  %calculatedBlockCRC276.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 25
  %state_out_ch277.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 2
  %state_out_len278.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 3
  %k0280.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 15
  %tt281.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 20
  %tPos282.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 14
  %rNToGo.i118 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 5
  %rTPos.i119 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 6
  %verbosity = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 12
  %ll16412.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 21
  %ll4417.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 22
  %storedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 23
  %calculatedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 26
  %.pre = load i32, i32* %state8, align 8, !tbaa !105
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %cleanup, %if.end7
  %.ph289 = phi i32 [ 2, %cleanup ], [ %.pre, %if.end7 ]
  %cmp49 = icmp sgt i32 %.ph289, 9
  br label %while.cond

while.cond:                                       ; preds = %if.end47, %while.cond.outer
  switch i32 %.ph289, label %if.end47 [
    i32 1, label %cleanup71
    i32 2, label %if.then14
  ]

if.then14:                                        ; preds = %while.cond
  %3 = load i8, i8* %smallDecompress, align 4, !tbaa !109
  %tobool = icmp eq i8 %3, 0
  %4 = load i8, i8* %blockRandomised.i108, align 4, !tbaa !112
  %tobool.i109 = icmp eq i8 %4, 0
  br i1 %tobool, label %if.else, label %if.then15

if.then15:                                        ; preds = %if.then14
  %5 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %avail_out344932934.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5, i64 0, i32 5
  %6 = load i32, i32* %avail_out344932934.i, align 8, !tbaa !100
  %cmp345933935.i = icmp eq i32 %6, 0
  br i1 %tobool.i109, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.then15
  br i1 %cmp345933935.i, label %if.end20, label %if.end.lr.ph.lr.ph.i

if.end.lr.ph.lr.ph.i:                             ; preds = %if.then.i
  %.pre.pre.i = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %if.end.i.outer

if.end.i.outer:                                   ; preds = %if.end26.i, %if.end.lr.ph.lr.ph.i
  %.ph285 = phi i32 [ %.pre.pre.i, %if.end.lr.ph.lr.ph.i ], [ %dec.i, %if.end26.i ]
  %.ph286 = phi %struct.bz_stream* [ %5, %if.end.lr.ph.lr.ph.i ], [ %14, %if.end26.i ]
  %avail_out936.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.ph286, i64 0, i32 5
  br label %if.end.i

if.end.i:                                         ; preds = %while.cond.backedge.i, %if.end.i.outer
  %7 = phi i32 [ %.pre946.i, %while.cond.backedge.i ], [ %.ph285, %if.end.i.outer ]
  %cmp4.i = icmp eq i32 %7, 0
  br i1 %cmp4.i, label %while.end.i, label %if.end6.i

if.end6.i:                                        ; preds = %if.end.i
  %8 = load i8, i8* %state_out_ch277.i, align 4, !tbaa !114
  %next_out.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.ph286, i64 0, i32 4
  %9 = load i8*, i8** %next_out.i, align 8, !tbaa !101
  store i8 %8, i8* %9, align 1, !tbaa !12
  %10 = load i32, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %shl.i = shl i32 %10, 8
  %shr.i = lshr i32 %10, 24
  %11 = load i8, i8* %state_out_ch277.i, align 4, !tbaa !114
  %conv.i = zext i8 %11 to i32
  %xor.i = xor i32 %shr.i, %conv.i
  %idxprom.i = zext i32 %xor.i to i64
  %arrayidx.i = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom.i
  %12 = load i32, i32* %arrayidx.i, align 4, !tbaa !6
  %xor10.i = xor i32 %12, %shl.i
  store i32 %xor10.i, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %13 = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  %dec.i = add nsw i32 %13, -1
  store i32 %dec.i, i32* %state_out_len278.i, align 8, !tbaa !113
  %14 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %next_out14.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i64 0, i32 4
  %15 = load i8*, i8** %next_out14.i, align 8, !tbaa !101
  %incdec.ptr.i = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %incdec.ptr.i, i8** %next_out14.i, align 8, !tbaa !101
  %avail_out16.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i64 0, i32 5
  %16 = load i32, i32* %avail_out16.i, align 8, !tbaa !100
  %dec17.i = add i32 %16, -1
  store i32 %dec17.i, i32* %avail_out16.i, align 8, !tbaa !100
  %total_out_lo32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i64 0, i32 6
  %17 = load i32, i32* %total_out_lo32.i, align 4, !tbaa !90
  %inc.i = add i32 %17, 1
  store i32 %inc.i, i32* %total_out_lo32.i, align 4, !tbaa !90
  %cmp21.i = icmp eq i32 %inc.i, 0
  br i1 %cmp21.i, label %if.then23.i, label %if.end26.i

if.then23.i:                                      ; preds = %if.end6.i
  %total_out_hi32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i64 0, i32 7
  %18 = load i32, i32* %total_out_hi32.i, align 8, !tbaa !91
  %inc25.i = add i32 %18, 1
  store i32 %inc25.i, i32* %total_out_hi32.i, align 8, !tbaa !91
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then23.i, %if.end6.i
  %cmp.i = icmp eq i32 %dec17.i, 0
  br i1 %cmp.i, label %if.end20, label %if.end.i.outer

while.end.i:                                      ; preds = %if.end.i
  %19 = load i32, i32* %nblock_used, align 4, !tbaa !116
  %20 = load i32, i32* %save_nblock, align 8, !tbaa !117
  %add.i = add nsw i32 %20, 1
  %cmp27.i = icmp eq i32 %19, %add.i
  br i1 %cmp27.i, label %if.end20, label %if.end30.i

if.end30.i:                                       ; preds = %while.end.i
  %cmp34.i = icmp sgt i32 %19, %add.i
  br i1 %cmp34.i, label %cleanup71, label %if.end37.i

if.end37.i:                                       ; preds = %if.end30.i
  store i32 1, i32* %state_out_len278.i, align 8, !tbaa !113
  %21 = load i32, i32* %k0280.i, align 8, !tbaa !118
  %conv39.i = trunc i32 %21 to i8
  store i8 %conv39.i, i8* %state_out_ch277.i, align 4, !tbaa !114
  %22 = load i32, i32* %tPos282.i, align 4, !tbaa !119
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.body.i.i, %if.end37.i
  %na.0.i.i = phi i32 [ 256, %if.end37.i ], [ %shr.na.0.i.i, %do.body.i.i ]
  %nb.0.i.i = phi i32 [ 0, %if.end37.i ], [ %nb.0.shr.i.i, %do.body.i.i ]
  %add.i.i = add nsw i32 %nb.0.i.i, %na.0.i.i
  %shr.i.i = ashr i32 %add.i.i, 1
  %idxprom.i.i = sext i32 %shr.i.i to i64
  %arrayidx.i.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i.i
  %23 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !6
  %cmp.i.i = icmp sgt i32 %23, %22
  %shr.na.0.i.i = select i1 %cmp.i.i, i32 %shr.i.i, i32 %na.0.i.i
  %nb.0.shr.i.i = select i1 %cmp.i.i, i32 %nb.0.i.i, i32 %shr.i.i
  %sub.i.i = sub nsw i32 %shr.na.0.i.i, %nb.0.shr.i.i
  %cmp1.i.i = icmp eq i32 %sub.i.i, 1
  br i1 %cmp1.i.i, label %BZ2_indexIntoF.exit.i, label %do.body.i.i

BZ2_indexIntoF.exit.i:                            ; preds = %do.body.i.i
  %24 = load i16*, i16** %ll16412.i, align 8, !tbaa !120
  %idxprom43.i = zext i32 %22 to i64
  %arrayidx44.i = getelementptr inbounds i16, i16* %24, i64 %idxprom43.i
  %25 = load i16, i16* %arrayidx44.i, align 2, !tbaa !33
  %conv45.i = zext i16 %25 to i32
  %26 = load i8*, i8** %ll4417.i, align 8, !tbaa !121
  %shr47.i = lshr i32 %22, 1
  %idxprom48.i = zext i32 %shr47.i to i64
  %arrayidx49.i = getelementptr inbounds i8, i8* %26, i64 %idxprom48.i
  %27 = load i8, i8* %arrayidx49.i, align 1, !tbaa !12
  %conv50.i = zext i8 %27 to i32
  %shl52.i = shl i32 %22, 2
  %and.i = and i32 %shl52.i, 4
  %shr53.i = lshr i32 %conv50.i, %and.i
  %and54.i = shl nuw nsw i32 %shr53.i, 16
  %shl55.i = and i32 %and54.i, 983040
  %or.i = or i32 %shl55.i, %conv45.i
  store i32 %or.i, i32* %tPos282.i, align 4, !tbaa !119
  %28 = load i32, i32* %rNToGo.i118, align 8, !tbaa !122
  %cmp57.i = icmp eq i32 %28, 0
  br i1 %cmp57.i, label %if.then59.i, label %if.end71.i

if.then59.i:                                      ; preds = %BZ2_indexIntoF.exit.i
  %29 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom60.i = sext i32 %29 to i64
  %arrayidx61.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom60.i
  %30 = load i32, i32* %arrayidx61.i, align 4, !tbaa !6
  store i32 %30, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc64.i = add nsw i32 %29, 1
  %cmp66.i = icmp eq i32 %inc64.i, 512
  %spec.store.select.i = select i1 %cmp66.i, i32 0, i32 %inc64.i
  store i32 %spec.store.select.i, i32* %rTPos.i119, align 4
  br label %if.end71.i

if.end71.i:                                       ; preds = %if.then59.i, %BZ2_indexIntoF.exit.i
  %31 = phi i32 [ %30, %if.then59.i ], [ %28, %BZ2_indexIntoF.exit.i ]
  %dec73.i = add nsw i32 %31, -1
  store i32 %dec73.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc81.i = add nsw i32 %19, 1
  store i32 %inc81.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp85.i = icmp eq i32 %19, %20
  br i1 %cmp85.i, label %while.cond.backedge.i, label %if.end88.i

while.cond.backedge.i:                            ; preds = %if.end328.i, %if.then229.i, %if.end206.i, %if.then161.i, %if.end138.i, %if.then93.i, %if.end71.i
  %.pre946.i = phi i32 [ 3, %if.end206.i ], [ 2, %if.end138.i ], [ 1, %if.end71.i ], [ 1, %if.then93.i ], [ 2, %if.then161.i ], [ 3, %if.then229.i ], [ %add286.i, %if.end328.i ]
  %32 = load i32, i32* %avail_out936.i, align 8, !tbaa !100
  %cmp937.i = icmp eq i32 %32, 0
  br i1 %cmp937.i, label %if.end20, label %if.end.i

if.end88.i:                                       ; preds = %if.end71.i
  %cmp75.i = icmp eq i32 %dec73.i, 1
  %cond.i = zext i1 %cmp75.i to i32
  %call.masked.i = and i32 %nb.0.shr.i.i, 255
  %conv89.i = xor i32 %call.masked.i, %cond.i
  %cmp91.i = icmp eq i32 %conv89.i, %21
  br i1 %cmp91.i, label %if.end96.i, label %if.then93.i

if.then93.i:                                      ; preds = %if.end88.i
  store i32 %conv89.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond.backedge.i

if.end96.i:                                       ; preds = %if.end88.i
  store i32 2, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %do.body.i926.i

do.body.i926.i:                                   ; preds = %do.body.i926.i, %if.end96.i
  %na.0.i915.i = phi i32 [ 256, %if.end96.i ], [ %shr.na.0.i922.i, %do.body.i926.i ]
  %nb.0.i916.i = phi i32 [ 0, %if.end96.i ], [ %nb.0.shr.i923.i, %do.body.i926.i ]
  %add.i917.i = add nsw i32 %nb.0.i916.i, %na.0.i915.i
  %shr.i918.i = ashr i32 %add.i917.i, 1
  %idxprom.i919.i = sext i32 %shr.i918.i to i64
  %arrayidx.i920.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i919.i
  %33 = load i32, i32* %arrayidx.i920.i, align 4, !tbaa !6
  %cmp.i921.i = icmp sgt i32 %33, %or.i
  %shr.na.0.i922.i = select i1 %cmp.i921.i, i32 %shr.i918.i, i32 %na.0.i915.i
  %nb.0.shr.i923.i = select i1 %cmp.i921.i, i32 %nb.0.i916.i, i32 %shr.i918.i
  %sub.i924.i = sub nsw i32 %shr.na.0.i922.i, %nb.0.shr.i923.i
  %cmp1.i925.i = icmp eq i32 %sub.i924.i, 1
  br i1 %cmp1.i925.i, label %BZ2_indexIntoF.exit927.i, label %do.body.i926.i

BZ2_indexIntoF.exit927.i:                         ; preds = %do.body.i926.i
  %idxprom105.i = zext i32 %or.i to i64
  %arrayidx106.i = getelementptr inbounds i16, i16* %24, i64 %idxprom105.i
  %34 = load i16, i16* %arrayidx106.i, align 2, !tbaa !33
  %conv107.i = zext i16 %34 to i32
  %shr110.i = lshr i32 %or.i, 1
  %idxprom111.i = zext i32 %shr110.i to i64
  %arrayidx112.i = getelementptr inbounds i8, i8* %26, i64 %idxprom111.i
  %35 = load i8, i8* %arrayidx112.i, align 1, !tbaa !12
  %conv113.i = zext i8 %35 to i32
  %shl115.i = shl nuw nsw i32 %conv45.i, 2
  %and116.i = and i32 %shl115.i, 4
  %shr117.i = lshr i32 %conv113.i, %and116.i
  %and118.i = shl nuw nsw i32 %shr117.i, 16
  %shl119.i = and i32 %and118.i, 983040
  %or120.i = or i32 %shl119.i, %conv107.i
  store i32 %or120.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp123.i = icmp eq i32 %dec73.i, 0
  br i1 %cmp123.i, label %if.then125.i, label %if.end138.i

if.then125.i:                                     ; preds = %BZ2_indexIntoF.exit927.i
  %36 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom127.i = sext i32 %36 to i64
  %arrayidx128.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom127.i
  %37 = load i32, i32* %arrayidx128.i, align 4, !tbaa !6
  store i32 %37, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc131.i = add nsw i32 %36, 1
  %cmp133.i = icmp eq i32 %inc131.i, 512
  %spec.store.select807.i = select i1 %cmp133.i, i32 0, i32 %inc131.i
  store i32 %spec.store.select807.i, i32* %rTPos.i119, align 4
  br label %if.end138.i

if.end138.i:                                      ; preds = %if.then125.i, %BZ2_indexIntoF.exit927.i
  %38 = phi i32 [ %37, %if.then125.i ], [ %dec73.i, %BZ2_indexIntoF.exit927.i ]
  %dec140.i = add nsw i32 %38, -1
  store i32 %dec140.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc149.i = add nsw i32 %19, 2
  store i32 %inc149.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp153.i = icmp eq i32 %inc81.i, %20
  br i1 %cmp153.i, label %while.cond.backedge.i, label %if.end156.i

if.end156.i:                                      ; preds = %if.end138.i
  %cmp142.i = icmp eq i32 %dec140.i, 1
  %cond144.i = zext i1 %cmp142.i to i32
  %call101.masked.i = and i32 %nb.0.shr.i923.i, 255
  %conv157.i = xor i32 %call101.masked.i, %cond144.i
  %cmp159.i = icmp eq i32 %conv157.i, %21
  br i1 %cmp159.i, label %if.end164.i, label %if.then161.i

if.then161.i:                                     ; preds = %if.end156.i
  store i32 %conv157.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond.backedge.i

if.end164.i:                                      ; preds = %if.end156.i
  store i32 3, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %do.body.i913.i

do.body.i913.i:                                   ; preds = %do.body.i913.i, %if.end164.i
  %na.0.i902.i = phi i32 [ 256, %if.end164.i ], [ %shr.na.0.i909.i, %do.body.i913.i ]
  %nb.0.i903.i = phi i32 [ 0, %if.end164.i ], [ %nb.0.shr.i910.i, %do.body.i913.i ]
  %add.i904.i = add nsw i32 %nb.0.i903.i, %na.0.i902.i
  %shr.i905.i = ashr i32 %add.i904.i, 1
  %idxprom.i906.i = sext i32 %shr.i905.i to i64
  %arrayidx.i907.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i906.i
  %39 = load i32, i32* %arrayidx.i907.i, align 4, !tbaa !6
  %cmp.i908.i = icmp sgt i32 %39, %or120.i
  %shr.na.0.i909.i = select i1 %cmp.i908.i, i32 %shr.i905.i, i32 %na.0.i902.i
  %nb.0.shr.i910.i = select i1 %cmp.i908.i, i32 %nb.0.i903.i, i32 %shr.i905.i
  %sub.i911.i = sub nsw i32 %shr.na.0.i909.i, %nb.0.shr.i910.i
  %cmp1.i912.i = icmp eq i32 %sub.i911.i, 1
  br i1 %cmp1.i912.i, label %BZ2_indexIntoF.exit914.i, label %do.body.i913.i

BZ2_indexIntoF.exit914.i:                         ; preds = %do.body.i913.i
  %idxprom173.i = zext i32 %or120.i to i64
  %arrayidx174.i = getelementptr inbounds i16, i16* %24, i64 %idxprom173.i
  %40 = load i16, i16* %arrayidx174.i, align 2, !tbaa !33
  %conv175.i = zext i16 %40 to i32
  %shr178.i = lshr i32 %or120.i, 1
  %idxprom179.i = zext i32 %shr178.i to i64
  %arrayidx180.i = getelementptr inbounds i8, i8* %26, i64 %idxprom179.i
  %41 = load i8, i8* %arrayidx180.i, align 1, !tbaa !12
  %conv181.i = zext i8 %41 to i32
  %shl183.i = shl nuw nsw i32 %conv107.i, 2
  %and184.i = and i32 %shl183.i, 4
  %shr185.i = lshr i32 %conv181.i, %and184.i
  %and186.i = shl nuw nsw i32 %shr185.i, 16
  %shl187.i = and i32 %and186.i, 983040
  %or188.i = or i32 %shl187.i, %conv175.i
  store i32 %or188.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp191.i = icmp eq i32 %dec140.i, 0
  br i1 %cmp191.i, label %if.then193.i, label %if.end206.i

if.then193.i:                                     ; preds = %BZ2_indexIntoF.exit914.i
  %42 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom195.i = sext i32 %42 to i64
  %arrayidx196.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom195.i
  %43 = load i32, i32* %arrayidx196.i, align 4, !tbaa !6
  store i32 %43, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc199.i = add nsw i32 %42, 1
  %cmp201.i = icmp eq i32 %inc199.i, 512
  %spec.store.select808.i = select i1 %cmp201.i, i32 0, i32 %inc199.i
  store i32 %spec.store.select808.i, i32* %rTPos.i119, align 4
  br label %if.end206.i

if.end206.i:                                      ; preds = %if.then193.i, %BZ2_indexIntoF.exit914.i
  %44 = phi i32 [ %43, %if.then193.i ], [ %dec140.i, %BZ2_indexIntoF.exit914.i ]
  %dec208.i = add nsw i32 %44, -1
  store i32 %dec208.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc217.i = add nsw i32 %19, 3
  store i32 %inc217.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp221.i = icmp eq i32 %inc149.i, %20
  br i1 %cmp221.i, label %while.cond.backedge.i, label %if.end224.i

if.end224.i:                                      ; preds = %if.end206.i
  %cmp210.i = icmp eq i32 %dec208.i, 1
  %cond212.i = zext i1 %cmp210.i to i32
  %call169.masked.i = and i32 %nb.0.shr.i910.i, 255
  %conv225.i = xor i32 %call169.masked.i, %cond212.i
  %cmp227.i = icmp eq i32 %conv225.i, %21
  br i1 %cmp227.i, label %do.body.i900.i.preheader, label %if.then229.i

do.body.i900.i.preheader:                         ; preds = %if.end224.i
  br label %do.body.i900.i

if.then229.i:                                     ; preds = %if.end224.i
  store i32 %conv225.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond.backedge.i

do.body.i900.i:                                   ; preds = %do.body.i900.i, %do.body.i900.i.preheader
  %na.0.i889.i = phi i32 [ %shr.na.0.i896.i, %do.body.i900.i ], [ 256, %do.body.i900.i.preheader ]
  %nb.0.i890.i = phi i32 [ %nb.0.shr.i897.i, %do.body.i900.i ], [ 0, %do.body.i900.i.preheader ]
  %add.i891.i = add nsw i32 %nb.0.i890.i, %na.0.i889.i
  %shr.i892.i = ashr i32 %add.i891.i, 1
  %idxprom.i893.i = sext i32 %shr.i892.i to i64
  %arrayidx.i894.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i893.i
  %45 = load i32, i32* %arrayidx.i894.i, align 4, !tbaa !6
  %cmp.i895.i = icmp sgt i32 %45, %or188.i
  %shr.na.0.i896.i = select i1 %cmp.i895.i, i32 %shr.i892.i, i32 %na.0.i889.i
  %nb.0.shr.i897.i = select i1 %cmp.i895.i, i32 %nb.0.i890.i, i32 %shr.i892.i
  %sub.i898.i = sub nsw i32 %shr.na.0.i896.i, %nb.0.shr.i897.i
  %cmp1.i899.i = icmp eq i32 %sub.i898.i, 1
  br i1 %cmp1.i899.i, label %BZ2_indexIntoF.exit901.i, label %do.body.i900.i

BZ2_indexIntoF.exit901.i:                         ; preds = %do.body.i900.i
  %idxprom240.i = zext i32 %or188.i to i64
  %arrayidx241.i = getelementptr inbounds i16, i16* %24, i64 %idxprom240.i
  %46 = load i16, i16* %arrayidx241.i, align 2, !tbaa !33
  %conv242.i = zext i16 %46 to i32
  %shr245.i = lshr i32 %or188.i, 1
  %idxprom246.i = zext i32 %shr245.i to i64
  %arrayidx247.i = getelementptr inbounds i8, i8* %26, i64 %idxprom246.i
  %47 = load i8, i8* %arrayidx247.i, align 1, !tbaa !12
  %conv248.i = zext i8 %47 to i32
  %shl250.i = shl nuw nsw i32 %conv175.i, 2
  %and251.i = and i32 %shl250.i, 4
  %shr252.i = lshr i32 %conv248.i, %and251.i
  %and253.i = shl nuw nsw i32 %shr252.i, 16
  %shl254.i = and i32 %and253.i, 983040
  %or255.i = or i32 %shl254.i, %conv242.i
  store i32 %or255.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp258.i = icmp eq i32 %dec208.i, 0
  br i1 %cmp258.i, label %if.then260.i, label %if.end273.i

if.then260.i:                                     ; preds = %BZ2_indexIntoF.exit901.i
  %48 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom262.i = sext i32 %48 to i64
  %arrayidx263.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom262.i
  %49 = load i32, i32* %arrayidx263.i, align 4, !tbaa !6
  store i32 %49, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc266.i = add nsw i32 %48, 1
  %cmp268.i = icmp eq i32 %inc266.i, 512
  %spec.store.select809.i = select i1 %cmp268.i, i32 0, i32 %inc266.i
  store i32 %spec.store.select809.i, i32* %rTPos.i119, align 4
  br label %if.end273.i

if.end273.i:                                      ; preds = %if.then260.i, %BZ2_indexIntoF.exit901.i
  %50 = phi i32 [ %49, %if.then260.i ], [ %dec208.i, %BZ2_indexIntoF.exit901.i ]
  %dec275.i = add nsw i32 %50, -1
  store i32 %dec275.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %cmp277.i = icmp eq i32 %dec275.i, 1
  %cond279.i = zext i1 %cmp277.i to i32
  %inc284.i = add nsw i32 %19, 4
  store i32 %inc284.i, i32* %nblock_used, align 4, !tbaa !116
  %call236.masked.i = and i32 %nb.0.shr.i897.i, 255
  %conv285.i = xor i32 %call236.masked.i, %cond279.i
  %add286.i = add nuw nsw i32 %conv285.i, 4
  store i32 %add286.i, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %do.body.i887.i

do.body.i887.i:                                   ; preds = %do.body.i887.i, %if.end273.i
  %na.0.i876.i = phi i32 [ 256, %if.end273.i ], [ %shr.na.0.i883.i, %do.body.i887.i ]
  %nb.0.i877.i = phi i32 [ 0, %if.end273.i ], [ %nb.0.shr.i884.i, %do.body.i887.i ]
  %add.i878.i = add nsw i32 %nb.0.i877.i, %na.0.i876.i
  %shr.i879.i = ashr i32 %add.i878.i, 1
  %idxprom.i880.i = sext i32 %shr.i879.i to i64
  %arrayidx.i881.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i880.i
  %51 = load i32, i32* %arrayidx.i881.i, align 4, !tbaa !6
  %cmp.i882.i = icmp sgt i32 %51, %or255.i
  %shr.na.0.i883.i = select i1 %cmp.i882.i, i32 %shr.i879.i, i32 %na.0.i876.i
  %nb.0.shr.i884.i = select i1 %cmp.i882.i, i32 %nb.0.i877.i, i32 %shr.i879.i
  %sub.i885.i = sub nsw i32 %shr.na.0.i883.i, %nb.0.shr.i884.i
  %cmp1.i886.i = icmp eq i32 %sub.i885.i, 1
  br i1 %cmp1.i886.i, label %BZ2_indexIntoF.exit888.i, label %do.body.i887.i

BZ2_indexIntoF.exit888.i:                         ; preds = %do.body.i887.i
  store i32 %nb.0.shr.i884.i, i32* %k0280.i, align 8, !tbaa !118
  %idxprom295.i = zext i32 %or255.i to i64
  %arrayidx296.i = getelementptr inbounds i16, i16* %24, i64 %idxprom295.i
  %52 = load i16, i16* %arrayidx296.i, align 2, !tbaa !33
  %conv297.i = zext i16 %52 to i32
  %shr300.i = lshr i32 %or255.i, 1
  %idxprom301.i = zext i32 %shr300.i to i64
  %arrayidx302.i = getelementptr inbounds i8, i8* %26, i64 %idxprom301.i
  %53 = load i8, i8* %arrayidx302.i, align 1, !tbaa !12
  %conv303.i = zext i8 %53 to i32
  %shl305.i = shl nuw nsw i32 %conv242.i, 2
  %and306.i = and i32 %shl305.i, 4
  %shr307.i = lshr i32 %conv303.i, %and306.i
  %and308.i = shl nuw nsw i32 %shr307.i, 16
  %shl309.i = and i32 %and308.i, 983040
  %or310.i = or i32 %shl309.i, %conv297.i
  store i32 %or310.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp313.i = icmp eq i32 %dec275.i, 0
  br i1 %cmp313.i, label %if.then315.i, label %if.end328.i

if.then315.i:                                     ; preds = %BZ2_indexIntoF.exit888.i
  %54 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom317.i = sext i32 %54 to i64
  %arrayidx318.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom317.i
  %55 = load i32, i32* %arrayidx318.i, align 4, !tbaa !6
  store i32 %55, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc321.i = add nsw i32 %54, 1
  %cmp323.i = icmp eq i32 %inc321.i, 512
  %spec.store.select810.i = select i1 %cmp323.i, i32 0, i32 %inc321.i
  store i32 %spec.store.select810.i, i32* %rTPos.i119, align 4
  br label %if.end328.i

if.end328.i:                                      ; preds = %if.then315.i, %BZ2_indexIntoF.exit888.i
  %56 = phi i32 [ %55, %if.then315.i ], [ %dec275.i, %BZ2_indexIntoF.exit888.i ]
  %dec330.i = add nsw i32 %56, -1
  store i32 %dec330.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %cmp332.i = icmp eq i32 %dec330.i, 1
  %cond334.i = zext i1 %cmp332.i to i32
  %xor336.i = xor i32 %nb.0.shr.i884.i, %cond334.i
  store i32 %xor336.i, i32* %k0280.i, align 8, !tbaa !118
  %inc338.i = add nsw i32 %19, 5
  store i32 %inc338.i, i32* %nblock_used, align 4, !tbaa !116
  br label %while.cond.backedge.i

if.else.i:                                        ; preds = %if.then15
  br i1 %cmp345933935.i, label %if.end20, label %if.end348.lr.ph.lr.ph.i

if.end348.lr.ph.lr.ph.i:                          ; preds = %if.else.i
  %.pre944.pre.i = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %if.end348.i.outer

if.end348.i.outer:                                ; preds = %if.end387.i, %if.end348.lr.ph.lr.ph.i
  %.ph280 = phi i32 [ %.pre944.pre.i, %if.end348.lr.ph.lr.ph.i ], [ %dec369.i, %if.end387.i ]
  %.ph281 = phi %struct.bz_stream* [ %5, %if.end348.lr.ph.lr.ph.i ], [ %64, %if.end387.i ]
  %avail_out344932.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.ph281, i64 0, i32 5
  br label %if.end348.i

if.end348.i:                                      ; preds = %while.cond339.backedge.i, %if.end348.i.outer
  %57 = phi i32 [ %.pre944948.i, %while.cond339.backedge.i ], [ %.ph280, %if.end348.i.outer ]
  %cmp350.i = icmp eq i32 %57, 0
  br i1 %cmp350.i, label %while.end388.i, label %if.end353.i

if.end353.i:                                      ; preds = %if.end348.i
  %58 = load i8, i8* %state_out_ch277.i, align 4, !tbaa !114
  %next_out356.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.ph281, i64 0, i32 4
  %59 = load i8*, i8** %next_out356.i, align 8, !tbaa !101
  store i8 %58, i8* %59, align 1, !tbaa !12
  %60 = load i32, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %shl358.i = shl i32 %60, 8
  %shr360.i = lshr i32 %60, 24
  %61 = load i8, i8* %state_out_ch277.i, align 4, !tbaa !114
  %conv362.i = zext i8 %61 to i32
  %xor363.i = xor i32 %shr360.i, %conv362.i
  %idxprom364.i = zext i32 %xor363.i to i64
  %arrayidx365.i = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom364.i
  %62 = load i32, i32* %arrayidx365.i, align 4, !tbaa !6
  %xor366.i = xor i32 %62, %shl358.i
  store i32 %xor366.i, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %63 = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  %dec369.i = add nsw i32 %63, -1
  store i32 %dec369.i, i32* %state_out_len278.i, align 8, !tbaa !113
  %64 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %next_out371.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i64 0, i32 4
  %65 = load i8*, i8** %next_out371.i, align 8, !tbaa !101
  %incdec.ptr372.i = getelementptr inbounds i8, i8* %65, i64 1
  store i8* %incdec.ptr372.i, i8** %next_out371.i, align 8, !tbaa !101
  %avail_out374.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i64 0, i32 5
  %66 = load i32, i32* %avail_out374.i, align 8, !tbaa !100
  %dec375.i = add i32 %66, -1
  store i32 %dec375.i, i32* %avail_out374.i, align 8, !tbaa !100
  %total_out_lo32377.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i64 0, i32 6
  %67 = load i32, i32* %total_out_lo32377.i, align 4, !tbaa !90
  %inc378.i = add i32 %67, 1
  store i32 %inc378.i, i32* %total_out_lo32377.i, align 4, !tbaa !90
  %cmp381.i = icmp eq i32 %inc378.i, 0
  br i1 %cmp381.i, label %if.then383.i, label %if.end387.i

if.then383.i:                                     ; preds = %if.end353.i
  %total_out_hi32385.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i64 0, i32 7
  %68 = load i32, i32* %total_out_hi32385.i, align 8, !tbaa !91
  %inc386.i = add i32 %68, 1
  store i32 %inc386.i, i32* %total_out_hi32385.i, align 8, !tbaa !91
  br label %if.end387.i

if.end387.i:                                      ; preds = %if.then383.i, %if.end353.i
  %cmp345.i = icmp eq i32 %dec375.i, 0
  br i1 %cmp345.i, label %if.end20, label %if.end348.i.outer

while.end388.i:                                   ; preds = %if.end348.i
  %69 = load i32, i32* %nblock_used, align 4, !tbaa !116
  %70 = load i32, i32* %save_nblock, align 8, !tbaa !117
  %add391.i = add nsw i32 %70, 1
  %cmp392.i = icmp eq i32 %69, %add391.i
  br i1 %cmp392.i, label %if.end20, label %if.end395.i

if.end395.i:                                      ; preds = %while.end388.i
  %cmp399.i = icmp sgt i32 %69, %add391.i
  br i1 %cmp399.i, label %cleanup71, label %if.end402.i

if.end402.i:                                      ; preds = %if.end395.i
  store i32 1, i32* %state_out_len278.i, align 8, !tbaa !113
  %71 = load i32, i32* %k0280.i, align 8, !tbaa !118
  %conv405.i = trunc i32 %71 to i8
  store i8 %conv405.i, i8* %state_out_ch277.i, align 4, !tbaa !114
  %72 = load i32, i32* %tPos282.i, align 4, !tbaa !119
  br label %do.body.i874.i

do.body.i874.i:                                   ; preds = %do.body.i874.i, %if.end402.i
  %na.0.i863.i = phi i32 [ 256, %if.end402.i ], [ %shr.na.0.i870.i, %do.body.i874.i ]
  %nb.0.i864.i = phi i32 [ 0, %if.end402.i ], [ %nb.0.shr.i871.i, %do.body.i874.i ]
  %add.i865.i = add nsw i32 %nb.0.i864.i, %na.0.i863.i
  %shr.i866.i = ashr i32 %add.i865.i, 1
  %idxprom.i867.i = sext i32 %shr.i866.i to i64
  %arrayidx.i868.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i867.i
  %73 = load i32, i32* %arrayidx.i868.i, align 4, !tbaa !6
  %cmp.i869.i = icmp sgt i32 %73, %72
  %shr.na.0.i870.i = select i1 %cmp.i869.i, i32 %shr.i866.i, i32 %na.0.i863.i
  %nb.0.shr.i871.i = select i1 %cmp.i869.i, i32 %nb.0.i864.i, i32 %shr.i866.i
  %sub.i872.i = sub nsw i32 %shr.na.0.i870.i, %nb.0.shr.i871.i
  %cmp1.i873.i = icmp eq i32 %sub.i872.i, 1
  br i1 %cmp1.i873.i, label %BZ2_indexIntoF.exit875.i, label %do.body.i874.i

BZ2_indexIntoF.exit875.i:                         ; preds = %do.body.i874.i
  %74 = load i16*, i16** %ll16412.i, align 8, !tbaa !120
  %idxprom414.i = zext i32 %72 to i64
  %arrayidx415.i = getelementptr inbounds i16, i16* %74, i64 %idxprom414.i
  %75 = load i16, i16* %arrayidx415.i, align 2, !tbaa !33
  %conv416.i = zext i16 %75 to i32
  %76 = load i8*, i8** %ll4417.i, align 8, !tbaa !121
  %shr419.i = lshr i32 %72, 1
  %idxprom420.i = zext i32 %shr419.i to i64
  %arrayidx421.i = getelementptr inbounds i8, i8* %76, i64 %idxprom420.i
  %77 = load i8, i8* %arrayidx421.i, align 1, !tbaa !12
  %conv422.i = zext i8 %77 to i32
  %shl424.i = shl i32 %72, 2
  %and425.i = and i32 %shl424.i, 4
  %shr426.i = lshr i32 %conv422.i, %and425.i
  %and427.i = shl nuw nsw i32 %shr426.i, 16
  %shl428.i = and i32 %and427.i, 983040
  %or429.i = or i32 %shl428.i, %conv416.i
  store i32 %or429.i, i32* %tPos282.i, align 4, !tbaa !119
  %inc432.i = add nsw i32 %69, 1
  store i32 %inc432.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp436.i = icmp eq i32 %69, %70
  br i1 %cmp436.i, label %while.cond339.backedge.i, label %if.end439.i

while.cond339.backedge.i:                         ; preds = %BZ2_indexIntoF.exit823.i, %if.then528.i, %BZ2_indexIntoF.exit849.i, %if.then486.i, %BZ2_indexIntoF.exit862.i, %if.then444.i, %BZ2_indexIntoF.exit875.i
  %.pre944948.i = phi i32 [ 3, %BZ2_indexIntoF.exit849.i ], [ 2, %BZ2_indexIntoF.exit862.i ], [ 1, %BZ2_indexIntoF.exit875.i ], [ 1, %if.then444.i ], [ 2, %if.then486.i ], [ 3, %if.then528.i ], [ %add559.i, %BZ2_indexIntoF.exit823.i ]
  %78 = load i32, i32* %avail_out344932.i, align 8, !tbaa !100
  %cmp345933.i = icmp eq i32 %78, 0
  br i1 %cmp345933.i, label %if.end20, label %if.end348.i

if.end439.i:                                      ; preds = %BZ2_indexIntoF.exit875.i
  %conv440.i = and i32 %nb.0.shr.i871.i, 255
  %cmp442.i = icmp eq i32 %conv440.i, %71
  br i1 %cmp442.i, label %if.end447.i, label %if.then444.i

if.then444.i:                                     ; preds = %if.end439.i
  store i32 %conv440.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond339.backedge.i

if.end447.i:                                      ; preds = %if.end439.i
  store i32 2, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %do.body.i861.i

do.body.i861.i:                                   ; preds = %do.body.i861.i, %if.end447.i
  %na.0.i850.i = phi i32 [ 256, %if.end447.i ], [ %shr.na.0.i857.i, %do.body.i861.i ]
  %nb.0.i851.i = phi i32 [ 0, %if.end447.i ], [ %nb.0.shr.i858.i, %do.body.i861.i ]
  %add.i852.i = add nsw i32 %nb.0.i851.i, %na.0.i850.i
  %shr.i853.i = ashr i32 %add.i852.i, 1
  %idxprom.i854.i = sext i32 %shr.i853.i to i64
  %arrayidx.i855.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i854.i
  %79 = load i32, i32* %arrayidx.i855.i, align 4, !tbaa !6
  %cmp.i856.i = icmp sgt i32 %79, %or429.i
  %shr.na.0.i857.i = select i1 %cmp.i856.i, i32 %shr.i853.i, i32 %na.0.i850.i
  %nb.0.shr.i858.i = select i1 %cmp.i856.i, i32 %nb.0.i851.i, i32 %shr.i853.i
  %sub.i859.i = sub nsw i32 %shr.na.0.i857.i, %nb.0.shr.i858.i
  %cmp1.i860.i = icmp eq i32 %sub.i859.i, 1
  br i1 %cmp1.i860.i, label %BZ2_indexIntoF.exit862.i, label %do.body.i861.i

BZ2_indexIntoF.exit862.i:                         ; preds = %do.body.i861.i
  %idxprom456.i = zext i32 %or429.i to i64
  %arrayidx457.i = getelementptr inbounds i16, i16* %74, i64 %idxprom456.i
  %80 = load i16, i16* %arrayidx457.i, align 2, !tbaa !33
  %conv458.i = zext i16 %80 to i32
  %shr461.i = lshr i32 %or429.i, 1
  %idxprom462.i = zext i32 %shr461.i to i64
  %arrayidx463.i = getelementptr inbounds i8, i8* %76, i64 %idxprom462.i
  %81 = load i8, i8* %arrayidx463.i, align 1, !tbaa !12
  %conv464.i = zext i8 %81 to i32
  %shl466.i = shl nuw nsw i32 %conv416.i, 2
  %and467.i = and i32 %shl466.i, 4
  %shr468.i = lshr i32 %conv464.i, %and467.i
  %and469.i = shl nuw nsw i32 %shr468.i, 16
  %shl470.i = and i32 %and469.i, 983040
  %or471.i = or i32 %shl470.i, %conv458.i
  store i32 %or471.i, i32* %tPos282.i, align 4, !tbaa !119
  %inc474.i = add nsw i32 %69, 2
  store i32 %inc474.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp478.i = icmp eq i32 %inc432.i, %70
  br i1 %cmp478.i, label %while.cond339.backedge.i, label %if.end481.i

if.end481.i:                                      ; preds = %BZ2_indexIntoF.exit862.i
  %conv482.i = and i32 %nb.0.shr.i858.i, 255
  %cmp484.i = icmp eq i32 %conv482.i, %71
  br i1 %cmp484.i, label %if.end489.i, label %if.then486.i

if.then486.i:                                     ; preds = %if.end481.i
  store i32 %conv482.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond339.backedge.i

if.end489.i:                                      ; preds = %if.end481.i
  store i32 3, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %do.body.i848.i

do.body.i848.i:                                   ; preds = %do.body.i848.i, %if.end489.i
  %na.0.i837.i = phi i32 [ 256, %if.end489.i ], [ %shr.na.0.i844.i, %do.body.i848.i ]
  %nb.0.i838.i = phi i32 [ 0, %if.end489.i ], [ %nb.0.shr.i845.i, %do.body.i848.i ]
  %add.i839.i = add nsw i32 %nb.0.i838.i, %na.0.i837.i
  %shr.i840.i = ashr i32 %add.i839.i, 1
  %idxprom.i841.i = sext i32 %shr.i840.i to i64
  %arrayidx.i842.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i841.i
  %82 = load i32, i32* %arrayidx.i842.i, align 4, !tbaa !6
  %cmp.i843.i = icmp sgt i32 %82, %or471.i
  %shr.na.0.i844.i = select i1 %cmp.i843.i, i32 %shr.i840.i, i32 %na.0.i837.i
  %nb.0.shr.i845.i = select i1 %cmp.i843.i, i32 %nb.0.i838.i, i32 %shr.i840.i
  %sub.i846.i = sub nsw i32 %shr.na.0.i844.i, %nb.0.shr.i845.i
  %cmp1.i847.i = icmp eq i32 %sub.i846.i, 1
  br i1 %cmp1.i847.i, label %BZ2_indexIntoF.exit849.i, label %do.body.i848.i

BZ2_indexIntoF.exit849.i:                         ; preds = %do.body.i848.i
  %idxprom498.i = zext i32 %or471.i to i64
  %arrayidx499.i = getelementptr inbounds i16, i16* %74, i64 %idxprom498.i
  %83 = load i16, i16* %arrayidx499.i, align 2, !tbaa !33
  %conv500.i = zext i16 %83 to i32
  %shr503.i = lshr i32 %or471.i, 1
  %idxprom504.i = zext i32 %shr503.i to i64
  %arrayidx505.i = getelementptr inbounds i8, i8* %76, i64 %idxprom504.i
  %84 = load i8, i8* %arrayidx505.i, align 1, !tbaa !12
  %conv506.i = zext i8 %84 to i32
  %shl508.i = shl nuw nsw i32 %conv458.i, 2
  %and509.i = and i32 %shl508.i, 4
  %shr510.i = lshr i32 %conv506.i, %and509.i
  %and511.i = shl nuw nsw i32 %shr510.i, 16
  %shl512.i = and i32 %and511.i, 983040
  %or513.i = or i32 %shl512.i, %conv500.i
  store i32 %or513.i, i32* %tPos282.i, align 4, !tbaa !119
  %inc516.i = add nsw i32 %69, 3
  store i32 %inc516.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp520.i = icmp eq i32 %inc474.i, %70
  br i1 %cmp520.i, label %while.cond339.backedge.i, label %if.end523.i

if.end523.i:                                      ; preds = %BZ2_indexIntoF.exit849.i
  %conv524.i = and i32 %nb.0.shr.i845.i, 255
  %cmp526.i = icmp eq i32 %conv524.i, %71
  br i1 %cmp526.i, label %do.body.i835.i.preheader, label %if.then528.i

do.body.i835.i.preheader:                         ; preds = %if.end523.i
  br label %do.body.i835.i

if.then528.i:                                     ; preds = %if.end523.i
  store i32 %conv524.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond339.backedge.i

do.body.i835.i:                                   ; preds = %do.body.i835.i, %do.body.i835.i.preheader
  %na.0.i824.i = phi i32 [ %shr.na.0.i831.i, %do.body.i835.i ], [ 256, %do.body.i835.i.preheader ]
  %nb.0.i825.i = phi i32 [ %nb.0.shr.i832.i, %do.body.i835.i ], [ 0, %do.body.i835.i.preheader ]
  %add.i826.i = add nsw i32 %nb.0.i825.i, %na.0.i824.i
  %shr.i827.i = ashr i32 %add.i826.i, 1
  %idxprom.i828.i = sext i32 %shr.i827.i to i64
  %arrayidx.i829.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i828.i
  %85 = load i32, i32* %arrayidx.i829.i, align 4, !tbaa !6
  %cmp.i830.i = icmp sgt i32 %85, %or513.i
  %shr.na.0.i831.i = select i1 %cmp.i830.i, i32 %shr.i827.i, i32 %na.0.i824.i
  %nb.0.shr.i832.i = select i1 %cmp.i830.i, i32 %nb.0.i825.i, i32 %shr.i827.i
  %sub.i833.i = sub nsw i32 %shr.na.0.i831.i, %nb.0.shr.i832.i
  %cmp1.i834.i = icmp eq i32 %sub.i833.i, 1
  br i1 %cmp1.i834.i, label %BZ2_indexIntoF.exit836.i, label %do.body.i835.i

BZ2_indexIntoF.exit836.i:                         ; preds = %do.body.i835.i
  %idxprom539.i = zext i32 %or513.i to i64
  %arrayidx540.i = getelementptr inbounds i16, i16* %74, i64 %idxprom539.i
  %86 = load i16, i16* %arrayidx540.i, align 2, !tbaa !33
  %conv541.i = zext i16 %86 to i32
  %shr544.i = lshr i32 %or513.i, 1
  %idxprom545.i = zext i32 %shr544.i to i64
  %arrayidx546.i = getelementptr inbounds i8, i8* %76, i64 %idxprom545.i
  %87 = load i8, i8* %arrayidx546.i, align 1, !tbaa !12
  %conv547.i = zext i8 %87 to i32
  %shl549.i = shl nuw nsw i32 %conv500.i, 2
  %and550.i = and i32 %shl549.i, 4
  %shr551.i = lshr i32 %conv547.i, %and550.i
  %and552.i = shl nuw nsw i32 %shr551.i, 16
  %shl553.i = and i32 %and552.i, 983040
  %or554.i = or i32 %shl553.i, %conv541.i
  store i32 %or554.i, i32* %tPos282.i, align 4, !tbaa !119
  %inc557.i = add nsw i32 %69, 4
  store i32 %inc557.i, i32* %nblock_used, align 4, !tbaa !116
  %conv558.i = and i32 %nb.0.shr.i832.i, 255
  %add559.i = add nuw nsw i32 %conv558.i, 4
  store i32 %add559.i, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %do.body.i822.i

do.body.i822.i:                                   ; preds = %do.body.i822.i, %BZ2_indexIntoF.exit836.i
  %na.0.i811.i = phi i32 [ 256, %BZ2_indexIntoF.exit836.i ], [ %shr.na.0.i818.i, %do.body.i822.i ]
  %nb.0.i812.i = phi i32 [ 0, %BZ2_indexIntoF.exit836.i ], [ %nb.0.shr.i819.i, %do.body.i822.i ]
  %add.i813.i = add nsw i32 %nb.0.i812.i, %na.0.i811.i
  %shr.i814.i = ashr i32 %add.i813.i, 1
  %idxprom.i815.i = sext i32 %shr.i814.i to i64
  %arrayidx.i816.i = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 18, i64 %idxprom.i815.i
  %88 = load i32, i32* %arrayidx.i816.i, align 4, !tbaa !6
  %cmp.i817.i = icmp sgt i32 %88, %or554.i
  %shr.na.0.i818.i = select i1 %cmp.i817.i, i32 %shr.i814.i, i32 %na.0.i811.i
  %nb.0.shr.i819.i = select i1 %cmp.i817.i, i32 %nb.0.i812.i, i32 %shr.i814.i
  %sub.i820.i = sub nsw i32 %shr.na.0.i818.i, %nb.0.shr.i819.i
  %cmp1.i821.i = icmp eq i32 %sub.i820.i, 1
  br i1 %cmp1.i821.i, label %BZ2_indexIntoF.exit823.i, label %do.body.i822.i

BZ2_indexIntoF.exit823.i:                         ; preds = %do.body.i822.i
  store i32 %nb.0.shr.i819.i, i32* %k0280.i, align 8, !tbaa !118
  %idxprom568.i = zext i32 %or554.i to i64
  %arrayidx569.i = getelementptr inbounds i16, i16* %74, i64 %idxprom568.i
  %89 = load i16, i16* %arrayidx569.i, align 2, !tbaa !33
  %conv570.i = zext i16 %89 to i32
  %shr573.i = lshr i32 %or554.i, 1
  %idxprom574.i = zext i32 %shr573.i to i64
  %arrayidx575.i = getelementptr inbounds i8, i8* %76, i64 %idxprom574.i
  %90 = load i8, i8* %arrayidx575.i, align 1, !tbaa !12
  %conv576.i = zext i8 %90 to i32
  %shl578.i = shl nuw nsw i32 %conv541.i, 2
  %and579.i = and i32 %shl578.i, 4
  %shr580.i = lshr i32 %conv576.i, %and579.i
  %and581.i = shl nuw nsw i32 %shr580.i, 16
  %shl582.i = and i32 %and581.i, 983040
  %or583.i = or i32 %shl582.i, %conv570.i
  store i32 %or583.i, i32* %tPos282.i, align 4, !tbaa !119
  %inc586.i = add nsw i32 %69, 5
  store i32 %inc586.i, i32* %nblock_used, align 4, !tbaa !116
  br label %while.cond339.backedge.i

if.else:                                          ; preds = %if.then14
  br i1 %tobool.i109, label %if.else.i161, label %if.then.i110

if.then.i110:                                     ; preds = %if.else
  %91 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %avail_out697699.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %91, i64 0, i32 5
  %92 = load i32, i32* %avail_out697699.i, align 8, !tbaa !100
  %cmp698700.i = icmp eq i32 %92, 0
  br i1 %cmp698700.i, label %if.end20, label %if.end.lr.ph.lr.ph.i121

if.end.lr.ph.lr.ph.i121:                          ; preds = %if.then.i110
  %.pre.pre.i120 = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  br label %if.end.i125.outer

if.end.i125.outer:                                ; preds = %if.end26.i147, %if.end.lr.ph.lr.ph.i121
  %.ph = phi i32 [ %.pre.pre.i120, %if.end.lr.ph.lr.ph.i121 ], [ %dec.i134, %if.end26.i147 ]
  %.ph276 = phi %struct.bz_stream* [ %91, %if.end.lr.ph.lr.ph.i121 ], [ %100, %if.end26.i147 ]
  %avail_out697.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.ph276, i64 0, i32 5
  br label %if.end.i125

if.end.i125:                                      ; preds = %while.cond.backedge.i158, %if.end.i125.outer
  %93 = phi i32 [ %.pre716.i, %while.cond.backedge.i158 ], [ %.ph, %if.end.i125.outer ]
  %cmp4.i124 = icmp eq i32 %93, 0
  br i1 %cmp4.i124, label %while.end.i150, label %if.end6.i142

if.end6.i142:                                     ; preds = %if.end.i125
  %94 = load i8, i8* %state_out_ch277.i, align 4, !tbaa !114
  %next_out.i126 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.ph276, i64 0, i32 4
  %95 = load i8*, i8** %next_out.i126, align 8, !tbaa !101
  store i8 %94, i8* %95, align 1, !tbaa !12
  %96 = load i32, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %shl.i127 = shl i32 %96, 8
  %shr.i128 = lshr i32 %96, 24
  %97 = load i8, i8* %state_out_ch277.i, align 4, !tbaa !114
  %conv.i129 = zext i8 %97 to i32
  %xor.i130 = xor i32 %shr.i128, %conv.i129
  %idxprom.i131 = zext i32 %xor.i130 to i64
  %arrayidx.i132 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom.i131
  %98 = load i32, i32* %arrayidx.i132, align 4, !tbaa !6
  %xor10.i133 = xor i32 %98, %shl.i127
  store i32 %xor10.i133, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %99 = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  %dec.i134 = add nsw i32 %99, -1
  store i32 %dec.i134, i32* %state_out_len278.i, align 8, !tbaa !113
  %100 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %next_out14.i135 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %100, i64 0, i32 4
  %101 = load i8*, i8** %next_out14.i135, align 8, !tbaa !101
  %incdec.ptr.i136 = getelementptr inbounds i8, i8* %101, i64 1
  store i8* %incdec.ptr.i136, i8** %next_out14.i135, align 8, !tbaa !101
  %avail_out16.i137 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %100, i64 0, i32 5
  %102 = load i32, i32* %avail_out16.i137, align 8, !tbaa !100
  %dec17.i138 = add i32 %102, -1
  store i32 %dec17.i138, i32* %avail_out16.i137, align 8, !tbaa !100
  %total_out_lo32.i139 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %100, i64 0, i32 6
  %103 = load i32, i32* %total_out_lo32.i139, align 4, !tbaa !90
  %inc.i140 = add i32 %103, 1
  store i32 %inc.i140, i32* %total_out_lo32.i139, align 4, !tbaa !90
  %cmp21.i141 = icmp eq i32 %inc.i140, 0
  br i1 %cmp21.i141, label %if.then23.i145, label %if.end26.i147

if.then23.i145:                                   ; preds = %if.end6.i142
  %total_out_hi32.i143 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %100, i64 0, i32 7
  %104 = load i32, i32* %total_out_hi32.i143, align 8, !tbaa !91
  %inc25.i144 = add i32 %104, 1
  store i32 %inc25.i144, i32* %total_out_hi32.i143, align 8, !tbaa !91
  br label %if.end26.i147

if.end26.i147:                                    ; preds = %if.then23.i145, %if.end6.i142
  %cmp.i146 = icmp eq i32 %dec17.i138, 0
  br i1 %cmp.i146, label %if.end20, label %if.end.i125.outer

while.end.i150:                                   ; preds = %if.end.i125
  %105 = load i32, i32* %nblock_used, align 4, !tbaa !116
  %106 = load i32, i32* %save_nblock, align 8, !tbaa !117
  %add.i148 = add nsw i32 %106, 1
  %cmp27.i149 = icmp eq i32 %105, %add.i148
  br i1 %cmp27.i149, label %if.end20, label %if.end30.i152

if.end30.i152:                                    ; preds = %while.end.i150
  %cmp34.i151 = icmp sgt i32 %105, %add.i148
  br i1 %cmp34.i151, label %cleanup71, label %if.end37.i155

if.end37.i155:                                    ; preds = %if.end30.i152
  store i32 1, i32* %state_out_len278.i, align 8, !tbaa !113
  %107 = load i32, i32* %k0280.i, align 8, !tbaa !118
  %conv39.i153 = trunc i32 %107 to i8
  store i8 %conv39.i153, i8* %state_out_ch277.i, align 4, !tbaa !114
  %108 = load i32*, i32** %tt281.i, align 8, !tbaa !124
  %109 = load i32, i32* %tPos282.i, align 4, !tbaa !119
  %idxprom41.i = zext i32 %109 to i64
  %arrayidx42.i = getelementptr inbounds i32, i32* %108, i64 %idxprom41.i
  %110 = load i32, i32* %arrayidx42.i, align 4, !tbaa !6
  %shr47.i154 = lshr i32 %110, 8
  store i32 %shr47.i154, i32* %tPos282.i, align 4, !tbaa !119
  %111 = load i32, i32* %rNToGo.i118, align 8, !tbaa !122
  %cmp48.i = icmp eq i32 %111, 0
  br i1 %cmp48.i, label %if.then50.i, label %if.end62.i

if.then50.i:                                      ; preds = %if.end37.i155
  %112 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom51.i = sext i32 %112 to i64
  %arrayidx52.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom51.i
  %113 = load i32, i32* %arrayidx52.i, align 4, !tbaa !6
  store i32 %113, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc55.i = add nsw i32 %112, 1
  %cmp57.i156 = icmp eq i32 %inc55.i, 512
  %spec.store.select.i157 = select i1 %cmp57.i156, i32 0, i32 %inc55.i
  store i32 %spec.store.select.i157, i32* %rTPos.i119, align 4
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.then50.i, %if.end37.i155
  %114 = phi i32 [ %113, %if.then50.i ], [ %111, %if.end37.i155 ]
  %dec64.i = add nsw i32 %114, -1
  store i32 %dec64.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc72.i = add nsw i32 %105, 1
  store i32 %inc72.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp76.i = icmp eq i32 %105, %106
  br i1 %cmp76.i, label %while.cond.backedge.i158, label %if.end79.i

while.cond.backedge.i158:                         ; preds = %if.end265.i, %if.then192.i, %if.end169.i, %if.then138.i, %if.end115.i, %if.then84.i, %if.end62.i
  %.pre716.i = phi i32 [ 3, %if.end169.i ], [ 2, %if.end115.i ], [ 1, %if.end62.i ], [ 1, %if.then84.i ], [ 2, %if.then138.i ], [ 3, %if.then192.i ], [ %add235.i, %if.end265.i ]
  %115 = load i32, i32* %avail_out697.i, align 8, !tbaa !100
  %cmp698.i = icmp eq i32 %115, 0
  br i1 %cmp698.i, label %if.end20, label %if.end.i125

if.end79.i:                                       ; preds = %if.end62.i
  %cmp66.i159 = icmp eq i32 %dec64.i, 1
  %cond.i160 = zext i1 %cmp66.i159 to i32
  %.masked.i = and i32 %110, 255
  %conv80.i = xor i32 %.masked.i, %cond.i160
  %cmp82.i = icmp eq i32 %conv80.i, %107
  br i1 %cmp82.i, label %if.end87.i, label %if.then84.i

if.then84.i:                                      ; preds = %if.end79.i
  store i32 %conv80.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond.backedge.i158

if.end87.i:                                       ; preds = %if.end79.i
  store i32 2, i32* %state_out_len278.i, align 8, !tbaa !113
  %idxprom91.i = zext i32 %shr47.i154 to i64
  %arrayidx92.i = getelementptr inbounds i32, i32* %108, i64 %idxprom91.i
  %116 = load i32, i32* %arrayidx92.i, align 4, !tbaa !6
  %shr98.i = lshr i32 %116, 8
  store i32 %shr98.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp100.i = icmp eq i32 %dec64.i, 0
  br i1 %cmp100.i, label %if.then102.i, label %if.end115.i

if.then102.i:                                     ; preds = %if.end87.i
  %117 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom104.i = sext i32 %117 to i64
  %arrayidx105.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom104.i
  %118 = load i32, i32* %arrayidx105.i, align 4, !tbaa !6
  store i32 %118, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc108.i = add nsw i32 %117, 1
  %cmp110.i = icmp eq i32 %inc108.i, 512
  %spec.store.select660.i = select i1 %cmp110.i, i32 0, i32 %inc108.i
  store i32 %spec.store.select660.i, i32* %rTPos.i119, align 4
  br label %if.end115.i

if.end115.i:                                      ; preds = %if.then102.i, %if.end87.i
  %119 = phi i32 [ %118, %if.then102.i ], [ %dec64.i, %if.end87.i ]
  %dec117.i = add nsw i32 %119, -1
  store i32 %dec117.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc126.i = add nsw i32 %105, 2
  store i32 %inc126.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp130.i = icmp eq i32 %inc72.i, %106
  br i1 %cmp130.i, label %while.cond.backedge.i158, label %if.end133.i

if.end133.i:                                      ; preds = %if.end115.i
  %cmp119.i = icmp eq i32 %dec117.i, 1
  %cond121.i = zext i1 %cmp119.i to i32
  %.masked657.i = and i32 %116, 255
  %conv134.i = xor i32 %.masked657.i, %cond121.i
  %cmp136.i = icmp eq i32 %conv134.i, %107
  br i1 %cmp136.i, label %if.end141.i, label %if.then138.i

if.then138.i:                                     ; preds = %if.end133.i
  store i32 %conv134.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond.backedge.i158

if.end141.i:                                      ; preds = %if.end133.i
  store i32 3, i32* %state_out_len278.i, align 8, !tbaa !113
  %idxprom145.i = zext i32 %shr98.i to i64
  %arrayidx146.i = getelementptr inbounds i32, i32* %108, i64 %idxprom145.i
  %120 = load i32, i32* %arrayidx146.i, align 4, !tbaa !6
  %shr152.i = lshr i32 %120, 8
  store i32 %shr152.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp154.i = icmp eq i32 %dec117.i, 0
  br i1 %cmp154.i, label %if.then156.i, label %if.end169.i

if.then156.i:                                     ; preds = %if.end141.i
  %121 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom158.i = sext i32 %121 to i64
  %arrayidx159.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom158.i
  %122 = load i32, i32* %arrayidx159.i, align 4, !tbaa !6
  store i32 %122, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc162.i = add nsw i32 %121, 1
  %cmp164.i = icmp eq i32 %inc162.i, 512
  %spec.store.select661.i = select i1 %cmp164.i, i32 0, i32 %inc162.i
  store i32 %spec.store.select661.i, i32* %rTPos.i119, align 4
  br label %if.end169.i

if.end169.i:                                      ; preds = %if.then156.i, %if.end141.i
  %123 = phi i32 [ %122, %if.then156.i ], [ %dec117.i, %if.end141.i ]
  %dec171.i = add nsw i32 %123, -1
  store i32 %dec171.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc180.i = add nsw i32 %105, 3
  store i32 %inc180.i, i32* %nblock_used, align 4, !tbaa !116
  %cmp184.i = icmp eq i32 %inc126.i, %106
  br i1 %cmp184.i, label %while.cond.backedge.i158, label %if.end187.i

if.end187.i:                                      ; preds = %if.end169.i
  %cmp173.i = icmp eq i32 %dec171.i, 1
  %cond175.i = zext i1 %cmp173.i to i32
  %.masked658.i = and i32 %120, 255
  %conv188.i = xor i32 %.masked658.i, %cond175.i
  %cmp190.i = icmp eq i32 %conv188.i, %107
  br i1 %cmp190.i, label %if.end195.i, label %if.then192.i

if.then192.i:                                     ; preds = %if.end187.i
  store i32 %conv188.i, i32* %k0280.i, align 8, !tbaa !118
  br label %while.cond.backedge.i158

if.end195.i:                                      ; preds = %if.end187.i
  %idxprom198.i = zext i32 %shr152.i to i64
  %arrayidx199.i = getelementptr inbounds i32, i32* %108, i64 %idxprom198.i
  %124 = load i32, i32* %arrayidx199.i, align 4, !tbaa !6
  %shr205.i = lshr i32 %124, 8
  store i32 %shr205.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp207.i = icmp eq i32 %dec171.i, 0
  br i1 %cmp207.i, label %if.then209.i, label %if.end222.i

if.then209.i:                                     ; preds = %if.end195.i
  %125 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom211.i = sext i32 %125 to i64
  %arrayidx212.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom211.i
  %126 = load i32, i32* %arrayidx212.i, align 4, !tbaa !6
  store i32 %126, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc215.i = add nsw i32 %125, 1
  %cmp217.i = icmp eq i32 %inc215.i, 512
  %spec.store.select662.i = select i1 %cmp217.i, i32 0, i32 %inc215.i
  store i32 %spec.store.select662.i, i32* %rTPos.i119, align 4
  br label %if.end222.i

if.end222.i:                                      ; preds = %if.then209.i, %if.end195.i
  %127 = phi i32 [ %126, %if.then209.i ], [ %dec171.i, %if.end195.i ]
  %dec224.i = add nsw i32 %127, -1
  store i32 %dec224.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %cmp226.i = icmp eq i32 %dec224.i, 1
  %cond228.i = zext i1 %cmp226.i to i32
  %inc233.i = add nsw i32 %105, 4
  store i32 %inc233.i, i32* %nblock_used, align 4, !tbaa !116
  %.masked659.i = and i32 %124, 255
  %conv234.i = xor i32 %.masked659.i, %cond228.i
  %add235.i = add nuw nsw i32 %conv234.i, 4
  store i32 %add235.i, i32* %state_out_len278.i, align 8, !tbaa !113
  %idxprom239.i = zext i32 %shr205.i to i64
  %arrayidx240.i = getelementptr inbounds i32, i32* %108, i64 %idxprom239.i
  %128 = load i32, i32* %arrayidx240.i, align 4, !tbaa !6
  %conv245.i = and i32 %128, 255
  store i32 %conv245.i, i32* %k0280.i, align 8, !tbaa !118
  %shr248.i = lshr i32 %128, 8
  store i32 %shr248.i, i32* %tPos282.i, align 4, !tbaa !119
  %cmp250.i = icmp eq i32 %dec224.i, 0
  br i1 %cmp250.i, label %if.then252.i, label %if.end265.i

if.then252.i:                                     ; preds = %if.end222.i
  %129 = load i32, i32* %rTPos.i119, align 4, !tbaa !123
  %idxprom254.i = sext i32 %129 to i64
  %arrayidx255.i = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom254.i
  %130 = load i32, i32* %arrayidx255.i, align 4, !tbaa !6
  store i32 %130, i32* %rNToGo.i118, align 8, !tbaa !122
  %inc258.i = add nsw i32 %129, 1
  %cmp260.i = icmp eq i32 %inc258.i, 512
  %spec.store.select663.i = select i1 %cmp260.i, i32 0, i32 %inc258.i
  store i32 %spec.store.select663.i, i32* %rTPos.i119, align 4
  br label %if.end265.i

if.end265.i:                                      ; preds = %if.then252.i, %if.end222.i
  %131 = phi i32 [ %130, %if.then252.i ], [ %dec224.i, %if.end222.i ]
  %dec267.i = add nsw i32 %131, -1
  store i32 %dec267.i, i32* %rNToGo.i118, align 8, !tbaa !122
  %cmp269.i = icmp eq i32 %dec267.i, 1
  %cond271.i = zext i1 %cmp269.i to i32
  %xor273.i = xor i32 %conv245.i, %cond271.i
  store i32 %xor273.i, i32* %k0280.i, align 8, !tbaa !118
  %inc275.i = add nsw i32 %105, 5
  store i32 %inc275.i, i32* %nblock_used, align 4, !tbaa !116
  br label %while.cond.backedge.i158

if.else.i161:                                     ; preds = %if.else
  %132 = load i32, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %133 = load i8, i8* %state_out_ch277.i, align 4, !tbaa !114
  %134 = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  %135 = load i32, i32* %nblock_used, align 4, !tbaa !116
  %136 = load i32, i32* %k0280.i, align 8, !tbaa !118
  %137 = load i32*, i32** %tt281.i, align 8, !tbaa !124
  %138 = load i32, i32* %tPos282.i, align 4, !tbaa !119
  %139 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %next_out284.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %139, i64 0, i32 4
  %140 = load i8*, i8** %next_out284.i, align 8, !tbaa !101
  %avail_out286.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %139, i64 0, i32 5
  %141 = load i32, i32* %avail_out286.i, align 8, !tbaa !100
  %142 = load i32, i32* %save_nblock, align 8, !tbaa !117
  %add288.i = add nsw i32 %142, 1
  br label %while.cond289.i

while.cond289.i:                                  ; preds = %while.cond289.i.backedge, %if.else.i161
  %c_state_out_ch.0.i = phi i8 [ %133, %if.else.i161 ], [ %conv337.i, %while.cond289.i.backedge ]
  %c_state_out_len.0.i = phi i32 [ %134, %if.else.i161 ], [ %c_state_out_len.0.i.be, %while.cond289.i.backedge ]
  %c_nblock_used.0.i = phi i32 [ %135, %if.else.i161 ], [ %c_nblock_used.0.i.be, %while.cond289.i.backedge ]
  %c_k0.0.i = phi i32 [ %136, %if.else.i161 ], [ %c_k0.0.i.be, %while.cond289.i.backedge ]
  %c_calculatedBlockCRC.0.i = phi i32 [ %132, %if.else.i161 ], [ %c_calculatedBlockCRC.3.i, %while.cond289.i.backedge ]
  %c_tPos.0.i = phi i32 [ %138, %if.else.i161 ], [ %c_tPos.0.i.be, %while.cond289.i.backedge ]
  %cs_next_out.0.i = phi i8* [ %140, %if.else.i161 ], [ %cs_next_out.3.i, %while.cond289.i.backedge ]
  %cs_avail_out.0.i = phi i32 [ %141, %if.else.i161 ], [ %cs_avail_out.3.i, %while.cond289.i.backedge ]
  %cmp291.i = icmp sgt i32 %c_state_out_len.0.i, 0
  br i1 %cmp291.i, label %if.then293.i, label %if.end328.i162

if.then293.i:                                     ; preds = %while.cond289.i
  %cmp296679.i = icmp eq i32 %cs_avail_out.0.i, 0
  br i1 %cmp296679.i, label %return_notr.i, label %if.end299.lr.ph.i

if.end299.lr.ph.i:                                ; preds = %if.then293.i
  %conv306.i = zext i8 %c_state_out_ch.0.i to i32
  br label %if.end299.i

if.end299.i:                                      ; preds = %if.end303.i, %if.end299.lr.ph.i
  %cs_avail_out.1683.i = phi i32 [ %cs_avail_out.0.i, %if.end299.lr.ph.i ], [ %dec313.i, %if.end303.i ]
  %cs_next_out.1682.i = phi i8* [ %cs_next_out.0.i, %if.end299.lr.ph.i ], [ %incdec.ptr312.i, %if.end303.i ]
  %c_calculatedBlockCRC.1681.i = phi i32 [ %c_calculatedBlockCRC.0.i, %if.end299.lr.ph.i ], [ %xor310.i, %if.end303.i ]
  %c_state_out_len.1680.i = phi i32 [ %c_state_out_len.0.i, %if.end299.lr.ph.i ], [ %dec311.i, %if.end303.i ]
  %cmp300.i = icmp eq i32 %c_state_out_len.1680.i, 1
  br i1 %cmp300.i, label %s_state_out_len_eq_one.i.loopexit, label %if.end303.i

if.end303.i:                                      ; preds = %if.end299.i
  store i8 %c_state_out_ch.0.i, i8* %cs_next_out.1682.i, align 1, !tbaa !12
  %shl304.i = shl i32 %c_calculatedBlockCRC.1681.i, 8
  %shr305.i = lshr i32 %c_calculatedBlockCRC.1681.i, 24
  %xor307.i = xor i32 %shr305.i, %conv306.i
  %idxprom308.i = zext i32 %xor307.i to i64
  %arrayidx309.i = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom308.i
  %143 = load i32, i32* %arrayidx309.i, align 4, !tbaa !6
  %xor310.i = xor i32 %143, %shl304.i
  %dec311.i = add nsw i32 %c_state_out_len.1680.i, -1
  %incdec.ptr312.i = getelementptr inbounds i8, i8* %cs_next_out.1682.i, i64 1
  %dec313.i = add i32 %cs_avail_out.1683.i, -1
  %cmp296.i = icmp eq i32 %dec313.i, 0
  br i1 %cmp296.i, label %return_notr.i, label %if.end299.i

s_state_out_len_eq_one.i.loopexit:                ; preds = %if.end299.i
  br label %s_state_out_len_eq_one.i

s_state_out_len_eq_one.i:                         ; preds = %if.end349.i, %if.end336.i, %s_state_out_len_eq_one.i.loopexit
  %c_state_out_ch.1.i = phi i8 [ %conv337.i, %if.end336.i ], [ %conv337.i, %if.end349.i ], [ %c_state_out_ch.0.i, %s_state_out_len_eq_one.i.loopexit ]
  %c_nblock_used.1.i = phi i32 [ %inc343.i, %if.end336.i ], [ %add288.i, %if.end349.i ], [ %c_nblock_used.0.i, %s_state_out_len_eq_one.i.loopexit ]
  %c_k0.1.i = phi i32 [ %conv344.i, %if.end336.i ], [ %c_k0.2.i, %if.end349.i ], [ %c_k0.0.i, %s_state_out_len_eq_one.i.loopexit ]
  %c_calculatedBlockCRC.2.i = phi i32 [ %c_calculatedBlockCRC.3.i, %if.end336.i ], [ %c_calculatedBlockCRC.3.i, %if.end349.i ], [ %c_calculatedBlockCRC.1681.i, %s_state_out_len_eq_one.i.loopexit ]
  %c_tPos.1.i = phi i32 [ %shr342.i, %if.end336.i ], [ %shr342.i, %if.end349.i ], [ %c_tPos.0.i, %s_state_out_len_eq_one.i.loopexit ]
  %cs_next_out.2.i = phi i8* [ %cs_next_out.3.i, %if.end336.i ], [ %cs_next_out.3.i, %if.end349.i ], [ %cs_next_out.1682.i, %s_state_out_len_eq_one.i.loopexit ]
  %cs_avail_out.2.i = phi i32 [ %cs_avail_out.3.i, %if.end336.i ], [ %cs_avail_out.3.i, %if.end349.i ], [ %cs_avail_out.1683.i, %s_state_out_len_eq_one.i.loopexit ]
  %cmp315.i = icmp eq i32 %cs_avail_out.2.i, 0
  br i1 %cmp315.i, label %return_notr.i, label %if.end318.i

if.end318.i:                                      ; preds = %s_state_out_len_eq_one.i
  store i8 %c_state_out_ch.1.i, i8* %cs_next_out.2.i, align 1, !tbaa !12
  %shl319.i = shl i32 %c_calculatedBlockCRC.2.i, 8
  %shr320.i = lshr i32 %c_calculatedBlockCRC.2.i, 24
  %conv321.i = zext i8 %c_state_out_ch.1.i to i32
  %xor322.i = xor i32 %shr320.i, %conv321.i
  %idxprom323.i = zext i32 %xor322.i to i64
  %arrayidx324.i = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %idxprom323.i
  %144 = load i32, i32* %arrayidx324.i, align 4, !tbaa !6
  %xor325.i = xor i32 %144, %shl319.i
  %incdec.ptr326.i = getelementptr inbounds i8, i8* %cs_next_out.2.i, i64 1
  %dec327.i = add i32 %cs_avail_out.2.i, -1
  br label %if.end328.i162

if.end328.i162:                                   ; preds = %if.end318.i, %while.cond289.i
  %c_state_out_ch.2.i = phi i8 [ %c_state_out_ch.1.i, %if.end318.i ], [ %c_state_out_ch.0.i, %while.cond289.i ]
  %c_nblock_used.2.i = phi i32 [ %c_nblock_used.1.i, %if.end318.i ], [ %c_nblock_used.0.i, %while.cond289.i ]
  %c_k0.2.i = phi i32 [ %c_k0.1.i, %if.end318.i ], [ %c_k0.0.i, %while.cond289.i ]
  %c_calculatedBlockCRC.3.i = phi i32 [ %xor325.i, %if.end318.i ], [ %c_calculatedBlockCRC.0.i, %while.cond289.i ]
  %c_tPos.2.i = phi i32 [ %c_tPos.1.i, %if.end318.i ], [ %c_tPos.0.i, %while.cond289.i ]
  %cs_next_out.3.i = phi i8* [ %incdec.ptr326.i, %if.end318.i ], [ %cs_next_out.0.i, %while.cond289.i ]
  %cs_avail_out.3.i = phi i32 [ %dec327.i, %if.end318.i ], [ %cs_avail_out.0.i, %while.cond289.i ]
  %cmp329.i = icmp sgt i32 %c_nblock_used.2.i, %add288.i
  br i1 %cmp329.i, label %cleanup71, label %if.end332.i

if.end332.i:                                      ; preds = %if.end328.i162
  %cmp333.i = icmp eq i32 %c_nblock_used.2.i, %add288.i
  br i1 %cmp333.i, label %return_notr.i, label %if.end336.i

if.end336.i:                                      ; preds = %if.end332.i
  %conv337.i = trunc i32 %c_k0.2.i to i8
  %idxprom338.i = zext i32 %c_tPos.2.i to i64
  %arrayidx339.i = getelementptr inbounds i32, i32* %137, i64 %idxprom338.i
  %145 = load i32, i32* %arrayidx339.i, align 4, !tbaa !6
  %shr342.i = lshr i32 %145, 8
  %inc343.i = add nsw i32 %c_nblock_used.2.i, 1
  %conv344.i = and i32 %145, 255
  %cmp345.i163 = icmp eq i32 %conv344.i, %c_k0.2.i
  br i1 %cmp345.i163, label %if.end349.i, label %s_state_out_len_eq_one.i

if.end349.i:                                      ; preds = %if.end336.i
  %cmp350.i164 = icmp eq i32 %inc343.i, %add288.i
  br i1 %cmp350.i164, label %s_state_out_len_eq_one.i, label %if.end353.i165

if.end353.i165:                                   ; preds = %if.end349.i
  %idxprom354.i = zext i32 %shr342.i to i64
  %arrayidx355.i = getelementptr inbounds i32, i32* %137, i64 %idxprom354.i
  %146 = load i32, i32* %arrayidx355.i, align 4, !tbaa !6
  %shr358.i = lshr i32 %146, 8
  %inc359.i = add nsw i32 %c_nblock_used.2.i, 2
  %cmp360.i = icmp eq i32 %inc359.i, %add288.i
  br i1 %cmp360.i, label %while.cond289.i.backedge, label %if.end363.i

if.end363.i:                                      ; preds = %if.end353.i165
  %conv364.i = and i32 %146, 255
  %cmp365.i = icmp eq i32 %conv364.i, %c_k0.2.i
  br i1 %cmp365.i, label %if.end369.i, label %while.cond289.i.backedge

if.end369.i:                                      ; preds = %if.end363.i
  %idxprom370.i = zext i32 %shr358.i to i64
  %arrayidx371.i = getelementptr inbounds i32, i32* %137, i64 %idxprom370.i
  %147 = load i32, i32* %arrayidx371.i, align 4, !tbaa !6
  %shr374.i = lshr i32 %147, 8
  %inc375.i = add nsw i32 %c_nblock_used.2.i, 3
  %cmp376.i = icmp eq i32 %inc375.i, %add288.i
  br i1 %cmp376.i, label %while.cond289.i.backedge, label %if.end379.i

if.end379.i:                                      ; preds = %if.end369.i
  %conv380.i = and i32 %147, 255
  %cmp381.i166 = icmp eq i32 %conv380.i, %c_k0.2.i
  br i1 %cmp381.i166, label %if.end385.i, label %while.cond289.i.backedge

if.end385.i:                                      ; preds = %if.end379.i
  %idxprom386.i = zext i32 %shr374.i to i64
  %arrayidx387.i = getelementptr inbounds i32, i32* %137, i64 %idxprom386.i
  %148 = load i32, i32* %arrayidx387.i, align 4, !tbaa !6
  %shr390.i = lshr i32 %148, 8
  %conv392.i = and i32 %148, 255
  %add393.i = add nuw nsw i32 %conv392.i, 4
  %idxprom394.i = zext i32 %shr390.i to i64
  %arrayidx395.i = getelementptr inbounds i32, i32* %137, i64 %idxprom394.i
  %149 = load i32, i32* %arrayidx395.i, align 4, !tbaa !6
  %conv398.i = and i32 %149, 255
  %shr399.i = lshr i32 %149, 8
  %inc400.i = add nsw i32 %c_nblock_used.2.i, 5
  br label %while.cond289.i.backedge

while.cond289.i.backedge:                         ; preds = %if.end385.i, %if.end379.i, %if.end369.i, %if.end363.i, %if.end353.i165
  %c_state_out_len.0.i.be = phi i32 [ %add393.i, %if.end385.i ], [ 3, %if.end379.i ], [ 3, %if.end369.i ], [ 2, %if.end363.i ], [ 2, %if.end353.i165 ]
  %c_nblock_used.0.i.be = phi i32 [ %inc400.i, %if.end385.i ], [ %inc375.i, %if.end379.i ], [ %add288.i, %if.end369.i ], [ %inc359.i, %if.end363.i ], [ %add288.i, %if.end353.i165 ]
  %c_k0.0.i.be = phi i32 [ %conv398.i, %if.end385.i ], [ %conv380.i, %if.end379.i ], [ %c_k0.2.i, %if.end369.i ], [ %conv364.i, %if.end363.i ], [ %c_k0.2.i, %if.end353.i165 ]
  %c_tPos.0.i.be = phi i32 [ %shr399.i, %if.end385.i ], [ %shr374.i, %if.end379.i ], [ %shr374.i, %if.end369.i ], [ %shr358.i, %if.end363.i ], [ %shr358.i, %if.end353.i165 ]
  br label %while.cond289.i

return_notr.i:                                    ; preds = %if.end332.i, %s_state_out_len_eq_one.i, %if.end303.i, %if.then293.i
  %c_state_out_ch.3.i = phi i8 [ %c_state_out_ch.0.i, %if.end303.i ], [ %c_state_out_ch.1.i, %s_state_out_len_eq_one.i ], [ %c_state_out_ch.2.i, %if.end332.i ], [ %c_state_out_ch.0.i, %if.then293.i ]
  %c_state_out_len.2.i = phi i32 [ %dec311.i, %if.end303.i ], [ 1, %s_state_out_len_eq_one.i ], [ 0, %if.end332.i ], [ %c_state_out_len.0.i, %if.then293.i ]
  %c_nblock_used.3.i = phi i32 [ %c_nblock_used.0.i, %if.end303.i ], [ %c_nblock_used.1.i, %s_state_out_len_eq_one.i ], [ %add288.i, %if.end332.i ], [ %c_nblock_used.0.i, %if.then293.i ]
  %c_k0.3.i = phi i32 [ %c_k0.0.i, %if.end303.i ], [ %c_k0.1.i, %s_state_out_len_eq_one.i ], [ %c_k0.2.i, %if.end332.i ], [ %c_k0.0.i, %if.then293.i ]
  %c_calculatedBlockCRC.4.i = phi i32 [ %xor310.i, %if.end303.i ], [ %c_calculatedBlockCRC.2.i, %s_state_out_len_eq_one.i ], [ %c_calculatedBlockCRC.3.i, %if.end332.i ], [ %c_calculatedBlockCRC.0.i, %if.then293.i ]
  %c_tPos.3.i = phi i32 [ %c_tPos.0.i, %if.end303.i ], [ %c_tPos.1.i, %s_state_out_len_eq_one.i ], [ %c_tPos.2.i, %if.end332.i ], [ %c_tPos.0.i, %if.then293.i ]
  %cs_next_out.4.i = phi i8* [ %incdec.ptr312.i, %if.end303.i ], [ %cs_next_out.2.i, %s_state_out_len_eq_one.i ], [ %cs_next_out.3.i, %if.end332.i ], [ %cs_next_out.0.i, %if.then293.i ]
  %cs_avail_out.4.i = phi i32 [ 0, %if.end303.i ], [ 0, %s_state_out_len_eq_one.i ], [ %cs_avail_out.3.i, %if.end332.i ], [ 0, %if.then293.i ]
  %150 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %total_out_lo32402.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %150, i64 0, i32 6
  %151 = load i32, i32* %total_out_lo32402.i, align 4, !tbaa !90
  %sub.i = sub i32 %141, %cs_avail_out.4.i
  %add405.i = add i32 %151, %sub.i
  store i32 %add405.i, i32* %total_out_lo32402.i, align 4, !tbaa !90
  %cmp408.i = icmp ult i32 %add405.i, %151
  br i1 %cmp408.i, label %if.then410.i, label %153

if.then410.i:                                     ; preds = %return_notr.i
  %total_out_hi32412.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %150, i64 0, i32 7
  %152 = load i32, i32* %total_out_hi32412.i, align 8, !tbaa !91
  %inc413.i = add i32 %152, 1
  store i32 %inc413.i, i32* %total_out_hi32412.i, align 8, !tbaa !91
  br label %153

; <label>:153:                                    ; preds = %if.then410.i, %return_notr.i
  store i32 %c_calculatedBlockCRC.4.i, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  store i8 %c_state_out_ch.3.i, i8* %state_out_ch277.i, align 4, !tbaa !114
  store i32 %c_state_out_len.2.i, i32* %state_out_len278.i, align 8, !tbaa !113
  store i32 %c_nblock_used.3.i, i32* %nblock_used, align 4, !tbaa !116
  store i32 %c_k0.3.i, i32* %k0280.i, align 8, !tbaa !118
  store i32* %137, i32** %tt281.i, align 8, !tbaa !124
  store i32 %c_tPos.3.i, i32* %tPos282.i, align 4, !tbaa !119
  %next_out423.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %150, i64 0, i32 4
  store i8* %cs_next_out.4.i, i8** %next_out423.i, align 8, !tbaa !101
  %avail_out425.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %150, i64 0, i32 5
  store i32 %cs_avail_out.4.i, i32* %avail_out425.i, align 8, !tbaa !100
  br label %if.end20

if.end20:                                         ; preds = %153, %while.cond.backedge.i158, %while.end.i150, %if.end26.i147, %if.then.i110, %while.cond339.backedge.i, %while.end388.i, %if.end387.i, %if.else.i, %while.cond.backedge.i, %while.end.i, %if.end26.i, %if.then.i
  %154 = load i32, i32* %nblock_used, align 4, !tbaa !116
  %155 = load i32, i32* %save_nblock, align 8, !tbaa !117
  %add = add nsw i32 %155, 1
  %cmp21 = icmp eq i32 %154, %add
  br i1 %cmp21, label %land.lhs.true, label %cleanup71

land.lhs.true:                                    ; preds = %if.end20
  %156 = load i32, i32* %state_out_len278.i, align 8, !tbaa !113
  %cmp22 = icmp eq i32 %156, 0
  br i1 %cmp22, label %if.then23, label %cleanup71

if.then23:                                        ; preds = %land.lhs.true
  %157 = load i32, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %neg = xor i32 %157, -1
  store i32 %neg, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %158 = load i32, i32* %verbosity, align 4, !tbaa !111
  %cmp25 = icmp sgt i32 %158, 2
  br i1 %cmp25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %if.then23
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %160 = load i32, i32* %storedBlockCRC, align 8, !tbaa !125
  %161 = getelementptr [18 x i8], [18 x i8]* @.str.2.37, i64 0, i64 0
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %159, i8* %161, i32 %160, i32 %neg) #15
  %.pr = load i32, i32* %verbosity, align 4, !tbaa !111
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %if.then23
  %162 = phi i32 [ %.pr, %if.then26 ], [ %158, %if.then23 ]
  %cmp31 = icmp sgt i32 %162, 1
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end29
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %fputc = tail call i32 @fputc(i32 93, %struct._IO_FILE* %163) #15
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end29
  %164 = load i32, i32* %calculatedBlockCRC276.i, align 8, !tbaa !115
  %165 = load i32, i32* %storedBlockCRC, align 8, !tbaa !125
  %cmp37 = icmp eq i32 %164, %165
  br i1 %cmp37, label %if.end47.thread, label %cleanup71

if.end47.thread:                                  ; preds = %if.end34
  %166 = load i32, i32* %calculatedCombinedCRC, align 4, !tbaa !108
  %shl = shl i32 %166, 1
  %shr = lshr i32 %166, 31
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %164
  store i32 %xor, i32* %calculatedCombinedCRC, align 4, !tbaa !108
  store i32 14, i32* %state8, align 8, !tbaa !105
  br label %if.then50

if.end47:                                         ; preds = %while.cond
  br i1 %cmp49, label %if.then50, label %while.cond

if.then50:                                        ; preds = %if.end47, %if.end47.thread
  %call51 = tail call i32 @BZ2_decompress(%struct.DState* nonnull %1) #2
  %cmp52 = icmp eq i32 %call51, 4
  br i1 %cmp52, label %if.then53, label %cleanup

if.then53:                                        ; preds = %if.then50
  %167 = load i32, i32* %verbosity, align 4, !tbaa !111
  %cmp55 = icmp sgt i32 %167, 2
  br i1 %cmp55, label %if.then56, label %if.then53.cleanup.thread_crit_edge

if.then53.cleanup.thread_crit_edge:               ; preds = %if.then53
  %.pre221 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 24
  br label %cleanup.thread

if.then56:                                        ; preds = %if.then53
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %storedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 24
  %169 = load i32, i32* %storedCombinedCRC, align 4, !tbaa !126
  %170 = load i32, i32* %calculatedCombinedCRC, align 4, !tbaa !108
  %171 = getelementptr [55 x i8], [55 x i8]* @.str.4.38, i64 0, i64 0
  %call58 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %168, i8* %171, i32 %169, i32 %170) #15
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then56, %if.then53.cleanup.thread_crit_edge
  %storedCombinedCRC61.pre-phi = phi i32* [ %.pre221, %if.then53.cleanup.thread_crit_edge ], [ %storedCombinedCRC, %if.then56 ]
  %172 = load i32, i32* %calculatedCombinedCRC, align 4, !tbaa !108
  %173 = load i32, i32* %storedCombinedCRC61.pre-phi, align 4, !tbaa !126
  %cmp62 = icmp eq i32 %172, %173
  %call51. = select i1 %cmp62, i32 4, i32 -4
  br label %cleanup71

cleanup:                                          ; preds = %if.then50
  %174 = load i32, i32* %state8, align 8, !tbaa !105
  %cmp67 = icmp eq i32 %174, 2
  br i1 %cmp67, label %while.cond.outer, label %cleanup71

cleanup71:                                        ; preds = %cleanup, %cleanup.thread, %if.end34, %land.lhs.true, %if.end20, %if.end328.i162, %if.end30.i152, %if.end395.i, %if.end30.i, %while.cond, %if.end3, %if.end, %entry
  %retval.3 = phi i32 [ -2, %entry ], [ -2, %if.end ], [ -2, %if.end3 ], [ %call51., %cleanup.thread ], [ -4, %if.end328.i162 ], [ -4, %if.end30.i152 ], [ -4, %if.end395.i ], [ -4, %if.end30.i ], [ -1, %while.cond ], [ %call51, %cleanup ], [ -4, %if.end34 ], [ 0, %land.lhs.true ], [ 0, %if.end20 ]
  ret i32 %retval.3
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq %struct.bz_stream* %strm, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  %0 = bitcast i8** %state to %struct.DState**
  %1 = load %struct.DState*, %struct.DState** %0, align 8, !tbaa !87
  %cmp1 = icmp eq %struct.DState* %1, null
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %strm4 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 0
  %2 = load %struct.bz_stream*, %struct.bz_stream** %strm4, align 8, !tbaa !103
  %cmp5 = icmp eq %struct.bz_stream* %2, %strm
  br i1 %cmp5, label %if.end7, label %cleanup

if.end7:                                          ; preds = %if.end3
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 20
  %3 = load i32*, i32** %tt, align 8, !tbaa !124
  %cmp8 = icmp eq i32* %3, null
  br i1 %cmp8, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end7
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %5 = load i8*, i8** %opaque, align 8, !tbaa !78
  %6 = bitcast i32* %3 to i8*
  tail call void %4(i8* %5, i8* %6) #2
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end7
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 21
  %7 = load i16*, i16** %ll16, align 8, !tbaa !120
  %cmp12 = icmp eq i16* %7, null
  br i1 %cmp12, label %if.end17, label %if.then13

if.then13:                                        ; preds = %if.end11
  %bzfree14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree14, align 8, !tbaa !77
  %opaque15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %9 = load i8*, i8** %opaque15, align 8, !tbaa !78
  %10 = bitcast i16* %7 to i8*
  tail call void %8(i8* %9, i8* %10) #2
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end11
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %1, i64 0, i32 22
  %11 = load i8*, i8** %ll4, align 8, !tbaa !121
  %cmp18 = icmp eq i8* %11, null
  %.pre = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  br i1 %cmp18, label %if.end17.if.end23_crit_edge, label %if.then19

if.end17.if.end23_crit_edge:                      ; preds = %if.end17
  %.pre48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  br label %if.end23

if.then19:                                        ; preds = %if.end17
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre, align 8, !tbaa !77
  %opaque21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %13 = load i8*, i8** %opaque21, align 8, !tbaa !78
  tail call void %12(i8* %13, i8* nonnull %11) #2
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.end17.if.end23_crit_edge
  %opaque25.pre-phi = phi i8** [ %.pre48, %if.end17.if.end23_crit_edge ], [ %opaque21, %if.then19 ]
  %14 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre, align 8, !tbaa !77
  %15 = load i8*, i8** %opaque25.pre-phi, align 8, !tbaa !78
  %16 = load i8*, i8** %state, align 8, !tbaa !87
  tail call void %14(i8* %15, i8* %16) #2
  store i8* null, i8** %state, align 8, !tbaa !87
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.end3, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end23 ], [ -2, %entry ], [ -2, %if.end ], [ -2, %if.end3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzWriteOpen(i32* %bzerror, i32 %f, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) local_unnamed_addr #1 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.end3

if.end3:                                          ; preds = %if.then, %entry
  %cmp4 = icmp eq i32 %f, 0
  %blockSize100k.off = add i32 %blockSize100k, -1
  %0 = icmp ugt i32 %blockSize100k.off, 8
  %1 = or i1 %cmp4, %0
  %2 = icmp ugt i32 %workFactor, 250
  %3 = or i1 %2, %1
  %4 = icmp ugt i32 %verbosity, 4
  %5 = or i1 %4, %3
  br i1 %5, label %if.then16, label %if.end24

if.then16:                                        ; preds = %if.end3
  br i1 %cmp, label %if.then18, label %cleanup

if.then18:                                        ; preds = %if.then16
  store i32 -2, i32* %bzerror, align 4, !tbaa !6
  br label %cleanup

if.end24:                                         ; preds = %if.end3
  %call = tail call noalias i8* @malloc(i64 5104) #2
  %cmp25 = icmp eq i8* %call, null
  br i1 %cmp25, label %if.then26, label %if.end34

if.then26:                                        ; preds = %if.end24
  br i1 %cmp, label %if.then28, label %cleanup

if.then28:                                        ; preds = %if.then26
  store i32 -3, i32* %bzerror, align 4, !tbaa !6
  br label %cleanup

if.end34:                                         ; preds = %if.end24
  br i1 %cmp, label %if.then36, label %if.then39

if.then36:                                        ; preds = %if.end34
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then39

if.then39:                                        ; preds = %if.then36, %if.end34
  %lastErr40 = getelementptr inbounds i8, i8* %call, i64 5096
  %6 = bitcast i8* %lastErr40 to i32*
  store i32 0, i32* %6, align 8, !tbaa !127
  %7 = getelementptr inbounds i8, i8* %call, i64 5100
  store i8 0, i8* %7, align 4, !tbaa !129
  %bufN = getelementptr inbounds i8, i8* %call, i64 5004
  %8 = bitcast i8* %bufN to i32*
  store i32 0, i32* %8, align 4, !tbaa !130
  %handle = bitcast i8* %call to i32*
  store i32 %f, i32* %handle, align 8, !tbaa !131
  %9 = getelementptr inbounds i8, i8* %call, i64 5008
  store i8 1, i8* %9, align 8, !tbaa !132
  %strm = getelementptr inbounds i8, i8* %call, i64 5016
  %10 = bitcast i8* %strm to %struct.bz_stream*
  %bzalloc = getelementptr inbounds i8, i8* %call, i64 5072
  %cmp44 = icmp eq i32 %workFactor, 0
  %workFactor.addr.0 = select i1 %cmp44, i32 30, i32 %workFactor
  call void @llvm.memset.p0i8.i64(i8* nonnull %bzalloc, i8 0, i64 24, i32 8, i1 false)
  %call48 = tail call i32 @BZ2_bzCompressInit(%struct.bz_stream* nonnull %10, i32 %blockSize100k, i32 %verbosity, i32 %workFactor.addr.0)
  %cmp49 = icmp eq i32 %call48, 0
  br i1 %cmp49, label %if.end58, label %if.then50

if.then50:                                        ; preds = %if.then39
  br i1 %cmp, label %if.then52, label %if.then55

if.then52:                                        ; preds = %if.then50
  store i32 %call48, i32* %bzerror, align 4, !tbaa !6
  br label %if.then55

if.then55:                                        ; preds = %if.then52, %if.then50
  tail call void @free(i8* nonnull %call) #2
  br label %cleanup

if.end58:                                         ; preds = %if.then39
  %avail_in = getelementptr inbounds i8, i8* %call, i64 5024
  %11 = bitcast i8* %avail_in to i32*
  store i32 0, i32* %11, align 8, !tbaa !133
  store i8 1, i8* %7, align 4, !tbaa !129
  br label %cleanup

cleanup:                                          ; preds = %if.end58, %if.then55, %if.then28, %if.then26, %if.then18, %if.then16
  %retval.0 = phi i8* [ null, %if.then55 ], [ %call, %if.end58 ], [ null, %if.then16 ], [ null, %if.then18 ], [ null, %if.then28 ], [ null, %if.then26 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzWrite(i32* %bzerror, i8* %b, i8* %buf, i32 %len) local_unnamed_addr #1 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne i8* %b, null
  br i1 %cmp1, label %if.end3, label %if.then8

if.end3:                                          ; preds = %if.end
  %lastErr = getelementptr inbounds i8, i8* %b, i64 5096
  %0 = bitcast i8* %lastErr to i32*
  store i32 0, i32* %0, align 8, !tbaa !127
  %cmp5 = icmp eq i8* %buf, null
  %cmp7 = icmp slt i32 %len, 0
  %or.cond86 = or i1 %cmp5, %cmp7
  br i1 %or.cond86, label %if.then8, label %if.end16

if.then8:                                         ; preds = %if.end3, %if.end
  br i1 %cmp, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  store i32 -2, i32* %bzerror, align 4, !tbaa !6
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.then8
  br i1 %cmp1, label %if.then13, label %cleanup

if.then13:                                        ; preds = %if.end11
  %lastErr14 = getelementptr inbounds i8, i8* %b, i64 5096
  %1 = bitcast i8* %lastErr14 to i32*
  store i32 -2, i32* %1, align 8, !tbaa !127
  br label %cleanup

if.end16:                                         ; preds = %if.end3
  %2 = getelementptr inbounds i8, i8* %b, i64 5008
  %3 = load i8, i8* %2, align 8, !tbaa !132
  %tobool = icmp eq i8 %3, 0
  br i1 %tobool, label %if.then17, label %if.end25

if.then17:                                        ; preds = %if.end16
  br i1 %cmp, label %if.then19, label %if.then22

if.then19:                                        ; preds = %if.then17
  store i32 -1, i32* %bzerror, align 4, !tbaa !6
  br label %if.then22

if.then22:                                        ; preds = %if.then19, %if.then17
  store i32 -1, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end25:                                         ; preds = %if.end16
  %cmp26 = icmp eq i32 %len, 0
  br i1 %cmp26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end25
  br i1 %cmp, label %if.then29, label %if.then32

if.then29:                                        ; preds = %if.then27
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then32

if.then32:                                        ; preds = %if.then29, %if.then27
  store i32 0, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end35:                                         ; preds = %if.end25
  %strm = getelementptr inbounds i8, i8* %b, i64 5016
  %4 = bitcast i8* %strm to %struct.bz_stream*
  %avail_in = getelementptr inbounds i8, i8* %b, i64 5024
  %5 = bitcast i8* %avail_in to i32*
  store i32 %len, i32* %5, align 8, !tbaa !133
  %next_in = bitcast i8* %strm to i8**
  store i8* %buf, i8** %next_in, align 8, !tbaa !134
  %avail_out = getelementptr inbounds i8, i8* %b, i64 5048
  %6 = bitcast i8* %avail_out to i32*
  store i32 5000, i32* %6, align 8, !tbaa !135
  %buf38 = getelementptr inbounds i8, i8* %b, i64 4
  %next_out = getelementptr inbounds i8, i8* %b, i64 5040
  %7 = bitcast i8* %next_out to i8**
  store i8* %buf38, i8** %7, align 8, !tbaa !136
  %state.i = getelementptr inbounds i8, i8* %b, i64 5064
  %8 = bitcast i8* %state.i to %struct.EState**
  %9 = load %struct.EState*, %struct.EState** %8, align 8, !tbaa !87
  %cmp1.i143 = icmp eq %struct.EState* %9, null
  br i1 %cmp1.i143, label %if.then42, label %if.end3.i.lr.ph

if.end3.i.lr.ph:                                  ; preds = %if.end35
  %handle = bitcast i8* %b to i32*
  br label %if.end3.i

while.cond:                                       ; preds = %if.end70
  store i32 5000, i32* %6, align 8, !tbaa !135
  store i8* %buf38, i8** %7, align 8, !tbaa !136
  %10 = load %struct.EState*, %struct.EState** %8, align 8, !tbaa !87
  %cmp1.i = icmp eq %struct.EState* %10, null
  br i1 %cmp1.i, label %if.then42.loopexit, label %if.end3.i

if.end3.i:                                        ; preds = %while.cond, %if.end3.i.lr.ph
  %11 = phi %struct.EState* [ %9, %if.end3.i.lr.ph ], [ %10, %while.cond ]
  %strm4.i = getelementptr inbounds %struct.EState, %struct.EState* %11, i64 0, i32 0
  %12 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i, align 8, !tbaa !79
  %cmp5.i = icmp eq %struct.bz_stream* %12, %4
  br i1 %cmp5.i, label %if.end7.i, label %if.then42.loopexit

if.end7.i:                                        ; preds = %if.end3.i
  %mode.i = getelementptr inbounds %struct.EState, %struct.EState* %11, i64 0, i32 1
  %13 = load i32, i32* %mode.i, align 8, !tbaa !81
  switch i32 %13, label %if.then42.loopexit [
    i32 1, label %if.then42
    i32 2, label %if.then10.i
    i32 3, label %if.then42
    i32 4, label %if.then42
  ]

if.then10.i:                                      ; preds = %if.end7.i
  %call.i = tail call fastcc zeroext i8 @handle_compress(%struct.bz_stream* nonnull %4) #2
  %tobool.i = icmp eq i8 %call.i, 0
  br i1 %tobool.i, label %if.then42.loopexit, label %if.end50

if.then42.loopexit:                               ; preds = %if.then10.i, %if.end7.i, %if.end3.i, %while.cond
  %retval.0.i.ph.ph = phi i32 [ -2, %if.then10.i ], [ -2, %while.cond ], [ -2, %if.end3.i ], [ 0, %if.end7.i ]
  br label %if.then42

if.then42:                                        ; preds = %if.then42.loopexit, %if.end7.i, %if.end7.i, %if.end7.i, %if.end35
  %retval.0.i.ph = phi i32 [ -2, %if.end35 ], [ %retval.0.i.ph.ph, %if.then42.loopexit ], [ -1, %if.end7.i ], [ -1, %if.end7.i ], [ -1, %if.end7.i ]
  br i1 %cmp, label %if.then44, label %if.then47

if.then44:                                        ; preds = %if.then42
  store i32 %retval.0.i.ph, i32* %bzerror, align 4, !tbaa !6
  br label %if.then47

if.then47:                                        ; preds = %if.then44, %if.then42
  store i32 %retval.0.i.ph, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end50:                                         ; preds = %if.then10.i
  %14 = load i32, i32* %6, align 8, !tbaa !135
  %cmp53 = icmp ult i32 %14, 5000
  br i1 %cmp53, label %if.then54, label %if.end70

if.then54:                                        ; preds = %if.end50
  %sub = sub i32 5000, %14
  %15 = load i32, i32* %handle, align 8, !tbaa !131
  %call59 = tail call i32 @spec_fwrite(i8* nonnull %buf38, i32 1, i32 %sub, i32 %15) #2
  %cmp60 = icmp eq i32 %sub, %call59
  br i1 %cmp60, label %if.end70, label %if.then61

if.then61:                                        ; preds = %if.then54
  br i1 %cmp, label %if.then63, label %if.then66

if.then63:                                        ; preds = %if.then61
  store i32 -6, i32* %bzerror, align 4, !tbaa !6
  br label %if.then66

if.then66:                                        ; preds = %if.then63, %if.then61
  store i32 -6, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end70:                                         ; preds = %if.then54, %if.end50
  %16 = load i32, i32* %5, align 8, !tbaa !133
  %cmp73 = icmp eq i32 %16, 0
  br i1 %cmp73, label %if.then74, label %while.cond

if.then74:                                        ; preds = %if.end70
  br i1 %cmp, label %if.then76, label %if.then79

if.then76:                                        ; preds = %if.then74
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then79

if.then79:                                        ; preds = %if.then76, %if.then74
  store i32 0, i32* %0, align 8, !tbaa !127
  br label %cleanup

cleanup:                                          ; preds = %if.then79, %if.then66, %if.then47, %if.then32, %if.then22, %if.then13, %if.end11
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzWriteClose(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in, i32* %nbytes_out) local_unnamed_addr #1 {
entry:
  tail call void @BZ2_bzWriteClose64(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in, i32* null, i32* %nbytes_out, i32* null)
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzWriteClose64(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32) local_unnamed_addr #1 {
entry:
  %cmp = icmp eq i8* %b, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32* %bzerror, null
  br i1 %cmp1, label %cleanup, label %if.then2

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %cleanup

if.end6:                                          ; preds = %entry
  %0 = getelementptr inbounds i8, i8* %b, i64 5008
  %1 = load i8, i8* %0, align 8, !tbaa !132
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.then7, label %if.end15

if.then7:                                         ; preds = %if.end6
  %cmp8 = icmp eq i32* %bzerror, null
  br i1 %cmp8, label %if.then12, label %if.then9

if.then9:                                         ; preds = %if.then7
  store i32 -1, i32* %bzerror, align 4, !tbaa !6
  br label %if.then12

if.then12:                                        ; preds = %if.then9, %if.then7
  %lastErr13 = getelementptr inbounds i8, i8* %b, i64 5096
  %2 = bitcast i8* %lastErr13 to i32*
  store i32 -1, i32* %2, align 8, !tbaa !127
  br label %cleanup

if.end15:                                         ; preds = %if.end6
  %cmp16 = icmp ne i32* %nbytes_in_lo32, null
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end15
  store i32 0, i32* %nbytes_in_lo32, align 4, !tbaa !6
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end15
  %cmp19 = icmp ne i32* %nbytes_in_hi32, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end18
  store i32 0, i32* %nbytes_in_hi32, align 4, !tbaa !6
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.end18
  %cmp22 = icmp ne i32* %nbytes_out_lo32, null
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  store i32 0, i32* %nbytes_out_lo32, align 4, !tbaa !6
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  %cmp25 = icmp ne i32* %nbytes_out_hi32, null
  br i1 %cmp25, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end24
  store i32 0, i32* %nbytes_out_hi32, align 4, !tbaa !6
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end24
  %tobool28 = icmp eq i32 %abandon, 0
  br i1 %tobool28, label %land.lhs.true, label %if.end69

land.lhs.true:                                    ; preds = %if.end27
  %lastErr29 = getelementptr inbounds i8, i8* %b, i64 5096
  %3 = bitcast i8* %lastErr29 to i32*
  %4 = load i32, i32* %3, align 8, !tbaa !127
  %cmp30 = icmp eq i32 %4, 0
  br i1 %cmp30, label %if.then31, label %if.end69

if.then31:                                        ; preds = %land.lhs.true
  %strm = getelementptr inbounds i8, i8* %b, i64 5016
  %5 = bitcast i8* %strm to %struct.bz_stream*
  %avail_out = getelementptr inbounds i8, i8* %b, i64 5048
  %6 = bitcast i8* %avail_out to i32*
  store i32 5000, i32* %6, align 8, !tbaa !135
  %buf = getelementptr inbounds i8, i8* %b, i64 4
  %next_out = getelementptr inbounds i8, i8* %b, i64 5040
  %7 = bitcast i8* %next_out to i8**
  store i8* %buf, i8** %7, align 8, !tbaa !136
  %state.i = getelementptr inbounds i8, i8* %b, i64 5064
  %8 = bitcast i8* %state.i to %struct.EState**
  %9 = load %struct.EState*, %struct.EState** %8, align 8, !tbaa !87
  %cmp1.i168 = icmp eq %struct.EState* %9, null
  br i1 %cmp1.i168, label %if.then37, label %if.end3.i.lr.ph

if.end3.i.lr.ph:                                  ; preds = %if.then31
  %avail_in.i = getelementptr inbounds i8, i8* %b, i64 5024
  %10 = bitcast i8* %avail_in.i to i32*
  %handle = bitcast i8* %b to i32*
  br label %if.end3.i

while.cond:                                       ; preds = %if.end65
  store i32 5000, i32* %6, align 8, !tbaa !135
  store i8* %buf, i8** %7, align 8, !tbaa !136
  %11 = load %struct.EState*, %struct.EState** %8, align 8, !tbaa !87
  %cmp1.i = icmp eq %struct.EState* %11, null
  br i1 %cmp1.i, label %if.then37, label %if.end3.i

if.end3.i:                                        ; preds = %while.cond, %if.end3.i.lr.ph
  %12 = phi %struct.EState* [ %9, %if.end3.i.lr.ph ], [ %11, %while.cond ]
  %strm4.i = getelementptr inbounds %struct.EState, %struct.EState* %12, i64 0, i32 0
  %13 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i, align 8, !tbaa !79
  %cmp5.i = icmp eq %struct.bz_stream* %13, %5
  br i1 %cmp5.i, label %if.end7.i, label %if.then37

if.end7.i:                                        ; preds = %if.end3.i
  %mode.i = getelementptr inbounds %struct.EState, %struct.EState* %12, i64 0, i32 1
  %avail_in_expect.i = getelementptr inbounds %struct.EState, %struct.EState* %12, i64 0, i32 3
  %.pre.i = load i32, i32* %mode.i, align 8, !tbaa !81
  br label %preswitch.us131.i

preswitch.us131.i:                                ; preds = %if.then18.us133.i, %if.end7.i
  %14 = phi i32 [ 4, %if.then18.us133.i ], [ %.pre.i, %if.end7.i ]
  switch i32 %14, label %if.then37.loopexit [
    i32 1, label %if.then37
    i32 2, label %if.then18.us133.i
    i32 3, label %if.then37
    i32 4, label %sw.bb47.i
  ]

if.then18.us133.i:                                ; preds = %preswitch.us131.i
  %15 = load i32, i32* %10, align 8, !tbaa !98
  store i32 %15, i32* %avail_in_expect.i, align 8, !tbaa !99
  store i32 4, i32* %mode.i, align 8, !tbaa !81
  br label %preswitch.us131.i

sw.bb47.i:                                        ; preds = %preswitch.us131.i
  %16 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %17 = load i32, i32* %10, align 8, !tbaa !98
  %cmp55.i = icmp eq i32 %16, %17
  br i1 %cmp55.i, label %if.end58.i, label %if.then37

if.end58.i:                                       ; preds = %sw.bb47.i
  %call59.i = tail call fastcc zeroext i8 @handle_compress(%struct.bz_stream* nonnull %5) #2
  %tobool60.i = icmp eq i8 %call59.i, 0
  br i1 %tobool60.i, label %if.then37, label %if.end62.i

if.end62.i:                                       ; preds = %if.end58.i
  %18 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %cmp64.i = icmp eq i32 %18, 0
  br i1 %cmp64.i, label %lor.lhs.false66.i, label %if.end45

lor.lhs.false66.i:                                ; preds = %if.end62.i
  %state_in_ch.i111.i = getelementptr inbounds %struct.EState, %struct.EState* %12, i64 0, i32 13
  %19 = load i32, i32* %state_in_ch.i111.i, align 4, !tbaa !92
  %cmp.i112.i = icmp ult i32 %19, 256
  br i1 %cmp.i112.i, label %land.lhs.true.i115.i, label %lor.lhs.false69.i

land.lhs.true.i115.i:                             ; preds = %lor.lhs.false66.i
  %state_in_len.i113.i = getelementptr inbounds %struct.EState, %struct.EState* %12, i64 0, i32 14
  %20 = load i32, i32* %state_in_len.i113.i, align 8, !tbaa !93
  %cmp1.i114.i = icmp sgt i32 %20, 0
  br i1 %cmp1.i114.i, label %if.end45, label %lor.lhs.false69.i

lor.lhs.false69.i:                                ; preds = %land.lhs.true.i115.i, %lor.lhs.false66.i
  %state_out_pos70.i = getelementptr inbounds %struct.EState, %struct.EState* %12, i64 0, i32 20
  %21 = load i32, i32* %state_out_pos70.i, align 8, !tbaa !95
  %numZ71.i = getelementptr inbounds %struct.EState, %struct.EState* %12, i64 0, i32 19
  %22 = load i32, i32* %numZ71.i, align 4, !tbaa !94
  %cmp72.i = icmp slt i32 %21, %22
  br i1 %cmp72.i, label %if.end45, label %if.end75.i

if.end75.i:                                       ; preds = %lor.lhs.false69.i
  store i32 1, i32* %mode.i, align 8, !tbaa !81
  br label %if.end45

if.then37.loopexit:                               ; preds = %preswitch.us131.i
  br label %if.then37

if.then37:                                        ; preds = %if.then37.loopexit, %if.end58.i, %sw.bb47.i, %preswitch.us131.i, %preswitch.us131.i, %if.end3.i, %while.cond, %if.then31
  %retval.0.i.ph = phi i32 [ -2, %if.then31 ], [ 0, %if.then37.loopexit ], [ -1, %preswitch.us131.i ], [ -1, %preswitch.us131.i ], [ -1, %if.end58.i ], [ -1, %sw.bb47.i ], [ -2, %if.end3.i ], [ -2, %while.cond ]
  %cmp38 = icmp eq i32* %bzerror, null
  br i1 %cmp38, label %if.then42, label %if.then39

if.then39:                                        ; preds = %if.then37
  store i32 %retval.0.i.ph, i32* %bzerror, align 4, !tbaa !6
  br label %if.then42

if.then42:                                        ; preds = %if.then39, %if.then37
  store i32 %retval.0.i.ph, i32* %3, align 8, !tbaa !127
  br label %cleanup

if.end45:                                         ; preds = %if.end75.i, %lor.lhs.false69.i, %land.lhs.true.i115.i, %if.end62.i
  %retval.0.i = phi i32 [ 4, %if.end75.i ], [ 3, %if.end62.i ], [ 3, %lor.lhs.false69.i ], [ 3, %land.lhs.true.i115.i ]
  %23 = load i32, i32* %6, align 8, !tbaa !135
  %cmp48 = icmp ult i32 %23, 5000
  br i1 %cmp48, label %if.then49, label %if.end65

if.then49:                                        ; preds = %if.end45
  %sub = sub i32 5000, %23
  %24 = load i32, i32* %handle, align 8, !tbaa !131
  %call54 = tail call i32 @spec_fwrite(i8* nonnull %buf, i32 1, i32 %sub, i32 %24) #2
  %cmp55 = icmp eq i32 %sub, %call54
  br i1 %cmp55, label %if.end65, label %if.then56

if.then56:                                        ; preds = %if.then49
  %cmp57 = icmp eq i32* %bzerror, null
  br i1 %cmp57, label %if.then61, label %if.then58

if.then58:                                        ; preds = %if.then56
  store i32 -6, i32* %bzerror, align 4, !tbaa !6
  br label %if.then61

if.then61:                                        ; preds = %if.then58, %if.then56
  store i32 -6, i32* %3, align 8, !tbaa !127
  br label %cleanup

if.end65:                                         ; preds = %if.then49, %if.end45
  %cmp66 = icmp eq i32 %retval.0.i, 4
  br i1 %cmp66, label %if.end69, label %while.cond

if.end69:                                         ; preds = %if.end65, %land.lhs.true, %if.end27
  br i1 %cmp16, label %if.then74, label %if.end76

if.then74:                                        ; preds = %if.end69
  %total_in_lo32 = getelementptr inbounds i8, i8* %b, i64 5028
  %25 = bitcast i8* %total_in_lo32 to i32*
  %26 = load i32, i32* %25, align 4, !tbaa !137
  store i32 %26, i32* %nbytes_in_lo32, align 4, !tbaa !6
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.end69
  br i1 %cmp19, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.end76
  %total_in_hi32 = getelementptr inbounds i8, i8* %b, i64 5032
  %27 = bitcast i8* %total_in_hi32 to i32*
  %28 = load i32, i32* %27, align 8, !tbaa !138
  store i32 %28, i32* %nbytes_in_hi32, align 4, !tbaa !6
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.end76
  br i1 %cmp22, label %if.then82, label %if.end84

if.then82:                                        ; preds = %if.end80
  %total_out_lo32 = getelementptr inbounds i8, i8* %b, i64 5052
  %29 = bitcast i8* %total_out_lo32 to i32*
  %30 = load i32, i32* %29, align 4, !tbaa !139
  store i32 %30, i32* %nbytes_out_lo32, align 4, !tbaa !6
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %if.end80
  br i1 %cmp25, label %if.then86, label %if.end88

if.then86:                                        ; preds = %if.end84
  %total_out_hi32 = getelementptr inbounds i8, i8* %b, i64 5056
  %31 = bitcast i8* %total_out_hi32 to i32*
  %32 = load i32, i32* %31, align 8, !tbaa !140
  store i32 %32, i32* %nbytes_out_hi32, align 4, !tbaa !6
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %if.end84
  %cmp89 = icmp eq i32* %bzerror, null
  br i1 %cmp89, label %if.then93, label %if.then90

if.then90:                                        ; preds = %if.end88
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then93

if.then93:                                        ; preds = %if.then90, %if.end88
  %lastErr94 = getelementptr inbounds i8, i8* %b, i64 5096
  %33 = bitcast i8* %lastErr94 to i32*
  store i32 0, i32* %33, align 8, !tbaa !127
  %state.i158 = getelementptr inbounds i8, i8* %b, i64 5064
  %34 = bitcast i8* %state.i158 to i8**
  %35 = bitcast i8* %state.i158 to %struct.EState**
  %36 = load %struct.EState*, %struct.EState** %35, align 8, !tbaa !87
  %cmp1.i159 = icmp eq %struct.EState* %36, null
  br i1 %cmp1.i159, label %BZ2_bzCompressEnd.exit, label %if.end3.i162

if.end3.i162:                                     ; preds = %if.then93
  %strm96 = getelementptr inbounds i8, i8* %b, i64 5016
  %37 = bitcast i8* %strm96 to %struct.bz_stream*
  %strm4.i160 = getelementptr inbounds %struct.EState, %struct.EState* %36, i64 0, i32 0
  %38 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i160, align 8, !tbaa !79
  %cmp5.i161 = icmp eq %struct.bz_stream* %38, %37
  br i1 %cmp5.i161, label %if.end7.i163, label %BZ2_bzCompressEnd.exit

if.end7.i163:                                     ; preds = %if.end3.i162
  %arr1.i = getelementptr inbounds %struct.EState, %struct.EState* %36, i64 0, i32 4
  %39 = load i32*, i32** %arr1.i, align 8, !tbaa !31
  %cmp8.i = icmp eq i32* %39, null
  br i1 %cmp8.i, label %if.end11.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end7.i163
  %bzfree.i = getelementptr inbounds i8, i8* %b, i64 5080
  %40 = bitcast i8* %bzfree.i to void (i8*, i8*)**
  %41 = load void (i8*, i8*)*, void (i8*, i8*)** %40, align 8, !tbaa !77
  %opaque.i = getelementptr inbounds i8, i8* %b, i64 5088
  %42 = bitcast i8* %opaque.i to i8**
  %43 = load i8*, i8** %42, align 8, !tbaa !78
  %44 = bitcast i32* %39 to i8*
  tail call void %41(i8* %43, i8* %44) #2
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i, %if.end7.i163
  %arr2.i = getelementptr inbounds %struct.EState, %struct.EState* %36, i64 0, i32 5
  %45 = load i32*, i32** %arr2.i, align 8, !tbaa !32
  %cmp12.i = icmp eq i32* %45, null
  %.pre = getelementptr inbounds i8, i8* %b, i64 5080
  %.pre174 = bitcast i8* %.pre to void (i8*, i8*)**
  br i1 %cmp12.i, label %if.end17.i, label %if.then13.i

if.then13.i:                                      ; preds = %if.end11.i
  %46 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre174, align 8, !tbaa !77
  %opaque15.i = getelementptr inbounds i8, i8* %b, i64 5088
  %47 = bitcast i8* %opaque15.i to i8**
  %48 = load i8*, i8** %47, align 8, !tbaa !78
  %49 = bitcast i32* %45 to i8*
  tail call void %46(i8* %48, i8* %49) #2
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i
  %ftab.i = getelementptr inbounds %struct.EState, %struct.EState* %36, i64 0, i32 6
  %50 = load i32*, i32** %ftab.i, align 8, !tbaa !27
  %cmp18.i = icmp eq i32* %50, null
  br i1 %cmp18.i, label %if.end17.if.end23_crit_edge.i, label %if.then19.i

if.end17.if.end23_crit_edge.i:                    ; preds = %if.end17.i
  %.pre48.i = getelementptr inbounds i8, i8* %b, i64 5088
  %51 = bitcast i8* %.pre48.i to i8**
  br label %if.end23.i

if.then19.i:                                      ; preds = %if.end17.i
  %52 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre174, align 8, !tbaa !77
  %opaque21.i = getelementptr inbounds i8, i8* %b, i64 5088
  %53 = bitcast i8* %opaque21.i to i8**
  %54 = load i8*, i8** %53, align 8, !tbaa !78
  %55 = bitcast i32* %50 to i8*
  tail call void %52(i8* %54, i8* %55) #2
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then19.i, %if.end17.if.end23_crit_edge.i
  %opaque25.pre-phi.i = phi i8** [ %51, %if.end17.if.end23_crit_edge.i ], [ %53, %if.then19.i ]
  %56 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre174, align 8, !tbaa !77
  %57 = load i8*, i8** %opaque25.pre-phi.i, align 8, !tbaa !78
  %58 = load i8*, i8** %34, align 8, !tbaa !87
  tail call void %56(i8* %57, i8* %58) #2
  br label %BZ2_bzCompressEnd.exit

BZ2_bzCompressEnd.exit:                           ; preds = %if.end23.i, %if.end3.i162, %if.then93
  tail call void @free(i8* nonnull %b) #2
  br label %cleanup

cleanup:                                          ; preds = %BZ2_bzCompressEnd.exit, %if.then61, %if.then42, %if.then12, %if.then2, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzReadOpen(i32* %bzerror, i32 %f, i32 %verbosity, i32 %small, i8* readonly %unused, i32 %nUnused) local_unnamed_addr #1 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.end3

if.end3:                                          ; preds = %if.then, %entry
  %cmp4 = icmp eq i32 %f, 0
  br i1 %cmp4, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %0 = icmp ugt i32 %small, 1
  %1 = icmp ugt i32 %verbosity, 4
  %2 = or i1 %1, %0
  br i1 %2, label %if.then21, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp12 = icmp eq i8* %unused, null
  %cmp14 = icmp ne i32 %nUnused, 0
  %or.cond72 = and i1 %cmp12, %cmp14
  br i1 %or.cond72, label %if.then21, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %lor.lhs.false11
  %cmp16 = icmp ne i8* %unused, null
  %3 = icmp ugt i32 %nUnused, 5000
  %or.cond = and i1 %cmp16, %3
  br i1 %or.cond, label %if.then21, label %if.end29

if.then21:                                        ; preds = %lor.lhs.false15, %lor.lhs.false11, %lor.lhs.false, %if.end3
  br i1 %cmp, label %if.then23, label %cleanup

if.then23:                                        ; preds = %if.then21
  store i32 -2, i32* %bzerror, align 4, !tbaa !6
  br label %cleanup

if.end29:                                         ; preds = %lor.lhs.false15
  %call = tail call noalias i8* @malloc(i64 5104) #2
  %cmp30 = icmp eq i8* %call, null
  br i1 %cmp30, label %if.then31, label %if.end39

if.then31:                                        ; preds = %if.end29
  br i1 %cmp, label %if.then33, label %cleanup

if.then33:                                        ; preds = %if.then31
  store i32 -3, i32* %bzerror, align 4, !tbaa !6
  br label %cleanup

if.end39:                                         ; preds = %if.end29
  br i1 %cmp, label %if.then41, label %if.then44

if.then41:                                        ; preds = %if.end39
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then44

if.then44:                                        ; preds = %if.then41, %if.end39
  %lastErr45 = getelementptr inbounds i8, i8* %call, i64 5096
  %4 = bitcast i8* %lastErr45 to i32*
  store i32 0, i32* %4, align 8, !tbaa !127
  %5 = getelementptr inbounds i8, i8* %call, i64 5100
  store i8 0, i8* %5, align 4, !tbaa !129
  %handle = bitcast i8* %call to i32*
  store i32 %f, i32* %handle, align 8, !tbaa !131
  %bufN = getelementptr inbounds i8, i8* %call, i64 5004
  %6 = bitcast i8* %bufN to i32*
  store i32 0, i32* %6, align 4, !tbaa !130
  %7 = getelementptr inbounds i8, i8* %call, i64 5008
  store i8 0, i8* %7, align 8, !tbaa !132
  %strm = getelementptr inbounds i8, i8* %call, i64 5016
  %bzalloc = getelementptr inbounds i8, i8* %call, i64 5072
  %8 = bitcast i8* %bzalloc to i8* (i8*, i32, i32)**
  %bzfree = getelementptr inbounds i8, i8* %call, i64 5080
  %9 = bitcast i8* %bzfree to void (i8*, i8*)**
  %opaque = getelementptr inbounds i8, i8* %call, i64 5088
  %10 = bitcast i8* %opaque to i8**
  %cmp49127 = icmp sgt i32 %nUnused, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull %bzalloc, i8 0, i64 24, i32 8, i1 false)
  br i1 %cmp49127, label %while.body.lr.ph, label %if.then12.i

while.body.lr.ph:                                 ; preds = %if.then44
  %buf = getelementptr inbounds i8, i8* %call, i64 4
  br label %while.body

while.body:                                       ; preds = %while.body, %while.body.lr.ph
  %11 = phi i32 [ 0, %while.body.lr.ph ], [ %inc, %while.body ]
  %nUnused.addr.0129 = phi i32 [ %nUnused, %while.body.lr.ph ], [ %dec, %while.body ]
  %unused.addr.0128 = phi i8* [ %unused, %while.body.lr.ph ], [ %add.ptr, %while.body ]
  %12 = load i8, i8* %unused.addr.0128, align 1, !tbaa !12
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds i8, i8* %buf, i64 %idxprom
  store i8 %12, i8* %arrayidx, align 1, !tbaa !12
  %13 = load i32, i32* %6, align 4, !tbaa !130
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %6, align 4, !tbaa !130
  %add.ptr = getelementptr inbounds i8, i8* %unused.addr.0128, i64 1
  %dec = add nsw i32 %nUnused.addr.0129, -1
  %cmp49 = icmp sgt i32 %nUnused.addr.0129, 1
  br i1 %cmp49, label %while.body, label %if.end10.i

if.end10.i:                                       ; preds = %while.body
  %.pre = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %8, align 8, !tbaa !75
  %cmp11.i = icmp eq i8* (i8*, i32, i32)* %.pre, null
  br i1 %cmp11.i, label %if.then12.i, label %if.end14.i

if.then12.i:                                      ; preds = %if.end10.i, %if.then44
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %8, align 8, !tbaa !75
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then12.i, %if.end10.i
  %14 = phi i8* (i8*, i32, i32)* [ @default_bzalloc, %if.then12.i ], [ %.pre, %if.end10.i ]
  %15 = load void (i8*, i8*)*, void (i8*, i8*)** %9, align 8, !tbaa !77
  %cmp15.i = icmp eq void (i8*, i8*)* %15, null
  br i1 %cmp15.i, label %if.then16.i, label %if.end18.i

if.then16.i:                                      ; preds = %if.end14.i
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %9, align 8, !tbaa !77
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then16.i, %if.end14.i
  %16 = load i8*, i8** %10, align 8, !tbaa !78
  %call20.i = tail call i8* %14(i8* %16, i32 64144, i32 1) #2
  %cmp21.i = icmp eq i8* %call20.i, null
  br i1 %cmp21.i, label %if.then55, label %if.end63

if.then55:                                        ; preds = %if.end18.i
  br i1 %cmp, label %if.then57, label %if.then60

if.then57:                                        ; preds = %if.then55
  store i32 -3, i32* %bzerror, align 4, !tbaa !6
  br label %if.then60

if.then60:                                        ; preds = %if.then57, %if.then55
  tail call void @free(i8* nonnull %call) #2
  br label %cleanup

if.end63:                                         ; preds = %if.end18.i
  %17 = bitcast i8* %call20.i to i8**
  store i8* %strm, i8** %17, align 8, !tbaa !103
  %state.i = getelementptr inbounds i8, i8* %call, i64 5064
  %18 = bitcast i8* %state.i to i8**
  store i8* %call20.i, i8** %18, align 8, !tbaa !87
  %state25.i = getelementptr inbounds i8, i8* %call20.i, i64 8
  %19 = bitcast i8* %state25.i to i32*
  store i32 10, i32* %19, align 8, !tbaa !105
  %bsLive.i = getelementptr inbounds i8, i8* %call20.i, i64 36
  %20 = bitcast i8* %bsLive.i to i32*
  store i32 0, i32* %20, align 4, !tbaa !106
  %bsBuff.i = getelementptr inbounds i8, i8* %call20.i, i64 32
  %21 = bitcast i8* %bsBuff.i to i32*
  store i32 0, i32* %21, align 8, !tbaa !107
  %calculatedCombinedCRC.i = getelementptr inbounds i8, i8* %call20.i, i64 3188
  %22 = bitcast i8* %calculatedCombinedCRC.i to i32*
  store i32 0, i32* %22, align 4, !tbaa !108
  %total_in_lo32.i = getelementptr inbounds i8, i8* %call, i64 5028
  %23 = bitcast i8* %total_in_lo32.i to i32*
  store i32 0, i32* %23, align 4, !tbaa !88
  %total_in_hi32.i = getelementptr inbounds i8, i8* %call, i64 5032
  %24 = bitcast i8* %total_in_hi32.i to i32*
  store i32 0, i32* %24, align 8, !tbaa !89
  %total_out_lo32.i = getelementptr inbounds i8, i8* %call, i64 5052
  %25 = bitcast i8* %total_out_lo32.i to i32*
  store i32 0, i32* %25, align 4, !tbaa !90
  %total_out_hi32.i = getelementptr inbounds i8, i8* %call, i64 5056
  %26 = bitcast i8* %total_out_hi32.i to i32*
  store i32 0, i32* %26, align 8, !tbaa !91
  %conv.i = trunc i32 %small to i8
  %27 = getelementptr inbounds i8, i8* %call20.i, i64 44
  store i8 %conv.i, i8* %27, align 4, !tbaa !109
  %tt.i = getelementptr inbounds i8, i8* %call20.i, i64 3152
  %currBlockNo.i = getelementptr inbounds i8, i8* %call20.i, i64 48
  %28 = bitcast i8* %currBlockNo.i to i32*
  store i32 0, i32* %28, align 8, !tbaa !110
  %verbosity26.i = getelementptr inbounds i8, i8* %call20.i, i64 52
  %29 = bitcast i8* %verbosity26.i to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %tt.i, i8 0, i64 24, i32 8, i1 false) #2
  store i32 %verbosity, i32* %29, align 4, !tbaa !111
  %30 = load i32, i32* %6, align 4, !tbaa !130
  %avail_in = getelementptr inbounds i8, i8* %call, i64 5024
  %31 = bitcast i8* %avail_in to i32*
  store i32 %30, i32* %31, align 8, !tbaa !133
  %buf66 = getelementptr inbounds i8, i8* %call, i64 4
  %next_in = bitcast i8* %strm to i8**
  store i8* %buf66, i8** %next_in, align 8, !tbaa !134
  store i8 1, i8* %5, align 4, !tbaa !129
  br label %cleanup

cleanup:                                          ; preds = %if.end63, %if.then60, %if.then33, %if.then31, %if.then23, %if.then21
  %retval.0 = phi i8* [ null, %if.then60 ], [ %call, %if.end63 ], [ null, %if.then21 ], [ null, %if.then23 ], [ null, %if.then33 ], [ null, %if.then31 ]
  ret i8* %retval.0
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzReadClose(i32* %bzerror, i8* %b) local_unnamed_addr #1 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp eq i8* %b, null
  br i1 %cmp1, label %if.then5, label %if.end13

if.then5:                                         ; preds = %if.end
  br i1 %cmp, label %if.then7, label %cleanup

if.then7:                                         ; preds = %if.then5
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %lastErr = getelementptr inbounds i8, i8* %b, i64 5096
  %0 = bitcast i8* %lastErr to i32*
  store i32 0, i32* %0, align 8, !tbaa !127
  %1 = getelementptr inbounds i8, i8* %b, i64 5008
  %2 = load i8, i8* %1, align 8, !tbaa !132
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.end22, label %if.then14

if.then14:                                        ; preds = %if.end13
  br i1 %cmp, label %if.then16, label %if.then19

if.then16:                                        ; preds = %if.then14
  store i32 -1, i32* %bzerror, align 4, !tbaa !6
  br label %if.then19

if.then19:                                        ; preds = %if.then16, %if.then14
  store i32 -1, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end22:                                         ; preds = %if.end13
  %3 = getelementptr inbounds i8, i8* %b, i64 5100
  %4 = load i8, i8* %3, align 4, !tbaa !129
  %tobool23 = icmp eq i8 %4, 0
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.end22
  %state.i = getelementptr inbounds i8, i8* %b, i64 5064
  %5 = bitcast i8* %state.i to i8**
  %6 = bitcast i8* %state.i to %struct.DState**
  %7 = load %struct.DState*, %struct.DState** %6, align 8, !tbaa !87
  %cmp1.i = icmp eq %struct.DState* %7, null
  br i1 %cmp1.i, label %if.end25, label %if.end3.i

if.end3.i:                                        ; preds = %if.then24
  %strm = getelementptr inbounds i8, i8* %b, i64 5016
  %8 = bitcast i8* %strm to %struct.bz_stream*
  %strm4.i = getelementptr inbounds %struct.DState, %struct.DState* %7, i64 0, i32 0
  %9 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i, align 8, !tbaa !103
  %cmp5.i = icmp eq %struct.bz_stream* %9, %8
  br i1 %cmp5.i, label %if.end7.i, label %if.end25

if.end7.i:                                        ; preds = %if.end3.i
  %tt.i = getelementptr inbounds %struct.DState, %struct.DState* %7, i64 0, i32 20
  %10 = load i32*, i32** %tt.i, align 8, !tbaa !124
  %cmp8.i = icmp eq i32* %10, null
  br i1 %cmp8.i, label %if.end11.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end7.i
  %bzfree.i = getelementptr inbounds i8, i8* %b, i64 5080
  %11 = bitcast i8* %bzfree.i to void (i8*, i8*)**
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %11, align 8, !tbaa !77
  %opaque.i = getelementptr inbounds i8, i8* %b, i64 5088
  %13 = bitcast i8* %opaque.i to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !78
  %15 = bitcast i32* %10 to i8*
  tail call void %12(i8* %14, i8* %15) #2
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i, %if.end7.i
  %ll16.i = getelementptr inbounds %struct.DState, %struct.DState* %7, i64 0, i32 21
  %16 = load i16*, i16** %ll16.i, align 8, !tbaa !120
  %cmp12.i = icmp eq i16* %16, null
  %.pre = getelementptr inbounds i8, i8* %b, i64 5080
  %.pre43 = bitcast i8* %.pre to void (i8*, i8*)**
  br i1 %cmp12.i, label %if.end17.i, label %if.then13.i

if.then13.i:                                      ; preds = %if.end11.i
  %17 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre43, align 8, !tbaa !77
  %opaque15.i = getelementptr inbounds i8, i8* %b, i64 5088
  %18 = bitcast i8* %opaque15.i to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !78
  %20 = bitcast i16* %16 to i8*
  tail call void %17(i8* %19, i8* %20) #2
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i
  %ll4.i = getelementptr inbounds %struct.DState, %struct.DState* %7, i64 0, i32 22
  %21 = load i8*, i8** %ll4.i, align 8, !tbaa !121
  %cmp18.i = icmp eq i8* %21, null
  br i1 %cmp18.i, label %if.end17.if.end23_crit_edge.i, label %if.then19.i

if.end17.if.end23_crit_edge.i:                    ; preds = %if.end17.i
  %.pre48.i = getelementptr inbounds i8, i8* %b, i64 5088
  %22 = bitcast i8* %.pre48.i to i8**
  br label %if.end23.i

if.then19.i:                                      ; preds = %if.end17.i
  %23 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre43, align 8, !tbaa !77
  %opaque21.i = getelementptr inbounds i8, i8* %b, i64 5088
  %24 = bitcast i8* %opaque21.i to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !78
  tail call void %23(i8* %25, i8* nonnull %21) #2
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then19.i, %if.end17.if.end23_crit_edge.i
  %opaque25.pre-phi.i = phi i8** [ %22, %if.end17.if.end23_crit_edge.i ], [ %24, %if.then19.i ]
  %26 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre43, align 8, !tbaa !77
  %27 = load i8*, i8** %opaque25.pre-phi.i, align 8, !tbaa !78
  %28 = load i8*, i8** %5, align 8, !tbaa !87
  tail call void %26(i8* %27, i8* %28) #2
  br label %if.end25

if.end25:                                         ; preds = %if.end23.i, %if.end3.i, %if.then24, %if.end22
  tail call void @free(i8* nonnull %b) #2
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %if.then19, %if.then7, %if.then5
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzRead(i32* %bzerror, i8* %b, i8* %buf, i32 %len) local_unnamed_addr #1 {
entry:
  %cmp = icmp ne i32* %bzerror, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp1 = icmp ne i8* %b, null
  br i1 %cmp1, label %if.end3, label %if.then8

if.end3:                                          ; preds = %if.end
  %lastErr = getelementptr inbounds i8, i8* %b, i64 5096
  %0 = bitcast i8* %lastErr to i32*
  store i32 0, i32* %0, align 8, !tbaa !127
  %cmp5 = icmp eq i8* %buf, null
  %cmp7 = icmp slt i32 %len, 0
  %or.cond123 = or i1 %cmp5, %cmp7
  br i1 %or.cond123, label %if.then8, label %if.end16

if.then8:                                         ; preds = %if.end3, %if.end
  br i1 %cmp, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.then8
  store i32 -2, i32* %bzerror, align 4, !tbaa !6
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.then8
  br i1 %cmp1, label %if.then13, label %cleanup

if.then13:                                        ; preds = %if.end11
  %lastErr14 = getelementptr inbounds i8, i8* %b, i64 5096
  %1 = bitcast i8* %lastErr14 to i32*
  store i32 -2, i32* %1, align 8, !tbaa !127
  br label %cleanup

if.end16:                                         ; preds = %if.end3
  %2 = getelementptr inbounds i8, i8* %b, i64 5008
  %3 = load i8, i8* %2, align 8, !tbaa !132
  %tobool = icmp eq i8 %3, 0
  br i1 %tobool, label %if.end25, label %if.then17

if.then17:                                        ; preds = %if.end16
  br i1 %cmp, label %if.then19, label %if.then22

if.then19:                                        ; preds = %if.then17
  store i32 -1, i32* %bzerror, align 4, !tbaa !6
  br label %if.then22

if.then22:                                        ; preds = %if.then19, %if.then17
  store i32 -1, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end25:                                         ; preds = %if.end16
  %cmp26 = icmp eq i32 %len, 0
  br i1 %cmp26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end25
  br i1 %cmp, label %if.then29, label %if.then32

if.then29:                                        ; preds = %if.then27
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then32

if.then32:                                        ; preds = %if.then29, %if.then27
  store i32 0, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end35:                                         ; preds = %if.end25
  %strm = getelementptr inbounds i8, i8* %b, i64 5016
  %4 = bitcast i8* %strm to %struct.bz_stream*
  %avail_out = getelementptr inbounds i8, i8* %b, i64 5048
  %5 = bitcast i8* %avail_out to i32*
  store i32 %len, i32* %5, align 8, !tbaa !135
  %next_out = getelementptr inbounds i8, i8* %b, i64 5040
  %6 = bitcast i8* %next_out to i8**
  store i8* %buf, i8** %6, align 8, !tbaa !136
  %avail_in = getelementptr inbounds i8, i8* %b, i64 5024
  %7 = bitcast i8* %avail_in to i32*
  %handle = bitcast i8* %b to i32*
  %buf41 = getelementptr inbounds i8, i8* %b, i64 4
  %bufN = getelementptr inbounds i8, i8* %b, i64 5004
  %8 = bitcast i8* %bufN to i32*
  %next_in = bitcast i8* %strm to i8**
  br label %while.cond

while.cond:                                       ; preds = %if.end105, %if.end35
  %9 = load i32, i32* %7, align 8, !tbaa !133
  %cmp38 = icmp eq i32 %9, 0
  br i1 %cmp38, label %land.lhs.true, label %if.end50

land.lhs.true:                                    ; preds = %while.cond
  %10 = load i32, i32* %handle, align 8, !tbaa !131
  %call.i = tail call i32 @spec_getc(i32 %10) #2
  %cmp.i = icmp eq i32 %call.i, -1
  br i1 %cmp.i, label %if.end50, label %if.then40

if.then40:                                        ; preds = %land.lhs.true
  %conv.i = trunc i32 %call.i to i8
  %call1.i = tail call i32 @spec_ungetc(i8 zeroext %conv.i, i32 %10) #2
  %11 = load i32, i32* %handle, align 8, !tbaa !131
  %call43 = tail call i32 @spec_fread(i8* nonnull %buf41, i32 1, i32 5000, i32 %11) #2
  store i32 %call43, i32* %8, align 4, !tbaa !130
  store i32 %call43, i32* %7, align 8, !tbaa !133
  store i8* %buf41, i8** %next_in, align 8, !tbaa !134
  br label %if.end50

if.end50:                                         ; preds = %if.then40, %land.lhs.true, %while.cond
  %call52 = tail call i32 @BZ2_bzDecompress(%struct.bz_stream* nonnull %4)
  %12 = or i32 %call52, 4
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %if.end64, label %if.then56

if.then56:                                        ; preds = %if.end50
  br i1 %cmp, label %if.then58, label %if.then61

if.then58:                                        ; preds = %if.then56
  store i32 %call52, i32* %bzerror, align 4, !tbaa !6
  br label %if.then61

if.then61:                                        ; preds = %if.then58, %if.then56
  store i32 %call52, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end64:                                         ; preds = %if.end50
  switch i32 %call52, label %if.end105 [
    i32 0, label %land.lhs.true66
    i32 4, label %if.then93
  ]

land.lhs.true66:                                  ; preds = %if.end64
  %14 = load i32, i32* %handle, align 8, !tbaa !131
  %call.i187 = tail call i32 @spec_getc(i32 %14) #2
  %cmp.i188 = icmp eq i32 %call.i187, -1
  br i1 %cmp.i188, label %land.lhs.true70, label %myfeof.exit193.thread

myfeof.exit193.thread:                            ; preds = %land.lhs.true66
  %conv.i189 = trunc i32 %call.i187 to i8
  %call1.i190 = tail call i32 @spec_ungetc(i8 zeroext %conv.i189, i32 %14) #2
  br label %if.end105

land.lhs.true70:                                  ; preds = %land.lhs.true66
  %15 = load i32, i32* %7, align 8, !tbaa !133
  %cmp73 = icmp eq i32 %15, 0
  br i1 %cmp73, label %land.lhs.true75, label %if.end105

land.lhs.true75:                                  ; preds = %land.lhs.true70
  %16 = load i32, i32* %5, align 8, !tbaa !135
  %cmp78 = icmp eq i32 %16, 0
  br i1 %cmp78, label %if.then110, label %if.then80

if.then80:                                        ; preds = %land.lhs.true75
  br i1 %cmp, label %if.then83, label %if.then87

if.then83:                                        ; preds = %if.then80
  store i32 -7, i32* %bzerror, align 4, !tbaa !6
  br label %if.then87

if.then87:                                        ; preds = %if.then83, %if.then80
  store i32 -7, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.then93:                                        ; preds = %if.end64
  br i1 %cmp, label %if.then96, label %if.end102

if.then96:                                        ; preds = %if.then93
  store i32 4, i32* %bzerror, align 4, !tbaa !6
  br label %if.end102

if.end102:                                        ; preds = %if.then96, %if.then93
  store i32 4, i32* %0, align 8, !tbaa !127
  %17 = load i32, i32* %5, align 8, !tbaa !135
  %sub = sub i32 %len, %17
  br label %cleanup

if.end105:                                        ; preds = %land.lhs.true70, %myfeof.exit193.thread, %if.end64
  %.pr = load i32, i32* %5, align 8, !tbaa !135
  %cmp108 = icmp eq i32 %.pr, 0
  br i1 %cmp108, label %if.then110, label %while.cond

if.then110:                                       ; preds = %if.end105, %land.lhs.true75
  br i1 %cmp, label %if.then113, label %if.then117

if.then113:                                       ; preds = %if.then110
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then117

if.then117:                                       ; preds = %if.then113, %if.then110
  store i32 0, i32* %0, align 8, !tbaa !127
  br label %cleanup

cleanup:                                          ; preds = %if.then117, %if.end102, %if.then87, %if.then61, %if.then32, %if.then22, %if.then13, %if.end11
  %retval.0 = phi i32 [ %sub, %if.end102 ], [ 0, %if.then13 ], [ 0, %if.end11 ], [ 0, %if.then22 ], [ 0, %if.then32 ], [ 0, %if.then61 ], [ 0, %if.then87 ], [ %len, %if.then117 ]
  ret i32 %retval.0
}

; Function Attrs: norecurse nounwind uwtable
define void @BZ2_bzReadGetUnused(i32* %bzerror, i8* %b, i8** %unused, i32* %nUnused) local_unnamed_addr #0 {
entry:
  %cmp = icmp eq i8* %b, null
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %cmp1 = icmp eq i32* %bzerror, null
  br i1 %cmp1, label %cleanup, label %if.then2

if.then2:                                         ; preds = %if.then
  store i32 -2, i32* %bzerror, align 4, !tbaa !6
  br label %cleanup

if.end6:                                          ; preds = %entry
  %lastErr7 = getelementptr inbounds i8, i8* %b, i64 5096
  %0 = bitcast i8* %lastErr7 to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !127
  %cmp8 = icmp eq i32 %1, 4
  br i1 %cmp8, label %if.end17, label %if.then9

if.then9:                                         ; preds = %if.end6
  %cmp10 = icmp eq i32* %bzerror, null
  br i1 %cmp10, label %if.then14, label %if.then11

if.then11:                                        ; preds = %if.then9
  store i32 -1, i32* %bzerror, align 4, !tbaa !6
  br label %if.then14

if.then14:                                        ; preds = %if.then11, %if.then9
  store i32 -1, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end17:                                         ; preds = %if.end6
  %cmp18 = icmp eq i8** %unused, null
  %cmp19 = icmp eq i32* %nUnused, null
  %or.cond = or i1 %cmp18, %cmp19
  %cmp21 = icmp ne i32* %bzerror, null
  br i1 %or.cond, label %if.then20, label %if.end28

if.then20:                                        ; preds = %if.end17
  br i1 %cmp21, label %if.then22, label %if.then25

if.then22:                                        ; preds = %if.then20
  store i32 -2, i32* %bzerror, align 4, !tbaa !6
  br label %if.then25

if.then25:                                        ; preds = %if.then22, %if.then20
  store i32 -2, i32* %0, align 8, !tbaa !127
  br label %cleanup

if.end28:                                         ; preds = %if.end17
  br i1 %cmp21, label %if.then30, label %if.then33

if.then30:                                        ; preds = %if.end28
  store i32 0, i32* %bzerror, align 4, !tbaa !6
  br label %if.then33

if.then33:                                        ; preds = %if.then30, %if.end28
  store i32 0, i32* %0, align 8, !tbaa !127
  %strm = getelementptr inbounds i8, i8* %b, i64 5016
  %avail_in = getelementptr inbounds i8, i8* %b, i64 5024
  %2 = bitcast i8* %avail_in to i32*
  %3 = load i32, i32* %2, align 8, !tbaa !133
  store i32 %3, i32* %nUnused, align 4, !tbaa !6
  %4 = bitcast i8* %strm to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !134
  %6 = bitcast i8** %unused to i64*
  store i64 %5, i64* %6, align 8, !tbaa !18
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %if.then25, %if.then14, %if.then2, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzBuffToBuffCompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) local_unnamed_addr #1 {
entry:
  %strm = alloca %struct.bz_stream, align 8
  %0 = bitcast %struct.bz_stream* %strm to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #2
  %cmp = icmp eq i8* %dest, null
  %cmp1 = icmp eq i32* %destLen, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i8* %source, null
  %or.cond34 = or i1 %or.cond, %cmp3
  %blockSize100k.off = add i32 %blockSize100k, -1
  %1 = icmp ugt i32 %blockSize100k.off, 8
  %2 = or i1 %or.cond34, %1
  %3 = icmp ugt i32 %verbosity, 4
  %4 = or i1 %3, %2
  %5 = icmp ugt i32 %workFactor, 250
  %6 = or i1 %5, %4
  br i1 %6, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp16 = icmp eq i32 %workFactor, 0
  %spec.select = select i1 %cmp16, i32 30, i32 %workFactor
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 9
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %7 = bitcast i8* (i8*, i32, i32)** %bzalloc to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %7, i8 0, i64 24, i32 8, i1 false)
  %call = call i32 @BZ2_bzCompressInit(%struct.bz_stream* nonnull %strm, i32 %blockSize100k, i32 %verbosity, i32 %spec.select)
  %cmp19 = icmp eq i32 %call, 0
  br i1 %cmp19, label %if.end21, label %cleanup

if.end21:                                         ; preds = %if.end
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 0
  store i8* %source, i8** %next_in, align 8, !tbaa !102
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 4
  store i8* %dest, i8** %next_out, align 8, !tbaa !101
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 1
  store i32 %sourceLen, i32* %avail_in, align 8, !tbaa !98
  %8 = load i32, i32* %destLen, align 4, !tbaa !6
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 5
  store i32 %8, i32* %avail_out, align 8, !tbaa !100
  %state.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  %9 = bitcast i8** %state.i to %struct.EState**
  %10 = load %struct.EState*, %struct.EState** %9, align 8, !tbaa !87
  %cmp1.i = icmp eq %struct.EState* %10, null
  br i1 %cmp1.i, label %cleanup, label %if.end3.i

if.end3.i:                                        ; preds = %if.end21
  %strm4.i = getelementptr inbounds %struct.EState, %struct.EState* %10, i64 0, i32 0
  %11 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i, align 8, !tbaa !79
  %cmp5.i = icmp eq %struct.bz_stream* %11, %strm
  br i1 %cmp5.i, label %if.end7.i, label %if.end3.i98

if.end7.i:                                        ; preds = %if.end3.i
  %mode.i = getelementptr inbounds %struct.EState, %struct.EState* %10, i64 0, i32 1
  %avail_in_expect.i = getelementptr inbounds %struct.EState, %struct.EState* %10, i64 0, i32 3
  %.pre.i = load i32, i32* %mode.i, align 8, !tbaa !81
  br label %preswitch.us131.i

preswitch.us131.i:                                ; preds = %if.then18.us133.i, %if.end7.i
  %12 = phi i32 [ 4, %if.then18.us133.i ], [ %.pre.i, %if.end7.i ]
  switch i32 %12, label %if.end3.i98.loopexit [
    i32 1, label %if.end3.i98
    i32 2, label %if.then18.us133.i
    i32 3, label %if.end3.i98
    i32 4, label %sw.bb47.i
  ]

if.then18.us133.i:                                ; preds = %preswitch.us131.i
  store i32 %sourceLen, i32* %avail_in_expect.i, align 8, !tbaa !99
  store i32 4, i32* %mode.i, align 8, !tbaa !81
  br label %preswitch.us131.i

sw.bb47.i:                                        ; preds = %preswitch.us131.i
  %13 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %cmp55.i = icmp eq i32 %13, %sourceLen
  br i1 %cmp55.i, label %if.end58.i, label %if.end3.i98

if.end58.i:                                       ; preds = %sw.bb47.i
  %call59.i = call fastcc zeroext i8 @handle_compress(%struct.bz_stream* nonnull %strm) #2
  %tobool60.i = icmp eq i8 %call59.i, 0
  br i1 %tobool60.i, label %errhandler, label %if.end62.i

if.end62.i:                                       ; preds = %if.end58.i
  %14 = load i32, i32* %avail_in_expect.i, align 8, !tbaa !99
  %cmp64.i = icmp eq i32 %14, 0
  br i1 %cmp64.i, label %lor.lhs.false66.i, label %output_overflow

lor.lhs.false66.i:                                ; preds = %if.end62.i
  %state_in_ch.i111.i = getelementptr inbounds %struct.EState, %struct.EState* %10, i64 0, i32 13
  %15 = load i32, i32* %state_in_ch.i111.i, align 4, !tbaa !92
  %cmp.i112.i = icmp ult i32 %15, 256
  br i1 %cmp.i112.i, label %land.lhs.true.i115.i, label %lor.lhs.false69.i

land.lhs.true.i115.i:                             ; preds = %lor.lhs.false66.i
  %state_in_len.i113.i = getelementptr inbounds %struct.EState, %struct.EState* %10, i64 0, i32 14
  %16 = load i32, i32* %state_in_len.i113.i, align 8, !tbaa !93
  %cmp1.i114.i = icmp sgt i32 %16, 0
  br i1 %cmp1.i114.i, label %output_overflow, label %lor.lhs.false69.i

lor.lhs.false69.i:                                ; preds = %land.lhs.true.i115.i, %lor.lhs.false66.i
  %state_out_pos70.i = getelementptr inbounds %struct.EState, %struct.EState* %10, i64 0, i32 20
  %17 = load i32, i32* %state_out_pos70.i, align 8, !tbaa !95
  %numZ71.i = getelementptr inbounds %struct.EState, %struct.EState* %10, i64 0, i32 19
  %18 = load i32, i32* %numZ71.i, align 4, !tbaa !94
  %cmp72.i = icmp slt i32 %17, %18
  br i1 %cmp72.i, label %output_overflow, label %if.end28

if.end28:                                         ; preds = %lor.lhs.false69.i
  store i32 1, i32* %mode.i, align 8, !tbaa !81
  %19 = load i32, i32* %avail_out, align 8, !tbaa !100
  %20 = load i32, i32* %destLen, align 4, !tbaa !6
  %sub = sub i32 %20, %19
  store i32 %sub, i32* %destLen, align 4, !tbaa !6
  %21 = load %struct.EState*, %struct.EState** %9, align 8, !tbaa !87
  %cmp1.i58 = icmp eq %struct.EState* %21, null
  br i1 %cmp1.i58, label %cleanup, label %if.end3.i61

if.end3.i61:                                      ; preds = %if.end28
  %strm4.i59 = getelementptr inbounds %struct.EState, %struct.EState* %21, i64 0, i32 0
  %22 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i59, align 8, !tbaa !79
  %cmp5.i60 = icmp eq %struct.bz_stream* %22, %strm
  br i1 %cmp5.i60, label %if.end7.i62, label %cleanup

if.end7.i62:                                      ; preds = %if.end3.i61
  %arr1.i = getelementptr inbounds %struct.EState, %struct.EState* %21, i64 0, i32 4
  %23 = load i32*, i32** %arr1.i, align 8, !tbaa !31
  %cmp8.i = icmp eq i32* %23, null
  br i1 %cmp8.i, label %if.end11.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end7.i62
  %24 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %25 = load i8*, i8** %opaque, align 8, !tbaa !78
  %26 = bitcast i32* %23 to i8*
  call void %24(i8* %25, i8* %26) #2
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i, %if.end7.i62
  %arr2.i = getelementptr inbounds %struct.EState, %struct.EState* %21, i64 0, i32 5
  %27 = load i32*, i32** %arr2.i, align 8, !tbaa !32
  %cmp12.i = icmp eq i32* %27, null
  br i1 %cmp12.i, label %if.end17.i, label %if.then13.i

if.then13.i:                                      ; preds = %if.end11.i
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %29 = load i8*, i8** %opaque, align 8, !tbaa !78
  %30 = bitcast i32* %27 to i8*
  call void %28(i8* %29, i8* %30) #2
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i
  %ftab.i = getelementptr inbounds %struct.EState, %struct.EState* %21, i64 0, i32 6
  %31 = load i32*, i32** %ftab.i, align 8, !tbaa !27
  %cmp18.i = icmp eq i32* %31, null
  br i1 %cmp18.i, label %if.end23.i, label %if.then19.i

if.then19.i:                                      ; preds = %if.end17.i
  %32 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %33 = load i8*, i8** %opaque, align 8, !tbaa !78
  %34 = bitcast i32* %31 to i8*
  call void %32(i8* %33, i8* %34) #2
  br label %if.end23.i

if.end23.i:                                       ; preds = %if.then19.i, %if.end17.i
  %35 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %36 = load i8*, i8** %opaque, align 8, !tbaa !78
  %37 = load i8*, i8** %state.i, align 8, !tbaa !87
  call void %35(i8* %36, i8* %37) #2
  store i8* null, i8** %state.i, align 8, !tbaa !87
  br label %cleanup

output_overflow:                                  ; preds = %lor.lhs.false69.i, %land.lhs.true.i115.i, %if.end62.i
  %38 = load %struct.EState*, %struct.EState** %9, align 8, !tbaa !87
  %cmp1.i66 = icmp eq %struct.EState* %38, null
  br i1 %cmp1.i66, label %cleanup, label %if.end3.i69

if.end3.i69:                                      ; preds = %output_overflow
  %strm4.i67 = getelementptr inbounds %struct.EState, %struct.EState* %38, i64 0, i32 0
  %39 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i67, align 8, !tbaa !79
  %cmp5.i68 = icmp eq %struct.bz_stream* %39, %strm
  br i1 %cmp5.i68, label %if.end7.i72, label %cleanup

if.end7.i72:                                      ; preds = %if.end3.i69
  %arr1.i70 = getelementptr inbounds %struct.EState, %struct.EState* %38, i64 0, i32 4
  %40 = load i32*, i32** %arr1.i70, align 8, !tbaa !31
  %cmp8.i71 = icmp eq i32* %40, null
  br i1 %cmp8.i71, label %if.end11.i78, label %if.then9.i75

if.then9.i75:                                     ; preds = %if.end7.i72
  %41 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %42 = load i8*, i8** %opaque, align 8, !tbaa !78
  %43 = bitcast i32* %40 to i8*
  call void %41(i8* %42, i8* %43) #2
  br label %if.end11.i78

if.end11.i78:                                     ; preds = %if.then9.i75, %if.end7.i72
  %arr2.i76 = getelementptr inbounds %struct.EState, %struct.EState* %38, i64 0, i32 5
  %44 = load i32*, i32** %arr2.i76, align 8, !tbaa !32
  %cmp12.i77 = icmp eq i32* %44, null
  br i1 %cmp12.i77, label %if.end17.i85, label %if.then13.i81

if.then13.i81:                                    ; preds = %if.end11.i78
  %45 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %46 = load i8*, i8** %opaque, align 8, !tbaa !78
  %47 = bitcast i32* %44 to i8*
  call void %45(i8* %46, i8* %47) #2
  br label %if.end17.i85

if.end17.i85:                                     ; preds = %if.then13.i81, %if.end11.i78
  %ftab.i82 = getelementptr inbounds %struct.EState, %struct.EState* %38, i64 0, i32 6
  %48 = load i32*, i32** %ftab.i82, align 8, !tbaa !27
  %cmp18.i83 = icmp eq i32* %48, null
  br i1 %cmp18.i83, label %if.end23.i91, label %if.then19.i89

if.then19.i89:                                    ; preds = %if.end17.i85
  %49 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %50 = load i8*, i8** %opaque, align 8, !tbaa !78
  %51 = bitcast i32* %48 to i8*
  call void %49(i8* %50, i8* %51) #2
  br label %if.end23.i91

if.end23.i91:                                     ; preds = %if.then19.i89, %if.end17.i85
  %52 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %53 = load i8*, i8** %opaque, align 8, !tbaa !78
  %54 = load i8*, i8** %state.i, align 8, !tbaa !87
  call void %52(i8* %53, i8* %54) #2
  store i8* null, i8** %state.i, align 8, !tbaa !87
  br label %cleanup

errhandler:                                       ; preds = %if.end58.i
  %.pr.pre = load %struct.EState*, %struct.EState** %9, align 8, !tbaa !87
  %cmp1.i95 = icmp eq %struct.EState* %.pr.pre, null
  br i1 %cmp1.i95, label %cleanup, label %if.end3.i98

if.end3.i98.loopexit:                             ; preds = %preswitch.us131.i
  br label %if.end3.i98

if.end3.i98:                                      ; preds = %if.end3.i98.loopexit, %errhandler, %sw.bb47.i, %preswitch.us131.i, %preswitch.us131.i, %if.end3.i
  %retval.0.i.ph.ph132 = phi i32 [ -1, %errhandler ], [ -1, %sw.bb47.i ], [ -2, %if.end3.i ], [ 0, %if.end3.i98.loopexit ], [ -1, %preswitch.us131.i ], [ -1, %preswitch.us131.i ]
  %.pr131 = phi %struct.EState* [ %.pr.pre, %errhandler ], [ %10, %sw.bb47.i ], [ %10, %if.end3.i ], [ %10, %if.end3.i98.loopexit ], [ %10, %preswitch.us131.i ], [ %10, %preswitch.us131.i ]
  %strm4.i96 = getelementptr inbounds %struct.EState, %struct.EState* %.pr131, i64 0, i32 0
  %55 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i96, align 8, !tbaa !79
  %cmp5.i97 = icmp eq %struct.bz_stream* %55, %strm
  br i1 %cmp5.i97, label %if.end7.i101, label %cleanup

if.end7.i101:                                     ; preds = %if.end3.i98
  %arr1.i99 = getelementptr inbounds %struct.EState, %struct.EState* %.pr131, i64 0, i32 4
  %56 = load i32*, i32** %arr1.i99, align 8, !tbaa !31
  %cmp8.i100 = icmp eq i32* %56, null
  br i1 %cmp8.i100, label %if.end11.i107, label %if.then9.i104

if.then9.i104:                                    ; preds = %if.end7.i101
  %57 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %58 = load i8*, i8** %opaque, align 8, !tbaa !78
  %59 = bitcast i32* %56 to i8*
  call void %57(i8* %58, i8* %59) #2
  br label %if.end11.i107

if.end11.i107:                                    ; preds = %if.then9.i104, %if.end7.i101
  %arr2.i105 = getelementptr inbounds %struct.EState, %struct.EState* %.pr131, i64 0, i32 5
  %60 = load i32*, i32** %arr2.i105, align 8, !tbaa !32
  %cmp12.i106 = icmp eq i32* %60, null
  br i1 %cmp12.i106, label %if.end17.i114, label %if.then13.i110

if.then13.i110:                                   ; preds = %if.end11.i107
  %61 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %62 = load i8*, i8** %opaque, align 8, !tbaa !78
  %63 = bitcast i32* %60 to i8*
  call void %61(i8* %62, i8* %63) #2
  br label %if.end17.i114

if.end17.i114:                                    ; preds = %if.then13.i110, %if.end11.i107
  %ftab.i111 = getelementptr inbounds %struct.EState, %struct.EState* %.pr131, i64 0, i32 6
  %64 = load i32*, i32** %ftab.i111, align 8, !tbaa !27
  %cmp18.i112 = icmp eq i32* %64, null
  br i1 %cmp18.i112, label %if.end23.i120, label %if.then19.i118

if.then19.i118:                                   ; preds = %if.end17.i114
  %65 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %66 = load i8*, i8** %opaque, align 8, !tbaa !78
  %67 = bitcast i32* %64 to i8*
  call void %65(i8* %66, i8* %67) #2
  br label %if.end23.i120

if.end23.i120:                                    ; preds = %if.then19.i118, %if.end17.i114
  %68 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %69 = load i8*, i8** %opaque, align 8, !tbaa !78
  %70 = load i8*, i8** %state.i, align 8, !tbaa !87
  call void %68(i8* %69, i8* %70) #2
  store i8* null, i8** %state.i, align 8, !tbaa !87
  br label %cleanup

cleanup:                                          ; preds = %if.end23.i120, %if.end3.i98, %errhandler, %if.end23.i91, %if.end3.i69, %output_overflow, %if.end23.i, %if.end3.i61, %if.end28, %if.end21, %if.end, %entry
  %retval.0 = phi i32 [ -2, %entry ], [ %call, %if.end ], [ 0, %if.end28 ], [ 0, %if.end3.i61 ], [ 0, %if.end23.i ], [ -8, %output_overflow ], [ -8, %if.end3.i69 ], [ -8, %if.end23.i91 ], [ -1, %errhandler ], [ %retval.0.i.ph.ph132, %if.end3.i98 ], [ %retval.0.i.ph.ph132, %if.end23.i120 ], [ -2, %if.end21 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #2
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzBuffToBuffDecompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %small, i32 %verbosity) local_unnamed_addr #1 {
entry:
  %strm = alloca %struct.bz_stream, align 8
  %0 = bitcast %struct.bz_stream* %strm to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #2
  %cmp = icmp eq i8* %dest, null
  %cmp1 = icmp eq i32* %destLen, null
  %or.cond = or i1 %cmp, %cmp1
  %cmp3 = icmp eq i8* %source, null
  %or.cond30 = or i1 %or.cond, %cmp3
  br i1 %or.cond30, label %cleanup, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %entry
  %1 = icmp ugt i32 %small, 1
  %2 = icmp ugt i32 %verbosity, 4
  %3 = or i1 %1, %2
  br i1 %3, label %cleanup, label %if.end18.i

if.end18.i:                                       ; preds = %lor.lhs.false4
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 9
  %bzfree = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 10
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 11
  %4 = getelementptr inbounds i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, i64 2
  %5 = bitcast i8* (i8*, i32, i32)** %4 to i64*
  store i64 0, i64* %5, align 8
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %call.i = tail call noalias i8* @malloc(i64 64144) #2
  %cmp21.i = icmp eq i8* %call.i, null
  br i1 %cmp21.i, label %cleanup, label %if.end13

if.end13:                                         ; preds = %if.end18.i
  %strm24.i = bitcast i8* %call.i to %struct.bz_stream**
  store %struct.bz_stream* %strm, %struct.bz_stream** %strm24.i, align 8, !tbaa !103
  %state.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 8
  store i8* %call.i, i8** %state.i, align 8, !tbaa !87
  %state25.i = getelementptr inbounds i8, i8* %call.i, i64 8
  %6 = bitcast i8* %state25.i to i32*
  store i32 10, i32* %6, align 8, !tbaa !105
  %bsLive.i = getelementptr inbounds i8, i8* %call.i, i64 36
  %7 = bitcast i8* %bsLive.i to i32*
  store i32 0, i32* %7, align 4, !tbaa !106
  %bsBuff.i = getelementptr inbounds i8, i8* %call.i, i64 32
  %8 = bitcast i8* %bsBuff.i to i32*
  store i32 0, i32* %8, align 8, !tbaa !107
  %calculatedCombinedCRC.i = getelementptr inbounds i8, i8* %call.i, i64 3188
  %9 = bitcast i8* %calculatedCombinedCRC.i to i32*
  store i32 0, i32* %9, align 4, !tbaa !108
  %total_in_lo32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 2
  store i32 0, i32* %total_in_lo32.i, align 4, !tbaa !88
  %total_in_hi32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 3
  store i32 0, i32* %total_in_hi32.i, align 8, !tbaa !89
  %total_out_lo32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 6
  store i32 0, i32* %total_out_lo32.i, align 4, !tbaa !90
  %total_out_hi32.i = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 7
  store i32 0, i32* %total_out_hi32.i, align 8, !tbaa !91
  %conv.i = trunc i32 %small to i8
  %10 = getelementptr inbounds i8, i8* %call.i, i64 44
  store i8 %conv.i, i8* %10, align 4, !tbaa !109
  %tt.i = getelementptr inbounds i8, i8* %call.i, i64 3152
  %currBlockNo.i = getelementptr inbounds i8, i8* %call.i, i64 48
  %11 = bitcast i8* %currBlockNo.i to i32*
  store i32 0, i32* %11, align 8, !tbaa !110
  %verbosity26.i = getelementptr inbounds i8, i8* %call.i, i64 52
  %12 = bitcast i8* %verbosity26.i to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull %tt.i, i8 0, i64 24, i32 8, i1 false) #2
  store i32 %verbosity, i32* %12, align 4, !tbaa !111
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 0
  store i8* %source, i8** %next_in, align 8, !tbaa !102
  %next_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 4
  store i8* %dest, i8** %next_out, align 8, !tbaa !101
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 1
  store i32 %sourceLen, i32* %avail_in, align 8, !tbaa !98
  %13 = load i32, i32* %destLen, align 4, !tbaa !6
  %avail_out = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %strm, i64 0, i32 5
  store i32 %13, i32* %avail_out, align 8, !tbaa !100
  %call14 = call i32 @BZ2_bzDecompress(%struct.bz_stream* nonnull %strm)
  switch i32 %call14, label %errhandler [
    i32 0, label %output_overflow_or_eof
    i32 4, label %if.end20
  ]

if.end20:                                         ; preds = %if.end13
  %14 = load i32, i32* %avail_out, align 8, !tbaa !100
  %15 = load i32, i32* %destLen, align 4, !tbaa !6
  %sub = sub i32 %15, %14
  store i32 %sub, i32* %destLen, align 4, !tbaa !6
  %16 = bitcast i8** %state.i to %struct.DState**
  %17 = load %struct.DState*, %struct.DState** %16, align 8, !tbaa !87
  %cmp1.i = icmp eq %struct.DState* %17, null
  br i1 %cmp1.i, label %cleanup, label %if.end3.i

if.end3.i:                                        ; preds = %if.end20
  %strm4.i = getelementptr inbounds %struct.DState, %struct.DState* %17, i64 0, i32 0
  %18 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i, align 8, !tbaa !103
  %cmp5.i = icmp eq %struct.bz_stream* %18, %strm
  br i1 %cmp5.i, label %if.end7.i, label %cleanup

if.end7.i:                                        ; preds = %if.end3.i
  %tt.i48 = getelementptr inbounds %struct.DState, %struct.DState* %17, i64 0, i32 20
  %19 = load i32*, i32** %tt.i48, align 8, !tbaa !124
  %cmp8.i = icmp eq i32* %19, null
  br i1 %cmp8.i, label %if.end11.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end7.i
  %20 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %21 = load i8*, i8** %opaque, align 8, !tbaa !78
  %22 = bitcast i32* %19 to i8*
  call void %20(i8* %21, i8* %22) #2
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then9.i, %if.end7.i
  %ll16.i = getelementptr inbounds %struct.DState, %struct.DState* %17, i64 0, i32 21
  %23 = load i16*, i16** %ll16.i, align 8, !tbaa !120
  %cmp12.i = icmp eq i16* %23, null
  br i1 %cmp12.i, label %if.end17.i, label %if.then13.i

if.then13.i:                                      ; preds = %if.end11.i
  %24 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %25 = load i8*, i8** %opaque, align 8, !tbaa !78
  %26 = bitcast i16* %23 to i8*
  call void %24(i8* %25, i8* %26) #2
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i
  %ll4.i = getelementptr inbounds %struct.DState, %struct.DState* %17, i64 0, i32 22
  %27 = load i8*, i8** %ll4.i, align 8, !tbaa !121
  %cmp18.i = icmp eq i8* %27, null
  br i1 %cmp18.i, label %if.end23.i51, label %if.then19.i

if.then19.i:                                      ; preds = %if.end17.i
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %29 = load i8*, i8** %opaque, align 8, !tbaa !78
  call void %28(i8* %29, i8* nonnull %27) #2
  br label %if.end23.i51

if.end23.i51:                                     ; preds = %if.then19.i, %if.end17.i
  %30 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %31 = load i8*, i8** %opaque, align 8, !tbaa !78
  %32 = load i8*, i8** %state.i, align 8, !tbaa !87
  call void %30(i8* %31, i8* %32) #2
  store i8* null, i8** %state.i, align 8, !tbaa !87
  br label %cleanup

output_overflow_or_eof:                           ; preds = %if.end13
  %33 = load i32, i32* %avail_out, align 8, !tbaa !100
  %cmp24 = icmp eq i32 %33, 0
  %34 = bitcast i8** %state.i to %struct.DState**
  %35 = load %struct.DState*, %struct.DState** %34, align 8, !tbaa !87
  %cmp1.i54 = icmp eq %struct.DState* %35, null
  br i1 %cmp1.i54, label %BZ2_bzDecompressEnd.exit81, label %if.end3.i57

if.end3.i57:                                      ; preds = %output_overflow_or_eof
  %strm4.i55 = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 0
  %36 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i55, align 8, !tbaa !103
  %cmp5.i56 = icmp eq %struct.bz_stream* %36, %strm
  br i1 %cmp5.i56, label %if.end7.i60, label %BZ2_bzDecompressEnd.exit81

if.end7.i60:                                      ; preds = %if.end3.i57
  %tt.i58 = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 20
  %37 = load i32*, i32** %tt.i58, align 8, !tbaa !124
  %cmp8.i59 = icmp eq i32* %37, null
  br i1 %cmp8.i59, label %if.end11.i66, label %if.then9.i63

if.then9.i63:                                     ; preds = %if.end7.i60
  %38 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %39 = load i8*, i8** %opaque, align 8, !tbaa !78
  %40 = bitcast i32* %37 to i8*
  call void %38(i8* %39, i8* %40) #2
  br label %if.end11.i66

if.end11.i66:                                     ; preds = %if.then9.i63, %if.end7.i60
  %ll16.i64 = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 21
  %41 = load i16*, i16** %ll16.i64, align 8, !tbaa !120
  %cmp12.i65 = icmp eq i16* %41, null
  br i1 %cmp12.i65, label %if.end17.i73, label %if.then13.i69

if.then13.i69:                                    ; preds = %if.end11.i66
  %42 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %43 = load i8*, i8** %opaque, align 8, !tbaa !78
  %44 = bitcast i16* %41 to i8*
  call void %42(i8* %43, i8* %44) #2
  br label %if.end17.i73

if.end17.i73:                                     ; preds = %if.then13.i69, %if.end11.i66
  %ll4.i70 = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 22
  %45 = load i8*, i8** %ll4.i70, align 8, !tbaa !121
  %cmp18.i71 = icmp eq i8* %45, null
  br i1 %cmp18.i71, label %if.end23.i79, label %if.then19.i77

if.then19.i77:                                    ; preds = %if.end17.i73
  %46 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %47 = load i8*, i8** %opaque, align 8, !tbaa !78
  call void %46(i8* %47, i8* nonnull %45) #2
  br label %if.end23.i79

if.end23.i79:                                     ; preds = %if.then19.i77, %if.end17.i73
  %48 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %49 = load i8*, i8** %opaque, align 8, !tbaa !78
  %50 = load i8*, i8** %state.i, align 8, !tbaa !87
  call void %48(i8* %49, i8* %50) #2
  store i8* null, i8** %state.i, align 8, !tbaa !87
  br label %BZ2_bzDecompressEnd.exit81

BZ2_bzDecompressEnd.exit81:                       ; preds = %if.end23.i79, %if.end3.i57, %output_overflow_or_eof
  %. = select i1 %cmp24, i32 -8, i32 -7
  br label %cleanup

errhandler:                                       ; preds = %if.end13
  %51 = bitcast i8** %state.i to %struct.DState**
  %52 = load %struct.DState*, %struct.DState** %51, align 8, !tbaa !87
  %cmp1.i83 = icmp eq %struct.DState* %52, null
  br i1 %cmp1.i83, label %cleanup, label %if.end3.i86

if.end3.i86:                                      ; preds = %errhandler
  %strm4.i84 = getelementptr inbounds %struct.DState, %struct.DState* %52, i64 0, i32 0
  %53 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i84, align 8, !tbaa !103
  %cmp5.i85 = icmp eq %struct.bz_stream* %53, %strm
  br i1 %cmp5.i85, label %if.end7.i89, label %cleanup

if.end7.i89:                                      ; preds = %if.end3.i86
  %tt.i87 = getelementptr inbounds %struct.DState, %struct.DState* %52, i64 0, i32 20
  %54 = load i32*, i32** %tt.i87, align 8, !tbaa !124
  %cmp8.i88 = icmp eq i32* %54, null
  br i1 %cmp8.i88, label %if.end11.i95, label %if.then9.i92

if.then9.i92:                                     ; preds = %if.end7.i89
  %55 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %56 = load i8*, i8** %opaque, align 8, !tbaa !78
  %57 = bitcast i32* %54 to i8*
  call void %55(i8* %56, i8* %57) #2
  br label %if.end11.i95

if.end11.i95:                                     ; preds = %if.then9.i92, %if.end7.i89
  %ll16.i93 = getelementptr inbounds %struct.DState, %struct.DState* %52, i64 0, i32 21
  %58 = load i16*, i16** %ll16.i93, align 8, !tbaa !120
  %cmp12.i94 = icmp eq i16* %58, null
  br i1 %cmp12.i94, label %if.end17.i102, label %if.then13.i98

if.then13.i98:                                    ; preds = %if.end11.i95
  %59 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %60 = load i8*, i8** %opaque, align 8, !tbaa !78
  %61 = bitcast i16* %58 to i8*
  call void %59(i8* %60, i8* %61) #2
  br label %if.end17.i102

if.end17.i102:                                    ; preds = %if.then13.i98, %if.end11.i95
  %ll4.i99 = getelementptr inbounds %struct.DState, %struct.DState* %52, i64 0, i32 22
  %62 = load i8*, i8** %ll4.i99, align 8, !tbaa !121
  %cmp18.i100 = icmp eq i8* %62, null
  br i1 %cmp18.i100, label %if.end23.i108, label %if.then19.i106

if.then19.i106:                                   ; preds = %if.end17.i102
  %63 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %64 = load i8*, i8** %opaque, align 8, !tbaa !78
  call void %63(i8* %64, i8* nonnull %62) #2
  br label %if.end23.i108

if.end23.i108:                                    ; preds = %if.then19.i106, %if.end17.i102
  %65 = load void (i8*, i8*)*, void (i8*, i8*)** %bzfree, align 8, !tbaa !77
  %66 = load i8*, i8** %opaque, align 8, !tbaa !78
  %67 = load i8*, i8** %state.i, align 8, !tbaa !87
  call void %65(i8* %66, i8* %67) #2
  store i8* null, i8** %state.i, align 8, !tbaa !87
  br label %cleanup

cleanup:                                          ; preds = %if.end23.i108, %if.end3.i86, %errhandler, %BZ2_bzDecompressEnd.exit81, %if.end23.i51, %if.end3.i, %if.end20, %if.end18.i, %lor.lhs.false4, %entry
  %retval.0 = phi i32 [ -2, %lor.lhs.false4 ], [ -2, %entry ], [ %., %BZ2_bzDecompressEnd.exit81 ], [ -3, %if.end18.i ], [ 0, %if.end20 ], [ 0, %if.end3.i ], [ 0, %if.end23.i51 ], [ %call14, %errhandler ], [ %call14, %if.end3.i86 ], [ %call14, %if.end23.i108 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #2
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzopen(i8* readonly %path, i8* readonly %mode) local_unnamed_addr #1 {
entry:
  %call = tail call fastcc i8* @bzopen_or_bzdopen(i8* %path, i8* %mode, i32 0)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @bzopen_or_bzdopen(i8* readonly %path, i8* readonly %mode, i32 %open_mode) unnamed_addr #1 {
entry:
  %mode2 = alloca [10 x i8], align 1
  %0 = getelementptr inbounds [10 x i8], [10 x i8]* %mode2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %0) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull %0, i8 0, i64 10, i32 1, i1 false)
  %cmp = icmp eq i8* %mode, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %mode, align 1, !tbaa !12
  %tobool6 = icmp eq i8 %1, 0
  br i1 %tobool6, label %while.end, label %while.body.preheader

while.body.preheader:                             ; preds = %if.end
  br label %while.body

while.body:                                       ; preds = %sw.epilog, %while.body.preheader
  %2 = phi i8 [ %6, %sw.epilog ], [ %1, %while.body.preheader ]
  %mode.addr.010 = phi i8* [ %incdec.ptr, %sw.epilog ], [ %mode, %while.body.preheader ]
  %blockSize100k.09 = phi i32 [ %blockSize100k.1, %sw.epilog ], [ 9, %while.body.preheader ]
  %writing.08 = phi i32 [ %writing.1, %sw.epilog ], [ 0, %while.body.preheader ]
  %conv = sext i8 %2 to i32
  switch i32 %conv, label %sw.default [
    i32 114, label %sw.epilog
    i32 119, label %sw.bb1
    i32 115, label %sw.bb2
  ]

sw.bb1:                                           ; preds = %while.body
  br label %sw.epilog

sw.bb2:                                           ; preds = %while.body
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %call = tail call i16** @__ctype_b_loc() #14
  %3 = load i16*, i16** %call, align 8, !tbaa !18
  %idxprom = sext i8 %2 to i64
  %arrayidx = getelementptr inbounds i16, i16* %3, i64 %idxprom
  %4 = load i16, i16* %arrayidx, align 2, !tbaa !33
  %5 = and i16 %4, 2048
  %tobool5 = icmp eq i16 %5, 0
  %sub = add nsw i32 %conv, -48
  %spec.select = select i1 %tobool5, i32 %blockSize100k.09, i32 %sub
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %while.body
  %writing.1 = phi i32 [ %writing.08, %sw.bb2 ], [ 1, %sw.bb1 ], [ 0, %while.body ], [ %writing.08, %sw.default ]
  %blockSize100k.1 = phi i32 [ %blockSize100k.09, %sw.bb2 ], [ %blockSize100k.09, %sw.bb1 ], [ %blockSize100k.09, %while.body ], [ %spec.select, %sw.default ]
  %incdec.ptr = getelementptr inbounds i8, i8* %mode.addr.010, i64 1
  %6 = load i8, i8* %incdec.ptr, align 1, !tbaa !12
  %tobool = icmp eq i8 %6, 0
  br i1 %tobool, label %while.end, label %while.body

while.end:                                        ; preds = %sw.epilog, %if.end
  %writing.0.lcssa = phi i32 [ 0, %if.end ], [ %writing.1, %sw.epilog ]
  %blockSize100k.0.lcssa = phi i32 [ 9, %if.end ], [ %blockSize100k.1, %sw.epilog ]
  %tobool9 = icmp ne i32 %writing.0.lcssa, 0
  %strlen = call i64 @strlen(i8* nonnull %0)
  %endptr = getelementptr [10 x i8], [10 x i8]* %mode2, i64 0, i64 %strlen
  %7 = bitcast i8* %endptr to i16*
  %8 = select i1 %tobool9, i16 119, i16 114
  store i16 %8, i16* %7, align 1
  %strlen1 = call i64 @strlen(i8* nonnull %0)
  %endptr2 = getelementptr [10 x i8], [10 x i8]* %mode2, i64 0, i64 %strlen1
  %9 = bitcast i8* %endptr2 to i16*
  store i16 98, i16* %9, align 1
  %cmp13 = icmp eq i32 %open_mode, 0
  br i1 %cmp13, label %if.then15, label %cleanup

if.then15:                                        ; preds = %while.end
  %cmp16 = icmp eq i8* %path, null
  br i1 %cmp16, label %if.end68, label %if.end56

if.end56:                                         ; preds = %if.then15
  %10 = load i8, i8* %path, align 1, !tbaa !12
  %phitmp = icmp eq i8 %10, 0
  br i1 %phitmp, label %if.end68, label %cleanup

if.end68:                                         ; preds = %if.end56, %if.then15
  %cond65 = zext i1 %tobool9 to i32
  br i1 %tobool9, label %if.then74, label %cleanup

if.then74:                                        ; preds = %if.end68
  %11 = icmp sgt i32 %blockSize100k.0.lcssa, 1
  %spec.select4 = select i1 %11, i32 %blockSize100k.0.lcssa, i32 1
  %12 = icmp slt i32 %spec.select4, 9
  %blockSize100k.3 = select i1 %12, i32 %spec.select4, i32 9
  %blockSize100k.off.i = add nsw i32 %blockSize100k.3, -1
  %13 = icmp ugt i32 %blockSize100k.off.i, 8
  br i1 %13, label %cleanup, label %if.end24.i

if.end24.i:                                       ; preds = %if.then74
  %call.i = tail call noalias i8* @malloc(i64 5104) #2
  %cmp25.i = icmp eq i8* %call.i, null
  br i1 %cmp25.i, label %cleanup, label %if.end34.i

if.end34.i:                                       ; preds = %if.end24.i
  %lastErr40.i = getelementptr inbounds i8, i8* %call.i, i64 5096
  %14 = bitcast i8* %lastErr40.i to i32*
  store i32 0, i32* %14, align 8, !tbaa !127
  %15 = getelementptr inbounds i8, i8* %call.i, i64 5100
  store i8 0, i8* %15, align 4, !tbaa !129
  %bufN.i = getelementptr inbounds i8, i8* %call.i, i64 5004
  %16 = bitcast i8* %bufN.i to i32*
  store i32 0, i32* %16, align 4, !tbaa !130
  %handle.i = bitcast i8* %call.i to i32*
  store i32 %cond65, i32* %handle.i, align 8, !tbaa !131
  %17 = getelementptr inbounds i8, i8* %call.i, i64 5008
  store i8 1, i8* %17, align 8, !tbaa !132
  %strm.i = getelementptr inbounds i8, i8* %call.i, i64 5016
  %18 = bitcast i8* %strm.i to %struct.bz_stream*
  %bzalloc.i = getelementptr inbounds i8, i8* %call.i, i64 5072
  tail call void @llvm.memset.p0i8.i64(i8* nonnull %bzalloc.i, i8 0, i64 24, i32 8, i1 false) #2
  %call48.i = tail call i32 @BZ2_bzCompressInit(%struct.bz_stream* nonnull %18, i32 %blockSize100k.3, i32 0, i32 30) #2
  %cmp49.i = icmp eq i32 %call48.i, 0
  br i1 %cmp49.i, label %if.end58.i, label %if.then50.i

if.then50.i:                                      ; preds = %if.end34.i
  tail call void @free(i8* nonnull %call.i) #2
  br label %cleanup

if.end58.i:                                       ; preds = %if.end34.i
  %avail_in.i = getelementptr inbounds i8, i8* %call.i, i64 5024
  %19 = bitcast i8* %avail_in.i to i32*
  store i32 0, i32* %19, align 8, !tbaa !133
  store i8 1, i8* %15, align 4, !tbaa !129
  br label %cleanup

cleanup:                                          ; preds = %if.end58.i, %if.then50.i, %if.end24.i, %if.then74, %if.end68, %if.end56, %while.end, %entry
  %retval.0 = phi i8* [ null, %entry ], [ null, %if.end68 ], [ null, %if.end56 ], [ null, %while.end ], [ null, %if.then50.i ], [ %call.i, %if.end58.i ], [ null, %if.then74 ], [ null, %if.end24.i ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %0) #2
  ret i8* %retval.0
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind readonly uwtable
define noalias i8* @BZ2_bzdopen(i32 %fd, i8* readonly %mode) local_unnamed_addr #12 {
entry:
  %mode2.i = alloca [10 x i8], align 1
  %0 = getelementptr inbounds [10 x i8], [10 x i8]* %mode2.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %0) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull %0, i8 0, i64 10, i32 1, i1 false) #2
  %cmp.i = icmp eq i8* %mode, null
  br i1 %cmp.i, label %bzopen_or_bzdopen.exit, label %if.end.i

if.end.i:                                         ; preds = %entry
  %1 = load i8, i8* %mode, align 1, !tbaa !12
  %tobool6.i = icmp eq i8 %1, 0
  br i1 %tobool6.i, label %while.end.i.thread, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %if.end.i
  br label %while.body.i

while.end.i.thread:                               ; preds = %if.end.i
  %strlen.i2 = call i64 @strlen(i8* nonnull %0) #2
  br label %4

while.body.i:                                     ; preds = %sw.epilog.i, %while.body.i.preheader
  %2 = phi i8 [ %3, %sw.epilog.i ], [ %1, %while.body.i.preheader ]
  %mode.addr.010.i = phi i8* [ %incdec.ptr.i, %sw.epilog.i ], [ %mode, %while.body.i.preheader ]
  %writing.08.i = phi i32 [ %writing.1.i, %sw.epilog.i ], [ 0, %while.body.i.preheader ]
  %conv.i = sext i8 %2 to i32
  switch i32 %conv.i, label %sw.default.i [
    i32 114, label %sw.epilog.i
    i32 119, label %sw.bb1.i
    i32 115, label %sw.bb2.i
  ]

sw.bb1.i:                                         ; preds = %while.body.i
  br label %sw.epilog.i

sw.bb2.i:                                         ; preds = %while.body.i
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %while.body.i
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.default.i, %sw.bb2.i, %sw.bb1.i, %while.body.i
  %writing.1.i = phi i32 [ %writing.08.i, %sw.bb2.i ], [ 1, %sw.bb1.i ], [ 0, %while.body.i ], [ %writing.08.i, %sw.default.i ]
  %incdec.ptr.i = getelementptr inbounds i8, i8* %mode.addr.010.i, i64 1
  %3 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !12
  %tobool.i = icmp eq i8 %3, 0
  br i1 %tobool.i, label %while.end.i, label %while.body.i

while.end.i:                                      ; preds = %sw.epilog.i
  %tobool9.i = icmp eq i32 %writing.1.i, 0
  %strlen.i = call i64 @strlen(i8* nonnull %0) #2
  %spec.select = select i1 %tobool9.i, i16 114, i16 119
  br label %4

; <label>:4:                                      ; preds = %while.end.i, %while.end.i.thread
  %strlen.i2.pn = phi i64 [ %strlen.i2, %while.end.i.thread ], [ %strlen.i, %while.end.i ]
  %5 = phi i16 [ 114, %while.end.i.thread ], [ %spec.select, %while.end.i ]
  %.in = getelementptr [10 x i8], [10 x i8]* %mode2.i, i64 0, i64 %strlen.i2.pn
  %6 = bitcast i8* %.in to i16*
  store i16 %5, i16* %6, align 1
  %strlen1.i = call i64 @strlen(i8* nonnull %0) #2
  %endptr2.i = getelementptr [10 x i8], [10 x i8]* %mode2.i, i64 0, i64 %strlen1.i
  %7 = bitcast i8* %endptr2.i to i16*
  store i16 98, i16* %7, align 1
  br label %bzopen_or_bzdopen.exit

bzopen_or_bzdopen.exit:                           ; preds = %4, %entry
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %0) #2
  ret i8* null
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzread(i8* %b, i8* %buf, i32 %len) local_unnamed_addr #1 {
entry:
  %bzerr = alloca i32, align 4
  %0 = bitcast i32* %bzerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %lastErr = getelementptr inbounds i8, i8* %b, i64 5096
  %1 = bitcast i8* %lastErr to i32*
  %2 = load i32, i32* %1, align 8, !tbaa !127
  %cmp = icmp eq i32 %2, 4
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i32 @BZ2_bzRead(i32* nonnull %bzerr, i8* nonnull %b, i8* %buf, i32 %len)
  %3 = load i32, i32* %bzerr, align 4, !tbaa !6
  %4 = or i32 %3, 4
  %5 = icmp eq i32 %4, 4
  %call. = select i1 %5, i32 %call, i32 -1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %call., %if.end ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzwrite(i8* %b, i8* %buf, i32 %len) local_unnamed_addr #1 {
entry:
  %bzerr = alloca i32, align 4
  %0 = bitcast i32* %bzerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  call void @BZ2_bzWrite(i32* nonnull %bzerr, i8* %b, i8* %buf, i32 %len)
  %1 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp = icmp eq i32 %1, 0
  %len. = select i1 %cmp, i32 %len, i32 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  ret i32 %len.
}

; Function Attrs: norecurse nounwind readnone uwtable
define i32 @BZ2_bzflush(i8* nocapture readnone %b) local_unnamed_addr #8 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzclose(i8* %b) local_unnamed_addr #1 {
entry:
  %bzerr = alloca i32, align 4
  %0 = bitcast i32* %bzerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %cmp = icmp eq i8* %b, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds i8, i8* %b, i64 5008
  %2 = load i8, i8* %1, align 8, !tbaa !132
  %tobool = icmp eq i8 %2, 0
  br i1 %tobool, label %if.end22.i, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @BZ2_bzWriteClose64(i32* nonnull %bzerr, i8* nonnull %b, i32 0, i32* null, i32* null, i32* null, i32* null) #2
  %3 = load i32, i32* %bzerr, align 4, !tbaa !6
  %cmp2 = icmp eq i32 %3, 0
  br i1 %cmp2, label %cleanup, label %if.end6.i

if.end6.i:                                        ; preds = %if.then1
  %4 = load i8, i8* %1, align 8, !tbaa !132
  %tobool.i = icmp eq i8 %4, 0
  %lastErr13.i = getelementptr inbounds i8, i8* %b, i64 5096
  %5 = bitcast i8* %lastErr13.i to i32*
  br i1 %tobool.i, label %if.then7.i, label %if.end15.i

if.then7.i:                                       ; preds = %if.end6.i
  store i32 -1, i32* %5, align 8, !tbaa !127
  br label %cleanup

if.end15.i:                                       ; preds = %if.end6.i
  store i32 0, i32* %5, align 8, !tbaa !127
  %state.i158.i = getelementptr inbounds i8, i8* %b, i64 5064
  %6 = bitcast i8* %state.i158.i to i8**
  %7 = bitcast i8* %state.i158.i to %struct.EState**
  %8 = load %struct.EState*, %struct.EState** %7, align 8, !tbaa !87
  %cmp1.i159.i = icmp eq %struct.EState* %8, null
  br i1 %cmp1.i159.i, label %BZ2_bzCompressEnd.exit.i, label %if.end3.i162.i

if.end3.i162.i:                                   ; preds = %if.end15.i
  %strm96.i = getelementptr inbounds i8, i8* %b, i64 5016
  %9 = bitcast i8* %strm96.i to %struct.bz_stream*
  %strm4.i160.i = getelementptr inbounds %struct.EState, %struct.EState* %8, i64 0, i32 0
  %10 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i160.i, align 8, !tbaa !79
  %cmp5.i161.i = icmp eq %struct.bz_stream* %10, %9
  br i1 %cmp5.i161.i, label %if.end7.i163.i, label %BZ2_bzCompressEnd.exit.i

if.end7.i163.i:                                   ; preds = %if.end3.i162.i
  %arr1.i.i = getelementptr inbounds %struct.EState, %struct.EState* %8, i64 0, i32 4
  %11 = load i32*, i32** %arr1.i.i, align 8, !tbaa !31
  %cmp8.i.i = icmp eq i32* %11, null
  %.pre38 = getelementptr inbounds i8, i8* %b, i64 5080
  %.pre39 = bitcast i8* %.pre38 to void (i8*, i8*)**
  br i1 %cmp8.i.i, label %if.end11.i.i, label %if.then9.i.i

if.then9.i.i:                                     ; preds = %if.end7.i163.i
  %12 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre39, align 8, !tbaa !77
  %opaque.i.i = getelementptr inbounds i8, i8* %b, i64 5088
  %13 = bitcast i8* %opaque.i.i to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !78
  %15 = bitcast i32* %11 to i8*
  call void %12(i8* %14, i8* %15) #2
  br label %if.end11.i.i

if.end11.i.i:                                     ; preds = %if.then9.i.i, %if.end7.i163.i
  %arr2.i.i = getelementptr inbounds %struct.EState, %struct.EState* %8, i64 0, i32 5
  %16 = load i32*, i32** %arr2.i.i, align 8, !tbaa !32
  %cmp12.i.i = icmp eq i32* %16, null
  br i1 %cmp12.i.i, label %if.end17.i.i, label %if.then13.i.i

if.then13.i.i:                                    ; preds = %if.end11.i.i
  %17 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre39, align 8, !tbaa !77
  %opaque15.i.i = getelementptr inbounds i8, i8* %b, i64 5088
  %18 = bitcast i8* %opaque15.i.i to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !78
  %20 = bitcast i32* %16 to i8*
  call void %17(i8* %19, i8* %20) #2
  br label %if.end17.i.i

if.end17.i.i:                                     ; preds = %if.then13.i.i, %if.end11.i.i
  %ftab.i.i = getelementptr inbounds %struct.EState, %struct.EState* %8, i64 0, i32 6
  %21 = load i32*, i32** %ftab.i.i, align 8, !tbaa !27
  %cmp18.i.i = icmp eq i32* %21, null
  br i1 %cmp18.i.i, label %if.end17.if.end23_crit_edge.i.i, label %if.then19.i.i

if.end17.if.end23_crit_edge.i.i:                  ; preds = %if.end17.i.i
  %.pre48.i.i = getelementptr inbounds i8, i8* %b, i64 5088
  %22 = bitcast i8* %.pre48.i.i to i8**
  br label %if.end23.i.i

if.then19.i.i:                                    ; preds = %if.end17.i.i
  %23 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre39, align 8, !tbaa !77
  %opaque21.i.i = getelementptr inbounds i8, i8* %b, i64 5088
  %24 = bitcast i8* %opaque21.i.i to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !78
  %26 = bitcast i32* %21 to i8*
  call void %23(i8* %25, i8* %26) #2
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %if.then19.i.i, %if.end17.if.end23_crit_edge.i.i
  %opaque25.pre-phi.i.i = phi i8** [ %22, %if.end17.if.end23_crit_edge.i.i ], [ %24, %if.then19.i.i ]
  %27 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre39, align 8, !tbaa !77
  %28 = load i8*, i8** %opaque25.pre-phi.i.i, align 8, !tbaa !78
  %29 = load i8*, i8** %6, align 8, !tbaa !87
  call void %27(i8* %28, i8* %29) #2
  br label %BZ2_bzCompressEnd.exit.i

BZ2_bzCompressEnd.exit.i:                         ; preds = %if.end23.i.i, %if.end3.i162.i, %if.end15.i
  call void @free(i8* nonnull %b) #2
  br label %cleanup

if.end22.i:                                       ; preds = %if.end
  store i32 0, i32* %bzerr, align 4, !tbaa !6
  %lastErr.i = getelementptr inbounds i8, i8* %b, i64 5096
  %30 = bitcast i8* %lastErr.i to i32*
  store i32 0, i32* %30, align 8, !tbaa !127
  %31 = getelementptr inbounds i8, i8* %b, i64 5100
  %32 = load i8, i8* %31, align 4, !tbaa !129
  %tobool23.i = icmp eq i8 %32, 0
  br i1 %tobool23.i, label %BZ2_bzReadClose.exit, label %if.then24.i

if.then24.i:                                      ; preds = %if.end22.i
  %state.i.i = getelementptr inbounds i8, i8* %b, i64 5064
  %33 = bitcast i8* %state.i.i to i8**
  %34 = bitcast i8* %state.i.i to %struct.DState**
  %35 = load %struct.DState*, %struct.DState** %34, align 8, !tbaa !87
  %cmp1.i.i = icmp eq %struct.DState* %35, null
  br i1 %cmp1.i.i, label %BZ2_bzReadClose.exit, label %if.end3.i.i

if.end3.i.i:                                      ; preds = %if.then24.i
  %strm.i = getelementptr inbounds i8, i8* %b, i64 5016
  %36 = bitcast i8* %strm.i to %struct.bz_stream*
  %strm4.i.i = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 0
  %37 = load %struct.bz_stream*, %struct.bz_stream** %strm4.i.i, align 8, !tbaa !103
  %cmp5.i.i = icmp eq %struct.bz_stream* %37, %36
  br i1 %cmp5.i.i, label %if.end7.i.i, label %BZ2_bzReadClose.exit

if.end7.i.i:                                      ; preds = %if.end3.i.i
  %tt.i.i = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 20
  %38 = load i32*, i32** %tt.i.i, align 8, !tbaa !124
  %cmp8.i.i20 = icmp eq i32* %38, null
  %.pre = getelementptr inbounds i8, i8* %b, i64 5080
  %.pre37 = bitcast i8* %.pre to void (i8*, i8*)**
  br i1 %cmp8.i.i20, label %if.end11.i.i26, label %if.then9.i.i23

if.then9.i.i23:                                   ; preds = %if.end7.i.i
  %39 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre37, align 8, !tbaa !77
  %opaque.i.i22 = getelementptr inbounds i8, i8* %b, i64 5088
  %40 = bitcast i8* %opaque.i.i22 to i8**
  %41 = load i8*, i8** %40, align 8, !tbaa !78
  %42 = bitcast i32* %38 to i8*
  tail call void %39(i8* %41, i8* %42) #2
  br label %if.end11.i.i26

if.end11.i.i26:                                   ; preds = %if.then9.i.i23, %if.end7.i.i
  %ll16.i.i = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 21
  %43 = load i16*, i16** %ll16.i.i, align 8, !tbaa !120
  %cmp12.i.i24 = icmp eq i16* %43, null
  br i1 %cmp12.i.i24, label %if.end17.i.i30, label %if.then13.i.i28

if.then13.i.i28:                                  ; preds = %if.end11.i.i26
  %44 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre37, align 8, !tbaa !77
  %opaque15.i.i27 = getelementptr inbounds i8, i8* %b, i64 5088
  %45 = bitcast i8* %opaque15.i.i27 to i8**
  %46 = load i8*, i8** %45, align 8, !tbaa !78
  %47 = bitcast i16* %43 to i8*
  tail call void %44(i8* %46, i8* %47) #2
  br label %if.end17.i.i30

if.end17.i.i30:                                   ; preds = %if.then13.i.i28, %if.end11.i.i26
  %ll4.i.i = getelementptr inbounds %struct.DState, %struct.DState* %35, i64 0, i32 22
  %48 = load i8*, i8** %ll4.i.i, align 8, !tbaa !121
  %cmp18.i.i29 = icmp eq i8* %48, null
  br i1 %cmp18.i.i29, label %if.end17.if.end23_crit_edge.i.i32, label %if.then19.i.i34

if.end17.if.end23_crit_edge.i.i32:                ; preds = %if.end17.i.i30
  %.pre48.i.i31 = getelementptr inbounds i8, i8* %b, i64 5088
  %49 = bitcast i8* %.pre48.i.i31 to i8**
  br label %if.end23.i.i36

if.then19.i.i34:                                  ; preds = %if.end17.i.i30
  %50 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre37, align 8, !tbaa !77
  %opaque21.i.i33 = getelementptr inbounds i8, i8* %b, i64 5088
  %51 = bitcast i8* %opaque21.i.i33 to i8**
  %52 = load i8*, i8** %51, align 8, !tbaa !78
  tail call void %50(i8* %52, i8* nonnull %48) #2
  br label %if.end23.i.i36

if.end23.i.i36:                                   ; preds = %if.then19.i.i34, %if.end17.if.end23_crit_edge.i.i32
  %opaque25.pre-phi.i.i35 = phi i8** [ %49, %if.end17.if.end23_crit_edge.i.i32 ], [ %51, %if.then19.i.i34 ]
  %53 = load void (i8*, i8*)*, void (i8*, i8*)** %.pre37, align 8, !tbaa !77
  %54 = load i8*, i8** %opaque25.pre-phi.i.i35, align 8, !tbaa !78
  %55 = load i8*, i8** %33, align 8, !tbaa !87
  tail call void %53(i8* %54, i8* %55) #2
  br label %BZ2_bzReadClose.exit

BZ2_bzReadClose.exit:                             ; preds = %if.end23.i.i36, %if.end3.i.i, %if.then24.i, %if.end22.i
  tail call void @free(i8* nonnull %b) #2
  br label %cleanup

cleanup:                                          ; preds = %BZ2_bzReadClose.exit, %BZ2_bzCompressEnd.exit.i, %if.then7.i, %if.then1, %entry
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  ret void
}

; Function Attrs: norecurse nounwind uwtable
define i8* @BZ2_bzerror(i8* nocapture readonly %b, i32* nocapture %errnum) local_unnamed_addr #0 {
entry:
  %lastErr = getelementptr inbounds i8, i8* %b, i64 5096
  %0 = bitcast i8* %lastErr to i32*
  %1 = load i32, i32* %0, align 8, !tbaa !127
  %2 = icmp slt i32 %1, 0
  %spec.store.select = select i1 %2, i32 %1, i32 0
  store i32 %spec.store.select, i32* %errnum, align 4, !tbaa !6
  %mul = sub nsw i32 0, %spec.store.select
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds [16 x i8*], [16 x i8*]* @bzerrorstrings, i64 0, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8, !tbaa !18
  ret i8* %3
}

; Function Attrs: norecurse nounwind uwtable
define void @BZ2_bsInitWrite(%struct.EState* nocapture %s) local_unnamed_addr #0 {
entry:
  %bsLive = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 25
  store i32 0, i32* %bsLive, align 4, !tbaa !141
  %bsBuff = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 24
  store i32 0, i32* %bsBuff, align 8, !tbaa !142
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_compressBlock(%struct.EState* %s, i8 zeroext %is_last_block) local_unnamed_addr #1 {
entry:
  %yy.i = alloca [256 x i8], align 16
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %0 = load i32, i32* %nblock, align 4, !tbaa !28
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %entry.if.end15_crit_edge

entry.if.end15_crit_edge:                         ; preds = %entry
  %.pre515 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 29
  br label %if.end15

if.then:                                          ; preds = %entry
  %blockCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 26
  %1 = load i32, i32* %blockCRC, align 8, !tbaa !96
  %neg = xor i32 %1, -1
  store i32 %neg, i32* %blockCRC, align 8, !tbaa !96
  %combinedCRC = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 27
  %2 = load i32, i32* %combinedCRC, align 4, !tbaa !82
  %shl = shl i32 %2, 1
  %shr = lshr i32 %2, 31
  %or = or i32 %shl, %shr
  %xor = xor i32 %or, %neg
  store i32 %xor, i32* %combinedCRC, align 4, !tbaa !82
  %blockNo = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 29
  %3 = load i32, i32* %blockNo, align 4, !tbaa !97
  %cmp6 = icmp sgt i32 %3, 1
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %if.then
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  store i32 0, i32* %numZ, align 4, !tbaa !94
  br label %if.end

if.end:                                           ; preds = %if.then7, %if.then
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 28
  %4 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp8 = icmp sgt i32 %4, 1
  br i1 %cmp8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %6 = getelementptr [62 x i8], [62 x i8]* @.str.66, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %6, i32 %3, i32 %neg, i32 %xor, i32 %0) #15
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %if.end
  tail call void @BZ2_blockSort(%struct.EState* nonnull %s) #2
  %.pre = load i32, i32* %nblock, align 4, !tbaa !28
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %entry.if.end15_crit_edge
  %blockNo17.pre-phi = phi i32* [ %.pre515, %entry.if.end15_crit_edge ], [ %blockNo, %if.end14 ]
  %7 = phi i32 [ %0, %entry.if.end15_crit_edge ], [ %.pre, %if.end14 ]
  %arr2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 5
  %8 = bitcast i32** %arr2 to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !32
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom
  %zbits = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 11
  store i8* %arrayidx, i8** %zbits, align 8, !tbaa !86
  %10 = load i32, i32* %blockNo17.pre-phi, align 4, !tbaa !97
  %cmp18 = icmp eq i32 %10, 1
  br i1 %cmp18, label %while.body.lr.ph.i.i248, label %if.end20

while.body.lr.ph.i.i248:                          ; preds = %if.end15
  %bsLive.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 25
  %bsBuff.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 24
  store i32 1107296256, i32* %bsBuff.i, align 8, !tbaa !142
  store i32 8, i32* %bsLive.i, align 4, !tbaa !141
  %numZ.i.i245 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i247 = load i32, i32* %numZ.i.i245, align 4, !tbaa !94
  %idxprom.i.i251518 = sext i32 %.pre22.i.i247 to i64
  %arrayidx.i.i252519 = getelementptr inbounds i8, i8* %arrayidx, i64 %idxprom.i.i251518
  store i8 66, i8* %arrayidx.i.i252519, align 1, !tbaa !12
  %11 = load i32, i32* %numZ.i.i245, align 4, !tbaa !94
  %inc.i.i253520 = add nsw i32 %11, 1
  store i32 %inc.i.i253520, i32* %numZ.i.i245, align 4, !tbaa !94
  %12 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i.i254521 = shl i32 %12, 8
  store i32 %shl.i.i254521, i32* %bsBuff.i, align 8, !tbaa !142
  %13 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i.i255522 = add nsw i32 %13, -8
  store i32 %sub.i.i255522, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i.i256523 = icmp sgt i32 %13, 15
  br i1 %cmp.i.i256523, label %while.body.i.i257.while.body.i.i257_crit_edge.preheader, label %bsPutUChar.exit263

while.body.i.i257.while.body.i.i257_crit_edge.preheader: ; preds = %while.body.lr.ph.i.i248
  br label %while.body.i.i257.while.body.i.i257_crit_edge

while.body.i.i257.while.body.i.i257_crit_edge:    ; preds = %while.body.i.i257.while.body.i.i257_crit_edge, %while.body.i.i257.while.body.i.i257_crit_edge.preheader
  %shl.i.i254525 = phi i32 [ %shl.i.i254, %while.body.i.i257.while.body.i.i257_crit_edge ], [ %shl.i.i254521, %while.body.i.i257.while.body.i.i257_crit_edge.preheader ]
  %inc.i.i253524 = phi i32 [ %inc.i.i253, %while.body.i.i257.while.body.i.i257_crit_edge ], [ %inc.i.i253520, %while.body.i.i257.while.body.i.i257_crit_edge.preheader ]
  %.pre512 = load i8*, i8** %zbits, align 8, !tbaa !86
  %shr.i.i249 = lshr i32 %shl.i.i254525, 24
  %conv.i.i250 = trunc i32 %shr.i.i249 to i8
  %idxprom.i.i251 = sext i32 %inc.i.i253524 to i64
  %arrayidx.i.i252 = getelementptr inbounds i8, i8* %.pre512, i64 %idxprom.i.i251
  store i8 %conv.i.i250, i8* %arrayidx.i.i252, align 1, !tbaa !12
  %14 = load i32, i32* %numZ.i.i245, align 4, !tbaa !94
  %inc.i.i253 = add nsw i32 %14, 1
  store i32 %inc.i.i253, i32* %numZ.i.i245, align 4, !tbaa !94
  %15 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i.i254 = shl i32 %15, 8
  store i32 %shl.i.i254, i32* %bsBuff.i, align 8, !tbaa !142
  %16 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i.i255 = add nsw i32 %16, -8
  store i32 %sub.i.i255, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i.i256 = icmp sgt i32 %16, 15
  br i1 %cmp.i.i256, label %while.body.i.i257.while.body.i.i257_crit_edge, label %bsPutUChar.exit263

bsPutUChar.exit263:                               ; preds = %while.body.i.i257.while.body.i.i257_crit_edge, %while.body.lr.ph.i.i248
  %inc.i.i253.lcssa = phi i32 [ %inc.i.i253520, %while.body.lr.ph.i.i248 ], [ %inc.i.i253, %while.body.i.i257.while.body.i.i257_crit_edge ]
  %shl.i.i254.lcssa = phi i32 [ %shl.i.i254521, %while.body.lr.ph.i.i248 ], [ %shl.i.i254, %while.body.i.i257.while.body.i.i257_crit_edge ]
  %.lcssa517 = phi i32 [ %13, %while.body.lr.ph.i.i248 ], [ %16, %while.body.i.i257.while.body.i.i257_crit_edge ]
  %sub6.i.i259 = sub i32 32, %.lcssa517
  %shl7.i.i260 = shl i32 90, %sub6.i.i259
  %or.i.i261 = or i32 %shl7.i.i260, %shl.i.i254.lcssa
  store i32 %or.i.i261, i32* %bsBuff.i, align 8, !tbaa !142
  store i32 %.lcssa517, i32* %bsLive.i, align 4, !tbaa !141
  %cmp20.i.i310 = icmp sgt i32 %.lcssa517, 7
  br i1 %cmp20.i.i310, label %while.body.i.i327.preheader, label %bsPutUChar.exit333

while.body.i.i327.preheader:                      ; preds = %bsPutUChar.exit263
  br label %while.body.i.i327

while.body.i.i327:                                ; preds = %while.body.i.i327, %while.body.i.i327.preheader
  %17 = phi i32 [ %inc.i.i323, %while.body.i.i327 ], [ %inc.i.i253.lcssa, %while.body.i.i327.preheader ]
  %18 = phi i32 [ %shl.i.i324, %while.body.i.i327 ], [ %or.i.i261, %while.body.i.i327.preheader ]
  %shr.i.i319 = lshr i32 %18, 24
  %conv.i.i320 = trunc i32 %shr.i.i319 to i8
  %19 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i321 = sext i32 %17 to i64
  %arrayidx.i.i322 = getelementptr inbounds i8, i8* %19, i64 %idxprom.i.i321
  store i8 %conv.i.i320, i8* %arrayidx.i.i322, align 1, !tbaa !12
  %20 = load i32, i32* %numZ.i.i245, align 4, !tbaa !94
  %inc.i.i323 = add nsw i32 %20, 1
  store i32 %inc.i.i323, i32* %numZ.i.i245, align 4, !tbaa !94
  %21 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i.i324 = shl i32 %21, 8
  store i32 %shl.i.i324, i32* %bsBuff.i, align 8, !tbaa !142
  %22 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i.i325 = add nsw i32 %22, -8
  store i32 %sub.i.i325, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i.i326 = icmp sgt i32 %22, 15
  br i1 %cmp.i.i326, label %while.body.i.i327, label %bsPutUChar.exit333

bsPutUChar.exit333:                               ; preds = %while.body.i.i327, %bsPutUChar.exit263
  %.pre22.i.i493 = phi i32 [ %inc.i.i253.lcssa, %bsPutUChar.exit263 ], [ %inc.i.i323, %while.body.i.i327 ]
  %23 = phi i32 [ %or.i.i261, %bsPutUChar.exit263 ], [ %shl.i.i324, %while.body.i.i327 ]
  %.lcssa.i.i328 = phi i32 [ %.lcssa517, %bsPutUChar.exit263 ], [ %sub.i.i325, %while.body.i.i327 ]
  %sub6.i.i329 = sub i32 24, %.lcssa.i.i328
  %shl7.i.i330 = shl i32 104, %sub6.i.i329
  %or.i.i331 = or i32 %shl7.i.i330, %23
  store i32 %or.i.i331, i32* %bsBuff.i, align 8, !tbaa !142
  %add.i.i332 = add nsw i32 %.lcssa.i.i328, 8
  store i32 %add.i.i332, i32* %bsLive.i, align 4, !tbaa !141
  %blockSize100k = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 30
  %24 = load i32, i32* %blockSize100k, align 8, !tbaa !83
  %conv = add i32 %24, 48
  %conv.i484 = and i32 %conv, 255
  %cmp20.i.i486 = icmp sgt i32 %.lcssa.i.i328, -1
  br i1 %cmp20.i.i486, label %while.body.i.i503.preheader, label %bsPutUChar.exit509

while.body.i.i503.preheader:                      ; preds = %bsPutUChar.exit333
  br label %while.body.i.i503

while.body.i.i503:                                ; preds = %while.body.i.i503, %while.body.i.i503.preheader
  %25 = phi i32 [ %inc.i.i499, %while.body.i.i503 ], [ %.pre22.i.i493, %while.body.i.i503.preheader ]
  %26 = phi i32 [ %shl.i.i500, %while.body.i.i503 ], [ %or.i.i331, %while.body.i.i503.preheader ]
  %shr.i.i495 = lshr i32 %26, 24
  %conv.i.i496 = trunc i32 %shr.i.i495 to i8
  %27 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i497 = sext i32 %25 to i64
  %arrayidx.i.i498 = getelementptr inbounds i8, i8* %27, i64 %idxprom.i.i497
  store i8 %conv.i.i496, i8* %arrayidx.i.i498, align 1, !tbaa !12
  %28 = load i32, i32* %numZ.i.i245, align 4, !tbaa !94
  %inc.i.i499 = add nsw i32 %28, 1
  store i32 %inc.i.i499, i32* %numZ.i.i245, align 4, !tbaa !94
  %29 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i.i500 = shl i32 %29, 8
  store i32 %shl.i.i500, i32* %bsBuff.i, align 8, !tbaa !142
  %30 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i.i501 = add nsw i32 %30, -8
  store i32 %sub.i.i501, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i.i502 = icmp sgt i32 %30, 15
  br i1 %cmp.i.i502, label %while.body.i.i503, label %bsPutUChar.exit509

bsPutUChar.exit509:                               ; preds = %while.body.i.i503, %bsPutUChar.exit333
  %31 = phi i32 [ %or.i.i331, %bsPutUChar.exit333 ], [ %shl.i.i500, %while.body.i.i503 ]
  %.lcssa.i.i504 = phi i32 [ %add.i.i332, %bsPutUChar.exit333 ], [ %sub.i.i501, %while.body.i.i503 ]
  %sub6.i.i505 = sub i32 24, %.lcssa.i.i504
  %shl7.i.i506 = shl i32 %conv.i484, %sub6.i.i505
  %or.i.i507 = or i32 %shl7.i.i506, %31
  store i32 %or.i.i507, i32* %bsBuff.i, align 8, !tbaa !142
  %add.i.i508 = add nsw i32 %.lcssa.i.i504, 8
  store i32 %add.i.i508, i32* %bsLive.i, align 4, !tbaa !141
  %.pre514 = load i32, i32* %nblock, align 4, !tbaa !28
  br label %if.end20

if.end20:                                         ; preds = %bsPutUChar.exit509, %if.end15
  %32 = phi i32 [ %.pre514, %bsPutUChar.exit509 ], [ %7, %if.end15 ]
  %cmp22 = icmp sgt i32 %32, 0
  br i1 %cmp22, label %if.then24, label %if.end26

if.then24:                                        ; preds = %if.end20
  %bsLive.i.i459 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 25
  %33 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp20.i.i460 = icmp sgt i32 %33, 7
  %bsBuff.i.i461 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 24
  br i1 %cmp20.i.i460, label %while.body.lr.ph.i.i468, label %entry.while.end_crit_edge.i.i463

entry.while.end_crit_edge.i.i463:                 ; preds = %if.then24
  %.pre23.i.i462 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  br label %bsPutUChar.exit483

while.body.lr.ph.i.i468:                          ; preds = %if.then24
  %numZ.i.i465 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre.i.i466 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %.pre22.i.i467 = load i32, i32* %numZ.i.i465, align 4, !tbaa !94
  br label %while.body.i.i477

while.body.i.i477:                                ; preds = %while.body.i.i477, %while.body.lr.ph.i.i468
  %34 = phi i32 [ %.pre22.i.i467, %while.body.lr.ph.i.i468 ], [ %inc.i.i473, %while.body.i.i477 ]
  %35 = phi i32 [ %.pre.i.i466, %while.body.lr.ph.i.i468 ], [ %shl.i.i474, %while.body.i.i477 ]
  %shr.i.i469 = lshr i32 %35, 24
  %conv.i.i470 = trunc i32 %shr.i.i469 to i8
  %36 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i471 = sext i32 %34 to i64
  %arrayidx.i.i472 = getelementptr inbounds i8, i8* %36, i64 %idxprom.i.i471
  store i8 %conv.i.i470, i8* %arrayidx.i.i472, align 1, !tbaa !12
  %37 = load i32, i32* %numZ.i.i465, align 4, !tbaa !94
  %inc.i.i473 = add nsw i32 %37, 1
  store i32 %inc.i.i473, i32* %numZ.i.i465, align 4, !tbaa !94
  %38 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i.i474 = shl i32 %38, 8
  store i32 %shl.i.i474, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %39 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i.i475 = add nsw i32 %39, -8
  store i32 %sub.i.i475, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i.i476 = icmp sgt i32 %39, 15
  br i1 %cmp.i.i476, label %while.body.i.i477, label %bsPutUChar.exit483

bsPutUChar.exit483:                               ; preds = %while.body.i.i477, %entry.while.end_crit_edge.i.i463
  %40 = phi i32 [ %.pre23.i.i462, %entry.while.end_crit_edge.i.i463 ], [ %shl.i.i474, %while.body.i.i477 ]
  %.lcssa.i.i478 = phi i32 [ %33, %entry.while.end_crit_edge.i.i463 ], [ %sub.i.i475, %while.body.i.i477 ]
  %sub6.i.i479 = sub i32 24, %.lcssa.i.i478
  %shl7.i.i480 = shl i32 49, %sub6.i.i479
  %or.i.i481 = or i32 %shl7.i.i480, %40
  store i32 %or.i.i481, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i.i482 = add nsw i32 %.lcssa.i.i478, 8
  store i32 %add.i.i482, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp20.i.i435 = icmp sgt i32 %.lcssa.i.i478, -1
  br i1 %cmp20.i.i435, label %while.body.lr.ph.i.i443, label %bsPutUChar.exit458

while.body.lr.ph.i.i443:                          ; preds = %bsPutUChar.exit483
  %numZ.i.i440 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i442 = load i32, i32* %numZ.i.i440, align 4, !tbaa !94
  br label %while.body.i.i452

while.body.i.i452:                                ; preds = %while.body.i.i452, %while.body.lr.ph.i.i443
  %41 = phi i32 [ %.pre22.i.i442, %while.body.lr.ph.i.i443 ], [ %inc.i.i448, %while.body.i.i452 ]
  %42 = phi i32 [ %or.i.i481, %while.body.lr.ph.i.i443 ], [ %shl.i.i449, %while.body.i.i452 ]
  %shr.i.i444 = lshr i32 %42, 24
  %conv.i.i445 = trunc i32 %shr.i.i444 to i8
  %43 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i446 = sext i32 %41 to i64
  %arrayidx.i.i447 = getelementptr inbounds i8, i8* %43, i64 %idxprom.i.i446
  store i8 %conv.i.i445, i8* %arrayidx.i.i447, align 1, !tbaa !12
  %44 = load i32, i32* %numZ.i.i440, align 4, !tbaa !94
  %inc.i.i448 = add nsw i32 %44, 1
  store i32 %inc.i.i448, i32* %numZ.i.i440, align 4, !tbaa !94
  %45 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i.i449 = shl i32 %45, 8
  store i32 %shl.i.i449, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %46 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i.i450 = add nsw i32 %46, -8
  store i32 %sub.i.i450, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i.i451 = icmp sgt i32 %46, 15
  br i1 %cmp.i.i451, label %while.body.i.i452, label %bsPutUChar.exit458

bsPutUChar.exit458:                               ; preds = %while.body.i.i452, %bsPutUChar.exit483
  %47 = phi i32 [ %or.i.i481, %bsPutUChar.exit483 ], [ %shl.i.i449, %while.body.i.i452 ]
  %.lcssa.i.i453 = phi i32 [ %add.i.i482, %bsPutUChar.exit483 ], [ %sub.i.i450, %while.body.i.i452 ]
  %sub6.i.i454 = sub i32 24, %.lcssa.i.i453
  %shl7.i.i455 = shl i32 65, %sub6.i.i454
  %or.i.i456 = or i32 %shl7.i.i455, %47
  store i32 %or.i.i456, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i.i457 = add nsw i32 %.lcssa.i.i453, 8
  store i32 %add.i.i457, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp20.i.i410 = icmp sgt i32 %.lcssa.i.i453, -1
  br i1 %cmp20.i.i410, label %while.body.lr.ph.i.i418, label %bsPutUChar.exit433

while.body.lr.ph.i.i418:                          ; preds = %bsPutUChar.exit458
  %numZ.i.i415 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i417 = load i32, i32* %numZ.i.i415, align 4, !tbaa !94
  br label %while.body.i.i427

while.body.i.i427:                                ; preds = %while.body.i.i427, %while.body.lr.ph.i.i418
  %48 = phi i32 [ %.pre22.i.i417, %while.body.lr.ph.i.i418 ], [ %inc.i.i423, %while.body.i.i427 ]
  %49 = phi i32 [ %or.i.i456, %while.body.lr.ph.i.i418 ], [ %shl.i.i424, %while.body.i.i427 ]
  %shr.i.i419 = lshr i32 %49, 24
  %conv.i.i420 = trunc i32 %shr.i.i419 to i8
  %50 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i421 = sext i32 %48 to i64
  %arrayidx.i.i422 = getelementptr inbounds i8, i8* %50, i64 %idxprom.i.i421
  store i8 %conv.i.i420, i8* %arrayidx.i.i422, align 1, !tbaa !12
  %51 = load i32, i32* %numZ.i.i415, align 4, !tbaa !94
  %inc.i.i423 = add nsw i32 %51, 1
  store i32 %inc.i.i423, i32* %numZ.i.i415, align 4, !tbaa !94
  %52 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i.i424 = shl i32 %52, 8
  store i32 %shl.i.i424, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %53 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i.i425 = add nsw i32 %53, -8
  store i32 %sub.i.i425, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i.i426 = icmp sgt i32 %53, 15
  br i1 %cmp.i.i426, label %while.body.i.i427, label %bsPutUChar.exit433

bsPutUChar.exit433:                               ; preds = %while.body.i.i427, %bsPutUChar.exit458
  %54 = phi i32 [ %or.i.i456, %bsPutUChar.exit458 ], [ %shl.i.i424, %while.body.i.i427 ]
  %.lcssa.i.i428 = phi i32 [ %add.i.i457, %bsPutUChar.exit458 ], [ %sub.i.i425, %while.body.i.i427 ]
  %sub6.i.i429 = sub i32 24, %.lcssa.i.i428
  %shl7.i.i430 = shl i32 89, %sub6.i.i429
  %or.i.i431 = or i32 %shl7.i.i430, %54
  store i32 %or.i.i431, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i.i432 = add nsw i32 %.lcssa.i.i428, 8
  store i32 %add.i.i432, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp20.i.i385 = icmp sgt i32 %.lcssa.i.i428, -1
  br i1 %cmp20.i.i385, label %while.body.lr.ph.i.i393, label %bsPutUChar.exit408

while.body.lr.ph.i.i393:                          ; preds = %bsPutUChar.exit433
  %numZ.i.i390 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i392 = load i32, i32* %numZ.i.i390, align 4, !tbaa !94
  br label %while.body.i.i402

while.body.i.i402:                                ; preds = %while.body.i.i402, %while.body.lr.ph.i.i393
  %55 = phi i32 [ %.pre22.i.i392, %while.body.lr.ph.i.i393 ], [ %inc.i.i398, %while.body.i.i402 ]
  %56 = phi i32 [ %or.i.i431, %while.body.lr.ph.i.i393 ], [ %shl.i.i399, %while.body.i.i402 ]
  %shr.i.i394 = lshr i32 %56, 24
  %conv.i.i395 = trunc i32 %shr.i.i394 to i8
  %57 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i396 = sext i32 %55 to i64
  %arrayidx.i.i397 = getelementptr inbounds i8, i8* %57, i64 %idxprom.i.i396
  store i8 %conv.i.i395, i8* %arrayidx.i.i397, align 1, !tbaa !12
  %58 = load i32, i32* %numZ.i.i390, align 4, !tbaa !94
  %inc.i.i398 = add nsw i32 %58, 1
  store i32 %inc.i.i398, i32* %numZ.i.i390, align 4, !tbaa !94
  %59 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i.i399 = shl i32 %59, 8
  store i32 %shl.i.i399, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %60 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i.i400 = add nsw i32 %60, -8
  store i32 %sub.i.i400, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i.i401 = icmp sgt i32 %60, 15
  br i1 %cmp.i.i401, label %while.body.i.i402, label %bsPutUChar.exit408

bsPutUChar.exit408:                               ; preds = %while.body.i.i402, %bsPutUChar.exit433
  %61 = phi i32 [ %or.i.i431, %bsPutUChar.exit433 ], [ %shl.i.i399, %while.body.i.i402 ]
  %.lcssa.i.i403 = phi i32 [ %add.i.i432, %bsPutUChar.exit433 ], [ %sub.i.i400, %while.body.i.i402 ]
  %sub6.i.i404 = sub i32 24, %.lcssa.i.i403
  %shl7.i.i405 = shl i32 38, %sub6.i.i404
  %or.i.i406 = or i32 %shl7.i.i405, %61
  store i32 %or.i.i406, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i.i407 = add nsw i32 %.lcssa.i.i403, 8
  store i32 %add.i.i407, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp20.i.i360 = icmp sgt i32 %.lcssa.i.i403, -1
  br i1 %cmp20.i.i360, label %while.body.lr.ph.i.i368, label %bsPutUChar.exit383

while.body.lr.ph.i.i368:                          ; preds = %bsPutUChar.exit408
  %numZ.i.i365 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i367 = load i32, i32* %numZ.i.i365, align 4, !tbaa !94
  br label %while.body.i.i377

while.body.i.i377:                                ; preds = %while.body.i.i377, %while.body.lr.ph.i.i368
  %62 = phi i32 [ %.pre22.i.i367, %while.body.lr.ph.i.i368 ], [ %inc.i.i373, %while.body.i.i377 ]
  %63 = phi i32 [ %or.i.i406, %while.body.lr.ph.i.i368 ], [ %shl.i.i374, %while.body.i.i377 ]
  %shr.i.i369 = lshr i32 %63, 24
  %conv.i.i370 = trunc i32 %shr.i.i369 to i8
  %64 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i371 = sext i32 %62 to i64
  %arrayidx.i.i372 = getelementptr inbounds i8, i8* %64, i64 %idxprom.i.i371
  store i8 %conv.i.i370, i8* %arrayidx.i.i372, align 1, !tbaa !12
  %65 = load i32, i32* %numZ.i.i365, align 4, !tbaa !94
  %inc.i.i373 = add nsw i32 %65, 1
  store i32 %inc.i.i373, i32* %numZ.i.i365, align 4, !tbaa !94
  %66 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i.i374 = shl i32 %66, 8
  store i32 %shl.i.i374, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %67 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i.i375 = add nsw i32 %67, -8
  store i32 %sub.i.i375, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i.i376 = icmp sgt i32 %67, 15
  br i1 %cmp.i.i376, label %while.body.i.i377, label %bsPutUChar.exit383

bsPutUChar.exit383:                               ; preds = %while.body.i.i377, %bsPutUChar.exit408
  %68 = phi i32 [ %or.i.i406, %bsPutUChar.exit408 ], [ %shl.i.i374, %while.body.i.i377 ]
  %.lcssa.i.i378 = phi i32 [ %add.i.i407, %bsPutUChar.exit408 ], [ %sub.i.i375, %while.body.i.i377 ]
  %sub6.i.i379 = sub i32 24, %.lcssa.i.i378
  %shl7.i.i380 = shl i32 83, %sub6.i.i379
  %or.i.i381 = or i32 %shl7.i.i380, %68
  store i32 %or.i.i381, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i.i382 = add nsw i32 %.lcssa.i.i378, 8
  store i32 %add.i.i382, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp20.i.i335 = icmp sgt i32 %.lcssa.i.i378, -1
  br i1 %cmp20.i.i335, label %while.body.lr.ph.i.i343, label %bsPutUChar.exit358

while.body.lr.ph.i.i343:                          ; preds = %bsPutUChar.exit383
  %numZ.i.i340 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i342 = load i32, i32* %numZ.i.i340, align 4, !tbaa !94
  br label %while.body.i.i352

while.body.i.i352:                                ; preds = %while.body.i.i352, %while.body.lr.ph.i.i343
  %69 = phi i32 [ %.pre22.i.i342, %while.body.lr.ph.i.i343 ], [ %inc.i.i348, %while.body.i.i352 ]
  %70 = phi i32 [ %or.i.i381, %while.body.lr.ph.i.i343 ], [ %shl.i.i349, %while.body.i.i352 ]
  %shr.i.i344 = lshr i32 %70, 24
  %conv.i.i345 = trunc i32 %shr.i.i344 to i8
  %71 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i346 = sext i32 %69 to i64
  %arrayidx.i.i347 = getelementptr inbounds i8, i8* %71, i64 %idxprom.i.i346
  store i8 %conv.i.i345, i8* %arrayidx.i.i347, align 1, !tbaa !12
  %72 = load i32, i32* %numZ.i.i340, align 4, !tbaa !94
  %inc.i.i348 = add nsw i32 %72, 1
  store i32 %inc.i.i348, i32* %numZ.i.i340, align 4, !tbaa !94
  %73 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i.i349 = shl i32 %73, 8
  store i32 %shl.i.i349, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %74 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i.i350 = add nsw i32 %74, -8
  store i32 %sub.i.i350, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i.i351 = icmp sgt i32 %74, 15
  br i1 %cmp.i.i351, label %while.body.i.i352, label %bsPutUChar.exit358

bsPutUChar.exit358:                               ; preds = %while.body.i.i352, %bsPutUChar.exit383
  %75 = phi i32 [ %or.i.i381, %bsPutUChar.exit383 ], [ %shl.i.i349, %while.body.i.i352 ]
  %.lcssa.i.i353 = phi i32 [ %add.i.i382, %bsPutUChar.exit383 ], [ %sub.i.i350, %while.body.i.i352 ]
  %sub6.i.i354 = sub i32 24, %.lcssa.i.i353
  %shl7.i.i355 = shl i32 89, %sub6.i.i354
  %or.i.i356 = or i32 %shl7.i.i355, %75
  store i32 %or.i.i356, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i.i357 = add nsw i32 %.lcssa.i.i353, 8
  store i32 %add.i.i357, i32* %bsLive.i.i459, align 4, !tbaa !141
  %blockCRC25 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 26
  %76 = load i32, i32* %blockCRC25, align 8, !tbaa !96
  tail call fastcc void @bsPutUInt32(%struct.EState* nonnull %s, i32 %76)
  %77 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp20.i287 = icmp sgt i32 %77, 7
  br i1 %cmp20.i287, label %while.body.lr.ph.i295, label %entry.while.end_crit_edge.i290

entry.while.end_crit_edge.i290:                   ; preds = %bsPutUChar.exit358
  %.pre23.i289 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  br label %bsW.exit308

while.body.lr.ph.i295:                            ; preds = %bsPutUChar.exit358
  %numZ.i292 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre.i293 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %.pre22.i294 = load i32, i32* %numZ.i292, align 4, !tbaa !94
  br label %while.body.i304

while.body.i304:                                  ; preds = %while.body.i304, %while.body.lr.ph.i295
  %78 = phi i32 [ %.pre22.i294, %while.body.lr.ph.i295 ], [ %inc.i300, %while.body.i304 ]
  %79 = phi i32 [ %.pre.i293, %while.body.lr.ph.i295 ], [ %shl.i301, %while.body.i304 ]
  %shr.i296 = lshr i32 %79, 24
  %conv.i297 = trunc i32 %shr.i296 to i8
  %80 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i298 = sext i32 %78 to i64
  %arrayidx.i299 = getelementptr inbounds i8, i8* %80, i64 %idxprom.i298
  store i8 %conv.i297, i8* %arrayidx.i299, align 1, !tbaa !12
  %81 = load i32, i32* %numZ.i292, align 4, !tbaa !94
  %inc.i300 = add nsw i32 %81, 1
  store i32 %inc.i300, i32* %numZ.i292, align 4, !tbaa !94
  %82 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i301 = shl i32 %82, 8
  store i32 %shl.i301, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %83 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i302 = add nsw i32 %83, -8
  store i32 %sub.i302, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i303 = icmp sgt i32 %83, 15
  br i1 %cmp.i303, label %while.body.i304, label %bsW.exit308

bsW.exit308:                                      ; preds = %while.body.i304, %entry.while.end_crit_edge.i290
  %84 = phi i32 [ %.pre23.i289, %entry.while.end_crit_edge.i290 ], [ %shl.i301, %while.body.i304 ]
  %.lcssa.i305 = phi i32 [ %77, %entry.while.end_crit_edge.i290 ], [ %sub.i302, %while.body.i304 ]
  store i32 %84, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i307 = add nsw i32 %.lcssa.i305, 1
  store i32 %add.i307, i32* %bsLive.i.i459, align 4, !tbaa !141
  %origPtr = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 7
  %85 = load i32, i32* %origPtr, align 8, !tbaa !49
  %cmp20.i = icmp sgt i32 %.lcssa.i305, 6
  br i1 %cmp20.i, label %while.body.lr.ph.i275, label %bsW.exit

while.body.lr.ph.i275:                            ; preds = %bsW.exit308
  %numZ.i273 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i = load i32, i32* %numZ.i273, align 4, !tbaa !94
  br label %while.body.i284

while.body.i284:                                  ; preds = %while.body.i284, %while.body.lr.ph.i275
  %86 = phi i32 [ %.pre22.i, %while.body.lr.ph.i275 ], [ %inc.i280, %while.body.i284 ]
  %87 = phi i32 [ %84, %while.body.lr.ph.i275 ], [ %shl.i281, %while.body.i284 ]
  %shr.i276 = lshr i32 %87, 24
  %conv.i277 = trunc i32 %shr.i276 to i8
  %88 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i278 = sext i32 %86 to i64
  %arrayidx.i279 = getelementptr inbounds i8, i8* %88, i64 %idxprom.i278
  store i8 %conv.i277, i8* %arrayidx.i279, align 1, !tbaa !12
  %89 = load i32, i32* %numZ.i273, align 4, !tbaa !94
  %inc.i280 = add nsw i32 %89, 1
  store i32 %inc.i280, i32* %numZ.i273, align 4, !tbaa !94
  %90 = load i32, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %shl.i281 = shl i32 %90, 8
  store i32 %shl.i281, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %91 = load i32, i32* %bsLive.i.i459, align 4, !tbaa !141
  %sub.i282 = add nsw i32 %91, -8
  store i32 %sub.i282, i32* %bsLive.i.i459, align 4, !tbaa !141
  %cmp.i283 = icmp sgt i32 %91, 15
  br i1 %cmp.i283, label %while.body.i284, label %bsW.exit

bsW.exit:                                         ; preds = %while.body.i284, %bsW.exit308
  %92 = phi i32 [ %84, %bsW.exit308 ], [ %shl.i281, %while.body.i284 ]
  %.lcssa.i = phi i32 [ %add.i307, %bsW.exit308 ], [ %sub.i282, %while.body.i284 ]
  %sub6.i = sub i32 8, %.lcssa.i
  %shl7.i = shl i32 %85, %sub6.i
  %or.i = or i32 %shl7.i, %92
  store i32 %or.i, i32* %bsBuff.i.i461, align 8, !tbaa !142
  %add.i285 = add nsw i32 %.lcssa.i, 24
  store i32 %add.i285, i32* %bsLive.i.i459, align 4, !tbaa !141
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %93) #2
  %ptr1.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 8
  %94 = load i32*, i32** %ptr1.i, align 8, !tbaa !24
  %block2.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 9
  %95 = load i8*, i8** %block2.i, align 8, !tbaa !26
  %mtfv3.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 10
  %96 = load i16*, i16** %mtfv3.i, align 8, !tbaa !85
  %nInUse.i.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 21
  store i32 0, i32* %nInUse.i.i, align 4, !tbaa !143
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.1, %bsW.exit
  %97 = phi i32 [ 0, %bsW.exit ], [ %204, %for.inc.i.i.1 ]
  %indvars.iv.i.i = phi i64 [ 0, %bsW.exit ], [ %indvars.iv.next.i.i.1, %for.inc.i.i.1 ]
  %arrayidx.i.i264 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %indvars.iv.i.i
  %98 = load i8, i8* %arrayidx.i.i264, align 1, !tbaa !12
  %tobool.i.i = icmp eq i8 %98, 0
  br i1 %tobool.i.i, label %for.inc.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.body.i.i
  %conv.i.i265 = trunc i32 %97 to i8
  %arrayidx3.i.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 23, i64 %indvars.iv.i.i
  store i8 %conv.i.i265, i8* %arrayidx3.i.i, align 1, !tbaa !12
  %inc.i.i266 = add nsw i32 %97, 1
  store i32 %inc.i.i266, i32* %nInUse.i.i, align 4, !tbaa !143
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then.i.i, %for.body.i.i
  %99 = phi i32 [ %97, %for.body.i.i ], [ %inc.i.i266, %if.then.i.i ]
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i264.1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %indvars.iv.next.i.i
  %100 = load i8, i8* %arrayidx.i.i264.1, align 1, !tbaa !12
  %tobool.i.i.1 = icmp eq i8 %100, 0
  br i1 %tobool.i.i.1, label %for.inc.i.i.1, label %if.then.i.i.1

makeMaps_e.exit.i:                                ; preds = %for.inc.i.i.1
  %add.i = add i32 %204, 1
  %cmp205.i = icmp slt i32 %204, -1
  br i1 %cmp205.i, label %for.end12.i, label %for.end.i

for.end.i:                                        ; preds = %makeMaps_e.exit.i
  %scevgep.i = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 32, i64 0
  %scevgep217.i = bitcast i32* %scevgep.i to i8*
  %101 = zext i32 %add.i to i64
  %102 = shl nuw nsw i64 %101, 2
  %103 = add nuw nsw i64 %102, 4
  tail call void @llvm.memset.p0i8.i64(i8* %scevgep217.i, i8 0, i64 %103, i32 4, i1 false) #2
  %cmp6203.i = icmp sgt i32 %204, 0
  br i1 %cmp6203.i, label %for.body7.lr.ph.i, label %for.end12.i

for.body7.lr.ph.i:                                ; preds = %for.end.i
  %wide.trip.count.i = zext i32 %204 to i64
  %min.iters.check = icmp ult i32 %204, 32
  br i1 %min.iters.check, label %for.body7.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body7.lr.ph.i
  %n.vec = and i64 %wide.trip.count.i, 4294967264
  %104 = add nsw i64 %n.vec, -32
  %105 = lshr exact i64 %104, 5
  %106 = add nuw nsw i64 %105, 1
  %xtraiter = and i64 %106, 3
  %107 = icmp ult i64 %104, 96
  br i1 %107, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i64 %106, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %vec.ind529 = phi <16 x i8> [ <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, %vector.ph.new ], [ %vec.ind.next532.3, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %step.add530 = add <16 x i8> %vec.ind529, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %108 = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 %index
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %vec.ind529, <16 x i8>* %109, align 16, !tbaa !12
  %110 = getelementptr i8, i8* %108, i64 16
  %111 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %step.add530, <16 x i8>* %111, align 16, !tbaa !12
  %index.next = or i64 %index, 32
  %vec.ind.next532 = add <16 x i8> %vec.ind529, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %step.add530.1 = add <16 x i8> %vec.ind529, <i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48>
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 %index.next
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %vec.ind.next532, <16 x i8>* %113, align 16, !tbaa !12
  %114 = getelementptr i8, i8* %112, i64 16
  %115 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %step.add530.1, <16 x i8>* %115, align 16, !tbaa !12
  %index.next.1 = or i64 %index, 64
  %vec.ind.next532.1 = add <16 x i8> %vec.ind529, <i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64>
  %step.add530.2 = add <16 x i8> %vec.ind529, <i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80>
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 %index.next.1
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %vec.ind.next532.1, <16 x i8>* %117, align 16, !tbaa !12
  %118 = getelementptr i8, i8* %116, i64 16
  %119 = bitcast i8* %118 to <16 x i8>*
  store <16 x i8> %step.add530.2, <16 x i8>* %119, align 16, !tbaa !12
  %index.next.2 = or i64 %index, 96
  %vec.ind.next532.2 = add <16 x i8> %vec.ind529, <i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96>
  %step.add530.3 = add <16 x i8> %vec.ind529, <i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112>
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 %index.next.2
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %vec.ind.next532.2, <16 x i8>* %121, align 16, !tbaa !12
  %122 = getelementptr i8, i8* %120, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %step.add530.3, <16 x i8>* %123, align 16, !tbaa !12
  %index.next.3 = add i64 %index, 128
  %vec.ind.next532.3 = xor <16 x i8> %vec.ind529, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !144

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %vec.ind529.unr = phi <16 x i8> [ <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, %vector.ph ], [ %vec.ind.next532.3, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i64 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %vec.ind529.epil = phi <16 x i8> [ %vec.ind529.unr, %vector.body.epil.preheader ], [ %vec.ind.next532.epil, %vector.body.epil ]
  %epil.iter = phi i64 [ %xtraiter, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %step.add530.epil = add <16 x i8> %vec.ind529.epil, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %124 = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 %index.epil
  %125 = bitcast i8* %124 to <16 x i8>*
  store <16 x i8> %vec.ind529.epil, <16 x i8>* %125, align 16, !tbaa !12
  %126 = getelementptr i8, i8* %124, i64 16
  %127 = bitcast i8* %126 to <16 x i8>*
  store <16 x i8> %step.add530.epil, <16 x i8>* %127, align 16, !tbaa !12
  %index.next.epil = add i64 %index.epil, 32
  %vec.ind.next532.epil = add <16 x i8> %vec.ind529.epil, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !145

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i
  br i1 %cmp.n, label %for.end12.i, label %for.body7.i.preheader

for.body7.i.preheader:                            ; preds = %middle.block, %for.body7.lr.ph.i
  %indvars.iv211.i.ph = phi i64 [ 0, %for.body7.lr.ph.i ], [ %n.vec, %middle.block ]
  br label %for.body7.i

for.body7.i:                                      ; preds = %for.body7.i, %for.body7.i.preheader
  %indvars.iv211.i = phi i64 [ %indvars.iv.next212.i, %for.body7.i ], [ %indvars.iv211.i.ph, %for.body7.i.preheader ]
  %conv.i267 = trunc i64 %indvars.iv211.i to i8
  %arrayidx9.i = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 %indvars.iv211.i
  store i8 %conv.i267, i8* %arrayidx9.i, align 1, !tbaa !12
  %indvars.iv.next212.i = add nuw nsw i64 %indvars.iv211.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next212.i, %wide.trip.count.i
  br i1 %exitcond.i, label %for.end12.i, label %for.body7.i, !llvm.loop !146

for.end12.i:                                      ; preds = %for.body7.i, %middle.block, %for.end.i, %makeMaps_e.exit.i
  %128 = load i32, i32* %nblock, align 4, !tbaa !28
  %cmp14197.i = icmp sgt i32 %128, 0
  br i1 %cmp14197.i, label %for.body16.lr.ph.i, label %generateMTFValues.exit

for.body16.lr.ph.i:                               ; preds = %for.end12.i
  %arrayidx49.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 32, i64 0
  %arrayidx42.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 32, i64 1
  %arrayidx58.i = getelementptr inbounds [256 x i8], [256 x i8]* %yy.i, i64 0, i64 1
  %sub.ptr.rhs.cast.i = ptrtoint [256 x i8]* %yy.i to i64
  br label %for.body16.i

for.body16.i:                                     ; preds = %if.end82.i, %for.body16.lr.ph.i
  %indvars.iv209.i = phi i64 [ 0, %for.body16.lr.ph.i ], [ %indvars.iv.next210.i, %if.end82.i ]
  %129 = phi i32 [ %128, %for.body16.lr.ph.i ], [ %142, %if.end82.i ]
  %zPend.0199.i = phi i32 [ 0, %for.body16.lr.ph.i ], [ %zPend.3.i, %if.end82.i ]
  %wr.0198.i = phi i32 [ 0, %for.body16.lr.ph.i ], [ %wr.4.i, %if.end82.i ]
  %arrayidx18.i = getelementptr inbounds i32, i32* %94, i64 %indvars.iv209.i
  %130 = load i32, i32* %arrayidx18.i, align 4, !tbaa !6
  %sub.i268 = add i32 %130, -1
  %cmp19.i = icmp slt i32 %sub.i268, 0
  %add22.i = select i1 %cmp19.i, i32 %129, i32 0
  %spec.select.i = add nsw i32 %add22.i, %sub.i268
  %idxprom23.i = sext i32 %spec.select.i to i64
  %arrayidx24.i = getelementptr inbounds i8, i8* %95, i64 %idxprom23.i
  %131 = load i8, i8* %arrayidx24.i, align 1, !tbaa !12
  %idxprom25.i = zext i8 %131 to i64
  %arrayidx26.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 23, i64 %idxprom25.i
  %132 = load i8, i8* %arrayidx26.i, align 1, !tbaa !12
  %133 = load i8, i8* %93, align 16, !tbaa !12
  %cmp30.i = icmp eq i8 %133, %132
  br i1 %cmp30.i, label %if.then32.i, label %if.else.i

if.then32.i:                                      ; preds = %for.body16.i
  %inc33.i = add nsw i32 %zPend.0199.i, 1
  br label %if.end82.i

if.else.i:                                        ; preds = %for.body16.i
  %cmp34.i = icmp sgt i32 %zPend.0199.i, 0
  br i1 %cmp34.i, label %if.then36.i, label %if.end57.i

if.then36.i:                                      ; preds = %if.else.i
  %dec.i = add nsw i32 %zPend.0199.i, -1
  %134 = sext i32 %wr.0198.i to i64
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end55.i, %if.then36.i
  %indvars.iv207.i = phi i64 [ %indvars.iv.next208.i, %if.end55.i ], [ %134, %if.then36.i ]
  %zPend.1.i = phi i32 [ %div.i, %if.end55.i ], [ %dec.i, %if.then36.i ]
  %and.i = and i32 %zPend.1.i, 1
  %tobool.i = icmp eq i32 %and.i, 0
  %arrayidx39.i = getelementptr inbounds i16, i16* %96, i64 %indvars.iv207.i
  br i1 %tobool.i, label %if.else44.i, label %if.then37.i

if.then37.i:                                      ; preds = %while.cond.i
  store i16 1, i16* %arrayidx39.i, align 2, !tbaa !33
  %135 = load i32, i32* %arrayidx42.i, align 4, !tbaa !6
  %inc43.i = add nsw i32 %135, 1
  store i32 %inc43.i, i32* %arrayidx42.i, align 4, !tbaa !6
  br label %if.end51.i

if.else44.i:                                      ; preds = %while.cond.i
  store i16 0, i16* %arrayidx39.i, align 2, !tbaa !33
  %136 = load i32, i32* %arrayidx49.i, align 8, !tbaa !6
  %inc50.i = add nsw i32 %136, 1
  store i32 %inc50.i, i32* %arrayidx49.i, align 8, !tbaa !6
  br label %if.end51.i

if.end51.i:                                       ; preds = %if.else44.i, %if.then37.i
  %indvars.iv.next208.i = add i64 %indvars.iv207.i, 1
  %cmp52.i = icmp slt i32 %zPend.1.i, 2
  br i1 %cmp52.i, label %if.end57.loopexit.i, label %if.end55.i

if.end55.i:                                       ; preds = %if.end51.i
  %sub56.i = add nsw i32 %zPend.1.i, -2
  %div.i = sdiv i32 %sub56.i, 2
  br label %while.cond.i

if.end57.loopexit.i:                              ; preds = %if.end51.i
  %137 = trunc i64 %indvars.iv.next208.i to i32
  %.pre.i269 = load i8, i8* %93, align 16, !tbaa !12
  br label %if.end57.i

if.end57.i:                                       ; preds = %if.end57.loopexit.i, %if.else.i
  %138 = phi i8 [ %133, %if.else.i ], [ %.pre.i269, %if.end57.loopexit.i ]
  %wr.3.i = phi i32 [ %wr.0198.i, %if.else.i ], [ %137, %if.end57.loopexit.i ]
  %zPend.2.i = phi i32 [ %zPend.0199.i, %if.else.i ], [ 0, %if.end57.loopexit.i ]
  %139 = load i8, i8* %arrayidx58.i, align 1, !tbaa !12
  store i8 %138, i8* %arrayidx58.i, align 1, !tbaa !12
  %cmp65193.i = icmp eq i8 %132, %139
  br i1 %cmp65193.i, label %while.end68.i, label %while.body67.i.preheader

while.body67.i.preheader:                         ; preds = %if.end57.i
  br label %while.body67.i

while.body67.i:                                   ; preds = %while.body67.i, %while.body67.i.preheader
  %ryy_j.0195.i = phi i8* [ %incdec.ptr.i, %while.body67.i ], [ %arrayidx58.i, %while.body67.i.preheader ]
  %rtmp.0194.i = phi i8 [ %140, %while.body67.i ], [ %139, %while.body67.i.preheader ]
  %incdec.ptr.i = getelementptr inbounds i8, i8* %ryy_j.0195.i, i64 1
  %140 = load i8, i8* %incdec.ptr.i, align 1, !tbaa !12
  store i8 %rtmp.0194.i, i8* %incdec.ptr.i, align 1, !tbaa !12
  %cmp65.i = icmp eq i8 %132, %140
  br i1 %cmp65.i, label %while.end68.i, label %while.body67.i

while.end68.i:                                    ; preds = %while.body67.i, %if.end57.i
  %ryy_j.0.lcssa.i = phi i8* [ %arrayidx58.i, %if.end57.i ], [ %incdec.ptr.i, %while.body67.i ]
  store i8 %132, i8* %93, align 16, !tbaa !12
  %sub.ptr.lhs.cast.i = ptrtoint i8* %ryy_j.0.lcssa.i to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv71.i = trunc i64 %sub.ptr.sub.i to i32
  %add72.i = add nsw i32 %conv71.i, 1
  %conv73.i = trunc i32 %add72.i to i16
  %idxprom74.i = sext i32 %wr.3.i to i64
  %arrayidx75.i = getelementptr inbounds i16, i16* %96, i64 %idxprom74.i
  store i16 %conv73.i, i16* %arrayidx75.i, align 2, !tbaa !33
  %inc76.i = add nsw i32 %wr.3.i, 1
  %idxprom79.i = sext i32 %add72.i to i64
  %arrayidx80.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 32, i64 %idxprom79.i
  %141 = load i32, i32* %arrayidx80.i, align 4, !tbaa !6
  %inc81.i = add nsw i32 %141, 1
  store i32 %inc81.i, i32* %arrayidx80.i, align 4, !tbaa !6
  %.pre218.i = load i32, i32* %nblock, align 4, !tbaa !28
  br label %if.end82.i

if.end82.i:                                       ; preds = %while.end68.i, %if.then32.i
  %142 = phi i32 [ %129, %if.then32.i ], [ %.pre218.i, %while.end68.i ]
  %wr.4.i = phi i32 [ %wr.0198.i, %if.then32.i ], [ %inc76.i, %while.end68.i ]
  %zPend.3.i = phi i32 [ %inc33.i, %if.then32.i ], [ %zPend.2.i, %while.end68.i ]
  %indvars.iv.next210.i = add nuw nsw i64 %indvars.iv209.i, 1
  %143 = sext i32 %142 to i64
  %cmp14.i = icmp slt i64 %indvars.iv.next210.i, %143
  br i1 %cmp14.i, label %for.body16.i, label %for.end85.i

for.end85.i:                                      ; preds = %if.end82.i
  %cmp86.i = icmp sgt i32 %zPend.3.i, 0
  br i1 %cmp86.i, label %if.then88.i, label %generateMTFValues.exit

if.then88.i:                                      ; preds = %for.end85.i
  %dec89.i = add nsw i32 %zPend.3.i, -1
  %144 = sext i32 %wr.4.i to i64
  br label %while.cond90.i

while.cond90.i:                                   ; preds = %if.end112.i, %if.then88.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %if.end112.i ], [ %144, %if.then88.i ]
  %zPend.4.i = phi i32 [ %div114.i, %if.end112.i ], [ %dec89.i, %if.then88.i ]
  %and92.i = and i32 %zPend.4.i, 1
  %tobool93.i = icmp eq i32 %and92.i, 0
  %arrayidx96.i = getelementptr inbounds i16, i16* %96, i64 %indvars.iv.i
  br i1 %tobool93.i, label %if.else101.i, label %if.then94.i

if.then94.i:                                      ; preds = %while.cond90.i
  store i16 1, i16* %arrayidx96.i, align 2, !tbaa !33
  %145 = load i32, i32* %arrayidx42.i, align 4, !tbaa !6
  %inc100.i = add nsw i32 %145, 1
  store i32 %inc100.i, i32* %arrayidx42.i, align 4, !tbaa !6
  br label %if.end108.i

if.else101.i:                                     ; preds = %while.cond90.i
  store i16 0, i16* %arrayidx96.i, align 2, !tbaa !33
  %146 = load i32, i32* %arrayidx49.i, align 8, !tbaa !6
  %inc107.i = add nsw i32 %146, 1
  store i32 %inc107.i, i32* %arrayidx49.i, align 8, !tbaa !6
  br label %if.end108.i

if.end108.i:                                      ; preds = %if.else101.i, %if.then94.i
  %indvars.iv.next.i = add i64 %indvars.iv.i, 1
  %cmp109.i = icmp slt i32 %zPend.4.i, 2
  br i1 %cmp109.i, label %if.end116.loopexit.i, label %if.end112.i

if.end112.i:                                      ; preds = %if.end108.i
  %sub113.i = add nsw i32 %zPend.4.i, -2
  %div114.i = sdiv i32 %sub113.i, 2
  br label %while.cond90.i

if.end116.loopexit.i:                             ; preds = %if.end108.i
  %147 = trunc i64 %indvars.iv.next.i to i32
  br label %generateMTFValues.exit

generateMTFValues.exit:                           ; preds = %if.end116.loopexit.i, %for.end85.i, %for.end12.i
  %wr.7.i = phi i32 [ %wr.4.i, %for.end85.i ], [ %147, %if.end116.loopexit.i ], [ 0, %for.end12.i ]
  %conv117.i = trunc i32 %add.i to i16
  %idxprom118.i = sext i32 %wr.7.i to i64
  %arrayidx119.i = getelementptr inbounds i16, i16* %96, i64 %idxprom118.i
  store i16 %conv117.i, i16* %arrayidx119.i, align 2, !tbaa !33
  %inc120.i = add nsw i32 %wr.7.i, 1
  %idxprom122.i = sext i32 %add.i to i64
  %arrayidx123.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 32, i64 %idxprom122.i
  %148 = load i32, i32* %arrayidx123.i, align 4, !tbaa !6
  %inc124.i = add nsw i32 %148, 1
  store i32 %inc124.i, i32* %arrayidx123.i, align 4, !tbaa !6
  %nMTF.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 31
  store i32 %inc120.i, i32* %nMTF.i, align 4, !tbaa !147
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %93) #2
  call fastcc void @sendMTFValues(%struct.EState* nonnull %s)
  br label %if.end26

if.end26:                                         ; preds = %generateMTFValues.exit, %if.end20
  %tobool = icmp eq i8 %is_last_block, 0
  br i1 %tobool, label %if.end36, label %if.then27

if.then27:                                        ; preds = %if.end26
  %bsLive.i.i214 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 25
  %149 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp20.i.i215 = icmp sgt i32 %149, 7
  %bsBuff.i.i216 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 24
  br i1 %cmp20.i.i215, label %while.body.lr.ph.i.i223, label %entry.while.end_crit_edge.i.i218

entry.while.end_crit_edge.i.i218:                 ; preds = %if.then27
  %.pre23.i.i217 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  br label %bsPutUChar.exit238

while.body.lr.ph.i.i223:                          ; preds = %if.then27
  %numZ.i.i220 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre.i.i221 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %.pre22.i.i222 = load i32, i32* %numZ.i.i220, align 4, !tbaa !94
  br label %while.body.i.i232

while.body.i.i232:                                ; preds = %while.body.i.i232, %while.body.lr.ph.i.i223
  %150 = phi i32 [ %.pre22.i.i222, %while.body.lr.ph.i.i223 ], [ %inc.i.i228, %while.body.i.i232 ]
  %151 = phi i32 [ %.pre.i.i221, %while.body.lr.ph.i.i223 ], [ %shl.i.i229, %while.body.i.i232 ]
  %shr.i.i224 = lshr i32 %151, 24
  %conv.i.i225 = trunc i32 %shr.i.i224 to i8
  %152 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i226 = sext i32 %150 to i64
  %arrayidx.i.i227 = getelementptr inbounds i8, i8* %152, i64 %idxprom.i.i226
  store i8 %conv.i.i225, i8* %arrayidx.i.i227, align 1, !tbaa !12
  %153 = load i32, i32* %numZ.i.i220, align 4, !tbaa !94
  %inc.i.i228 = add nsw i32 %153, 1
  store i32 %inc.i.i228, i32* %numZ.i.i220, align 4, !tbaa !94
  %154 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %shl.i.i229 = shl i32 %154, 8
  store i32 %shl.i.i229, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %155 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %sub.i.i230 = add nsw i32 %155, -8
  store i32 %sub.i.i230, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp.i.i231 = icmp sgt i32 %155, 15
  br i1 %cmp.i.i231, label %while.body.i.i232, label %bsPutUChar.exit238

bsPutUChar.exit238:                               ; preds = %while.body.i.i232, %entry.while.end_crit_edge.i.i218
  %156 = phi i32 [ %.pre23.i.i217, %entry.while.end_crit_edge.i.i218 ], [ %shl.i.i229, %while.body.i.i232 ]
  %.lcssa.i.i233 = phi i32 [ %149, %entry.while.end_crit_edge.i.i218 ], [ %sub.i.i230, %while.body.i.i232 ]
  %sub6.i.i234 = sub i32 24, %.lcssa.i.i233
  %shl7.i.i235 = shl i32 23, %sub6.i.i234
  %or.i.i236 = or i32 %shl7.i.i235, %156
  store i32 %or.i.i236, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %add.i.i237 = add nsw i32 %.lcssa.i.i233, 8
  store i32 %add.i.i237, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp20.i.i190 = icmp sgt i32 %.lcssa.i.i233, -1
  br i1 %cmp20.i.i190, label %while.body.lr.ph.i.i198, label %bsPutUChar.exit213

while.body.lr.ph.i.i198:                          ; preds = %bsPutUChar.exit238
  %numZ.i.i195 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i197 = load i32, i32* %numZ.i.i195, align 4, !tbaa !94
  br label %while.body.i.i207

while.body.i.i207:                                ; preds = %while.body.i.i207, %while.body.lr.ph.i.i198
  %157 = phi i32 [ %.pre22.i.i197, %while.body.lr.ph.i.i198 ], [ %inc.i.i203, %while.body.i.i207 ]
  %158 = phi i32 [ %or.i.i236, %while.body.lr.ph.i.i198 ], [ %shl.i.i204, %while.body.i.i207 ]
  %shr.i.i199 = lshr i32 %158, 24
  %conv.i.i200 = trunc i32 %shr.i.i199 to i8
  %159 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i201 = sext i32 %157 to i64
  %arrayidx.i.i202 = getelementptr inbounds i8, i8* %159, i64 %idxprom.i.i201
  store i8 %conv.i.i200, i8* %arrayidx.i.i202, align 1, !tbaa !12
  %160 = load i32, i32* %numZ.i.i195, align 4, !tbaa !94
  %inc.i.i203 = add nsw i32 %160, 1
  store i32 %inc.i.i203, i32* %numZ.i.i195, align 4, !tbaa !94
  %161 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %shl.i.i204 = shl i32 %161, 8
  store i32 %shl.i.i204, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %162 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %sub.i.i205 = add nsw i32 %162, -8
  store i32 %sub.i.i205, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp.i.i206 = icmp sgt i32 %162, 15
  br i1 %cmp.i.i206, label %while.body.i.i207, label %bsPutUChar.exit213

bsPutUChar.exit213:                               ; preds = %while.body.i.i207, %bsPutUChar.exit238
  %163 = phi i32 [ %or.i.i236, %bsPutUChar.exit238 ], [ %shl.i.i204, %while.body.i.i207 ]
  %.lcssa.i.i208 = phi i32 [ %add.i.i237, %bsPutUChar.exit238 ], [ %sub.i.i205, %while.body.i.i207 ]
  %sub6.i.i209 = sub i32 24, %.lcssa.i.i208
  %shl7.i.i210 = shl i32 114, %sub6.i.i209
  %or.i.i211 = or i32 %shl7.i.i210, %163
  store i32 %or.i.i211, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %add.i.i212 = add nsw i32 %.lcssa.i.i208, 8
  store i32 %add.i.i212, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp20.i.i165 = icmp sgt i32 %.lcssa.i.i208, -1
  br i1 %cmp20.i.i165, label %while.body.lr.ph.i.i173, label %bsPutUChar.exit188

while.body.lr.ph.i.i173:                          ; preds = %bsPutUChar.exit213
  %numZ.i.i170 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i172 = load i32, i32* %numZ.i.i170, align 4, !tbaa !94
  br label %while.body.i.i182

while.body.i.i182:                                ; preds = %while.body.i.i182, %while.body.lr.ph.i.i173
  %164 = phi i32 [ %.pre22.i.i172, %while.body.lr.ph.i.i173 ], [ %inc.i.i178, %while.body.i.i182 ]
  %165 = phi i32 [ %or.i.i211, %while.body.lr.ph.i.i173 ], [ %shl.i.i179, %while.body.i.i182 ]
  %shr.i.i174 = lshr i32 %165, 24
  %conv.i.i175 = trunc i32 %shr.i.i174 to i8
  %166 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i176 = sext i32 %164 to i64
  %arrayidx.i.i177 = getelementptr inbounds i8, i8* %166, i64 %idxprom.i.i176
  store i8 %conv.i.i175, i8* %arrayidx.i.i177, align 1, !tbaa !12
  %167 = load i32, i32* %numZ.i.i170, align 4, !tbaa !94
  %inc.i.i178 = add nsw i32 %167, 1
  store i32 %inc.i.i178, i32* %numZ.i.i170, align 4, !tbaa !94
  %168 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %shl.i.i179 = shl i32 %168, 8
  store i32 %shl.i.i179, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %169 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %sub.i.i180 = add nsw i32 %169, -8
  store i32 %sub.i.i180, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp.i.i181 = icmp sgt i32 %169, 15
  br i1 %cmp.i.i181, label %while.body.i.i182, label %bsPutUChar.exit188

bsPutUChar.exit188:                               ; preds = %while.body.i.i182, %bsPutUChar.exit213
  %170 = phi i32 [ %or.i.i211, %bsPutUChar.exit213 ], [ %shl.i.i179, %while.body.i.i182 ]
  %.lcssa.i.i183 = phi i32 [ %add.i.i212, %bsPutUChar.exit213 ], [ %sub.i.i180, %while.body.i.i182 ]
  %sub6.i.i184 = sub i32 24, %.lcssa.i.i183
  %shl7.i.i185 = shl i32 69, %sub6.i.i184
  %or.i.i186 = or i32 %shl7.i.i185, %170
  store i32 %or.i.i186, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %add.i.i187 = add nsw i32 %.lcssa.i.i183, 8
  store i32 %add.i.i187, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp20.i.i140 = icmp sgt i32 %.lcssa.i.i183, -1
  br i1 %cmp20.i.i140, label %while.body.lr.ph.i.i148, label %bsPutUChar.exit163

while.body.lr.ph.i.i148:                          ; preds = %bsPutUChar.exit188
  %numZ.i.i145 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i147 = load i32, i32* %numZ.i.i145, align 4, !tbaa !94
  br label %while.body.i.i157

while.body.i.i157:                                ; preds = %while.body.i.i157, %while.body.lr.ph.i.i148
  %171 = phi i32 [ %.pre22.i.i147, %while.body.lr.ph.i.i148 ], [ %inc.i.i153, %while.body.i.i157 ]
  %172 = phi i32 [ %or.i.i186, %while.body.lr.ph.i.i148 ], [ %shl.i.i154, %while.body.i.i157 ]
  %shr.i.i149 = lshr i32 %172, 24
  %conv.i.i150 = trunc i32 %shr.i.i149 to i8
  %173 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i151 = sext i32 %171 to i64
  %arrayidx.i.i152 = getelementptr inbounds i8, i8* %173, i64 %idxprom.i.i151
  store i8 %conv.i.i150, i8* %arrayidx.i.i152, align 1, !tbaa !12
  %174 = load i32, i32* %numZ.i.i145, align 4, !tbaa !94
  %inc.i.i153 = add nsw i32 %174, 1
  store i32 %inc.i.i153, i32* %numZ.i.i145, align 4, !tbaa !94
  %175 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %shl.i.i154 = shl i32 %175, 8
  store i32 %shl.i.i154, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %176 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %sub.i.i155 = add nsw i32 %176, -8
  store i32 %sub.i.i155, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp.i.i156 = icmp sgt i32 %176, 15
  br i1 %cmp.i.i156, label %while.body.i.i157, label %bsPutUChar.exit163

bsPutUChar.exit163:                               ; preds = %while.body.i.i157, %bsPutUChar.exit188
  %177 = phi i32 [ %or.i.i186, %bsPutUChar.exit188 ], [ %shl.i.i154, %while.body.i.i157 ]
  %.lcssa.i.i158 = phi i32 [ %add.i.i187, %bsPutUChar.exit188 ], [ %sub.i.i155, %while.body.i.i157 ]
  %sub6.i.i159 = sub i32 24, %.lcssa.i.i158
  %shl7.i.i160 = shl i32 56, %sub6.i.i159
  %or.i.i161 = or i32 %shl7.i.i160, %177
  store i32 %or.i.i161, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %add.i.i162 = add nsw i32 %.lcssa.i.i158, 8
  store i32 %add.i.i162, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp20.i.i115 = icmp sgt i32 %.lcssa.i.i158, -1
  br i1 %cmp20.i.i115, label %while.body.lr.ph.i.i123, label %bsPutUChar.exit138

while.body.lr.ph.i.i123:                          ; preds = %bsPutUChar.exit163
  %numZ.i.i120 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i122 = load i32, i32* %numZ.i.i120, align 4, !tbaa !94
  br label %while.body.i.i132

while.body.i.i132:                                ; preds = %while.body.i.i132, %while.body.lr.ph.i.i123
  %178 = phi i32 [ %.pre22.i.i122, %while.body.lr.ph.i.i123 ], [ %inc.i.i128, %while.body.i.i132 ]
  %179 = phi i32 [ %or.i.i161, %while.body.lr.ph.i.i123 ], [ %shl.i.i129, %while.body.i.i132 ]
  %shr.i.i124 = lshr i32 %179, 24
  %conv.i.i125 = trunc i32 %shr.i.i124 to i8
  %180 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i126 = sext i32 %178 to i64
  %arrayidx.i.i127 = getelementptr inbounds i8, i8* %180, i64 %idxprom.i.i126
  store i8 %conv.i.i125, i8* %arrayidx.i.i127, align 1, !tbaa !12
  %181 = load i32, i32* %numZ.i.i120, align 4, !tbaa !94
  %inc.i.i128 = add nsw i32 %181, 1
  store i32 %inc.i.i128, i32* %numZ.i.i120, align 4, !tbaa !94
  %182 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %shl.i.i129 = shl i32 %182, 8
  store i32 %shl.i.i129, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %183 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %sub.i.i130 = add nsw i32 %183, -8
  store i32 %sub.i.i130, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp.i.i131 = icmp sgt i32 %183, 15
  br i1 %cmp.i.i131, label %while.body.i.i132, label %bsPutUChar.exit138

bsPutUChar.exit138:                               ; preds = %while.body.i.i132, %bsPutUChar.exit163
  %184 = phi i32 [ %or.i.i161, %bsPutUChar.exit163 ], [ %shl.i.i129, %while.body.i.i132 ]
  %.lcssa.i.i133 = phi i32 [ %add.i.i162, %bsPutUChar.exit163 ], [ %sub.i.i130, %while.body.i.i132 ]
  %sub6.i.i134 = sub i32 24, %.lcssa.i.i133
  %shl7.i.i135 = shl i32 80, %sub6.i.i134
  %or.i.i136 = or i32 %shl7.i.i135, %184
  store i32 %or.i.i136, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %add.i.i137 = add nsw i32 %.lcssa.i.i133, 8
  store i32 %add.i.i137, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp20.i.i90 = icmp sgt i32 %.lcssa.i.i133, -1
  br i1 %cmp20.i.i90, label %while.body.lr.ph.i.i98, label %bsPutUChar.exit113

while.body.lr.ph.i.i98:                           ; preds = %bsPutUChar.exit138
  %numZ.i.i95 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i.i97 = load i32, i32* %numZ.i.i95, align 4, !tbaa !94
  br label %while.body.i.i107

while.body.i.i107:                                ; preds = %while.body.i.i107, %while.body.lr.ph.i.i98
  %185 = phi i32 [ %.pre22.i.i97, %while.body.lr.ph.i.i98 ], [ %inc.i.i103, %while.body.i.i107 ]
  %186 = phi i32 [ %or.i.i136, %while.body.lr.ph.i.i98 ], [ %shl.i.i104, %while.body.i.i107 ]
  %shr.i.i99 = lshr i32 %186, 24
  %conv.i.i100 = trunc i32 %shr.i.i99 to i8
  %187 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i.i101 = sext i32 %185 to i64
  %arrayidx.i.i102 = getelementptr inbounds i8, i8* %187, i64 %idxprom.i.i101
  store i8 %conv.i.i100, i8* %arrayidx.i.i102, align 1, !tbaa !12
  %188 = load i32, i32* %numZ.i.i95, align 4, !tbaa !94
  %inc.i.i103 = add nsw i32 %188, 1
  store i32 %inc.i.i103, i32* %numZ.i.i95, align 4, !tbaa !94
  %189 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %shl.i.i104 = shl i32 %189, 8
  store i32 %shl.i.i104, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %190 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %sub.i.i105 = add nsw i32 %190, -8
  store i32 %sub.i.i105, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp.i.i106 = icmp sgt i32 %190, 15
  br i1 %cmp.i.i106, label %while.body.i.i107, label %bsPutUChar.exit113

bsPutUChar.exit113:                               ; preds = %while.body.i.i107, %bsPutUChar.exit138
  %191 = phi i32 [ %or.i.i136, %bsPutUChar.exit138 ], [ %shl.i.i104, %while.body.i.i107 ]
  %.lcssa.i.i108 = phi i32 [ %add.i.i137, %bsPutUChar.exit138 ], [ %sub.i.i105, %while.body.i.i107 ]
  %sub6.i.i109 = sub i32 24, %.lcssa.i.i108
  %shl7.i.i110 = shl i32 144, %sub6.i.i109
  %or.i.i111 = or i32 %shl7.i.i110, %191
  store i32 %or.i.i111, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %add.i.i112 = add nsw i32 %.lcssa.i.i108, 8
  store i32 %add.i.i112, i32* %bsLive.i.i214, align 4, !tbaa !141
  %combinedCRC28 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 27
  %192 = load i32, i32* %combinedCRC28, align 4, !tbaa !82
  call fastcc void @bsPutUInt32(%struct.EState* nonnull %s, i32 %192)
  %verbosity29 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 28
  %193 = load i32, i32* %verbosity29, align 8, !tbaa !29
  %cmp30 = icmp sgt i32 %193, 1
  br i1 %cmp30, label %if.then32, label %if.end35

if.then32:                                        ; preds = %bsPutUChar.exit113
  %194 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %195 = load i32, i32* %combinedCRC28, align 4, !tbaa !82
  %196 = getelementptr [36 x i8], [36 x i8]* @.str.1.67, i64 0, i64 0
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %194, i8* %196, i32 %195) #15
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %bsPutUChar.exit113
  %197 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp10.i = icmp sgt i32 %197, 0
  br i1 %cmp10.i, label %while.body.lr.ph.i, label %if.end36

while.body.lr.ph.i:                               ; preds = %if.end35
  %numZ.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre.i = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %.pre11.i = load i32, i32* %numZ.i, align 4, !tbaa !94
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %198 = phi i32 [ %.pre11.i, %while.body.lr.ph.i ], [ %inc.i, %while.body.i ]
  %199 = phi i32 [ %.pre.i, %while.body.lr.ph.i ], [ %shl.i, %while.body.i ]
  %shr.i = lshr i32 %199, 24
  %conv.i = trunc i32 %shr.i to i8
  %200 = load i8*, i8** %zbits, align 8, !tbaa !86
  %idxprom.i = sext i32 %198 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %200, i64 %idxprom.i
  store i8 %conv.i, i8* %arrayidx.i, align 1, !tbaa !12
  %201 = load i32, i32* %numZ.i, align 4, !tbaa !94
  %inc.i = add nsw i32 %201, 1
  store i32 %inc.i, i32* %numZ.i, align 4, !tbaa !94
  %202 = load i32, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %shl.i = shl i32 %202, 8
  store i32 %shl.i, i32* %bsBuff.i.i216, align 8, !tbaa !142
  %203 = load i32, i32* %bsLive.i.i214, align 4, !tbaa !141
  %sub.i = add nsw i32 %203, -8
  store i32 %sub.i, i32* %bsLive.i.i214, align 4, !tbaa !141
  %cmp.i = icmp sgt i32 %203, 8
  br i1 %cmp.i, label %while.body.i, label %if.end36

if.end36:                                         ; preds = %while.body.i, %if.end35, %if.end26
  ret void

if.then.i.i.1:                                    ; preds = %for.inc.i.i
  %conv.i.i265.1 = trunc i32 %99 to i8
  %arrayidx3.i.i.1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 23, i64 %indvars.iv.next.i.i
  store i8 %conv.i.i265.1, i8* %arrayidx3.i.i.1, align 1, !tbaa !12
  %inc.i.i266.1 = add nsw i32 %99, 1
  store i32 %inc.i.i266.1, i32* %nInUse.i.i, align 4, !tbaa !143
  br label %for.inc.i.i.1

for.inc.i.i.1:                                    ; preds = %if.then.i.i.1, %for.inc.i.i
  %204 = phi i32 [ %99, %for.inc.i.i ], [ %inc.i.i266.1, %if.then.i.i.1 ]
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %exitcond.i.i.1 = icmp eq i64 %indvars.iv.next.i.i.1, 256
  br i1 %exitcond.i.i.1, label %makeMaps_e.exit.i, label %for.body.i.i
}

; Function Attrs: norecurse nounwind uwtable
define internal fastcc void @bsPutUInt32(%struct.EState* nocapture %s, i32 %u) unnamed_addr #0 {
entry:
  %shr = lshr i32 %u, 24
  %bsLive.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 25
  %0 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %cmp20.i = icmp sgt i32 %0, 7
  %bsBuff.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 24
  br i1 %cmp20.i, label %while.body.lr.ph.i, label %entry.while.end_crit_edge.i

entry.while.end_crit_edge.i:                      ; preds = %entry
  %.pre23.i = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  br label %bsW.exit

while.body.lr.ph.i:                               ; preds = %entry
  %zbits.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 11
  %numZ.i = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre.i = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %.pre22.i = load i32, i32* %numZ.i, align 4, !tbaa !94
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.lr.ph.i
  %1 = phi i32 [ %.pre22.i, %while.body.lr.ph.i ], [ %inc.i, %while.body.i ]
  %2 = phi i32 [ %.pre.i, %while.body.lr.ph.i ], [ %shl.i, %while.body.i ]
  %shr.i = lshr i32 %2, 24
  %conv.i = trunc i32 %shr.i to i8
  %3 = load i8*, i8** %zbits.i, align 8, !tbaa !86
  %idxprom.i = sext i32 %1 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %3, i64 %idxprom.i
  store i8 %conv.i, i8* %arrayidx.i, align 1, !tbaa !12
  %4 = load i32, i32* %numZ.i, align 4, !tbaa !94
  %inc.i = add nsw i32 %4, 1
  store i32 %inc.i, i32* %numZ.i, align 4, !tbaa !94
  %5 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i = shl i32 %5, 8
  store i32 %shl.i, i32* %bsBuff.i, align 8, !tbaa !142
  %6 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i = add nsw i32 %6, -8
  store i32 %sub.i, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i = icmp sgt i32 %6, 15
  br i1 %cmp.i, label %while.body.i, label %bsW.exit

bsW.exit:                                         ; preds = %while.body.i, %entry.while.end_crit_edge.i
  %7 = phi i32 [ %.pre23.i, %entry.while.end_crit_edge.i ], [ %shl.i, %while.body.i ]
  %.lcssa.i = phi i32 [ %0, %entry.while.end_crit_edge.i ], [ %sub.i, %while.body.i ]
  %sub6.i = sub i32 24, %.lcssa.i
  %shl7.i = shl i32 %shr, %sub6.i
  %or.i = or i32 %shl7.i, %7
  store i32 %or.i, i32* %bsBuff.i, align 8, !tbaa !142
  %add.i = add nsw i32 %.lcssa.i, 8
  store i32 %add.i, i32* %bsLive.i, align 4, !tbaa !141
  %shr2 = lshr i32 %u, 16
  %8 = and i32 %shr2, 255
  %cmp20.i70 = icmp sgt i32 %.lcssa.i, -1
  br i1 %cmp20.i70, label %while.body.lr.ph.i78, label %bsW.exit93

while.body.lr.ph.i78:                             ; preds = %bsW.exit
  %zbits.i74 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 11
  %numZ.i75 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i77 = load i32, i32* %numZ.i75, align 4, !tbaa !94
  br label %while.body.i87

while.body.i87:                                   ; preds = %while.body.i87, %while.body.lr.ph.i78
  %9 = phi i32 [ %.pre22.i77, %while.body.lr.ph.i78 ], [ %inc.i83, %while.body.i87 ]
  %10 = phi i32 [ %or.i, %while.body.lr.ph.i78 ], [ %shl.i84, %while.body.i87 ]
  %shr.i79 = lshr i32 %10, 24
  %conv.i80 = trunc i32 %shr.i79 to i8
  %11 = load i8*, i8** %zbits.i74, align 8, !tbaa !86
  %idxprom.i81 = sext i32 %9 to i64
  %arrayidx.i82 = getelementptr inbounds i8, i8* %11, i64 %idxprom.i81
  store i8 %conv.i80, i8* %arrayidx.i82, align 1, !tbaa !12
  %12 = load i32, i32* %numZ.i75, align 4, !tbaa !94
  %inc.i83 = add nsw i32 %12, 1
  store i32 %inc.i83, i32* %numZ.i75, align 4, !tbaa !94
  %13 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i84 = shl i32 %13, 8
  store i32 %shl.i84, i32* %bsBuff.i, align 8, !tbaa !142
  %14 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i85 = add nsw i32 %14, -8
  store i32 %sub.i85, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i86 = icmp sgt i32 %14, 15
  br i1 %cmp.i86, label %while.body.i87, label %bsW.exit93

bsW.exit93:                                       ; preds = %while.body.i87, %bsW.exit
  %15 = phi i32 [ %or.i, %bsW.exit ], [ %shl.i84, %while.body.i87 ]
  %.lcssa.i88 = phi i32 [ %add.i, %bsW.exit ], [ %sub.i85, %while.body.i87 ]
  %sub6.i89 = sub i32 24, %.lcssa.i88
  %shl7.i90 = shl i32 %8, %sub6.i89
  %or.i91 = or i32 %shl7.i90, %15
  store i32 %or.i91, i32* %bsBuff.i, align 8, !tbaa !142
  %add.i92 = add nsw i32 %.lcssa.i88, 8
  store i32 %add.i92, i32* %bsLive.i, align 4, !tbaa !141
  %shr6 = lshr i32 %u, 8
  %16 = and i32 %shr6, 255
  %cmp20.i45 = icmp sgt i32 %.lcssa.i88, -1
  br i1 %cmp20.i45, label %while.body.lr.ph.i53, label %bsW.exit68

while.body.lr.ph.i53:                             ; preds = %bsW.exit93
  %zbits.i49 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 11
  %numZ.i50 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i52 = load i32, i32* %numZ.i50, align 4, !tbaa !94
  br label %while.body.i62

while.body.i62:                                   ; preds = %while.body.i62, %while.body.lr.ph.i53
  %17 = phi i32 [ %.pre22.i52, %while.body.lr.ph.i53 ], [ %inc.i58, %while.body.i62 ]
  %18 = phi i32 [ %or.i91, %while.body.lr.ph.i53 ], [ %shl.i59, %while.body.i62 ]
  %shr.i54 = lshr i32 %18, 24
  %conv.i55 = trunc i32 %shr.i54 to i8
  %19 = load i8*, i8** %zbits.i49, align 8, !tbaa !86
  %idxprom.i56 = sext i32 %17 to i64
  %arrayidx.i57 = getelementptr inbounds i8, i8* %19, i64 %idxprom.i56
  store i8 %conv.i55, i8* %arrayidx.i57, align 1, !tbaa !12
  %20 = load i32, i32* %numZ.i50, align 4, !tbaa !94
  %inc.i58 = add nsw i32 %20, 1
  store i32 %inc.i58, i32* %numZ.i50, align 4, !tbaa !94
  %21 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i59 = shl i32 %21, 8
  store i32 %shl.i59, i32* %bsBuff.i, align 8, !tbaa !142
  %22 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i60 = add nsw i32 %22, -8
  store i32 %sub.i60, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i61 = icmp sgt i32 %22, 15
  br i1 %cmp.i61, label %while.body.i62, label %bsW.exit68

bsW.exit68:                                       ; preds = %while.body.i62, %bsW.exit93
  %23 = phi i32 [ %or.i91, %bsW.exit93 ], [ %shl.i59, %while.body.i62 ]
  %.lcssa.i63 = phi i32 [ %add.i92, %bsW.exit93 ], [ %sub.i60, %while.body.i62 ]
  %sub6.i64 = sub i32 24, %.lcssa.i63
  %shl7.i65 = shl i32 %16, %sub6.i64
  %or.i66 = or i32 %shl7.i65, %23
  store i32 %or.i66, i32* %bsBuff.i, align 8, !tbaa !142
  %add.i67 = add nsw i32 %.lcssa.i63, 8
  store i32 %add.i67, i32* %bsLive.i, align 4, !tbaa !141
  %24 = and i32 %u, 255
  %cmp20.i20 = icmp sgt i32 %.lcssa.i63, -1
  br i1 %cmp20.i20, label %while.body.lr.ph.i28, label %bsW.exit43

while.body.lr.ph.i28:                             ; preds = %bsW.exit68
  %zbits.i24 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 11
  %numZ.i25 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %.pre22.i27 = load i32, i32* %numZ.i25, align 4, !tbaa !94
  br label %while.body.i37

while.body.i37:                                   ; preds = %while.body.i37, %while.body.lr.ph.i28
  %25 = phi i32 [ %.pre22.i27, %while.body.lr.ph.i28 ], [ %inc.i33, %while.body.i37 ]
  %26 = phi i32 [ %or.i66, %while.body.lr.ph.i28 ], [ %shl.i34, %while.body.i37 ]
  %shr.i29 = lshr i32 %26, 24
  %conv.i30 = trunc i32 %shr.i29 to i8
  %27 = load i8*, i8** %zbits.i24, align 8, !tbaa !86
  %idxprom.i31 = sext i32 %25 to i64
  %arrayidx.i32 = getelementptr inbounds i8, i8* %27, i64 %idxprom.i31
  store i8 %conv.i30, i8* %arrayidx.i32, align 1, !tbaa !12
  %28 = load i32, i32* %numZ.i25, align 4, !tbaa !94
  %inc.i33 = add nsw i32 %28, 1
  store i32 %inc.i33, i32* %numZ.i25, align 4, !tbaa !94
  %29 = load i32, i32* %bsBuff.i, align 8, !tbaa !142
  %shl.i34 = shl i32 %29, 8
  store i32 %shl.i34, i32* %bsBuff.i, align 8, !tbaa !142
  %30 = load i32, i32* %bsLive.i, align 4, !tbaa !141
  %sub.i35 = add nsw i32 %30, -8
  store i32 %sub.i35, i32* %bsLive.i, align 4, !tbaa !141
  %cmp.i36 = icmp sgt i32 %30, 15
  br i1 %cmp.i36, label %while.body.i37, label %bsW.exit43

bsW.exit43:                                       ; preds = %while.body.i37, %bsW.exit68
  %31 = phi i32 [ %or.i66, %bsW.exit68 ], [ %shl.i34, %while.body.i37 ]
  %.lcssa.i38 = phi i32 [ %add.i67, %bsW.exit68 ], [ %sub.i35, %while.body.i37 ]
  %sub6.i39 = sub i32 24, %.lcssa.i38
  %shl7.i40 = shl i32 %24, %sub6.i39
  %or.i41 = or i32 %shl7.i40, %31
  store i32 %or.i41, i32* %bsBuff.i, align 8, !tbaa !142
  %add.i42 = add nsw i32 %.lcssa.i38, 8
  store i32 %add.i42, i32* %bsLive.i, align 4, !tbaa !141
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @sendMTFValues(%struct.EState* %s) unnamed_addr #1 {
entry:
  %cost = alloca [6 x i16], align 2
  %0 = bitcast [6 x i16]* %cost to i8*
  %fave = alloca [6 x i32], align 16
  %1 = bitcast [6 x i32]* %fave to i8*
  %pos = alloca [6 x i8], align 1
  %inUse16 = alloca [16 x i8], align 16
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %0) #2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #2
  %mtfv1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 10
  %2 = load i16*, i16** %mtfv1, align 8, !tbaa !85
  %verbosity = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 28
  %3 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp = icmp sgt i32 %3, 2
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  %.pre5735 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 21
  br label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %nblock = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 17
  %5 = load i32, i32* %nblock, align 4, !tbaa !28
  %nMTF = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 31
  %6 = load i32, i32* %nMTF, align 4, !tbaa !147
  %nInUse = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 21
  %7 = load i32, i32* %nInUse, align 4, !tbaa !143
  %8 = getelementptr [64 x i8], [64 x i8]* @.str.2.68, i64 0, i64 0
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %8, i32 %5, i32 %6, i32 %7) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %nInUse2.pre-phi = phi i32* [ %.pre5735, %entry.if.end_crit_edge ], [ %nInUse, %if.then ]
  %9 = load i32, i32* %nInUse2.pre-phi, align 4, !tbaa !143
  %add = add nsw i32 %9, 2
  %cmp55591 = icmp sgt i32 %9, -2
  br i1 %cmp55591, label %if.end.split.us, label %for.end11

if.end.split.us:                                  ; preds = %if.end
  %10 = icmp sgt i32 %add, 1
  %smax5681 = select i1 %10, i32 %add, i32 1
  %11 = zext i32 %smax5681 to i64
  %scevgep5680 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %scevgep5680, i8 15, i64 %11, i32 1, i1 false)
  %scevgep5680.1 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* %scevgep5680.1, i8 15, i64 %11, i32 1, i1 false)
  %scevgep5680.2 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* %scevgep5680.2, i8 15, i64 %11, i32 1, i1 false)
  %scevgep5680.3 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* %scevgep5680.3, i8 15, i64 %11, i32 1, i1 false)
  %scevgep5680.4 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* %scevgep5680.4, i8 15, i64 %11, i32 1, i1 false)
  %scevgep5680.5 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 5, i64 0
  call void @llvm.memset.p0i8.i64(i8* %scevgep5680.5, i8 15, i64 %11, i32 1, i1 false)
  br label %for.end11

for.end11:                                        ; preds = %if.end.split.us, %if.end
  %nMTF12 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 31
  %12 = load i32, i32* %nMTF12, align 4, !tbaa !147
  %cmp13 = icmp sgt i32 %12, 0
  br i1 %cmp13, label %if.end15, label %if.then14

if.then14:                                        ; preds = %for.end11
  tail call void @BZ2_bz__AssertH__fail(i32 3001) #2
  %.pr = load i32, i32* %nMTF12, align 4, !tbaa !147
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %for.end11
  %13 = phi i32 [ %.pr, %if.then14 ], [ %12, %for.end11 ]
  %cmp17 = icmp slt i32 %13, 200
  br i1 %cmp17, label %if.end34, label %if.else

if.else:                                          ; preds = %if.end15
  %cmp20 = icmp slt i32 %13, 600
  br i1 %cmp20, label %if.end34, label %if.else22

if.else22:                                        ; preds = %if.else
  %cmp24 = icmp slt i32 %13, 1200
  br i1 %cmp24, label %if.end34, label %if.else26

if.else26:                                        ; preds = %if.else22
  %cmp28 = icmp slt i32 %13, 2400
  %. = select i1 %cmp28, i32 5, i32 6
  br label %if.end34

if.end34:                                         ; preds = %if.else26, %if.else22, %if.else, %if.end15
  %nGroups.0 = phi i32 [ 2, %if.end15 ], [ 3, %if.else ], [ 4, %if.else22 ], [ %., %if.else26 ]
  %14 = sext i32 %9 to i64
  %15 = sext i32 %add to i64
  %16 = zext i32 %nGroups.0 to i64
  br label %while.body

while.body:                                       ; preds = %for.end95, %if.end34
  %indvars.iv5672 = phi i64 [ %16, %if.end34 ], [ %28, %for.end95 ]
  %gs.05590 = phi i32 [ 0, %if.end34 ], [ %add97, %for.end95 ]
  %remF.05589 = phi i32 [ %13, %if.end34 ], [ %sub98, %for.end95 ]
  %17 = trunc i64 %indvars.iv5672 to i32
  %div = sdiv i32 %remF.05589, %17
  %sub = add nsw i32 %gs.05590, -1
  %cmp385579 = icmp sgt i32 %div, 0
  %cmp405580 = icmp sle i32 %sub, %9
  %spec.select5581 = and i1 %cmp385579, %cmp405580
  br i1 %spec.select5581, label %while.body41.lr.ph, label %if.end58

while.body41.lr.ph:                               ; preds = %while.body
  %18 = sext i32 %sub to i64
  br label %while.body41

while.body41:                                     ; preds = %while.body41, %while.body41.lr.ph
  %indvars.iv5668 = phi i64 [ %18, %while.body41.lr.ph ], [ %indvars.iv.next5669, %while.body41 ]
  %aFreq.05582 = phi i32 [ 0, %while.body41.lr.ph ], [ %add45, %while.body41 ]
  %indvars.iv.next5669 = add nsw i64 %indvars.iv5668, 1
  %arrayidx44 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 32, i64 %indvars.iv.next5669
  %19 = load i32, i32* %arrayidx44, align 4, !tbaa !6
  %add45 = add nsw i32 %19, %aFreq.05582
  %cmp38 = icmp slt i32 %add45, %div
  %cmp40 = icmp slt i64 %indvars.iv5668, %14
  %spec.select = and i1 %cmp38, %cmp40
  br i1 %spec.select, label %while.body41, label %while.end

while.end:                                        ; preds = %while.body41
  %20 = trunc i64 %indvars.iv.next5669 to i32
  %cmp46 = icmp slt i32 %gs.05590, %20
  br i1 %cmp46, label %land.lhs.true, label %if.end58

land.lhs.true:                                    ; preds = %while.end
  %cmp47 = icmp ne i32 %nGroups.0, %17
  %cmp49 = icmp ne i32 %17, 1
  %or.cond = and i1 %cmp47, %cmp49
  br i1 %or.cond, label %land.lhs.true50, label %if.end58

land.lhs.true50:                                  ; preds = %land.lhs.true
  %21 = trunc i64 %indvars.iv5672 to i32
  %22 = sub i32 %nGroups.0, %21
  %rem.urem = and i32 %22, 1
  %cmp52 = icmp eq i32 %rem.urem, 0
  br i1 %cmp52, label %if.end58, label %if.then53

if.then53:                                        ; preds = %land.lhs.true50
  %sext = shl i64 %indvars.iv.next5669, 32
  %idxprom55 = ashr exact i64 %sext, 32
  %arrayidx56 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 32, i64 %idxprom55
  %23 = load i32, i32* %arrayidx56, align 4, !tbaa !6
  %sub57 = sub nsw i32 %add45, %23
  %dec = add nsw i32 %20, -1
  br label %if.end58

if.end58:                                         ; preds = %if.then53, %land.lhs.true50, %land.lhs.true, %while.end, %while.body
  %aFreq.1 = phi i32 [ %sub57, %if.then53 ], [ %add45, %land.lhs.true50 ], [ %add45, %land.lhs.true ], [ %add45, %while.end ], [ 0, %while.body ]
  %ge.1 = phi i32 [ %dec, %if.then53 ], [ %20, %land.lhs.true50 ], [ %20, %land.lhs.true ], [ %20, %while.end ], [ %sub, %while.body ]
  %24 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp60 = icmp sgt i32 %24, 2
  br i1 %cmp60, label %if.then61, label %if.end68

if.then61:                                        ; preds = %if.end58
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %conv = sitofp i32 %aFreq.1 to float
  %conv62 = fpext float %conv to double
  %mul = fmul double %conv62, 1.000000e+02
  %26 = load i32, i32* %nMTF12, align 4, !tbaa !147
  %conv64 = sitofp i32 %26 to float
  %conv65 = fpext float %conv64 to double
  %div66 = fdiv double %mul, %conv65
  %27 = getelementptr [59 x i8], [59 x i8]* @.str.3.69, i64 0, i64 0
  %call67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* %27, i32 %17, i32 %gs.05590, i32 %ge.1, i32 %aFreq.1, double %div66) #15
  br label %if.end68

if.end68:                                         ; preds = %if.then61, %if.end58
  %28 = add nsw i64 %indvars.iv5672, -1
  br i1 %cmp55591, label %for.body72.lr.ph, label %for.end95

for.body72.lr.ph:                                 ; preds = %if.end68
  %29 = sext i32 %ge.1 to i64
  %30 = sext i32 %gs.05590 to i64
  br label %for.body72

for.body72:                                       ; preds = %for.body72, %for.body72.lr.ph
  %indvars.iv5670 = phi i64 [ 0, %for.body72.lr.ph ], [ %indvars.iv.next5671, %for.body72 ]
  %cmp73 = icmp slt i64 %indvars.iv5670, %30
  %cmp76 = icmp sgt i64 %indvars.iv5670, %29
  %or.cond3896 = or i1 %cmp73, %cmp76
  %arrayidx91 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %28, i64 %indvars.iv5670
  %.5501 = select i1 %or.cond3896, i8 15, i8 0
  store i8 %.5501, i8* %arrayidx91, align 1, !tbaa !12
  %indvars.iv.next5671 = add nuw nsw i64 %indvars.iv5670, 1
  %cmp70 = icmp slt i64 %indvars.iv.next5671, %15
  br i1 %cmp70, label %for.body72, label %for.end95

for.end95:                                        ; preds = %for.body72, %if.end68
  %add97 = add nsw i32 %ge.1, 1
  %sub98 = sub nsw i32 %remF.05589, %aFreq.1
  %cmp36 = icmp sgt i64 %indvars.iv5672, 1
  br i1 %cmp36, label %while.body, label %while.end99

while.end99:                                      ; preds = %for.end95
  %cmp131 = icmp eq i32 %nGroups.0, 6
  %cmp1355559 = icmp slt i32 %9, -1
  %arrayidx1121 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 0
  %arrayidx1123 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 1
  %arrayidx1126 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 2
  %arrayidx1129 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 3
  %arrayidx1132 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 4
  %arrayidx1135 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 5
  %31 = zext i32 %nGroups.0 to i64
  %32 = shl nuw nsw i32 %nGroups.0, 2
  %33 = zext i32 %32 to i64
  %34 = icmp sgt i32 %add, 1
  %smax = select i1 %34, i32 %add, i32 1
  %35 = zext i32 %smax to i64
  %36 = shl nuw nsw i64 %35, 2
  %37 = shl nuw nsw i32 %nGroups.0, 1
  %38 = zext i32 %37 to i64
  %cmp131.not = xor i1 %cmp131, true
  %brmerge = or i1 %cmp1355559, %cmp131.not
  %scevgep = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 0, i64 0
  %scevgep5647 = bitcast i32* %scevgep to i8*
  %arrayidx1155 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 0
  %arrayidx1155.1 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 1
  %cmp1145.1 = icmp ugt i32 %nGroups.0, 2
  %arrayidx1155.2 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 2
  %cmp1145.2 = icmp eq i32 %nGroups.0, 3
  %arrayidx1155.3 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 3
  %cmp1145.3 = icmp ugt i32 %nGroups.0, 4
  %arrayidx1155.4 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 4
  %cmp1145.4 = icmp eq i32 %nGroups.0, 5
  %arrayidx1155.5 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 5
  %arrayidx1171 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 0
  %arrayidx1171.1 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 1
  %cmp1167.1 = icmp ugt i32 %nGroups.0, 2
  %arrayidx1171.2 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 2
  %cmp1167.2 = icmp eq i32 %nGroups.0, 3
  %arrayidx1171.3 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 3
  %cmp1167.3 = icmp ugt i32 %nGroups.0, 4
  %arrayidx1171.4 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 4
  %cmp1167.4 = icmp eq i32 %nGroups.0, 5
  %arrayidx1171.5 = getelementptr inbounds [6 x i16], [6 x i16]* %cost, i64 0, i64 5
  %scevgep.1 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 1, i64 0
  %scevgep5647.1 = bitcast i32* %scevgep.1 to i8*
  %cmp114.us.1 = icmp ugt i32 %nGroups.0, 2
  %scevgep.2 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 2, i64 0
  %scevgep5647.2 = bitcast i32* %scevgep.2 to i8*
  %cmp114.us.2 = icmp eq i32 %nGroups.0, 3
  %scevgep.3 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 3, i64 0
  %scevgep5647.3 = bitcast i32* %scevgep.3 to i8*
  %cmp114.us.3 = icmp ugt i32 %nGroups.0, 4
  %scevgep.4 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 4, i64 0
  %scevgep5647.4 = bitcast i32* %scevgep.4 to i8*
  %cmp114.us.4 = icmp eq i32 %nGroups.0, 5
  %scevgep.5 = getelementptr %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 5, i64 0
  %scevgep5647.5 = bitcast i32* %scevgep.5 to i8*
  br label %for.body103

for.body103:                                      ; preds = %for.inc1702, %while.end99
  %iter.05578 = phi i32 [ 0, %while.end99 ], [ %inc1703, %for.inc1702 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull %1, i8 0, i64 %33, i32 16, i1 false)
  br i1 %cmp55591, label %for.body116.us, label %for.end130

for.body116.us:                                   ; preds = %for.body103
  call void @llvm.memset.p0i8.i64(i8* %scevgep5647, i8 0, i64 %36, i32 4, i1 false)
  call void @llvm.memset.p0i8.i64(i8* %scevgep5647.1, i8 0, i64 %36, i32 4, i1 false)
  br i1 %cmp114.us.1, label %for.body116.us.2, label %for.end130

for.end130:                                       ; preds = %for.body116.us.5, %for.body116.us.4, %for.body116.us.3, %for.body116.us.2, %for.body116.us, %for.body103
  br i1 %brmerge, label %if.end186, label %for.body137.preheader

for.body137.preheader:                            ; preds = %for.end130
  br label %for.body137

for.body137:                                      ; preds = %for.body137, %for.body137.preheader
  %indvars.iv5648 = phi i64 [ %indvars.iv.next5649, %for.body137 ], [ 0, %for.body137.preheader ]
  %arrayidx141 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 1, i64 %indvars.iv5648
  %39 = load i8, i8* %arrayidx141, align 1, !tbaa !12
  %conv142 = zext i8 %39 to i32
  %shl = shl nuw nsw i32 %conv142, 16
  %arrayidx146 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 0, i64 %indvars.iv5648
  %40 = load i8, i8* %arrayidx146, align 1, !tbaa !12
  %conv147 = zext i8 %40 to i32
  %or = or i32 %shl, %conv147
  %arrayidx150 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %indvars.iv5648, i64 0
  store i32 %or, i32* %arrayidx150, align 8, !tbaa !6
  %arrayidx154 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 3, i64 %indvars.iv5648
  %41 = load i8, i8* %arrayidx154, align 1, !tbaa !12
  %conv155 = zext i8 %41 to i32
  %shl156 = shl nuw nsw i32 %conv155, 16
  %arrayidx160 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 2, i64 %indvars.iv5648
  %42 = load i8, i8* %arrayidx160, align 1, !tbaa !12
  %conv161 = zext i8 %42 to i32
  %or162 = or i32 %shl156, %conv161
  %arrayidx166 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %indvars.iv5648, i64 1
  store i32 %or162, i32* %arrayidx166, align 4, !tbaa !6
  %arrayidx170 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 5, i64 %indvars.iv5648
  %43 = load i8, i8* %arrayidx170, align 1, !tbaa !12
  %conv171 = zext i8 %43 to i32
  %shl172 = shl nuw nsw i32 %conv171, 16
  %arrayidx176 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 4, i64 %indvars.iv5648
  %44 = load i8, i8* %arrayidx176, align 1, !tbaa !12
  %conv177 = zext i8 %44 to i32
  %or178 = or i32 %shl172, %conv177
  %arrayidx182 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %indvars.iv5648, i64 2
  store i32 %or178, i32* %arrayidx182, align 8, !tbaa !6
  %indvars.iv.next5649 = add nuw nsw i64 %indvars.iv5648, 1
  %cmp135 = icmp slt i64 %indvars.iv.next5649, %15
  br i1 %cmp135, label %for.body137, label %if.end186

if.end186:                                        ; preds = %for.body137, %for.end130
  %45 = load i32, i32* %nMTF12, align 4, !tbaa !147
  %cmp1905570 = icmp sgt i32 %45, 0
  br i1 %cmp1905570, label %if.end193.preheader, label %while.end1667

if.end193.preheader:                              ; preds = %if.end186
  br label %if.end193

if.end193:                                        ; preds = %if.end1665, %if.end193.preheader
  %indvars.iv5661 = phi i64 [ %indvars.iv.next5662, %if.end1665 ], [ 0, %if.end193.preheader ]
  %46 = phi i32 [ %368, %if.end1665 ], [ %45, %if.end193.preheader ]
  %gs.15573 = phi i32 [ %add1666, %if.end1665 ], [ 0, %if.end193.preheader ]
  %totc.05572 = phi i32 [ %add1183, %if.end1665 ], [ 0, %if.end193.preheader ]
  %sub195 = add nsw i32 %gs.15573, 49
  %sub201 = add nsw i32 %46, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull %0, i8 0, i64 %38, i32 2, i1 false)
  %cmp197 = icmp slt i32 %sub195, %46
  %spec.select3897 = select i1 %cmp197, i32 %sub195, i32 %sub201
  %sub215 = sub nsw i32 %spec.select3897, %gs.15573
  %cmp217 = icmp eq i32 %sub215, 49
  %or.cond3898 = and i1 %cmp131, %cmp217
  br i1 %or.cond3898, label %if.then219, label %if.else1136

if.then219:                                       ; preds = %if.end193
  %idxprom221 = sext i32 %gs.15573 to i64
  %arrayidx222 = getelementptr inbounds i16, i16* %2, i64 %idxprom221
  %47 = load i16, i16* %arrayidx222, align 2, !tbaa !33
  %idxprom224 = zext i16 %47 to i64
  %arrayidx226 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom224, i64 0
  %48 = load i32, i32* %arrayidx226, align 8, !tbaa !6
  %arrayidx231 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom224, i64 1
  %49 = load i32, i32* %arrayidx231, align 4, !tbaa !6
  %arrayidx236 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom224, i64 2
  %50 = load i32, i32* %arrayidx236, align 8, !tbaa !6
  %add238 = add nsw i32 %gs.15573, 1
  %idxprom239 = sext i32 %add238 to i64
  %arrayidx240 = getelementptr inbounds i16, i16* %2, i64 %idxprom239
  %51 = load i16, i16* %arrayidx240, align 2, !tbaa !33
  %idxprom242 = zext i16 %51 to i64
  %arrayidx244 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom242, i64 0
  %52 = load i32, i32* %arrayidx244, align 8, !tbaa !6
  %add245 = add i32 %52, %48
  %arrayidx249 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom242, i64 1
  %53 = load i32, i32* %arrayidx249, align 4, !tbaa !6
  %add250 = add i32 %53, %49
  %arrayidx254 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom242, i64 2
  %54 = load i32, i32* %arrayidx254, align 8, !tbaa !6
  %add255 = add i32 %54, %50
  %add256 = add nsw i32 %gs.15573, 2
  %idxprom257 = sext i32 %add256 to i64
  %arrayidx258 = getelementptr inbounds i16, i16* %2, i64 %idxprom257
  %55 = load i16, i16* %arrayidx258, align 2, !tbaa !33
  %idxprom260 = zext i16 %55 to i64
  %arrayidx262 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom260, i64 0
  %56 = load i32, i32* %arrayidx262, align 8, !tbaa !6
  %add263 = add i32 %add245, %56
  %arrayidx267 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom260, i64 1
  %57 = load i32, i32* %arrayidx267, align 4, !tbaa !6
  %add268 = add i32 %add250, %57
  %arrayidx272 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom260, i64 2
  %58 = load i32, i32* %arrayidx272, align 8, !tbaa !6
  %add273 = add i32 %add255, %58
  %add274 = add nsw i32 %gs.15573, 3
  %idxprom275 = sext i32 %add274 to i64
  %arrayidx276 = getelementptr inbounds i16, i16* %2, i64 %idxprom275
  %59 = load i16, i16* %arrayidx276, align 2, !tbaa !33
  %idxprom278 = zext i16 %59 to i64
  %arrayidx280 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom278, i64 0
  %60 = load i32, i32* %arrayidx280, align 8, !tbaa !6
  %add281 = add i32 %add263, %60
  %arrayidx285 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom278, i64 1
  %61 = load i32, i32* %arrayidx285, align 4, !tbaa !6
  %add286 = add i32 %add268, %61
  %arrayidx290 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom278, i64 2
  %62 = load i32, i32* %arrayidx290, align 8, !tbaa !6
  %add291 = add i32 %add273, %62
  %add292 = add nsw i32 %gs.15573, 4
  %idxprom293 = sext i32 %add292 to i64
  %arrayidx294 = getelementptr inbounds i16, i16* %2, i64 %idxprom293
  %63 = load i16, i16* %arrayidx294, align 2, !tbaa !33
  %idxprom296 = zext i16 %63 to i64
  %arrayidx298 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom296, i64 0
  %64 = load i32, i32* %arrayidx298, align 8, !tbaa !6
  %add299 = add i32 %add281, %64
  %arrayidx303 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom296, i64 1
  %65 = load i32, i32* %arrayidx303, align 4, !tbaa !6
  %add304 = add i32 %add286, %65
  %arrayidx308 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom296, i64 2
  %66 = load i32, i32* %arrayidx308, align 8, !tbaa !6
  %add309 = add i32 %add291, %66
  %add310 = add nsw i32 %gs.15573, 5
  %idxprom311 = sext i32 %add310 to i64
  %arrayidx312 = getelementptr inbounds i16, i16* %2, i64 %idxprom311
  %67 = load i16, i16* %arrayidx312, align 2, !tbaa !33
  %idxprom314 = zext i16 %67 to i64
  %arrayidx316 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom314, i64 0
  %68 = load i32, i32* %arrayidx316, align 8, !tbaa !6
  %add317 = add i32 %add299, %68
  %arrayidx321 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom314, i64 1
  %69 = load i32, i32* %arrayidx321, align 4, !tbaa !6
  %add322 = add i32 %add304, %69
  %arrayidx326 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom314, i64 2
  %70 = load i32, i32* %arrayidx326, align 8, !tbaa !6
  %add327 = add i32 %add309, %70
  %add328 = add nsw i32 %gs.15573, 6
  %idxprom329 = sext i32 %add328 to i64
  %arrayidx330 = getelementptr inbounds i16, i16* %2, i64 %idxprom329
  %71 = load i16, i16* %arrayidx330, align 2, !tbaa !33
  %idxprom332 = zext i16 %71 to i64
  %arrayidx334 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom332, i64 0
  %72 = load i32, i32* %arrayidx334, align 8, !tbaa !6
  %add335 = add i32 %add317, %72
  %arrayidx339 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom332, i64 1
  %73 = load i32, i32* %arrayidx339, align 4, !tbaa !6
  %add340 = add i32 %add322, %73
  %arrayidx344 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom332, i64 2
  %74 = load i32, i32* %arrayidx344, align 8, !tbaa !6
  %add345 = add i32 %add327, %74
  %add346 = add nsw i32 %gs.15573, 7
  %idxprom347 = sext i32 %add346 to i64
  %arrayidx348 = getelementptr inbounds i16, i16* %2, i64 %idxprom347
  %75 = load i16, i16* %arrayidx348, align 2, !tbaa !33
  %idxprom350 = zext i16 %75 to i64
  %arrayidx352 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom350, i64 0
  %76 = load i32, i32* %arrayidx352, align 8, !tbaa !6
  %add353 = add i32 %add335, %76
  %arrayidx357 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom350, i64 1
  %77 = load i32, i32* %arrayidx357, align 4, !tbaa !6
  %add358 = add i32 %add340, %77
  %arrayidx362 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom350, i64 2
  %78 = load i32, i32* %arrayidx362, align 8, !tbaa !6
  %add363 = add i32 %add345, %78
  %add364 = add nsw i32 %gs.15573, 8
  %idxprom365 = sext i32 %add364 to i64
  %arrayidx366 = getelementptr inbounds i16, i16* %2, i64 %idxprom365
  %79 = load i16, i16* %arrayidx366, align 2, !tbaa !33
  %idxprom368 = zext i16 %79 to i64
  %arrayidx370 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom368, i64 0
  %80 = load i32, i32* %arrayidx370, align 8, !tbaa !6
  %add371 = add i32 %add353, %80
  %arrayidx375 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom368, i64 1
  %81 = load i32, i32* %arrayidx375, align 4, !tbaa !6
  %add376 = add i32 %add358, %81
  %arrayidx380 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom368, i64 2
  %82 = load i32, i32* %arrayidx380, align 8, !tbaa !6
  %add381 = add i32 %add363, %82
  %add382 = add nsw i32 %gs.15573, 9
  %idxprom383 = sext i32 %add382 to i64
  %arrayidx384 = getelementptr inbounds i16, i16* %2, i64 %idxprom383
  %83 = load i16, i16* %arrayidx384, align 2, !tbaa !33
  %idxprom386 = zext i16 %83 to i64
  %arrayidx388 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom386, i64 0
  %84 = load i32, i32* %arrayidx388, align 8, !tbaa !6
  %add389 = add i32 %add371, %84
  %arrayidx393 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom386, i64 1
  %85 = load i32, i32* %arrayidx393, align 4, !tbaa !6
  %add394 = add i32 %add376, %85
  %arrayidx398 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom386, i64 2
  %86 = load i32, i32* %arrayidx398, align 8, !tbaa !6
  %add399 = add i32 %add381, %86
  %add400 = add nsw i32 %gs.15573, 10
  %idxprom401 = sext i32 %add400 to i64
  %arrayidx402 = getelementptr inbounds i16, i16* %2, i64 %idxprom401
  %87 = load i16, i16* %arrayidx402, align 2, !tbaa !33
  %idxprom404 = zext i16 %87 to i64
  %arrayidx406 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom404, i64 0
  %88 = load i32, i32* %arrayidx406, align 8, !tbaa !6
  %add407 = add i32 %add389, %88
  %arrayidx411 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom404, i64 1
  %89 = load i32, i32* %arrayidx411, align 4, !tbaa !6
  %add412 = add i32 %add394, %89
  %arrayidx416 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom404, i64 2
  %90 = load i32, i32* %arrayidx416, align 8, !tbaa !6
  %add417 = add i32 %add399, %90
  %add418 = add nsw i32 %gs.15573, 11
  %idxprom419 = sext i32 %add418 to i64
  %arrayidx420 = getelementptr inbounds i16, i16* %2, i64 %idxprom419
  %91 = load i16, i16* %arrayidx420, align 2, !tbaa !33
  %idxprom422 = zext i16 %91 to i64
  %arrayidx424 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom422, i64 0
  %92 = load i32, i32* %arrayidx424, align 8, !tbaa !6
  %add425 = add i32 %add407, %92
  %arrayidx429 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom422, i64 1
  %93 = load i32, i32* %arrayidx429, align 4, !tbaa !6
  %add430 = add i32 %add412, %93
  %arrayidx434 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom422, i64 2
  %94 = load i32, i32* %arrayidx434, align 8, !tbaa !6
  %add435 = add i32 %add417, %94
  %add436 = add nsw i32 %gs.15573, 12
  %idxprom437 = sext i32 %add436 to i64
  %arrayidx438 = getelementptr inbounds i16, i16* %2, i64 %idxprom437
  %95 = load i16, i16* %arrayidx438, align 2, !tbaa !33
  %idxprom440 = zext i16 %95 to i64
  %arrayidx442 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom440, i64 0
  %96 = load i32, i32* %arrayidx442, align 8, !tbaa !6
  %add443 = add i32 %add425, %96
  %arrayidx447 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom440, i64 1
  %97 = load i32, i32* %arrayidx447, align 4, !tbaa !6
  %add448 = add i32 %add430, %97
  %arrayidx452 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom440, i64 2
  %98 = load i32, i32* %arrayidx452, align 8, !tbaa !6
  %add453 = add i32 %add435, %98
  %add454 = add nsw i32 %gs.15573, 13
  %idxprom455 = sext i32 %add454 to i64
  %arrayidx456 = getelementptr inbounds i16, i16* %2, i64 %idxprom455
  %99 = load i16, i16* %arrayidx456, align 2, !tbaa !33
  %idxprom458 = zext i16 %99 to i64
  %arrayidx460 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom458, i64 0
  %100 = load i32, i32* %arrayidx460, align 8, !tbaa !6
  %add461 = add i32 %add443, %100
  %arrayidx465 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom458, i64 1
  %101 = load i32, i32* %arrayidx465, align 4, !tbaa !6
  %add466 = add i32 %add448, %101
  %arrayidx470 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom458, i64 2
  %102 = load i32, i32* %arrayidx470, align 8, !tbaa !6
  %add471 = add i32 %add453, %102
  %add472 = add nsw i32 %gs.15573, 14
  %idxprom473 = sext i32 %add472 to i64
  %arrayidx474 = getelementptr inbounds i16, i16* %2, i64 %idxprom473
  %103 = load i16, i16* %arrayidx474, align 2, !tbaa !33
  %idxprom476 = zext i16 %103 to i64
  %arrayidx478 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom476, i64 0
  %104 = load i32, i32* %arrayidx478, align 8, !tbaa !6
  %add479 = add i32 %add461, %104
  %arrayidx483 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom476, i64 1
  %105 = load i32, i32* %arrayidx483, align 4, !tbaa !6
  %add484 = add i32 %add466, %105
  %arrayidx488 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom476, i64 2
  %106 = load i32, i32* %arrayidx488, align 8, !tbaa !6
  %add489 = add i32 %add471, %106
  %add490 = add nsw i32 %gs.15573, 15
  %idxprom491 = sext i32 %add490 to i64
  %arrayidx492 = getelementptr inbounds i16, i16* %2, i64 %idxprom491
  %107 = load i16, i16* %arrayidx492, align 2, !tbaa !33
  %idxprom494 = zext i16 %107 to i64
  %arrayidx496 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom494, i64 0
  %108 = load i32, i32* %arrayidx496, align 8, !tbaa !6
  %add497 = add i32 %add479, %108
  %arrayidx501 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom494, i64 1
  %109 = load i32, i32* %arrayidx501, align 4, !tbaa !6
  %add502 = add i32 %add484, %109
  %arrayidx506 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom494, i64 2
  %110 = load i32, i32* %arrayidx506, align 8, !tbaa !6
  %add507 = add i32 %add489, %110
  %add508 = add nsw i32 %gs.15573, 16
  %idxprom509 = sext i32 %add508 to i64
  %arrayidx510 = getelementptr inbounds i16, i16* %2, i64 %idxprom509
  %111 = load i16, i16* %arrayidx510, align 2, !tbaa !33
  %idxprom512 = zext i16 %111 to i64
  %arrayidx514 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom512, i64 0
  %112 = load i32, i32* %arrayidx514, align 8, !tbaa !6
  %add515 = add i32 %add497, %112
  %arrayidx519 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom512, i64 1
  %113 = load i32, i32* %arrayidx519, align 4, !tbaa !6
  %add520 = add i32 %add502, %113
  %arrayidx524 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom512, i64 2
  %114 = load i32, i32* %arrayidx524, align 8, !tbaa !6
  %add525 = add i32 %add507, %114
  %add526 = add nsw i32 %gs.15573, 17
  %idxprom527 = sext i32 %add526 to i64
  %arrayidx528 = getelementptr inbounds i16, i16* %2, i64 %idxprom527
  %115 = load i16, i16* %arrayidx528, align 2, !tbaa !33
  %idxprom530 = zext i16 %115 to i64
  %arrayidx532 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom530, i64 0
  %116 = load i32, i32* %arrayidx532, align 8, !tbaa !6
  %add533 = add i32 %add515, %116
  %arrayidx537 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom530, i64 1
  %117 = load i32, i32* %arrayidx537, align 4, !tbaa !6
  %add538 = add i32 %add520, %117
  %arrayidx542 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom530, i64 2
  %118 = load i32, i32* %arrayidx542, align 8, !tbaa !6
  %add543 = add i32 %add525, %118
  %add544 = add nsw i32 %gs.15573, 18
  %idxprom545 = sext i32 %add544 to i64
  %arrayidx546 = getelementptr inbounds i16, i16* %2, i64 %idxprom545
  %119 = load i16, i16* %arrayidx546, align 2, !tbaa !33
  %idxprom548 = zext i16 %119 to i64
  %arrayidx550 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom548, i64 0
  %120 = load i32, i32* %arrayidx550, align 8, !tbaa !6
  %add551 = add i32 %add533, %120
  %arrayidx555 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom548, i64 1
  %121 = load i32, i32* %arrayidx555, align 4, !tbaa !6
  %add556 = add i32 %add538, %121
  %arrayidx560 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom548, i64 2
  %122 = load i32, i32* %arrayidx560, align 8, !tbaa !6
  %add561 = add i32 %add543, %122
  %add562 = add nsw i32 %gs.15573, 19
  %idxprom563 = sext i32 %add562 to i64
  %arrayidx564 = getelementptr inbounds i16, i16* %2, i64 %idxprom563
  %123 = load i16, i16* %arrayidx564, align 2, !tbaa !33
  %idxprom566 = zext i16 %123 to i64
  %arrayidx568 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom566, i64 0
  %124 = load i32, i32* %arrayidx568, align 8, !tbaa !6
  %add569 = add i32 %add551, %124
  %arrayidx573 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom566, i64 1
  %125 = load i32, i32* %arrayidx573, align 4, !tbaa !6
  %add574 = add i32 %add556, %125
  %arrayidx578 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom566, i64 2
  %126 = load i32, i32* %arrayidx578, align 8, !tbaa !6
  %add579 = add i32 %add561, %126
  %add580 = add nsw i32 %gs.15573, 20
  %idxprom581 = sext i32 %add580 to i64
  %arrayidx582 = getelementptr inbounds i16, i16* %2, i64 %idxprom581
  %127 = load i16, i16* %arrayidx582, align 2, !tbaa !33
  %idxprom584 = zext i16 %127 to i64
  %arrayidx586 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom584, i64 0
  %128 = load i32, i32* %arrayidx586, align 8, !tbaa !6
  %add587 = add i32 %add569, %128
  %arrayidx591 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom584, i64 1
  %129 = load i32, i32* %arrayidx591, align 4, !tbaa !6
  %add592 = add i32 %add574, %129
  %arrayidx596 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom584, i64 2
  %130 = load i32, i32* %arrayidx596, align 8, !tbaa !6
  %add597 = add i32 %add579, %130
  %add598 = add nsw i32 %gs.15573, 21
  %idxprom599 = sext i32 %add598 to i64
  %arrayidx600 = getelementptr inbounds i16, i16* %2, i64 %idxprom599
  %131 = load i16, i16* %arrayidx600, align 2, !tbaa !33
  %idxprom602 = zext i16 %131 to i64
  %arrayidx604 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom602, i64 0
  %132 = load i32, i32* %arrayidx604, align 8, !tbaa !6
  %add605 = add i32 %add587, %132
  %arrayidx609 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom602, i64 1
  %133 = load i32, i32* %arrayidx609, align 4, !tbaa !6
  %add610 = add i32 %add592, %133
  %arrayidx614 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom602, i64 2
  %134 = load i32, i32* %arrayidx614, align 8, !tbaa !6
  %add615 = add i32 %add597, %134
  %add616 = add nsw i32 %gs.15573, 22
  %idxprom617 = sext i32 %add616 to i64
  %arrayidx618 = getelementptr inbounds i16, i16* %2, i64 %idxprom617
  %135 = load i16, i16* %arrayidx618, align 2, !tbaa !33
  %idxprom620 = zext i16 %135 to i64
  %arrayidx622 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom620, i64 0
  %136 = load i32, i32* %arrayidx622, align 8, !tbaa !6
  %add623 = add i32 %add605, %136
  %arrayidx627 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom620, i64 1
  %137 = load i32, i32* %arrayidx627, align 4, !tbaa !6
  %add628 = add i32 %add610, %137
  %arrayidx632 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom620, i64 2
  %138 = load i32, i32* %arrayidx632, align 8, !tbaa !6
  %add633 = add i32 %add615, %138
  %add634 = add nsw i32 %gs.15573, 23
  %idxprom635 = sext i32 %add634 to i64
  %arrayidx636 = getelementptr inbounds i16, i16* %2, i64 %idxprom635
  %139 = load i16, i16* %arrayidx636, align 2, !tbaa !33
  %idxprom638 = zext i16 %139 to i64
  %arrayidx640 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom638, i64 0
  %140 = load i32, i32* %arrayidx640, align 8, !tbaa !6
  %add641 = add i32 %add623, %140
  %arrayidx645 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom638, i64 1
  %141 = load i32, i32* %arrayidx645, align 4, !tbaa !6
  %add646 = add i32 %add628, %141
  %arrayidx650 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom638, i64 2
  %142 = load i32, i32* %arrayidx650, align 8, !tbaa !6
  %add651 = add i32 %add633, %142
  %add652 = add nsw i32 %gs.15573, 24
  %idxprom653 = sext i32 %add652 to i64
  %arrayidx654 = getelementptr inbounds i16, i16* %2, i64 %idxprom653
  %143 = load i16, i16* %arrayidx654, align 2, !tbaa !33
  %idxprom656 = zext i16 %143 to i64
  %arrayidx658 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom656, i64 0
  %144 = load i32, i32* %arrayidx658, align 8, !tbaa !6
  %add659 = add i32 %add641, %144
  %arrayidx663 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom656, i64 1
  %145 = load i32, i32* %arrayidx663, align 4, !tbaa !6
  %add664 = add i32 %add646, %145
  %arrayidx668 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom656, i64 2
  %146 = load i32, i32* %arrayidx668, align 8, !tbaa !6
  %add669 = add i32 %add651, %146
  %add670 = add nsw i32 %gs.15573, 25
  %idxprom671 = sext i32 %add670 to i64
  %arrayidx672 = getelementptr inbounds i16, i16* %2, i64 %idxprom671
  %147 = load i16, i16* %arrayidx672, align 2, !tbaa !33
  %idxprom674 = zext i16 %147 to i64
  %arrayidx676 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom674, i64 0
  %148 = load i32, i32* %arrayidx676, align 8, !tbaa !6
  %add677 = add i32 %add659, %148
  %arrayidx681 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom674, i64 1
  %149 = load i32, i32* %arrayidx681, align 4, !tbaa !6
  %add682 = add i32 %add664, %149
  %arrayidx686 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom674, i64 2
  %150 = load i32, i32* %arrayidx686, align 8, !tbaa !6
  %add687 = add i32 %add669, %150
  %add688 = add nsw i32 %gs.15573, 26
  %idxprom689 = sext i32 %add688 to i64
  %arrayidx690 = getelementptr inbounds i16, i16* %2, i64 %idxprom689
  %151 = load i16, i16* %arrayidx690, align 2, !tbaa !33
  %idxprom692 = zext i16 %151 to i64
  %arrayidx694 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom692, i64 0
  %152 = load i32, i32* %arrayidx694, align 8, !tbaa !6
  %add695 = add i32 %add677, %152
  %arrayidx699 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom692, i64 1
  %153 = load i32, i32* %arrayidx699, align 4, !tbaa !6
  %add700 = add i32 %add682, %153
  %arrayidx704 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom692, i64 2
  %154 = load i32, i32* %arrayidx704, align 8, !tbaa !6
  %add705 = add i32 %add687, %154
  %add706 = add nsw i32 %gs.15573, 27
  %idxprom707 = sext i32 %add706 to i64
  %arrayidx708 = getelementptr inbounds i16, i16* %2, i64 %idxprom707
  %155 = load i16, i16* %arrayidx708, align 2, !tbaa !33
  %idxprom710 = zext i16 %155 to i64
  %arrayidx712 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom710, i64 0
  %156 = load i32, i32* %arrayidx712, align 8, !tbaa !6
  %add713 = add i32 %add695, %156
  %arrayidx717 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom710, i64 1
  %157 = load i32, i32* %arrayidx717, align 4, !tbaa !6
  %add718 = add i32 %add700, %157
  %arrayidx722 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom710, i64 2
  %158 = load i32, i32* %arrayidx722, align 8, !tbaa !6
  %add723 = add i32 %add705, %158
  %add724 = add nsw i32 %gs.15573, 28
  %idxprom725 = sext i32 %add724 to i64
  %arrayidx726 = getelementptr inbounds i16, i16* %2, i64 %idxprom725
  %159 = load i16, i16* %arrayidx726, align 2, !tbaa !33
  %idxprom728 = zext i16 %159 to i64
  %arrayidx730 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom728, i64 0
  %160 = load i32, i32* %arrayidx730, align 8, !tbaa !6
  %add731 = add i32 %add713, %160
  %arrayidx735 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom728, i64 1
  %161 = load i32, i32* %arrayidx735, align 4, !tbaa !6
  %add736 = add i32 %add718, %161
  %arrayidx740 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom728, i64 2
  %162 = load i32, i32* %arrayidx740, align 8, !tbaa !6
  %add741 = add i32 %add723, %162
  %add742 = add nsw i32 %gs.15573, 29
  %idxprom743 = sext i32 %add742 to i64
  %arrayidx744 = getelementptr inbounds i16, i16* %2, i64 %idxprom743
  %163 = load i16, i16* %arrayidx744, align 2, !tbaa !33
  %idxprom746 = zext i16 %163 to i64
  %arrayidx748 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom746, i64 0
  %164 = load i32, i32* %arrayidx748, align 8, !tbaa !6
  %add749 = add i32 %add731, %164
  %arrayidx753 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom746, i64 1
  %165 = load i32, i32* %arrayidx753, align 4, !tbaa !6
  %add754 = add i32 %add736, %165
  %arrayidx758 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom746, i64 2
  %166 = load i32, i32* %arrayidx758, align 8, !tbaa !6
  %add759 = add i32 %add741, %166
  %add760 = add nsw i32 %gs.15573, 30
  %idxprom761 = sext i32 %add760 to i64
  %arrayidx762 = getelementptr inbounds i16, i16* %2, i64 %idxprom761
  %167 = load i16, i16* %arrayidx762, align 2, !tbaa !33
  %idxprom764 = zext i16 %167 to i64
  %arrayidx766 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom764, i64 0
  %168 = load i32, i32* %arrayidx766, align 8, !tbaa !6
  %add767 = add i32 %add749, %168
  %arrayidx771 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom764, i64 1
  %169 = load i32, i32* %arrayidx771, align 4, !tbaa !6
  %add772 = add i32 %add754, %169
  %arrayidx776 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom764, i64 2
  %170 = load i32, i32* %arrayidx776, align 8, !tbaa !6
  %add777 = add i32 %add759, %170
  %add778 = add nsw i32 %gs.15573, 31
  %idxprom779 = sext i32 %add778 to i64
  %arrayidx780 = getelementptr inbounds i16, i16* %2, i64 %idxprom779
  %171 = load i16, i16* %arrayidx780, align 2, !tbaa !33
  %idxprom782 = zext i16 %171 to i64
  %arrayidx784 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom782, i64 0
  %172 = load i32, i32* %arrayidx784, align 8, !tbaa !6
  %add785 = add i32 %add767, %172
  %arrayidx789 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom782, i64 1
  %173 = load i32, i32* %arrayidx789, align 4, !tbaa !6
  %add790 = add i32 %add772, %173
  %arrayidx794 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom782, i64 2
  %174 = load i32, i32* %arrayidx794, align 8, !tbaa !6
  %add795 = add i32 %add777, %174
  %add796 = add nsw i32 %gs.15573, 32
  %idxprom797 = sext i32 %add796 to i64
  %arrayidx798 = getelementptr inbounds i16, i16* %2, i64 %idxprom797
  %175 = load i16, i16* %arrayidx798, align 2, !tbaa !33
  %idxprom800 = zext i16 %175 to i64
  %arrayidx802 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom800, i64 0
  %176 = load i32, i32* %arrayidx802, align 8, !tbaa !6
  %add803 = add i32 %add785, %176
  %arrayidx807 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom800, i64 1
  %177 = load i32, i32* %arrayidx807, align 4, !tbaa !6
  %add808 = add i32 %add790, %177
  %arrayidx812 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom800, i64 2
  %178 = load i32, i32* %arrayidx812, align 8, !tbaa !6
  %add813 = add i32 %add795, %178
  %add814 = add nsw i32 %gs.15573, 33
  %idxprom815 = sext i32 %add814 to i64
  %arrayidx816 = getelementptr inbounds i16, i16* %2, i64 %idxprom815
  %179 = load i16, i16* %arrayidx816, align 2, !tbaa !33
  %idxprom818 = zext i16 %179 to i64
  %arrayidx820 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom818, i64 0
  %180 = load i32, i32* %arrayidx820, align 8, !tbaa !6
  %add821 = add i32 %add803, %180
  %arrayidx825 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom818, i64 1
  %181 = load i32, i32* %arrayidx825, align 4, !tbaa !6
  %add826 = add i32 %add808, %181
  %arrayidx830 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom818, i64 2
  %182 = load i32, i32* %arrayidx830, align 8, !tbaa !6
  %add831 = add i32 %add813, %182
  %add832 = add nsw i32 %gs.15573, 34
  %idxprom833 = sext i32 %add832 to i64
  %arrayidx834 = getelementptr inbounds i16, i16* %2, i64 %idxprom833
  %183 = load i16, i16* %arrayidx834, align 2, !tbaa !33
  %idxprom836 = zext i16 %183 to i64
  %arrayidx838 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom836, i64 0
  %184 = load i32, i32* %arrayidx838, align 8, !tbaa !6
  %add839 = add i32 %add821, %184
  %arrayidx843 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom836, i64 1
  %185 = load i32, i32* %arrayidx843, align 4, !tbaa !6
  %add844 = add i32 %add826, %185
  %arrayidx848 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom836, i64 2
  %186 = load i32, i32* %arrayidx848, align 8, !tbaa !6
  %add849 = add i32 %add831, %186
  %add850 = add nsw i32 %gs.15573, 35
  %idxprom851 = sext i32 %add850 to i64
  %arrayidx852 = getelementptr inbounds i16, i16* %2, i64 %idxprom851
  %187 = load i16, i16* %arrayidx852, align 2, !tbaa !33
  %idxprom854 = zext i16 %187 to i64
  %arrayidx856 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom854, i64 0
  %188 = load i32, i32* %arrayidx856, align 8, !tbaa !6
  %add857 = add i32 %add839, %188
  %arrayidx861 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom854, i64 1
  %189 = load i32, i32* %arrayidx861, align 4, !tbaa !6
  %add862 = add i32 %add844, %189
  %arrayidx866 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom854, i64 2
  %190 = load i32, i32* %arrayidx866, align 8, !tbaa !6
  %add867 = add i32 %add849, %190
  %add868 = add nsw i32 %gs.15573, 36
  %idxprom869 = sext i32 %add868 to i64
  %arrayidx870 = getelementptr inbounds i16, i16* %2, i64 %idxprom869
  %191 = load i16, i16* %arrayidx870, align 2, !tbaa !33
  %idxprom872 = zext i16 %191 to i64
  %arrayidx874 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom872, i64 0
  %192 = load i32, i32* %arrayidx874, align 8, !tbaa !6
  %add875 = add i32 %add857, %192
  %arrayidx879 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom872, i64 1
  %193 = load i32, i32* %arrayidx879, align 4, !tbaa !6
  %add880 = add i32 %add862, %193
  %arrayidx884 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom872, i64 2
  %194 = load i32, i32* %arrayidx884, align 8, !tbaa !6
  %add885 = add i32 %add867, %194
  %add886 = add nsw i32 %gs.15573, 37
  %idxprom887 = sext i32 %add886 to i64
  %arrayidx888 = getelementptr inbounds i16, i16* %2, i64 %idxprom887
  %195 = load i16, i16* %arrayidx888, align 2, !tbaa !33
  %idxprom890 = zext i16 %195 to i64
  %arrayidx892 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom890, i64 0
  %196 = load i32, i32* %arrayidx892, align 8, !tbaa !6
  %add893 = add i32 %add875, %196
  %arrayidx897 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom890, i64 1
  %197 = load i32, i32* %arrayidx897, align 4, !tbaa !6
  %add898 = add i32 %add880, %197
  %arrayidx902 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom890, i64 2
  %198 = load i32, i32* %arrayidx902, align 8, !tbaa !6
  %add903 = add i32 %add885, %198
  %add904 = add nsw i32 %gs.15573, 38
  %idxprom905 = sext i32 %add904 to i64
  %arrayidx906 = getelementptr inbounds i16, i16* %2, i64 %idxprom905
  %199 = load i16, i16* %arrayidx906, align 2, !tbaa !33
  %idxprom908 = zext i16 %199 to i64
  %arrayidx910 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom908, i64 0
  %200 = load i32, i32* %arrayidx910, align 8, !tbaa !6
  %add911 = add i32 %add893, %200
  %arrayidx915 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom908, i64 1
  %201 = load i32, i32* %arrayidx915, align 4, !tbaa !6
  %add916 = add i32 %add898, %201
  %arrayidx920 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom908, i64 2
  %202 = load i32, i32* %arrayidx920, align 8, !tbaa !6
  %add921 = add i32 %add903, %202
  %add922 = add nsw i32 %gs.15573, 39
  %idxprom923 = sext i32 %add922 to i64
  %arrayidx924 = getelementptr inbounds i16, i16* %2, i64 %idxprom923
  %203 = load i16, i16* %arrayidx924, align 2, !tbaa !33
  %idxprom926 = zext i16 %203 to i64
  %arrayidx928 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom926, i64 0
  %204 = load i32, i32* %arrayidx928, align 8, !tbaa !6
  %add929 = add i32 %add911, %204
  %arrayidx933 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom926, i64 1
  %205 = load i32, i32* %arrayidx933, align 4, !tbaa !6
  %add934 = add i32 %add916, %205
  %arrayidx938 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom926, i64 2
  %206 = load i32, i32* %arrayidx938, align 8, !tbaa !6
  %add939 = add i32 %add921, %206
  %add940 = add nsw i32 %gs.15573, 40
  %idxprom941 = sext i32 %add940 to i64
  %arrayidx942 = getelementptr inbounds i16, i16* %2, i64 %idxprom941
  %207 = load i16, i16* %arrayidx942, align 2, !tbaa !33
  %idxprom944 = zext i16 %207 to i64
  %arrayidx946 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom944, i64 0
  %208 = load i32, i32* %arrayidx946, align 8, !tbaa !6
  %add947 = add i32 %add929, %208
  %arrayidx951 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom944, i64 1
  %209 = load i32, i32* %arrayidx951, align 4, !tbaa !6
  %add952 = add i32 %add934, %209
  %arrayidx956 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom944, i64 2
  %210 = load i32, i32* %arrayidx956, align 8, !tbaa !6
  %add957 = add i32 %add939, %210
  %add958 = add nsw i32 %gs.15573, 41
  %idxprom959 = sext i32 %add958 to i64
  %arrayidx960 = getelementptr inbounds i16, i16* %2, i64 %idxprom959
  %211 = load i16, i16* %arrayidx960, align 2, !tbaa !33
  %idxprom962 = zext i16 %211 to i64
  %arrayidx964 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom962, i64 0
  %212 = load i32, i32* %arrayidx964, align 8, !tbaa !6
  %add965 = add i32 %add947, %212
  %arrayidx969 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom962, i64 1
  %213 = load i32, i32* %arrayidx969, align 4, !tbaa !6
  %add970 = add i32 %add952, %213
  %arrayidx974 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom962, i64 2
  %214 = load i32, i32* %arrayidx974, align 8, !tbaa !6
  %add975 = add i32 %add957, %214
  %add976 = add nsw i32 %gs.15573, 42
  %idxprom977 = sext i32 %add976 to i64
  %arrayidx978 = getelementptr inbounds i16, i16* %2, i64 %idxprom977
  %215 = load i16, i16* %arrayidx978, align 2, !tbaa !33
  %idxprom980 = zext i16 %215 to i64
  %arrayidx982 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom980, i64 0
  %216 = load i32, i32* %arrayidx982, align 8, !tbaa !6
  %add983 = add i32 %add965, %216
  %arrayidx987 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom980, i64 1
  %217 = load i32, i32* %arrayidx987, align 4, !tbaa !6
  %add988 = add i32 %add970, %217
  %arrayidx992 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom980, i64 2
  %218 = load i32, i32* %arrayidx992, align 8, !tbaa !6
  %add993 = add i32 %add975, %218
  %add994 = add nsw i32 %gs.15573, 43
  %idxprom995 = sext i32 %add994 to i64
  %arrayidx996 = getelementptr inbounds i16, i16* %2, i64 %idxprom995
  %219 = load i16, i16* %arrayidx996, align 2, !tbaa !33
  %idxprom998 = zext i16 %219 to i64
  %arrayidx1000 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom998, i64 0
  %220 = load i32, i32* %arrayidx1000, align 8, !tbaa !6
  %add1001 = add i32 %add983, %220
  %arrayidx1005 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom998, i64 1
  %221 = load i32, i32* %arrayidx1005, align 4, !tbaa !6
  %add1006 = add i32 %add988, %221
  %arrayidx1010 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom998, i64 2
  %222 = load i32, i32* %arrayidx1010, align 8, !tbaa !6
  %add1011 = add i32 %add993, %222
  %add1012 = add nsw i32 %gs.15573, 44
  %idxprom1013 = sext i32 %add1012 to i64
  %arrayidx1014 = getelementptr inbounds i16, i16* %2, i64 %idxprom1013
  %223 = load i16, i16* %arrayidx1014, align 2, !tbaa !33
  %idxprom1016 = zext i16 %223 to i64
  %arrayidx1018 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1016, i64 0
  %224 = load i32, i32* %arrayidx1018, align 8, !tbaa !6
  %add1019 = add i32 %add1001, %224
  %arrayidx1023 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1016, i64 1
  %225 = load i32, i32* %arrayidx1023, align 4, !tbaa !6
  %add1024 = add i32 %add1006, %225
  %arrayidx1028 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1016, i64 2
  %226 = load i32, i32* %arrayidx1028, align 8, !tbaa !6
  %add1029 = add i32 %add1011, %226
  %add1030 = add nsw i32 %gs.15573, 45
  %idxprom1031 = sext i32 %add1030 to i64
  %arrayidx1032 = getelementptr inbounds i16, i16* %2, i64 %idxprom1031
  %227 = load i16, i16* %arrayidx1032, align 2, !tbaa !33
  %idxprom1034 = zext i16 %227 to i64
  %arrayidx1036 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1034, i64 0
  %228 = load i32, i32* %arrayidx1036, align 8, !tbaa !6
  %add1037 = add i32 %add1019, %228
  %arrayidx1041 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1034, i64 1
  %229 = load i32, i32* %arrayidx1041, align 4, !tbaa !6
  %add1042 = add i32 %add1024, %229
  %arrayidx1046 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1034, i64 2
  %230 = load i32, i32* %arrayidx1046, align 8, !tbaa !6
  %add1047 = add i32 %add1029, %230
  %add1048 = add nsw i32 %gs.15573, 46
  %idxprom1049 = sext i32 %add1048 to i64
  %arrayidx1050 = getelementptr inbounds i16, i16* %2, i64 %idxprom1049
  %231 = load i16, i16* %arrayidx1050, align 2, !tbaa !33
  %idxprom1052 = zext i16 %231 to i64
  %arrayidx1054 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1052, i64 0
  %232 = load i32, i32* %arrayidx1054, align 8, !tbaa !6
  %add1055 = add i32 %add1037, %232
  %arrayidx1059 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1052, i64 1
  %233 = load i32, i32* %arrayidx1059, align 4, !tbaa !6
  %add1060 = add i32 %add1042, %233
  %arrayidx1064 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1052, i64 2
  %234 = load i32, i32* %arrayidx1064, align 8, !tbaa !6
  %add1065 = add i32 %add1047, %234
  %add1066 = add nsw i32 %gs.15573, 47
  %idxprom1067 = sext i32 %add1066 to i64
  %arrayidx1068 = getelementptr inbounds i16, i16* %2, i64 %idxprom1067
  %235 = load i16, i16* %arrayidx1068, align 2, !tbaa !33
  %idxprom1070 = zext i16 %235 to i64
  %arrayidx1072 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1070, i64 0
  %236 = load i32, i32* %arrayidx1072, align 8, !tbaa !6
  %add1073 = add i32 %add1055, %236
  %arrayidx1077 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1070, i64 1
  %237 = load i32, i32* %arrayidx1077, align 4, !tbaa !6
  %add1078 = add i32 %add1060, %237
  %arrayidx1082 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1070, i64 2
  %238 = load i32, i32* %arrayidx1082, align 8, !tbaa !6
  %add1083 = add i32 %add1065, %238
  %add1084 = add nsw i32 %gs.15573, 48
  %idxprom1085 = sext i32 %add1084 to i64
  %arrayidx1086 = getelementptr inbounds i16, i16* %2, i64 %idxprom1085
  %239 = load i16, i16* %arrayidx1086, align 2, !tbaa !33
  %idxprom1088 = zext i16 %239 to i64
  %arrayidx1090 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1088, i64 0
  %240 = load i32, i32* %arrayidx1090, align 8, !tbaa !6
  %add1091 = add i32 %add1073, %240
  %arrayidx1095 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1088, i64 1
  %241 = load i32, i32* %arrayidx1095, align 4, !tbaa !6
  %add1096 = add i32 %add1078, %241
  %arrayidx1100 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1088, i64 2
  %242 = load i32, i32* %arrayidx1100, align 8, !tbaa !6
  %add1101 = add i32 %add1083, %242
  %idxprom1103 = sext i32 %sub195 to i64
  %arrayidx1104 = getelementptr inbounds i16, i16* %2, i64 %idxprom1103
  %243 = load i16, i16* %arrayidx1104, align 2, !tbaa !33
  %idxprom1106 = zext i16 %243 to i64
  %arrayidx1108 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1106, i64 0
  %244 = load i32, i32* %arrayidx1108, align 8, !tbaa !6
  %add1109 = add i32 %add1091, %244
  %arrayidx1113 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1106, i64 1
  %245 = load i32, i32* %arrayidx1113, align 4, !tbaa !6
  %add1114 = add i32 %add1096, %245
  %arrayidx1118 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 38, i64 %idxprom1106, i64 2
  %246 = load i32, i32* %arrayidx1118, align 8, !tbaa !6
  %add1119 = add i32 %add1101, %246
  %conv1120 = trunc i32 %add1109 to i16
  store i16 %conv1120, i16* %arrayidx1121, align 2, !tbaa !33
  %shr = lshr i32 %add1109, 16
  %conv1122 = trunc i32 %shr to i16
  store i16 %conv1122, i16* %arrayidx1123, align 2, !tbaa !33
  %conv1125 = trunc i32 %add1114 to i16
  store i16 %conv1125, i16* %arrayidx1126, align 2, !tbaa !33
  %shr1127 = lshr i32 %add1114, 16
  %conv1128 = trunc i32 %shr1127 to i16
  store i16 %conv1128, i16* %arrayidx1129, align 2, !tbaa !33
  %conv1131 = trunc i32 %add1119 to i16
  store i16 %conv1131, i16* %arrayidx1132, align 2, !tbaa !33
  %shr1133 = lshr i32 %add1119, 16
  %conv1134 = trunc i32 %shr1133 to i16
  store i16 %conv1134, i16* %arrayidx1135, align 2, !tbaa !33
  br label %for.body1169

if.else1136:                                      ; preds = %if.end193
  %cmp11385563 = icmp slt i32 %spec.select3897, %gs.15573
  br i1 %cmp11385563, label %for.body1169, label %for.body1140.lr.ph

for.body1140.lr.ph:                               ; preds = %if.else1136
  %247 = sext i32 %gs.15573 to i64
  %248 = sext i32 %spec.select3897 to i64
  %arrayidx1155.promoted = load i16, i16* %arrayidx1155, align 2, !tbaa !33
  %arrayidx1155.1.promoted = load i16, i16* %arrayidx1155.1, align 1, !tbaa !33
  %arrayidx1155.2.promoted = load i16, i16* %arrayidx1155.2, align 1, !tbaa !33
  %arrayidx1155.3.promoted = load i16, i16* %arrayidx1155.3, align 1, !tbaa !33
  %arrayidx1155.4.promoted = load i16, i16* %arrayidx1155.4, align 1, !tbaa !33
  %arrayidx1155.5.promoted = load i16, i16* %arrayidx1155.5, align 1, !tbaa !33
  br label %for.body1140

for.body1140:                                     ; preds = %for.end1161, %for.body1140.lr.ph
  %add1157.55839 = phi i16 [ %add1157.55838, %for.end1161 ], [ %arrayidx1155.5.promoted, %for.body1140.lr.ph ]
  %add1157.45837 = phi i16 [ %add1157.45836, %for.end1161 ], [ %arrayidx1155.4.promoted, %for.body1140.lr.ph ]
  %add1157.35835 = phi i16 [ %add1157.35834, %for.end1161 ], [ %arrayidx1155.3.promoted, %for.body1140.lr.ph ]
  %add1157.25833 = phi i16 [ %add1157.25832, %for.end1161 ], [ %arrayidx1155.2.promoted, %for.body1140.lr.ph ]
  %add1157.15831 = phi i16 [ %add1157.1, %for.end1161 ], [ %arrayidx1155.1.promoted, %for.body1140.lr.ph ]
  %add11575829 = phi i16 [ %add1157, %for.end1161 ], [ %arrayidx1155.promoted, %for.body1140.lr.ph ]
  %indvars.iv5655 = phi i64 [ %indvars.iv.next5656, %for.end1161 ], [ %247, %for.body1140.lr.ph ]
  %arrayidx1143 = getelementptr inbounds i16, i16* %2, i64 %indvars.iv5655
  %249 = load i16, i16* %arrayidx1143, align 2, !tbaa !33
  %idxprom1151 = zext i16 %249 to i64
  %arrayidx1152 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 0, i64 %idxprom1151
  %250 = load i8, i8* %arrayidx1152, align 1, !tbaa !12
  %conv1153 = zext i8 %250 to i16
  %add1157 = add i16 %add11575829, %conv1153
  %arrayidx1152.1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 1, i64 %idxprom1151
  %251 = load i8, i8* %arrayidx1152.1, align 1, !tbaa !12
  %conv1153.1 = zext i8 %251 to i16
  %add1157.1 = add i16 %add1157.15831, %conv1153.1
  br i1 %cmp1145.1, label %for.body1147.2, label %for.end1161

for.end1161:                                      ; preds = %for.body1147.5, %for.body1147.4, %for.body1147.3, %for.body1147.2, %for.body1140
  %add1157.55838 = phi i16 [ %add1157.55839, %for.body1147.4 ], [ %add1157.55839, %for.body1147.2 ], [ %add1157.5, %for.body1147.5 ], [ %add1157.55839, %for.body1147.3 ], [ %add1157.55839, %for.body1140 ]
  %add1157.45836 = phi i16 [ %add1157.4, %for.body1147.4 ], [ %add1157.45837, %for.body1147.2 ], [ %add1157.4, %for.body1147.5 ], [ %add1157.45837, %for.body1147.3 ], [ %add1157.45837, %for.body1140 ]
  %add1157.35834 = phi i16 [ %add1157.3, %for.body1147.4 ], [ %add1157.35835, %for.body1147.2 ], [ %add1157.3, %for.body1147.5 ], [ %add1157.3, %for.body1147.3 ], [ %add1157.35835, %for.body1140 ]
  %add1157.25832 = phi i16 [ %add1157.2, %for.body1147.4 ], [ %add1157.2, %for.body1147.2 ], [ %add1157.2, %for.body1147.5 ], [ %add1157.2, %for.body1147.3 ], [ %add1157.25833, %for.body1140 ]
  %indvars.iv.next5656 = add nsw i64 %indvars.iv5655, 1
  %cmp1138 = icmp slt i64 %indvars.iv5655, %248
  br i1 %cmp1138, label %for.body1140, label %for.body1169.preheader.loopexit

for.body1169.preheader.loopexit:                  ; preds = %for.end1161
  store i16 %add1157, i16* %arrayidx1155, align 2, !tbaa !33
  store i16 %add1157.1, i16* %arrayidx1155.1, align 1, !tbaa !33
  store i16 %add1157.25832, i16* %arrayidx1155.2, align 1, !tbaa !33
  store i16 %add1157.35834, i16* %arrayidx1155.3, align 1, !tbaa !33
  store i16 %add1157.45836, i16* %arrayidx1155.4, align 1, !tbaa !33
  store i16 %add1157.55838, i16* %arrayidx1155.5, align 1, !tbaa !33
  br label %for.body1169

for.body1169:                                     ; preds = %for.body1169.preheader.loopexit, %if.else1136, %if.then219
  %252 = load i16, i16* %arrayidx1171, align 2, !tbaa !33
  %conv1172 = zext i16 %252 to i32
  %253 = load i16, i16* %arrayidx1171.1, align 2, !tbaa !33
  %cmp1173.1 = icmp ugt i16 %252, %253
  %254 = icmp ult i16 %252, %253
  %spec.select3899.15809 = select i1 %254, i16 %252, i16 %253
  %255 = zext i16 %spec.select3899.15809 to i32
  %spec.select3900.1 = zext i1 %cmp1173.1 to i32
  br i1 %cmp1167.1, label %for.body1169.2, label %for.end1182

for.end1182:                                      ; preds = %for.body1169.5, %for.body1169.4, %for.body1169.3, %for.body1169.2, %for.body1169
  %spec.select3899.lcssa = phi i32 [ %255, %for.body1169 ], [ %1118, %for.body1169.2 ], [ %1121, %for.body1169.3 ], [ %1124, %for.body1169.4 ], [ %1127, %for.body1169.5 ]
  %spec.select3900.lcssa = phi i32 [ %spec.select3900.1, %for.body1169 ], [ %spec.select3900.2, %for.body1169.2 ], [ %spec.select3900.3, %for.body1169.3 ], [ %spec.select3900.4, %for.body1169.4 ], [ %spec.select3900.5, %for.body1169.5 ]
  %add1183 = add nsw i32 %spec.select3899.lcssa, %totc.05572
  %idxprom1184 = sext i32 %spec.select3900.lcssa to i64
  %arrayidx1185 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %idxprom1184
  %256 = load i32, i32* %arrayidx1185, align 4, !tbaa !6
  %inc1186 = add nsw i32 %256, 1
  store i32 %inc1186, i32* %arrayidx1185, align 4, !tbaa !6
  %conv1187 = trunc i32 %spec.select3900.lcssa to i8
  %arrayidx1189 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 33, i64 %indvars.iv5661
  store i8 %conv1187, i8* %arrayidx1189, align 1, !tbaa !12
  %indvars.iv.next5662 = add nuw i64 %indvars.iv5661, 1
  br i1 %or.cond3898, label %if.then1198, label %if.else1649

if.then1198:                                      ; preds = %for.end1182
  %idxprom1203 = sext i32 %gs.15573 to i64
  %arrayidx1204 = getelementptr inbounds i16, i16* %2, i64 %idxprom1203
  %257 = load i16, i16* %arrayidx1204, align 2, !tbaa !33
  %idxprom1205 = zext i16 %257 to i64
  %arrayidx1206 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1205
  %258 = load i32, i32* %arrayidx1206, align 4, !tbaa !6
  %inc1207 = add nsw i32 %258, 1
  store i32 %inc1207, i32* %arrayidx1206, align 4, !tbaa !6
  %add1211 = add nsw i32 %gs.15573, 1
  %idxprom1212 = sext i32 %add1211 to i64
  %arrayidx1213 = getelementptr inbounds i16, i16* %2, i64 %idxprom1212
  %259 = load i16, i16* %arrayidx1213, align 2, !tbaa !33
  %idxprom1214 = zext i16 %259 to i64
  %arrayidx1215 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1214
  %260 = load i32, i32* %arrayidx1215, align 4, !tbaa !6
  %inc1216 = add nsw i32 %260, 1
  store i32 %inc1216, i32* %arrayidx1215, align 4, !tbaa !6
  %add1220 = add nsw i32 %gs.15573, 2
  %idxprom1221 = sext i32 %add1220 to i64
  %arrayidx1222 = getelementptr inbounds i16, i16* %2, i64 %idxprom1221
  %261 = load i16, i16* %arrayidx1222, align 2, !tbaa !33
  %idxprom1223 = zext i16 %261 to i64
  %arrayidx1224 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1223
  %262 = load i32, i32* %arrayidx1224, align 4, !tbaa !6
  %inc1225 = add nsw i32 %262, 1
  store i32 %inc1225, i32* %arrayidx1224, align 4, !tbaa !6
  %add1229 = add nsw i32 %gs.15573, 3
  %idxprom1230 = sext i32 %add1229 to i64
  %arrayidx1231 = getelementptr inbounds i16, i16* %2, i64 %idxprom1230
  %263 = load i16, i16* %arrayidx1231, align 2, !tbaa !33
  %idxprom1232 = zext i16 %263 to i64
  %arrayidx1233 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1232
  %264 = load i32, i32* %arrayidx1233, align 4, !tbaa !6
  %inc1234 = add nsw i32 %264, 1
  store i32 %inc1234, i32* %arrayidx1233, align 4, !tbaa !6
  %add1238 = add nsw i32 %gs.15573, 4
  %idxprom1239 = sext i32 %add1238 to i64
  %arrayidx1240 = getelementptr inbounds i16, i16* %2, i64 %idxprom1239
  %265 = load i16, i16* %arrayidx1240, align 2, !tbaa !33
  %idxprom1241 = zext i16 %265 to i64
  %arrayidx1242 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1241
  %266 = load i32, i32* %arrayidx1242, align 4, !tbaa !6
  %inc1243 = add nsw i32 %266, 1
  store i32 %inc1243, i32* %arrayidx1242, align 4, !tbaa !6
  %add1247 = add nsw i32 %gs.15573, 5
  %idxprom1248 = sext i32 %add1247 to i64
  %arrayidx1249 = getelementptr inbounds i16, i16* %2, i64 %idxprom1248
  %267 = load i16, i16* %arrayidx1249, align 2, !tbaa !33
  %idxprom1250 = zext i16 %267 to i64
  %arrayidx1251 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1250
  %268 = load i32, i32* %arrayidx1251, align 4, !tbaa !6
  %inc1252 = add nsw i32 %268, 1
  store i32 %inc1252, i32* %arrayidx1251, align 4, !tbaa !6
  %add1256 = add nsw i32 %gs.15573, 6
  %idxprom1257 = sext i32 %add1256 to i64
  %arrayidx1258 = getelementptr inbounds i16, i16* %2, i64 %idxprom1257
  %269 = load i16, i16* %arrayidx1258, align 2, !tbaa !33
  %idxprom1259 = zext i16 %269 to i64
  %arrayidx1260 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1259
  %270 = load i32, i32* %arrayidx1260, align 4, !tbaa !6
  %inc1261 = add nsw i32 %270, 1
  store i32 %inc1261, i32* %arrayidx1260, align 4, !tbaa !6
  %add1265 = add nsw i32 %gs.15573, 7
  %idxprom1266 = sext i32 %add1265 to i64
  %arrayidx1267 = getelementptr inbounds i16, i16* %2, i64 %idxprom1266
  %271 = load i16, i16* %arrayidx1267, align 2, !tbaa !33
  %idxprom1268 = zext i16 %271 to i64
  %arrayidx1269 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1268
  %272 = load i32, i32* %arrayidx1269, align 4, !tbaa !6
  %inc1270 = add nsw i32 %272, 1
  store i32 %inc1270, i32* %arrayidx1269, align 4, !tbaa !6
  %add1274 = add nsw i32 %gs.15573, 8
  %idxprom1275 = sext i32 %add1274 to i64
  %arrayidx1276 = getelementptr inbounds i16, i16* %2, i64 %idxprom1275
  %273 = load i16, i16* %arrayidx1276, align 2, !tbaa !33
  %idxprom1277 = zext i16 %273 to i64
  %arrayidx1278 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1277
  %274 = load i32, i32* %arrayidx1278, align 4, !tbaa !6
  %inc1279 = add nsw i32 %274, 1
  store i32 %inc1279, i32* %arrayidx1278, align 4, !tbaa !6
  %add1283 = add nsw i32 %gs.15573, 9
  %idxprom1284 = sext i32 %add1283 to i64
  %arrayidx1285 = getelementptr inbounds i16, i16* %2, i64 %idxprom1284
  %275 = load i16, i16* %arrayidx1285, align 2, !tbaa !33
  %idxprom1286 = zext i16 %275 to i64
  %arrayidx1287 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1286
  %276 = load i32, i32* %arrayidx1287, align 4, !tbaa !6
  %inc1288 = add nsw i32 %276, 1
  store i32 %inc1288, i32* %arrayidx1287, align 4, !tbaa !6
  %add1292 = add nsw i32 %gs.15573, 10
  %idxprom1293 = sext i32 %add1292 to i64
  %arrayidx1294 = getelementptr inbounds i16, i16* %2, i64 %idxprom1293
  %277 = load i16, i16* %arrayidx1294, align 2, !tbaa !33
  %idxprom1295 = zext i16 %277 to i64
  %arrayidx1296 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1295
  %278 = load i32, i32* %arrayidx1296, align 4, !tbaa !6
  %inc1297 = add nsw i32 %278, 1
  store i32 %inc1297, i32* %arrayidx1296, align 4, !tbaa !6
  %add1301 = add nsw i32 %gs.15573, 11
  %idxprom1302 = sext i32 %add1301 to i64
  %arrayidx1303 = getelementptr inbounds i16, i16* %2, i64 %idxprom1302
  %279 = load i16, i16* %arrayidx1303, align 2, !tbaa !33
  %idxprom1304 = zext i16 %279 to i64
  %arrayidx1305 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1304
  %280 = load i32, i32* %arrayidx1305, align 4, !tbaa !6
  %inc1306 = add nsw i32 %280, 1
  store i32 %inc1306, i32* %arrayidx1305, align 4, !tbaa !6
  %add1310 = add nsw i32 %gs.15573, 12
  %idxprom1311 = sext i32 %add1310 to i64
  %arrayidx1312 = getelementptr inbounds i16, i16* %2, i64 %idxprom1311
  %281 = load i16, i16* %arrayidx1312, align 2, !tbaa !33
  %idxprom1313 = zext i16 %281 to i64
  %arrayidx1314 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1313
  %282 = load i32, i32* %arrayidx1314, align 4, !tbaa !6
  %inc1315 = add nsw i32 %282, 1
  store i32 %inc1315, i32* %arrayidx1314, align 4, !tbaa !6
  %add1319 = add nsw i32 %gs.15573, 13
  %idxprom1320 = sext i32 %add1319 to i64
  %arrayidx1321 = getelementptr inbounds i16, i16* %2, i64 %idxprom1320
  %283 = load i16, i16* %arrayidx1321, align 2, !tbaa !33
  %idxprom1322 = zext i16 %283 to i64
  %arrayidx1323 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1322
  %284 = load i32, i32* %arrayidx1323, align 4, !tbaa !6
  %inc1324 = add nsw i32 %284, 1
  store i32 %inc1324, i32* %arrayidx1323, align 4, !tbaa !6
  %add1328 = add nsw i32 %gs.15573, 14
  %idxprom1329 = sext i32 %add1328 to i64
  %arrayidx1330 = getelementptr inbounds i16, i16* %2, i64 %idxprom1329
  %285 = load i16, i16* %arrayidx1330, align 2, !tbaa !33
  %idxprom1331 = zext i16 %285 to i64
  %arrayidx1332 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1331
  %286 = load i32, i32* %arrayidx1332, align 4, !tbaa !6
  %inc1333 = add nsw i32 %286, 1
  store i32 %inc1333, i32* %arrayidx1332, align 4, !tbaa !6
  %add1337 = add nsw i32 %gs.15573, 15
  %idxprom1338 = sext i32 %add1337 to i64
  %arrayidx1339 = getelementptr inbounds i16, i16* %2, i64 %idxprom1338
  %287 = load i16, i16* %arrayidx1339, align 2, !tbaa !33
  %idxprom1340 = zext i16 %287 to i64
  %arrayidx1341 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1340
  %288 = load i32, i32* %arrayidx1341, align 4, !tbaa !6
  %inc1342 = add nsw i32 %288, 1
  store i32 %inc1342, i32* %arrayidx1341, align 4, !tbaa !6
  %add1346 = add nsw i32 %gs.15573, 16
  %idxprom1347 = sext i32 %add1346 to i64
  %arrayidx1348 = getelementptr inbounds i16, i16* %2, i64 %idxprom1347
  %289 = load i16, i16* %arrayidx1348, align 2, !tbaa !33
  %idxprom1349 = zext i16 %289 to i64
  %arrayidx1350 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1349
  %290 = load i32, i32* %arrayidx1350, align 4, !tbaa !6
  %inc1351 = add nsw i32 %290, 1
  store i32 %inc1351, i32* %arrayidx1350, align 4, !tbaa !6
  %add1355 = add nsw i32 %gs.15573, 17
  %idxprom1356 = sext i32 %add1355 to i64
  %arrayidx1357 = getelementptr inbounds i16, i16* %2, i64 %idxprom1356
  %291 = load i16, i16* %arrayidx1357, align 2, !tbaa !33
  %idxprom1358 = zext i16 %291 to i64
  %arrayidx1359 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1358
  %292 = load i32, i32* %arrayidx1359, align 4, !tbaa !6
  %inc1360 = add nsw i32 %292, 1
  store i32 %inc1360, i32* %arrayidx1359, align 4, !tbaa !6
  %add1364 = add nsw i32 %gs.15573, 18
  %idxprom1365 = sext i32 %add1364 to i64
  %arrayidx1366 = getelementptr inbounds i16, i16* %2, i64 %idxprom1365
  %293 = load i16, i16* %arrayidx1366, align 2, !tbaa !33
  %idxprom1367 = zext i16 %293 to i64
  %arrayidx1368 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1367
  %294 = load i32, i32* %arrayidx1368, align 4, !tbaa !6
  %inc1369 = add nsw i32 %294, 1
  store i32 %inc1369, i32* %arrayidx1368, align 4, !tbaa !6
  %add1373 = add nsw i32 %gs.15573, 19
  %idxprom1374 = sext i32 %add1373 to i64
  %arrayidx1375 = getelementptr inbounds i16, i16* %2, i64 %idxprom1374
  %295 = load i16, i16* %arrayidx1375, align 2, !tbaa !33
  %idxprom1376 = zext i16 %295 to i64
  %arrayidx1377 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1376
  %296 = load i32, i32* %arrayidx1377, align 4, !tbaa !6
  %inc1378 = add nsw i32 %296, 1
  store i32 %inc1378, i32* %arrayidx1377, align 4, !tbaa !6
  %add1382 = add nsw i32 %gs.15573, 20
  %idxprom1383 = sext i32 %add1382 to i64
  %arrayidx1384 = getelementptr inbounds i16, i16* %2, i64 %idxprom1383
  %297 = load i16, i16* %arrayidx1384, align 2, !tbaa !33
  %idxprom1385 = zext i16 %297 to i64
  %arrayidx1386 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1385
  %298 = load i32, i32* %arrayidx1386, align 4, !tbaa !6
  %inc1387 = add nsw i32 %298, 1
  store i32 %inc1387, i32* %arrayidx1386, align 4, !tbaa !6
  %add1391 = add nsw i32 %gs.15573, 21
  %idxprom1392 = sext i32 %add1391 to i64
  %arrayidx1393 = getelementptr inbounds i16, i16* %2, i64 %idxprom1392
  %299 = load i16, i16* %arrayidx1393, align 2, !tbaa !33
  %idxprom1394 = zext i16 %299 to i64
  %arrayidx1395 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1394
  %300 = load i32, i32* %arrayidx1395, align 4, !tbaa !6
  %inc1396 = add nsw i32 %300, 1
  store i32 %inc1396, i32* %arrayidx1395, align 4, !tbaa !6
  %add1400 = add nsw i32 %gs.15573, 22
  %idxprom1401 = sext i32 %add1400 to i64
  %arrayidx1402 = getelementptr inbounds i16, i16* %2, i64 %idxprom1401
  %301 = load i16, i16* %arrayidx1402, align 2, !tbaa !33
  %idxprom1403 = zext i16 %301 to i64
  %arrayidx1404 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1403
  %302 = load i32, i32* %arrayidx1404, align 4, !tbaa !6
  %inc1405 = add nsw i32 %302, 1
  store i32 %inc1405, i32* %arrayidx1404, align 4, !tbaa !6
  %add1409 = add nsw i32 %gs.15573, 23
  %idxprom1410 = sext i32 %add1409 to i64
  %arrayidx1411 = getelementptr inbounds i16, i16* %2, i64 %idxprom1410
  %303 = load i16, i16* %arrayidx1411, align 2, !tbaa !33
  %idxprom1412 = zext i16 %303 to i64
  %arrayidx1413 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1412
  %304 = load i32, i32* %arrayidx1413, align 4, !tbaa !6
  %inc1414 = add nsw i32 %304, 1
  store i32 %inc1414, i32* %arrayidx1413, align 4, !tbaa !6
  %add1418 = add nsw i32 %gs.15573, 24
  %idxprom1419 = sext i32 %add1418 to i64
  %arrayidx1420 = getelementptr inbounds i16, i16* %2, i64 %idxprom1419
  %305 = load i16, i16* %arrayidx1420, align 2, !tbaa !33
  %idxprom1421 = zext i16 %305 to i64
  %arrayidx1422 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1421
  %306 = load i32, i32* %arrayidx1422, align 4, !tbaa !6
  %inc1423 = add nsw i32 %306, 1
  store i32 %inc1423, i32* %arrayidx1422, align 4, !tbaa !6
  %add1427 = add nsw i32 %gs.15573, 25
  %idxprom1428 = sext i32 %add1427 to i64
  %arrayidx1429 = getelementptr inbounds i16, i16* %2, i64 %idxprom1428
  %307 = load i16, i16* %arrayidx1429, align 2, !tbaa !33
  %idxprom1430 = zext i16 %307 to i64
  %arrayidx1431 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1430
  %308 = load i32, i32* %arrayidx1431, align 4, !tbaa !6
  %inc1432 = add nsw i32 %308, 1
  store i32 %inc1432, i32* %arrayidx1431, align 4, !tbaa !6
  %add1436 = add nsw i32 %gs.15573, 26
  %idxprom1437 = sext i32 %add1436 to i64
  %arrayidx1438 = getelementptr inbounds i16, i16* %2, i64 %idxprom1437
  %309 = load i16, i16* %arrayidx1438, align 2, !tbaa !33
  %idxprom1439 = zext i16 %309 to i64
  %arrayidx1440 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1439
  %310 = load i32, i32* %arrayidx1440, align 4, !tbaa !6
  %inc1441 = add nsw i32 %310, 1
  store i32 %inc1441, i32* %arrayidx1440, align 4, !tbaa !6
  %add1445 = add nsw i32 %gs.15573, 27
  %idxprom1446 = sext i32 %add1445 to i64
  %arrayidx1447 = getelementptr inbounds i16, i16* %2, i64 %idxprom1446
  %311 = load i16, i16* %arrayidx1447, align 2, !tbaa !33
  %idxprom1448 = zext i16 %311 to i64
  %arrayidx1449 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1448
  %312 = load i32, i32* %arrayidx1449, align 4, !tbaa !6
  %inc1450 = add nsw i32 %312, 1
  store i32 %inc1450, i32* %arrayidx1449, align 4, !tbaa !6
  %add1454 = add nsw i32 %gs.15573, 28
  %idxprom1455 = sext i32 %add1454 to i64
  %arrayidx1456 = getelementptr inbounds i16, i16* %2, i64 %idxprom1455
  %313 = load i16, i16* %arrayidx1456, align 2, !tbaa !33
  %idxprom1457 = zext i16 %313 to i64
  %arrayidx1458 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1457
  %314 = load i32, i32* %arrayidx1458, align 4, !tbaa !6
  %inc1459 = add nsw i32 %314, 1
  store i32 %inc1459, i32* %arrayidx1458, align 4, !tbaa !6
  %add1463 = add nsw i32 %gs.15573, 29
  %idxprom1464 = sext i32 %add1463 to i64
  %arrayidx1465 = getelementptr inbounds i16, i16* %2, i64 %idxprom1464
  %315 = load i16, i16* %arrayidx1465, align 2, !tbaa !33
  %idxprom1466 = zext i16 %315 to i64
  %arrayidx1467 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1466
  %316 = load i32, i32* %arrayidx1467, align 4, !tbaa !6
  %inc1468 = add nsw i32 %316, 1
  store i32 %inc1468, i32* %arrayidx1467, align 4, !tbaa !6
  %add1472 = add nsw i32 %gs.15573, 30
  %idxprom1473 = sext i32 %add1472 to i64
  %arrayidx1474 = getelementptr inbounds i16, i16* %2, i64 %idxprom1473
  %317 = load i16, i16* %arrayidx1474, align 2, !tbaa !33
  %idxprom1475 = zext i16 %317 to i64
  %arrayidx1476 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1475
  %318 = load i32, i32* %arrayidx1476, align 4, !tbaa !6
  %inc1477 = add nsw i32 %318, 1
  store i32 %inc1477, i32* %arrayidx1476, align 4, !tbaa !6
  %add1481 = add nsw i32 %gs.15573, 31
  %idxprom1482 = sext i32 %add1481 to i64
  %arrayidx1483 = getelementptr inbounds i16, i16* %2, i64 %idxprom1482
  %319 = load i16, i16* %arrayidx1483, align 2, !tbaa !33
  %idxprom1484 = zext i16 %319 to i64
  %arrayidx1485 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1484
  %320 = load i32, i32* %arrayidx1485, align 4, !tbaa !6
  %inc1486 = add nsw i32 %320, 1
  store i32 %inc1486, i32* %arrayidx1485, align 4, !tbaa !6
  %add1490 = add nsw i32 %gs.15573, 32
  %idxprom1491 = sext i32 %add1490 to i64
  %arrayidx1492 = getelementptr inbounds i16, i16* %2, i64 %idxprom1491
  %321 = load i16, i16* %arrayidx1492, align 2, !tbaa !33
  %idxprom1493 = zext i16 %321 to i64
  %arrayidx1494 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1493
  %322 = load i32, i32* %arrayidx1494, align 4, !tbaa !6
  %inc1495 = add nsw i32 %322, 1
  store i32 %inc1495, i32* %arrayidx1494, align 4, !tbaa !6
  %add1499 = add nsw i32 %gs.15573, 33
  %idxprom1500 = sext i32 %add1499 to i64
  %arrayidx1501 = getelementptr inbounds i16, i16* %2, i64 %idxprom1500
  %323 = load i16, i16* %arrayidx1501, align 2, !tbaa !33
  %idxprom1502 = zext i16 %323 to i64
  %arrayidx1503 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1502
  %324 = load i32, i32* %arrayidx1503, align 4, !tbaa !6
  %inc1504 = add nsw i32 %324, 1
  store i32 %inc1504, i32* %arrayidx1503, align 4, !tbaa !6
  %add1508 = add nsw i32 %gs.15573, 34
  %idxprom1509 = sext i32 %add1508 to i64
  %arrayidx1510 = getelementptr inbounds i16, i16* %2, i64 %idxprom1509
  %325 = load i16, i16* %arrayidx1510, align 2, !tbaa !33
  %idxprom1511 = zext i16 %325 to i64
  %arrayidx1512 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1511
  %326 = load i32, i32* %arrayidx1512, align 4, !tbaa !6
  %inc1513 = add nsw i32 %326, 1
  store i32 %inc1513, i32* %arrayidx1512, align 4, !tbaa !6
  %add1517 = add nsw i32 %gs.15573, 35
  %idxprom1518 = sext i32 %add1517 to i64
  %arrayidx1519 = getelementptr inbounds i16, i16* %2, i64 %idxprom1518
  %327 = load i16, i16* %arrayidx1519, align 2, !tbaa !33
  %idxprom1520 = zext i16 %327 to i64
  %arrayidx1521 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1520
  %328 = load i32, i32* %arrayidx1521, align 4, !tbaa !6
  %inc1522 = add nsw i32 %328, 1
  store i32 %inc1522, i32* %arrayidx1521, align 4, !tbaa !6
  %add1526 = add nsw i32 %gs.15573, 36
  %idxprom1527 = sext i32 %add1526 to i64
  %arrayidx1528 = getelementptr inbounds i16, i16* %2, i64 %idxprom1527
  %329 = load i16, i16* %arrayidx1528, align 2, !tbaa !33
  %idxprom1529 = zext i16 %329 to i64
  %arrayidx1530 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1529
  %330 = load i32, i32* %arrayidx1530, align 4, !tbaa !6
  %inc1531 = add nsw i32 %330, 1
  store i32 %inc1531, i32* %arrayidx1530, align 4, !tbaa !6
  %add1535 = add nsw i32 %gs.15573, 37
  %idxprom1536 = sext i32 %add1535 to i64
  %arrayidx1537 = getelementptr inbounds i16, i16* %2, i64 %idxprom1536
  %331 = load i16, i16* %arrayidx1537, align 2, !tbaa !33
  %idxprom1538 = zext i16 %331 to i64
  %arrayidx1539 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1538
  %332 = load i32, i32* %arrayidx1539, align 4, !tbaa !6
  %inc1540 = add nsw i32 %332, 1
  store i32 %inc1540, i32* %arrayidx1539, align 4, !tbaa !6
  %add1544 = add nsw i32 %gs.15573, 38
  %idxprom1545 = sext i32 %add1544 to i64
  %arrayidx1546 = getelementptr inbounds i16, i16* %2, i64 %idxprom1545
  %333 = load i16, i16* %arrayidx1546, align 2, !tbaa !33
  %idxprom1547 = zext i16 %333 to i64
  %arrayidx1548 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1547
  %334 = load i32, i32* %arrayidx1548, align 4, !tbaa !6
  %inc1549 = add nsw i32 %334, 1
  store i32 %inc1549, i32* %arrayidx1548, align 4, !tbaa !6
  %add1553 = add nsw i32 %gs.15573, 39
  %idxprom1554 = sext i32 %add1553 to i64
  %arrayidx1555 = getelementptr inbounds i16, i16* %2, i64 %idxprom1554
  %335 = load i16, i16* %arrayidx1555, align 2, !tbaa !33
  %idxprom1556 = zext i16 %335 to i64
  %arrayidx1557 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1556
  %336 = load i32, i32* %arrayidx1557, align 4, !tbaa !6
  %inc1558 = add nsw i32 %336, 1
  store i32 %inc1558, i32* %arrayidx1557, align 4, !tbaa !6
  %add1562 = add nsw i32 %gs.15573, 40
  %idxprom1563 = sext i32 %add1562 to i64
  %arrayidx1564 = getelementptr inbounds i16, i16* %2, i64 %idxprom1563
  %337 = load i16, i16* %arrayidx1564, align 2, !tbaa !33
  %idxprom1565 = zext i16 %337 to i64
  %arrayidx1566 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1565
  %338 = load i32, i32* %arrayidx1566, align 4, !tbaa !6
  %inc1567 = add nsw i32 %338, 1
  store i32 %inc1567, i32* %arrayidx1566, align 4, !tbaa !6
  %add1571 = add nsw i32 %gs.15573, 41
  %idxprom1572 = sext i32 %add1571 to i64
  %arrayidx1573 = getelementptr inbounds i16, i16* %2, i64 %idxprom1572
  %339 = load i16, i16* %arrayidx1573, align 2, !tbaa !33
  %idxprom1574 = zext i16 %339 to i64
  %arrayidx1575 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1574
  %340 = load i32, i32* %arrayidx1575, align 4, !tbaa !6
  %inc1576 = add nsw i32 %340, 1
  store i32 %inc1576, i32* %arrayidx1575, align 4, !tbaa !6
  %add1580 = add nsw i32 %gs.15573, 42
  %idxprom1581 = sext i32 %add1580 to i64
  %arrayidx1582 = getelementptr inbounds i16, i16* %2, i64 %idxprom1581
  %341 = load i16, i16* %arrayidx1582, align 2, !tbaa !33
  %idxprom1583 = zext i16 %341 to i64
  %arrayidx1584 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1583
  %342 = load i32, i32* %arrayidx1584, align 4, !tbaa !6
  %inc1585 = add nsw i32 %342, 1
  store i32 %inc1585, i32* %arrayidx1584, align 4, !tbaa !6
  %add1589 = add nsw i32 %gs.15573, 43
  %idxprom1590 = sext i32 %add1589 to i64
  %arrayidx1591 = getelementptr inbounds i16, i16* %2, i64 %idxprom1590
  %343 = load i16, i16* %arrayidx1591, align 2, !tbaa !33
  %idxprom1592 = zext i16 %343 to i64
  %arrayidx1593 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1592
  %344 = load i32, i32* %arrayidx1593, align 4, !tbaa !6
  %inc1594 = add nsw i32 %344, 1
  store i32 %inc1594, i32* %arrayidx1593, align 4, !tbaa !6
  %add1598 = add nsw i32 %gs.15573, 44
  %idxprom1599 = sext i32 %add1598 to i64
  %arrayidx1600 = getelementptr inbounds i16, i16* %2, i64 %idxprom1599
  %345 = load i16, i16* %arrayidx1600, align 2, !tbaa !33
  %idxprom1601 = zext i16 %345 to i64
  %arrayidx1602 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1601
  %346 = load i32, i32* %arrayidx1602, align 4, !tbaa !6
  %inc1603 = add nsw i32 %346, 1
  store i32 %inc1603, i32* %arrayidx1602, align 4, !tbaa !6
  %add1607 = add nsw i32 %gs.15573, 45
  %idxprom1608 = sext i32 %add1607 to i64
  %arrayidx1609 = getelementptr inbounds i16, i16* %2, i64 %idxprom1608
  %347 = load i16, i16* %arrayidx1609, align 2, !tbaa !33
  %idxprom1610 = zext i16 %347 to i64
  %arrayidx1611 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1610
  %348 = load i32, i32* %arrayidx1611, align 4, !tbaa !6
  %inc1612 = add nsw i32 %348, 1
  store i32 %inc1612, i32* %arrayidx1611, align 4, !tbaa !6
  %add1616 = add nsw i32 %gs.15573, 46
  %idxprom1617 = sext i32 %add1616 to i64
  %arrayidx1618 = getelementptr inbounds i16, i16* %2, i64 %idxprom1617
  %349 = load i16, i16* %arrayidx1618, align 2, !tbaa !33
  %idxprom1619 = zext i16 %349 to i64
  %arrayidx1620 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1619
  %350 = load i32, i32* %arrayidx1620, align 4, !tbaa !6
  %inc1621 = add nsw i32 %350, 1
  store i32 %inc1621, i32* %arrayidx1620, align 4, !tbaa !6
  %add1625 = add nsw i32 %gs.15573, 47
  %idxprom1626 = sext i32 %add1625 to i64
  %arrayidx1627 = getelementptr inbounds i16, i16* %2, i64 %idxprom1626
  %351 = load i16, i16* %arrayidx1627, align 2, !tbaa !33
  %idxprom1628 = zext i16 %351 to i64
  %arrayidx1629 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1628
  %352 = load i32, i32* %arrayidx1629, align 4, !tbaa !6
  %inc1630 = add nsw i32 %352, 1
  store i32 %inc1630, i32* %arrayidx1629, align 4, !tbaa !6
  %add1634 = add nsw i32 %gs.15573, 48
  %idxprom1635 = sext i32 %add1634 to i64
  %arrayidx1636 = getelementptr inbounds i16, i16* %2, i64 %idxprom1635
  %353 = load i16, i16* %arrayidx1636, align 2, !tbaa !33
  %idxprom1637 = zext i16 %353 to i64
  %arrayidx1638 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1637
  %354 = load i32, i32* %arrayidx1638, align 4, !tbaa !6
  %inc1639 = add nsw i32 %354, 1
  store i32 %inc1639, i32* %arrayidx1638, align 4, !tbaa !6
  %idxprom1644 = sext i32 %sub195 to i64
  %arrayidx1645 = getelementptr inbounds i16, i16* %2, i64 %idxprom1644
  %355 = load i16, i16* %arrayidx1645, align 2, !tbaa !33
  %idxprom1646 = zext i16 %355 to i64
  %arrayidx1647 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1646
  %356 = load i32, i32* %arrayidx1647, align 4, !tbaa !6
  %inc1648 = add nsw i32 %356, 1
  store i32 %inc1648, i32* %arrayidx1647, align 4, !tbaa !6
  br label %if.end1665

if.else1649:                                      ; preds = %for.end1182
  %cmp16515568 = icmp slt i32 %spec.select3897, %gs.15573
  br i1 %cmp16515568, label %if.end1665, label %for.body1653.lr.ph

for.body1653.lr.ph:                               ; preds = %if.else1649
  %357 = sext i32 %gs.15573 to i64
  %358 = sext i32 %spec.select3897 to i64
  %359 = add nsw i64 %358, 1
  %360 = sub nsw i64 %359, %357
  %xtraiter = and i64 %360, 1
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body1653.prol.loopexit, label %for.body1653.prol

for.body1653.prol:                                ; preds = %for.body1653.lr.ph
  %arrayidx1658.prol = getelementptr inbounds i16, i16* %2, i64 %357
  %361 = load i16, i16* %arrayidx1658.prol, align 2, !tbaa !33
  %idxprom1659.prol = zext i16 %361 to i64
  %arrayidx1660.prol = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1659.prol
  %362 = load i32, i32* %arrayidx1660.prol, align 4, !tbaa !6
  %inc1661.prol = add nsw i32 %362, 1
  store i32 %inc1661.prol, i32* %arrayidx1660.prol, align 4, !tbaa !6
  %indvars.iv.next5660.prol = add nsw i64 %357, 1
  br label %for.body1653.prol.loopexit

for.body1653.prol.loopexit:                       ; preds = %for.body1653.prol, %for.body1653.lr.ph
  %indvars.iv5659.unr.ph = phi i64 [ %indvars.iv.next5660.prol, %for.body1653.prol ], [ %357, %for.body1653.lr.ph ]
  %363 = icmp eq i32 %spec.select3897, %gs.15573
  br i1 %363, label %if.end1665, label %for.body1653.lr.ph.new

for.body1653.lr.ph.new:                           ; preds = %for.body1653.prol.loopexit
  br label %for.body1653

for.body1653:                                     ; preds = %for.body1653, %for.body1653.lr.ph.new
  %indvars.iv5659 = phi i64 [ %indvars.iv5659.unr.ph, %for.body1653.lr.ph.new ], [ %indvars.iv.next5660.1, %for.body1653 ]
  %arrayidx1658 = getelementptr inbounds i16, i16* %2, i64 %indvars.iv5659
  %364 = load i16, i16* %arrayidx1658, align 2, !tbaa !33
  %idxprom1659 = zext i16 %364 to i64
  %arrayidx1660 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1659
  %365 = load i32, i32* %arrayidx1660, align 4, !tbaa !6
  %inc1661 = add nsw i32 %365, 1
  store i32 %inc1661, i32* %arrayidx1660, align 4, !tbaa !6
  %indvars.iv.next5660 = add nsw i64 %indvars.iv5659, 1
  %arrayidx1658.1 = getelementptr inbounds i16, i16* %2, i64 %indvars.iv.next5660
  %366 = load i16, i16* %arrayidx1658.1, align 2, !tbaa !33
  %idxprom1659.1 = zext i16 %366 to i64
  %arrayidx1660.1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %idxprom1184, i64 %idxprom1659.1
  %367 = load i32, i32* %arrayidx1660.1, align 4, !tbaa !6
  %inc1661.1 = add nsw i32 %367, 1
  store i32 %inc1661.1, i32* %arrayidx1660.1, align 4, !tbaa !6
  %indvars.iv.next5660.1 = add nsw i64 %indvars.iv5659, 2
  %cmp1651.1 = icmp slt i64 %indvars.iv.next5660, %358
  br i1 %cmp1651.1, label %for.body1653, label %if.end1665

if.end1665:                                       ; preds = %for.body1653, %for.body1653.prol.loopexit, %if.else1649, %if.then1198
  %add1666 = add nsw i32 %spec.select3897, 1
  %368 = load i32, i32* %nMTF12, align 4, !tbaa !147
  %cmp190 = icmp slt i32 %add1666, %368
  br i1 %cmp190, label %if.end193, label %while.end1667.loopexit

while.end1667.loopexit:                           ; preds = %if.end1665
  %369 = trunc i64 %indvars.iv.next5662 to i32
  br label %while.end1667

while.end1667:                                    ; preds = %while.end1667.loopexit, %if.end186
  %nSelectors.1.lcssa = phi i32 [ 0, %if.end186 ], [ %369, %while.end1667.loopexit ]
  %totc.0.lcssa = phi i32 [ 0, %if.end186 ], [ %add1183, %while.end1667.loopexit ]
  %370 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp1669 = icmp sgt i32 %370, 2
  br i1 %cmp1669, label %if.then1671, label %for.body1690.preheader

if.then1671:                                      ; preds = %while.end1667
  %371 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %add1672 = add nuw nsw i32 %iter.05578, 1
  %div1673 = sdiv i32 %totc.0.lcssa, 8
  %372 = getelementptr [41 x i8], [41 x i8]* @.str.4.70, i64 0, i64 0
  %call1674 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %371, i8* %372, i32 %add1672, i32 %div1673) #15
  %373 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  br label %for.body1678

for.body1678:                                     ; preds = %for.body1678, %if.then1671
  %indvars.iv5663 = phi i64 [ 0, %if.then1671 ], [ %indvars.iv.next5664, %for.body1678 ]
  %374 = phi %struct._IO_FILE* [ %373, %if.then1671 ], [ %377, %for.body1678 ]
  %arrayidx1680 = getelementptr inbounds [6 x i32], [6 x i32]* %fave, i64 0, i64 %indvars.iv5663
  %375 = load i32, i32* %arrayidx1680, align 4, !tbaa !6
  %376 = getelementptr [4 x i8], [4 x i8]* @.str.5.71, i64 0, i64 0
  %call1681 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %374, i8* %376, i32 %375) #15
  %indvars.iv.next5664 = add nuw nsw i64 %indvars.iv5663, 1
  %cmp1676 = icmp ult i64 %indvars.iv.next5664, %31
  %377 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  br i1 %cmp1676, label %for.body1678, label %for.end1684

for.end1684:                                      ; preds = %for.body1678
  %fputc = tail call i32 @fputc(i32 10, %struct._IO_FILE* %377) #15
  br label %for.body1690.preheader

for.body1690.preheader:                           ; preds = %for.end1684, %while.end1667
  br label %for.body1690

for.body1690:                                     ; preds = %for.body1690, %for.body1690.preheader
  %indvars.iv5665 = phi i64 [ %indvars.iv.next5666, %for.body1690 ], [ 0, %for.body1690.preheader ]
  %arrayidx1694 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %indvars.iv5665, i64 0
  %arrayidx1698 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 37, i64 %indvars.iv5665, i64 0
  tail call void @BZ2_hbMakeCodeLengths(i8* nonnull %arrayidx1694, i32* nonnull %arrayidx1698, i32 %add, i32 17) #2
  %indvars.iv.next5666 = add nuw nsw i64 %indvars.iv5665, 1
  %cmp1688 = icmp ult i64 %indvars.iv.next5666, %31
  br i1 %cmp1688, label %for.body1690, label %for.inc1702

for.inc1702:                                      ; preds = %for.body1690
  %inc1703 = add nuw nsw i32 %iter.05578, 1
  %exitcond5667 = icmp eq i32 %inc1703, 4
  br i1 %exitcond5667, label %if.end1708, label %for.body103

if.end1708:                                       ; preds = %for.inc1702
  %cmp1712 = icmp slt i32 %nSelectors.1.lcssa, 18003
  br i1 %cmp1712, label %if.end1715, label %if.then1714

if.then1714:                                      ; preds = %if.end1708
  tail call void @BZ2_bz__AssertH__fail(i32 3003) #2
  br label %if.end1715

if.end1715:                                       ; preds = %if.then1714, %if.end1708
  %378 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %378) #2
  %arrayidx1722 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 0
  store i8 0, i8* %arrayidx1722, align 1, !tbaa !12
  %arrayidx1722.1 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 1
  store i8 1, i8* %arrayidx1722.1, align 1, !tbaa !12
  %cmp1717.1 = icmp ugt i32 %nGroups.0, 2
  br i1 %cmp1717.1, label %for.body1719.2, label %for.end1725

for.end1725:                                      ; preds = %for.body1719.5, %for.body1719.4, %for.body1719.3, %for.body1719.2, %if.end1715
  %cmp17275552 = icmp sgt i32 %nSelectors.1.lcssa, 0
  br i1 %cmp17275552, label %for.body1729.lr.ph, label %for.end1753

for.body1729.lr.ph:                               ; preds = %for.end1725
  %.promoted = load i8, i8* %378, align 1, !tbaa !12
  %wide.trip.count5639 = zext i32 %nSelectors.1.lcssa to i64
  br label %for.body1729

for.body1729:                                     ; preds = %while.end1746, %for.body1729.lr.ph
  %indvars.iv5637 = phi i64 [ 0, %for.body1729.lr.ph ], [ %indvars.iv.next5638, %while.end1746 ]
  %379 = phi i8 [ %.promoted, %for.body1729.lr.ph ], [ %tmp.0.lcssa, %while.end1746 ]
  %arrayidx1732 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 33, i64 %indvars.iv5637
  %380 = load i8, i8* %arrayidx1732, align 1, !tbaa !12
  %cmp17385547 = icmp eq i8 %380, %379
  br i1 %cmp17385547, label %while.end1746, label %while.body1740.preheader

while.body1740.preheader:                         ; preds = %for.body1729
  br label %while.body1740

while.body1740:                                   ; preds = %while.body1740, %while.body1740.preheader
  %indvars.iv5635 = phi i64 [ %indvars.iv.next5636, %while.body1740 ], [ 0, %while.body1740.preheader ]
  %tmp.05549 = phi i8 [ %381, %while.body1740 ], [ %379, %while.body1740.preheader ]
  %indvars.iv.next5636 = add nuw i64 %indvars.iv5635, 1
  %arrayidx1743 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %indvars.iv.next5636
  %381 = load i8, i8* %arrayidx1743, align 1, !tbaa !12
  store i8 %tmp.05549, i8* %arrayidx1743, align 1, !tbaa !12
  %cmp1738 = icmp eq i8 %380, %381
  br i1 %cmp1738, label %while.end1746.loopexit, label %while.body1740

while.end1746.loopexit:                           ; preds = %while.body1740
  %382 = trunc i64 %indvars.iv.next5636 to i8
  br label %while.end1746

while.end1746:                                    ; preds = %while.end1746.loopexit, %for.body1729
  %j.0.lcssa = phi i8 [ 0, %for.body1729 ], [ %382, %while.end1746.loopexit ]
  %tmp.0.lcssa = phi i8 [ %379, %for.body1729 ], [ %380, %while.end1746.loopexit ]
  %arrayidx1750 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 34, i64 %indvars.iv5637
  store i8 %j.0.lcssa, i8* %arrayidx1750, align 1, !tbaa !12
  %indvars.iv.next5638 = add nuw nsw i64 %indvars.iv5637, 1
  %exitcond5640 = icmp eq i64 %indvars.iv.next5638, %wide.trip.count5639
  br i1 %exitcond5640, label %for.cond1726.for.end1753_crit_edge, label %for.body1729

for.cond1726.for.end1753_crit_edge:               ; preds = %while.end1746
  store i8 %tmp.0.lcssa, i8* %378, align 1, !tbaa !12
  br label %for.end1753

for.end1753:                                      ; preds = %for.cond1726.for.end1753_crit_edge, %for.end1725
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %378) #2
  br i1 %cmp55591, label %for.end1753.split.us, label %if.end1804.preheader

if.end1804.preheader:                             ; preds = %for.end1753
  br label %if.end1804

for.end1753.split.us:                             ; preds = %for.end1753
  %383 = icmp sgt i64 %15, 1
  %smax5773 = select i1 %383, i64 %15, i64 1
  %min.iters.check = icmp ult i64 %smax5773, 8
  %n.vec = and i64 %smax5773, 9223372036854775800
  %cmp.n = icmp eq i64 %smax5773, %n.vec
  br label %for.body1757.us

for.body1757.us:                                  ; preds = %if.end1804.us, %for.end1753.split.us
  %indvars.iv5631 = phi i64 [ %indvars.iv.next5632, %if.end1804.us ], [ 0, %for.end1753.split.us ]
  br i1 %min.iters.check, label %for.body1761.us.preheader, label %vector.ph

for.body1761.us.preheader:                        ; preds = %middle.block, %for.body1757.us
  %indvars.iv5629.ph = phi i64 [ 0, %for.body1757.us ], [ %n.vec, %middle.block ]
  %minLen.05542.us.ph = phi i32 [ 32, %for.body1757.us ], [ %400, %middle.block ]
  %maxLen.05541.us.ph = phi i32 [ 0, %for.body1757.us ], [ %399, %middle.block ]
  br label %for.body1761.us

vector.ph:                                        ; preds = %for.body1757.us
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <4 x i32> [ <i32 32, i32 32, i32 32, i32 32>, %vector.ph ], [ %396, %vector.body ]
  %vec.phi5775 = phi <4 x i32> [ <i32 32, i32 32, i32 32, i32 32>, %vector.ph ], [ %397, %vector.body ]
  %vec.phi5776 = phi <4 x i32> [ zeroinitializer, %vector.ph ], [ %392, %vector.body ]
  %vec.phi5777 = phi <4 x i32> [ zeroinitializer, %vector.ph ], [ %393, %vector.body ]
  %384 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %indvars.iv5631, i64 %index
  %385 = bitcast i8* %384 to <4 x i8>*
  %wide.load = load <4 x i8>, <4 x i8>* %385, align 1, !tbaa !12
  %386 = getelementptr i8, i8* %384, i64 4
  %387 = bitcast i8* %386 to <4 x i8>*
  %wide.load5778 = load <4 x i8>, <4 x i8>* %387, align 1, !tbaa !12
  %388 = zext <4 x i8> %wide.load to <4 x i32>
  %389 = zext <4 x i8> %wide.load5778 to <4 x i32>
  %390 = icmp slt <4 x i32> %vec.phi5776, %388
  %391 = icmp slt <4 x i32> %vec.phi5777, %389
  %392 = select <4 x i1> %390, <4 x i32> %388, <4 x i32> %vec.phi5776
  %393 = select <4 x i1> %391, <4 x i32> %389, <4 x i32> %vec.phi5777
  %394 = icmp sgt <4 x i32> %vec.phi, %388
  %395 = icmp sgt <4 x i32> %vec.phi5775, %389
  %396 = select <4 x i1> %394, <4 x i32> %388, <4 x i32> %vec.phi
  %397 = select <4 x i1> %395, <4 x i32> %389, <4 x i32> %vec.phi5775
  %index.next = add i64 %index, 8
  %398 = icmp eq i64 %index.next, %n.vec
  br i1 %398, label %middle.block, label %vector.body, !llvm.loop !148

middle.block:                                     ; preds = %vector.body
  %rdx.minmax.cmp5784 = icmp sgt <4 x i32> %392, %393
  %rdx.minmax.select5785 = select <4 x i1> %rdx.minmax.cmp5784, <4 x i32> %392, <4 x i32> %393
  %rdx.shuf5786 = shufflevector <4 x i32> %rdx.minmax.select5785, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp5787 = icmp sgt <4 x i32> %rdx.minmax.select5785, %rdx.shuf5786
  %rdx.minmax.select5788 = select <4 x i1> %rdx.minmax.cmp5787, <4 x i32> %rdx.minmax.select5785, <4 x i32> %rdx.shuf5786
  %rdx.shuf5789 = shufflevector <4 x i32> %rdx.minmax.select5788, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp5790 = icmp sgt <4 x i32> %rdx.minmax.select5788, %rdx.shuf5789
  %rdx.minmax.select5791 = select <4 x i1> %rdx.minmax.cmp5790, <4 x i32> %rdx.minmax.select5788, <4 x i32> %rdx.shuf5789
  %399 = extractelement <4 x i32> %rdx.minmax.select5791, i32 0
  %rdx.minmax.cmp = icmp slt <4 x i32> %396, %397
  %rdx.minmax.select = select <4 x i1> %rdx.minmax.cmp, <4 x i32> %396, <4 x i32> %397
  %rdx.shuf = shufflevector <4 x i32> %rdx.minmax.select, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp5779 = icmp slt <4 x i32> %rdx.minmax.select, %rdx.shuf
  %rdx.minmax.select5780 = select <4 x i1> %rdx.minmax.cmp5779, <4 x i32> %rdx.minmax.select, <4 x i32> %rdx.shuf
  %rdx.shuf5781 = shufflevector <4 x i32> %rdx.minmax.select5780, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp5782 = icmp slt <4 x i32> %rdx.minmax.select5780, %rdx.shuf5781
  %rdx.minmax.select5783 = select <4 x i1> %rdx.minmax.cmp5782, <4 x i32> %rdx.minmax.select5780, <4 x i32> %rdx.shuf5781
  %400 = extractelement <4 x i32> %rdx.minmax.select5783, i32 0
  br i1 %cmp.n, label %for.cond1758.for.end1796_crit_edge.us, label %for.body1761.us.preheader

if.then1799.us:                                   ; preds = %for.cond1758.for.end1796_crit_edge.us
  tail call void @BZ2_bz__AssertH__fail(i32 3004) #2
  br label %if.end1800.us

if.end1800.us:                                    ; preds = %for.cond1758.for.end1796_crit_edge.us, %if.then1799.us
  %cmp1801.us = icmp slt i32 %minLen.1.us.lcssa, 1
  br i1 %cmp1801.us, label %if.then1803.us, label %if.end1804.us

if.then1803.us:                                   ; preds = %if.end1800.us
  tail call void @BZ2_bz__AssertH__fail(i32 3005) #2
  br label %if.end1804.us

if.end1804.us:                                    ; preds = %if.then1803.us, %if.end1800.us
  %arrayidx1807.us = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %indvars.iv5631, i64 0
  %arrayidx1811.us = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %indvars.iv5631, i64 0
  tail call void @BZ2_hbAssignCodes(i32* nonnull %arrayidx1807.us, i8* nonnull %arrayidx1811.us, i32 %minLen.1.us.lcssa, i32 %spec.select3902.us.lcssa, i32 %add) #2
  %indvars.iv.next5632 = add nuw nsw i64 %indvars.iv5631, 1
  %cmp1755.us = icmp ult i64 %indvars.iv.next5632, %31
  br i1 %cmp1755.us, label %for.body1757.us, label %for.end1814

for.body1761.us:                                  ; preds = %for.body1761.us, %for.body1761.us.preheader
  %indvars.iv5629 = phi i64 [ %indvars.iv.next5630, %for.body1761.us ], [ %indvars.iv5629.ph, %for.body1761.us.preheader ]
  %minLen.05542.us = phi i32 [ %minLen.1.us, %for.body1761.us ], [ %minLen.05542.us.ph, %for.body1761.us.preheader ]
  %maxLen.05541.us = phi i32 [ %spec.select3902.us, %for.body1761.us ], [ %maxLen.05541.us.ph, %for.body1761.us.preheader ]
  %arrayidx1766.us = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %indvars.iv5631, i64 %indvars.iv5629
  %401 = load i8, i8* %arrayidx1766.us, align 1, !tbaa !12
  %conv1767.us = zext i8 %401 to i32
  %cmp1768.us = icmp slt i32 %maxLen.05541.us, %conv1767.us
  %spec.select3902.us = select i1 %cmp1768.us, i32 %conv1767.us, i32 %maxLen.05541.us
  %cmp1784.us = icmp sgt i32 %minLen.05542.us, %conv1767.us
  %minLen.1.us = select i1 %cmp1784.us, i32 %conv1767.us, i32 %minLen.05542.us
  %indvars.iv.next5630 = add nuw nsw i64 %indvars.iv5629, 1
  %cmp1759.us = icmp slt i64 %indvars.iv.next5630, %15
  br i1 %cmp1759.us, label %for.body1761.us, label %for.cond1758.for.end1796_crit_edge.us, !llvm.loop !149

for.cond1758.for.end1796_crit_edge.us:            ; preds = %for.body1761.us, %middle.block
  %spec.select3902.us.lcssa = phi i32 [ %399, %middle.block ], [ %spec.select3902.us, %for.body1761.us ]
  %minLen.1.us.lcssa = phi i32 [ %400, %middle.block ], [ %minLen.1.us, %for.body1761.us ]
  %cmp1797.us = icmp sgt i32 %spec.select3902.us.lcssa, 17
  br i1 %cmp1797.us, label %if.then1799.us, label %if.end1800.us

if.end1804:                                       ; preds = %if.end1804, %if.end1804.preheader
  %indvars.iv5633 = phi i64 [ %indvars.iv.next5634, %if.end1804 ], [ 0, %if.end1804.preheader ]
  %arrayidx1807 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %indvars.iv5633, i64 0
  %arrayidx1811 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %indvars.iv5633, i64 0
  tail call void @BZ2_hbAssignCodes(i32* nonnull %arrayidx1807, i8* nonnull %arrayidx1811, i32 32, i32 0, i32 %add) #2
  %indvars.iv.next5634 = add nuw nsw i64 %indvars.iv5633, 1
  %cmp1755 = icmp ult i64 %indvars.iv.next5634, %31
  br i1 %cmp1755, label %if.end1804, label %for.end1814

for.end1814:                                      ; preds = %if.end1804, %if.end1804.us
  %402 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %402) #2
  br label %for.body1818

for.body1818:                                     ; preds = %for.body1818, %for.end1814
  %indvars.iv5624 = phi i64 [ 0, %for.end1814 ], [ %indvars.iv.next5625, %for.body1818 ]
  %arrayidx1820 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %indvars.iv5624
  store i8 0, i8* %arrayidx1820, align 1, !tbaa !12
  %403 = shl i64 %indvars.iv5624, 4
  %arrayidx1828 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %403
  %404 = load i8, i8* %arrayidx1828, align 1, !tbaa !12
  %tobool = icmp ne i8 %404, 0
  %spec.store.select = zext i1 %tobool to i8
  store i8 %spec.store.select, i8* %arrayidx1820, align 1
  %405 = or i64 %403, 1
  %arrayidx1828.1 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %405
  %406 = load i8, i8* %arrayidx1828.1, align 1, !tbaa !12
  %407 = or i8 %404, %406
  %408 = icmp ne i8 %407, 0
  %spec.store.select5748 = zext i1 %408 to i8
  store i8 %spec.store.select5748, i8* %arrayidx1820, align 1
  %409 = or i64 %403, 2
  %arrayidx1828.2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %409
  %410 = load i8, i8* %arrayidx1828.2, align 1, !tbaa !12
  %411 = or i8 %407, %410
  %412 = icmp ne i8 %411, 0
  %spec.store.select5749 = zext i1 %412 to i8
  store i8 %spec.store.select5749, i8* %arrayidx1820, align 1
  %413 = or i64 %403, 3
  %arrayidx1828.3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %413
  %414 = load i8, i8* %arrayidx1828.3, align 1, !tbaa !12
  %415 = or i8 %411, %414
  %416 = icmp ne i8 %415, 0
  %spec.store.select5750 = zext i1 %416 to i8
  store i8 %spec.store.select5750, i8* %arrayidx1820, align 1
  %417 = or i64 %403, 4
  %arrayidx1828.4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %417
  %418 = load i8, i8* %arrayidx1828.4, align 1, !tbaa !12
  %419 = or i8 %415, %418
  %420 = icmp ne i8 %419, 0
  %spec.store.select5751 = zext i1 %420 to i8
  store i8 %spec.store.select5751, i8* %arrayidx1820, align 1
  %421 = or i64 %403, 5
  %arrayidx1828.5 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %421
  %422 = load i8, i8* %arrayidx1828.5, align 1, !tbaa !12
  %423 = or i8 %419, %422
  %424 = icmp ne i8 %423, 0
  %spec.store.select5752 = zext i1 %424 to i8
  store i8 %spec.store.select5752, i8* %arrayidx1820, align 1
  %425 = or i64 %403, 6
  %arrayidx1828.6 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %425
  %426 = load i8, i8* %arrayidx1828.6, align 1, !tbaa !12
  %427 = or i8 %423, %426
  %428 = icmp ne i8 %427, 0
  %spec.store.select5753 = zext i1 %428 to i8
  store i8 %spec.store.select5753, i8* %arrayidx1820, align 1
  %429 = or i64 %403, 7
  %arrayidx1828.7 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %429
  %430 = load i8, i8* %arrayidx1828.7, align 1, !tbaa !12
  %431 = or i8 %427, %430
  %432 = icmp ne i8 %431, 0
  %spec.store.select5754 = zext i1 %432 to i8
  store i8 %spec.store.select5754, i8* %arrayidx1820, align 1
  %433 = or i64 %403, 8
  %arrayidx1828.8 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %433
  %434 = load i8, i8* %arrayidx1828.8, align 1, !tbaa !12
  %435 = or i8 %431, %434
  %436 = icmp ne i8 %435, 0
  %spec.store.select5755 = zext i1 %436 to i8
  store i8 %spec.store.select5755, i8* %arrayidx1820, align 1
  %437 = or i64 %403, 9
  %arrayidx1828.9 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %437
  %438 = load i8, i8* %arrayidx1828.9, align 1, !tbaa !12
  %439 = or i8 %435, %438
  %440 = icmp ne i8 %439, 0
  %spec.store.select5756 = zext i1 %440 to i8
  store i8 %spec.store.select5756, i8* %arrayidx1820, align 1
  %441 = or i64 %403, 10
  %arrayidx1828.10 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %441
  %442 = load i8, i8* %arrayidx1828.10, align 1, !tbaa !12
  %443 = or i8 %439, %442
  %444 = icmp ne i8 %443, 0
  %spec.store.select5757 = zext i1 %444 to i8
  store i8 %spec.store.select5757, i8* %arrayidx1820, align 1
  %445 = or i64 %403, 11
  %arrayidx1828.11 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %445
  %446 = load i8, i8* %arrayidx1828.11, align 1, !tbaa !12
  %447 = or i8 %443, %446
  %448 = icmp ne i8 %447, 0
  %spec.store.select5758 = zext i1 %448 to i8
  store i8 %spec.store.select5758, i8* %arrayidx1820, align 1
  %449 = or i64 %403, 12
  %arrayidx1828.12 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %449
  %450 = load i8, i8* %arrayidx1828.12, align 1, !tbaa !12
  %451 = or i8 %447, %450
  %452 = icmp ne i8 %451, 0
  %spec.store.select5759 = zext i1 %452 to i8
  store i8 %spec.store.select5759, i8* %arrayidx1820, align 1
  %453 = or i64 %403, 13
  %arrayidx1828.13 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %453
  %454 = load i8, i8* %arrayidx1828.13, align 1, !tbaa !12
  %455 = or i8 %451, %454
  %456 = icmp ne i8 %455, 0
  %spec.store.select5760 = zext i1 %456 to i8
  store i8 %spec.store.select5760, i8* %arrayidx1820, align 1
  %457 = or i64 %403, 14
  %arrayidx1828.14 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %457
  %458 = load i8, i8* %arrayidx1828.14, align 1, !tbaa !12
  %459 = or i8 %455, %458
  %460 = icmp ne i8 %459, 0
  %spec.store.select5761 = zext i1 %460 to i8
  store i8 %spec.store.select5761, i8* %arrayidx1820, align 1
  %461 = or i64 %403, 15
  %arrayidx1828.15 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %461
  %462 = load i8, i8* %arrayidx1828.15, align 1, !tbaa !12
  %463 = or i8 %459, %462
  %464 = icmp ne i8 %463, 0
  %spec.store.select5762 = zext i1 %464 to i8
  store i8 %spec.store.select5762, i8* %arrayidx1820, align 1
  %indvars.iv.next5625 = add nuw nsw i64 %indvars.iv5624, 1
  %exitcond5627 = icmp eq i64 %indvars.iv.next5625, 16
  br i1 %exitcond5627, label %for.end1838, label %for.body1818

for.end1838:                                      ; preds = %for.body1818
  %numZ = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 19
  %465 = load i32, i32* %numZ, align 4, !tbaa !94
  %bsLive.i5474 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 25
  %bsBuff.i5476 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 24
  %zbits.i5479 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 11
  %.pre = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %.pre.i5481.pre = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  br label %for.body1842

for.body1842:                                     ; preds = %for.inc1849, %for.end1838
  %.pre22.i5482 = phi i32 [ %465, %for.end1838 ], [ %.pre22.i5685, %for.inc1849 ]
  %.pre.i5481 = phi i32 [ %.pre.i5481.pre, %for.end1838 ], [ %storemerge5500, %for.inc1849 ]
  %466 = phi i32 [ %.pre, %for.end1838 ], [ %storemerge5497, %for.inc1849 ]
  %indvars.iv5617 = phi i64 [ 0, %for.end1838 ], [ %indvars.iv.next5618, %for.inc1849 ]
  %arrayidx1844 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %indvars.iv5617
  %467 = load i8, i8* %arrayidx1844, align 1, !tbaa !12
  %tobool1845 = icmp eq i8 %467, 0
  %cmp20.i5475 = icmp sgt i32 %466, 7
  br i1 %tobool1845, label %if.else1847, label %if.then1846

if.then1846:                                      ; preds = %for.body1842
  br i1 %cmp20.i5475, label %while.body.i.preheader, label %bsW.exit

while.body.i.preheader:                           ; preds = %if.then1846
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i, %while.body.i.preheader
  %468 = phi i32 [ %inc.i, %while.body.i ], [ %.pre22.i5482, %while.body.i.preheader ]
  %469 = phi i32 [ %shl.i, %while.body.i ], [ %.pre.i5481, %while.body.i.preheader ]
  %shr.i = lshr i32 %469, 24
  %conv.i = trunc i32 %shr.i to i8
  %470 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i = sext i32 %468 to i64
  %arrayidx.i = getelementptr inbounds i8, i8* %470, i64 %idxprom.i
  store i8 %conv.i, i8* %arrayidx.i, align 1, !tbaa !12
  %471 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i = add nsw i32 %471, 1
  store i32 %inc.i, i32* %numZ, align 4, !tbaa !94
  %472 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i = shl i32 %472, 8
  store i32 %shl.i, i32* %bsBuff.i5476, align 8, !tbaa !142
  %473 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i = add nsw i32 %473, -8
  store i32 %sub.i, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i = icmp sgt i32 %473, 15
  br i1 %cmp.i, label %while.body.i, label %bsW.exit

bsW.exit:                                         ; preds = %while.body.i, %if.then1846
  %.pre22.i5686 = phi i32 [ %.pre22.i5482, %if.then1846 ], [ %inc.i, %while.body.i ]
  %474 = phi i32 [ %.pre.i5481, %if.then1846 ], [ %shl.i, %while.body.i ]
  %.lcssa.i = phi i32 [ %466, %if.then1846 ], [ %sub.i, %while.body.i ]
  %sub6.i = sub i32 31, %.lcssa.i
  %shl7.i = shl i32 1, %sub6.i
  %or.i = or i32 %shl7.i, %474
  br label %for.inc1849

if.else1847:                                      ; preds = %for.body1842
  br i1 %cmp20.i5475, label %while.body.i5492.preheader, label %for.inc1849

while.body.i5492.preheader:                       ; preds = %if.else1847
  br label %while.body.i5492

while.body.i5492:                                 ; preds = %while.body.i5492, %while.body.i5492.preheader
  %475 = phi i32 [ %inc.i5488, %while.body.i5492 ], [ %.pre22.i5482, %while.body.i5492.preheader ]
  %476 = phi i32 [ %shl.i5489, %while.body.i5492 ], [ %.pre.i5481, %while.body.i5492.preheader ]
  %shr.i5484 = lshr i32 %476, 24
  %conv.i5485 = trunc i32 %shr.i5484 to i8
  %477 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5486 = sext i32 %475 to i64
  %arrayidx.i5487 = getelementptr inbounds i8, i8* %477, i64 %idxprom.i5486
  store i8 %conv.i5485, i8* %arrayidx.i5487, align 1, !tbaa !12
  %478 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5488 = add nsw i32 %478, 1
  store i32 %inc.i5488, i32* %numZ, align 4, !tbaa !94
  %479 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5489 = shl i32 %479, 8
  store i32 %shl.i5489, i32* %bsBuff.i5476, align 8, !tbaa !142
  %480 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5490 = add nsw i32 %480, -8
  store i32 %sub.i5490, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5491 = icmp sgt i32 %480, 15
  br i1 %cmp.i5491, label %while.body.i5492, label %for.inc1849

for.inc1849:                                      ; preds = %while.body.i5492, %if.else1847, %bsW.exit
  %.pre22.i5685 = phi i32 [ %.pre22.i5686, %bsW.exit ], [ %.pre22.i5482, %if.else1847 ], [ %inc.i5488, %while.body.i5492 ]
  %storemerge5500 = phi i32 [ %or.i, %bsW.exit ], [ %.pre.i5481, %if.else1847 ], [ %shl.i5489, %while.body.i5492 ]
  %storemerge5497.in = phi i32 [ %.lcssa.i, %bsW.exit ], [ %466, %if.else1847 ], [ %sub.i5490, %while.body.i5492 ]
  store i32 %storemerge5500, i32* %bsBuff.i5476, align 8, !tbaa !142
  %storemerge5497 = add nsw i32 %storemerge5497.in, 1
  store i32 %storemerge5497, i32* %bsLive.i5474, align 4, !tbaa !141
  %indvars.iv.next5618 = add nuw nsw i64 %indvars.iv5617, 1
  %exitcond5619 = icmp eq i64 %indvars.iv.next5618, 16
  br i1 %exitcond5619, label %for.body1855.preheader, label %for.body1842

for.body1855.preheader:                           ; preds = %for.inc1849
  br label %for.body1855

for.body1855:                                     ; preds = %for.inc1877, %for.body1855.preheader
  %.pre22.i54575691 = phi i32 [ %500, %for.inc1877 ], [ %.pre22.i5685, %for.body1855.preheader ]
  %.pre.i54335688 = phi i32 [ %.pre.i54335689, %for.inc1877 ], [ %storemerge5500, %for.body1855.preheader ]
  %481 = phi i32 [ %501, %for.inc1877 ], [ %storemerge5497, %for.body1855.preheader ]
  %indvars.iv5613 = phi i64 [ %indvars.iv.next5614, %for.inc1877 ], [ 0, %for.body1855.preheader ]
  %arrayidx1857 = getelementptr inbounds [16 x i8], [16 x i8]* %inUse16, i64 0, i64 %indvars.iv5613
  %482 = load i8, i8* %arrayidx1857, align 1, !tbaa !12
  %tobool1858 = icmp eq i8 %482, 0
  br i1 %tobool1858, label %for.inc1877, label %if.then1859

if.then1859:                                      ; preds = %for.body1855
  %483 = shl i64 %indvars.iv5613, 4
  br label %for.body1863

for.body1863:                                     ; preds = %for.inc1873, %if.then1859
  %.pre22.i5434 = phi i32 [ %.pre22.i54575691, %if.then1859 ], [ %.pre22.i54575695, %for.inc1873 ]
  %.pre.i5433 = phi i32 [ %.pre.i54335688, %if.then1859 ], [ %storemerge5499, %for.inc1873 ]
  %484 = phi i32 [ %481, %if.then1859 ], [ %storemerge, %for.inc1873 ]
  %indvars.iv5609 = phi i64 [ 0, %if.then1859 ], [ %indvars.iv.next5610, %for.inc1873 ]
  %485 = add nuw nsw i64 %indvars.iv5609, %483
  %arrayidx1868 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 22, i64 %485
  %486 = load i8, i8* %arrayidx1868, align 1, !tbaa !12
  %tobool1869 = icmp eq i8 %486, 0
  %cmp20.i5427 = icmp sgt i32 %484, 7
  br i1 %tobool1869, label %if.else1871, label %if.then1870

if.then1870:                                      ; preds = %for.body1863
  br i1 %cmp20.i5427, label %while.body.i5467.preheader, label %bsW.exit5473

while.body.i5467.preheader:                       ; preds = %if.then1870
  br label %while.body.i5467

while.body.i5467:                                 ; preds = %while.body.i5467, %while.body.i5467.preheader
  %487 = phi i32 [ %inc.i5463, %while.body.i5467 ], [ %.pre22.i5434, %while.body.i5467.preheader ]
  %488 = phi i32 [ %shl.i5464, %while.body.i5467 ], [ %.pre.i5433, %while.body.i5467.preheader ]
  %shr.i5459 = lshr i32 %488, 24
  %conv.i5460 = trunc i32 %shr.i5459 to i8
  %489 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5461 = sext i32 %487 to i64
  %arrayidx.i5462 = getelementptr inbounds i8, i8* %489, i64 %idxprom.i5461
  store i8 %conv.i5460, i8* %arrayidx.i5462, align 1, !tbaa !12
  %490 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5463 = add nsw i32 %490, 1
  store i32 %inc.i5463, i32* %numZ, align 4, !tbaa !94
  %491 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5464 = shl i32 %491, 8
  store i32 %shl.i5464, i32* %bsBuff.i5476, align 8, !tbaa !142
  %492 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5465 = add nsw i32 %492, -8
  store i32 %sub.i5465, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5466 = icmp sgt i32 %492, 15
  br i1 %cmp.i5466, label %while.body.i5467, label %bsW.exit5473

bsW.exit5473:                                     ; preds = %while.body.i5467, %if.then1870
  %.pre22.i54575693 = phi i32 [ %.pre22.i5434, %if.then1870 ], [ %inc.i5463, %while.body.i5467 ]
  %493 = phi i32 [ %.pre.i5433, %if.then1870 ], [ %shl.i5464, %while.body.i5467 ]
  %.lcssa.i5468 = phi i32 [ %484, %if.then1870 ], [ %sub.i5465, %while.body.i5467 ]
  %sub6.i5469 = sub i32 31, %.lcssa.i5468
  %shl7.i5470 = shl i32 1, %sub6.i5469
  %or.i5471 = or i32 %shl7.i5470, %493
  br label %for.inc1873

if.else1871:                                      ; preds = %for.body1863
  br i1 %cmp20.i5427, label %while.body.i5444.preheader, label %for.inc1873

while.body.i5444.preheader:                       ; preds = %if.else1871
  br label %while.body.i5444

while.body.i5444:                                 ; preds = %while.body.i5444, %while.body.i5444.preheader
  %494 = phi i32 [ %inc.i5440, %while.body.i5444 ], [ %.pre22.i5434, %while.body.i5444.preheader ]
  %495 = phi i32 [ %shl.i5441, %while.body.i5444 ], [ %.pre.i5433, %while.body.i5444.preheader ]
  %shr.i5436 = lshr i32 %495, 24
  %conv.i5437 = trunc i32 %shr.i5436 to i8
  %496 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5438 = sext i32 %494 to i64
  %arrayidx.i5439 = getelementptr inbounds i8, i8* %496, i64 %idxprom.i5438
  store i8 %conv.i5437, i8* %arrayidx.i5439, align 1, !tbaa !12
  %497 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5440 = add nsw i32 %497, 1
  store i32 %inc.i5440, i32* %numZ, align 4, !tbaa !94
  %498 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5441 = shl i32 %498, 8
  store i32 %shl.i5441, i32* %bsBuff.i5476, align 8, !tbaa !142
  %499 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5442 = add nsw i32 %499, -8
  store i32 %sub.i5442, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5443 = icmp sgt i32 %499, 15
  br i1 %cmp.i5443, label %while.body.i5444, label %for.inc1873

for.inc1873:                                      ; preds = %while.body.i5444, %if.else1871, %bsW.exit5473
  %.pre22.i54575695 = phi i32 [ %.pre22.i54575693, %bsW.exit5473 ], [ %.pre22.i5434, %if.else1871 ], [ %inc.i5440, %while.body.i5444 ]
  %storemerge5499 = phi i32 [ %or.i5471, %bsW.exit5473 ], [ %.pre.i5433, %if.else1871 ], [ %shl.i5441, %while.body.i5444 ]
  %storemerge.in = phi i32 [ %.lcssa.i5468, %bsW.exit5473 ], [ %484, %if.else1871 ], [ %sub.i5442, %while.body.i5444 ]
  store i32 %storemerge5499, i32* %bsBuff.i5476, align 8, !tbaa !142
  %storemerge = add nsw i32 %storemerge.in, 1
  store i32 %storemerge, i32* %bsLive.i5474, align 4, !tbaa !141
  %indvars.iv.next5610 = add nuw nsw i64 %indvars.iv5609, 1
  %exitcond5612 = icmp eq i64 %indvars.iv.next5610, 16
  br i1 %exitcond5612, label %for.inc1877, label %for.body1863

for.inc1877:                                      ; preds = %for.inc1873, %for.body1855
  %500 = phi i32 [ %.pre22.i54575691, %for.body1855 ], [ %.pre22.i54575695, %for.inc1873 ]
  %.pre.i54335689 = phi i32 [ %.pre.i54335688, %for.body1855 ], [ %storemerge5499, %for.inc1873 ]
  %501 = phi i32 [ %481, %for.body1855 ], [ %storemerge, %for.inc1873 ]
  %indvars.iv.next5614 = add nuw nsw i64 %indvars.iv5613, 1
  %exitcond5616 = icmp eq i64 %indvars.iv.next5614, 16
  br i1 %exitcond5616, label %for.end1879, label %for.body1855

for.end1879:                                      ; preds = %for.inc1877
  %502 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp1881 = icmp sgt i32 %502, 2
  br i1 %cmp1881, label %if.then1883, label %if.end1887

if.then1883:                                      ; preds = %for.end1879
  %503 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %sub1885 = sub nsw i32 %500, %465
  %504 = getelementptr [26 x i8], [26 x i8]* @.str.7.72, i64 0, i64 0
  %call1886 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %503, i8* %504, i32 %sub1885) #15
  %.pre5696 = load i32, i32* %numZ, align 4, !tbaa !94
  %.pre5697 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  br label %if.end1887

if.end1887:                                       ; preds = %if.then1883, %for.end1879
  %505 = phi i32 [ %.pre5697, %if.then1883 ], [ %501, %for.end1879 ]
  %506 = phi i32 [ %.pre5696, %if.then1883 ], [ %500, %for.end1879 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %402) #2
  %cmp20.i5402 = icmp sgt i32 %505, 7
  %.pre.i5408 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  br i1 %cmp20.i5402, label %while.body.i5419.preheader, label %bsW.exit5425

while.body.i5419.preheader:                       ; preds = %if.end1887
  br label %while.body.i5419

while.body.i5419:                                 ; preds = %while.body.i5419, %while.body.i5419.preheader
  %507 = phi i32 [ %inc.i5415, %while.body.i5419 ], [ %506, %while.body.i5419.preheader ]
  %508 = phi i32 [ %shl.i5416, %while.body.i5419 ], [ %.pre.i5408, %while.body.i5419.preheader ]
  %shr.i5411 = lshr i32 %508, 24
  %conv.i5412 = trunc i32 %shr.i5411 to i8
  %509 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5413 = sext i32 %507 to i64
  %arrayidx.i5414 = getelementptr inbounds i8, i8* %509, i64 %idxprom.i5413
  store i8 %conv.i5412, i8* %arrayidx.i5414, align 1, !tbaa !12
  %510 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5415 = add nsw i32 %510, 1
  store i32 %inc.i5415, i32* %numZ, align 4, !tbaa !94
  %511 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5416 = shl i32 %511, 8
  store i32 %shl.i5416, i32* %bsBuff.i5476, align 8, !tbaa !142
  %512 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5417 = add nsw i32 %512, -8
  store i32 %sub.i5417, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5418 = icmp sgt i32 %512, 15
  br i1 %cmp.i5418, label %while.body.i5419, label %bsW.exit5425

bsW.exit5425:                                     ; preds = %while.body.i5419, %if.end1887
  %.pre22.i5384 = phi i32 [ %506, %if.end1887 ], [ %inc.i5415, %while.body.i5419 ]
  %513 = phi i32 [ %.pre.i5408, %if.end1887 ], [ %shl.i5416, %while.body.i5419 ]
  %.lcssa.i5420 = phi i32 [ %505, %if.end1887 ], [ %sub.i5417, %while.body.i5419 ]
  %sub6.i5421 = sub i32 29, %.lcssa.i5420
  %shl7.i5422 = shl i32 %nGroups.0, %sub6.i5421
  %or.i5423 = or i32 %shl7.i5422, %513
  store i32 %or.i5423, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5424 = add nsw i32 %.lcssa.i5420, 3
  store i32 %add.i5424, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp20.i5377 = icmp sgt i32 %.lcssa.i5420, 4
  br i1 %cmp20.i5377, label %while.body.i5394.preheader, label %bsW.exit5400

while.body.i5394.preheader:                       ; preds = %bsW.exit5425
  br label %while.body.i5394

while.body.i5394:                                 ; preds = %while.body.i5394, %while.body.i5394.preheader
  %514 = phi i32 [ %inc.i5390, %while.body.i5394 ], [ %.pre22.i5384, %while.body.i5394.preheader ]
  %515 = phi i32 [ %shl.i5391, %while.body.i5394 ], [ %or.i5423, %while.body.i5394.preheader ]
  %shr.i5386 = lshr i32 %515, 24
  %conv.i5387 = trunc i32 %shr.i5386 to i8
  %516 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5388 = sext i32 %514 to i64
  %arrayidx.i5389 = getelementptr inbounds i8, i8* %516, i64 %idxprom.i5388
  store i8 %conv.i5387, i8* %arrayidx.i5389, align 1, !tbaa !12
  %517 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5390 = add nsw i32 %517, 1
  store i32 %inc.i5390, i32* %numZ, align 4, !tbaa !94
  %518 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5391 = shl i32 %518, 8
  store i32 %shl.i5391, i32* %bsBuff.i5476, align 8, !tbaa !142
  %519 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5392 = add nsw i32 %519, -8
  store i32 %sub.i5392, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5393 = icmp sgt i32 %519, 15
  br i1 %cmp.i5393, label %while.body.i5394, label %bsW.exit5400

bsW.exit5400:                                     ; preds = %while.body.i5394, %bsW.exit5425
  %.pre22.i53595706 = phi i32 [ %.pre22.i5384, %bsW.exit5425 ], [ %inc.i5390, %while.body.i5394 ]
  %520 = phi i32 [ %or.i5423, %bsW.exit5425 ], [ %shl.i5391, %while.body.i5394 ]
  %.lcssa.i5395 = phi i32 [ %add.i5424, %bsW.exit5425 ], [ %sub.i5392, %while.body.i5394 ]
  %sub6.i5396 = sub i32 17, %.lcssa.i5395
  %shl7.i5397 = shl i32 %nSelectors.1.lcssa, %sub6.i5396
  %or.i5398 = or i32 %shl7.i5397, %520
  store i32 %or.i5398, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5399 = add nsw i32 %.lcssa.i5395, 15
  store i32 %add.i5399, i32* %bsLive.i5474, align 4, !tbaa !141
  br i1 %cmp17275552, label %for.body1892.lr.ph, label %for.end1906

for.body1892.lr.ph:                               ; preds = %bsW.exit5400
  %wide.trip.count = zext i32 %nSelectors.1.lcssa to i64
  br label %for.body1892

for.body1892:                                     ; preds = %bsW.exit5350, %for.body1892.lr.ph
  %.pre22.i53595701 = phi i32 [ %.pre22.i53595706, %for.body1892.lr.ph ], [ %.pre22.i53595702, %bsW.exit5350 ]
  %.pre.i53585700 = phi i32 [ %or.i5398, %for.body1892.lr.ph ], [ %538, %bsW.exit5350 ]
  %521 = phi i32 [ %add.i5399, %for.body1892.lr.ph ], [ %add.i5349, %bsW.exit5350 ]
  %indvars.iv5607 = phi i64 [ 0, %for.body1892.lr.ph ], [ %indvars.iv.next5608, %bsW.exit5350 ]
  %arrayidx1896 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 34, i64 %indvars.iv5607
  %522 = load i8, i8* %arrayidx1896, align 1, !tbaa !12
  %cmp18985527 = icmp eq i8 %522, 0
  %cmp20.i53525528 = icmp sgt i32 %521, 7
  br i1 %cmp18985527, label %for.end1903, label %for.body1900.preheader

for.body1900.preheader:                           ; preds = %for.body1892
  br label %for.body1900

for.body1900:                                     ; preds = %bsW.exit5375, %for.body1900.preheader
  %.pre22.i5359 = phi i32 [ %.pre22.i53595705, %bsW.exit5375 ], [ %.pre22.i53595701, %for.body1900.preheader ]
  %.pre.i5358 = phi i32 [ %or.i5373, %bsW.exit5375 ], [ %.pre.i53585700, %for.body1900.preheader ]
  %cmp20.i53525530 = phi i1 [ %cmp20.i5352, %bsW.exit5375 ], [ %cmp20.i53525528, %for.body1900.preheader ]
  %523 = phi i32 [ %add.i5374, %bsW.exit5375 ], [ %521, %for.body1900.preheader ]
  %j.35529 = phi i32 [ %inc1902, %bsW.exit5375 ], [ 0, %for.body1900.preheader ]
  br i1 %cmp20.i53525530, label %while.body.i5369.preheader, label %bsW.exit5375

while.body.i5369.preheader:                       ; preds = %for.body1900
  br label %while.body.i5369

while.body.i5369:                                 ; preds = %while.body.i5369, %while.body.i5369.preheader
  %524 = phi i32 [ %inc.i5365, %while.body.i5369 ], [ %.pre22.i5359, %while.body.i5369.preheader ]
  %525 = phi i32 [ %shl.i5366, %while.body.i5369 ], [ %.pre.i5358, %while.body.i5369.preheader ]
  %shr.i5361 = lshr i32 %525, 24
  %conv.i5362 = trunc i32 %shr.i5361 to i8
  %526 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5363 = sext i32 %524 to i64
  %arrayidx.i5364 = getelementptr inbounds i8, i8* %526, i64 %idxprom.i5363
  store i8 %conv.i5362, i8* %arrayidx.i5364, align 1, !tbaa !12
  %527 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5365 = add nsw i32 %527, 1
  store i32 %inc.i5365, i32* %numZ, align 4, !tbaa !94
  %528 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5366 = shl i32 %528, 8
  store i32 %shl.i5366, i32* %bsBuff.i5476, align 8, !tbaa !142
  %529 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5367 = add nsw i32 %529, -8
  store i32 %sub.i5367, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5368 = icmp sgt i32 %529, 15
  br i1 %cmp.i5368, label %while.body.i5369, label %bsW.exit5375

bsW.exit5375:                                     ; preds = %while.body.i5369, %for.body1900
  %.pre22.i53595705 = phi i32 [ %.pre22.i5359, %for.body1900 ], [ %inc.i5365, %while.body.i5369 ]
  %530 = phi i32 [ %.pre.i5358, %for.body1900 ], [ %shl.i5366, %while.body.i5369 ]
  %.lcssa.i5370 = phi i32 [ %523, %for.body1900 ], [ %sub.i5367, %while.body.i5369 ]
  %sub6.i5371 = sub i32 31, %.lcssa.i5370
  %shl7.i5372 = shl i32 1, %sub6.i5371
  %or.i5373 = or i32 %shl7.i5372, %530
  store i32 %or.i5373, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5374 = add nsw i32 %.lcssa.i5370, 1
  store i32 %add.i5374, i32* %bsLive.i5474, align 4, !tbaa !141
  %inc1902 = add nuw nsw i32 %j.35529, 1
  %531 = load i8, i8* %arrayidx1896, align 1, !tbaa !12
  %conv1897 = zext i8 %531 to i32
  %cmp1898 = icmp ult i32 %inc1902, %conv1897
  %cmp20.i5352 = icmp sgt i32 %.lcssa.i5370, 6
  br i1 %cmp1898, label %for.body1900, label %for.end1903

for.end1903:                                      ; preds = %bsW.exit5375, %for.body1892
  %.pre.i5335 = phi i32 [ %.pre.i53585700, %for.body1892 ], [ %or.i5373, %bsW.exit5375 ]
  %.pre22.i5336 = phi i32 [ %.pre22.i53595701, %for.body1892 ], [ %.pre22.i53595705, %bsW.exit5375 ]
  %.lcssa5502 = phi i32 [ %521, %for.body1892 ], [ %add.i5374, %bsW.exit5375 ]
  %cmp20.i5352.lcssa = phi i1 [ %cmp20.i53525528, %for.body1892 ], [ %cmp20.i5352, %bsW.exit5375 ]
  br i1 %cmp20.i5352.lcssa, label %while.body.i5346.preheader, label %bsW.exit5350

while.body.i5346.preheader:                       ; preds = %for.end1903
  br label %while.body.i5346

while.body.i5346:                                 ; preds = %while.body.i5346, %while.body.i5346.preheader
  %532 = phi i32 [ %inc.i5342, %while.body.i5346 ], [ %.pre22.i5336, %while.body.i5346.preheader ]
  %533 = phi i32 [ %shl.i5343, %while.body.i5346 ], [ %.pre.i5335, %while.body.i5346.preheader ]
  %shr.i5338 = lshr i32 %533, 24
  %conv.i5339 = trunc i32 %shr.i5338 to i8
  %534 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5340 = sext i32 %532 to i64
  %arrayidx.i5341 = getelementptr inbounds i8, i8* %534, i64 %idxprom.i5340
  store i8 %conv.i5339, i8* %arrayidx.i5341, align 1, !tbaa !12
  %535 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5342 = add nsw i32 %535, 1
  store i32 %inc.i5342, i32* %numZ, align 4, !tbaa !94
  %536 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5343 = shl i32 %536, 8
  store i32 %shl.i5343, i32* %bsBuff.i5476, align 8, !tbaa !142
  %537 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5344 = add nsw i32 %537, -8
  store i32 %sub.i5344, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5345 = icmp sgt i32 %537, 15
  br i1 %cmp.i5345, label %while.body.i5346, label %bsW.exit5350

bsW.exit5350:                                     ; preds = %while.body.i5346, %for.end1903
  %.pre22.i53595702 = phi i32 [ %.pre22.i5336, %for.end1903 ], [ %inc.i5342, %while.body.i5346 ]
  %538 = phi i32 [ %.pre.i5335, %for.end1903 ], [ %shl.i5343, %while.body.i5346 ]
  %.lcssa.i5347 = phi i32 [ %.lcssa5502, %for.end1903 ], [ %sub.i5344, %while.body.i5346 ]
  store i32 %538, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5349 = add nsw i32 %.lcssa.i5347, 1
  store i32 %add.i5349, i32* %bsLive.i5474, align 4, !tbaa !141
  %indvars.iv.next5608 = add nuw nsw i64 %indvars.iv5607, 1
  %exitcond = icmp eq i64 %indvars.iv.next5608, %wide.trip.count
  br i1 %exitcond, label %for.end1906, label %for.body1892

for.end1906:                                      ; preds = %bsW.exit5350, %bsW.exit5400
  %.pre.i5310.pre5734 = phi i32 [ %or.i5398, %bsW.exit5400 ], [ %538, %bsW.exit5350 ]
  %.pre57095732 = phi i32 [ %add.i5399, %bsW.exit5400 ], [ %add.i5349, %bsW.exit5350 ]
  %539 = phi i32 [ %.pre22.i53595706, %bsW.exit5400 ], [ %.pre22.i53595702, %bsW.exit5350 ]
  %540 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp1908 = icmp sgt i32 %540, 2
  br i1 %cmp1908, label %if.then1910, label %if.end1914

if.then1910:                                      ; preds = %for.end1906
  %541 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %sub1912 = sub nsw i32 %539, %506
  %542 = getelementptr [15 x i8], [15 x i8]* @.str.8.73, i64 0, i64 0
  %call1913 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %541, i8* %542, i32 %sub1912) #15
  %.pre5708 = load i32, i32* %numZ, align 4, !tbaa !94
  %.pre5709.pre = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %.pre.i5310.pre.pre = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  br label %if.end1914

if.end1914:                                       ; preds = %if.then1910, %for.end1906
  %.pre.i5310.pre = phi i32 [ %.pre.i5310.pre.pre, %if.then1910 ], [ %.pre.i5310.pre5734, %for.end1906 ]
  %.pre5709 = phi i32 [ %.pre5709.pre, %if.then1910 ], [ %.pre57095732, %for.end1906 ]
  %543 = phi i32 [ %.pre5708, %if.then1910 ], [ %539, %for.end1906 ]
  br label %for.body1919

for.body1919:                                     ; preds = %for.end1955, %if.end1914
  %.pre22.i5311 = phi i32 [ %543, %if.end1914 ], [ %581, %for.end1955 ]
  %.pre.i5310 = phi i32 [ %.pre.i5310.pre, %if.end1914 ], [ %.pre.i53105711, %for.end1955 ]
  %544 = phi i32 [ %.pre5709, %if.end1914 ], [ %582, %for.end1955 ]
  %indvars.iv5605 = phi i64 [ 0, %if.end1914 ], [ %indvars.iv.next5606, %for.end1955 ]
  %arrayidx1923 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %indvars.iv5605, i64 0
  %545 = load i8, i8* %arrayidx1923, align 2, !tbaa !12
  %conv1924 = zext i8 %545 to i32
  %cmp20.i5304 = icmp sgt i32 %544, 7
  br i1 %cmp20.i5304, label %while.body.i5321.preheader, label %bsW.exit5327

while.body.i5321.preheader:                       ; preds = %for.body1919
  br label %while.body.i5321

while.body.i5321:                                 ; preds = %while.body.i5321, %while.body.i5321.preheader
  %546 = phi i32 [ %inc.i5317, %while.body.i5321 ], [ %.pre22.i5311, %while.body.i5321.preheader ]
  %547 = phi i32 [ %shl.i5318, %while.body.i5321 ], [ %.pre.i5310, %while.body.i5321.preheader ]
  %shr.i5313 = lshr i32 %547, 24
  %conv.i5314 = trunc i32 %shr.i5313 to i8
  %548 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5315 = sext i32 %546 to i64
  %arrayidx.i5316 = getelementptr inbounds i8, i8* %548, i64 %idxprom.i5315
  store i8 %conv.i5314, i8* %arrayidx.i5316, align 1, !tbaa !12
  %549 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5317 = add nsw i32 %549, 1
  store i32 %inc.i5317, i32* %numZ, align 4, !tbaa !94
  %550 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5318 = shl i32 %550, 8
  store i32 %shl.i5318, i32* %bsBuff.i5476, align 8, !tbaa !142
  %551 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5319 = add nsw i32 %551, -8
  store i32 %sub.i5319, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5320 = icmp sgt i32 %551, 15
  br i1 %cmp.i5320, label %while.body.i5321, label %bsW.exit5327

bsW.exit5327:                                     ; preds = %while.body.i5321, %for.body1919
  %.pre22.i53115722 = phi i32 [ %.pre22.i5311, %for.body1919 ], [ %inc.i5317, %while.body.i5321 ]
  %552 = phi i32 [ %.pre.i5310, %for.body1919 ], [ %shl.i5318, %while.body.i5321 ]
  %.lcssa.i5322 = phi i32 [ %544, %for.body1919 ], [ %sub.i5319, %while.body.i5321 ]
  %sub6.i5323 = sub i32 27, %.lcssa.i5322
  %shl7.i5324 = shl i32 %conv1924, %sub6.i5323
  %or.i5325 = or i32 %shl7.i5324, %552
  store i32 %or.i5325, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5326 = add nsw i32 %.lcssa.i5322, 5
  store i32 %add.i5326, i32* %bsLive.i5474, align 4, !tbaa !141
  br i1 %cmp55591, label %for.body1928.preheader, label %for.end1955

for.body1928.preheader:                           ; preds = %bsW.exit5327
  br label %for.body1928

for.body1928:                                     ; preds = %bsW.exit5252, %for.body1928.preheader
  %.pre.i52855724 = phi i32 [ %580, %bsW.exit5252 ], [ %or.i5325, %for.body1928.preheader ]
  %553 = phi i32 [ %add.i5251, %bsW.exit5252 ], [ %add.i5326, %for.body1928.preheader ]
  %.pre22.i53115721 = phi i32 [ %.pre22.i53115714, %bsW.exit5252 ], [ %.pre22.i53115722, %for.body1928.preheader ]
  %indvars.iv5603 = phi i64 [ %indvars.iv.next5604, %bsW.exit5252 ], [ 0, %for.body1928.preheader ]
  %curr.05523 = phi i32 [ %curr.2.lcssa, %bsW.exit5252 ], [ %conv1924, %for.body1928.preheader ]
  %arrayidx1934 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %indvars.iv5605, i64 %indvars.iv5603
  %554 = load i8, i8* %arrayidx1934, align 1, !tbaa !12
  %conv19355509 = zext i8 %554 to i32
  %cmp19365510 = icmp slt i32 %curr.05523, %conv19355509
  br i1 %cmp19365510, label %while.body1938.preheader, label %while.end1940

while.body1938.preheader:                         ; preds = %for.body1928
  br label %while.body1938

while.body1938:                                   ; preds = %bsW.exit5302, %while.body1938.preheader
  %.pre.i5285 = phi i32 [ %or.i5300, %bsW.exit5302 ], [ %.pre.i52855724, %while.body1938.preheader ]
  %555 = phi i32 [ %add.i5301, %bsW.exit5302 ], [ %553, %while.body1938.preheader ]
  %.pre22.i5286 = phi i32 [ %.pre22.i53115719, %bsW.exit5302 ], [ %.pre22.i53115721, %while.body1938.preheader ]
  %curr.15511 = phi i32 [ %inc1939, %bsW.exit5302 ], [ %curr.05523, %while.body1938.preheader ]
  %cmp20.i5279 = icmp sgt i32 %555, 7
  br i1 %cmp20.i5279, label %while.body.i5296.preheader, label %bsW.exit5302

while.body.i5296.preheader:                       ; preds = %while.body1938
  br label %while.body.i5296

while.body.i5296:                                 ; preds = %while.body.i5296, %while.body.i5296.preheader
  %556 = phi i32 [ %inc.i5292, %while.body.i5296 ], [ %.pre22.i5286, %while.body.i5296.preheader ]
  %557 = phi i32 [ %shl.i5293, %while.body.i5296 ], [ %.pre.i5285, %while.body.i5296.preheader ]
  %shr.i5288 = lshr i32 %557, 24
  %conv.i5289 = trunc i32 %shr.i5288 to i8
  %558 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5290 = sext i32 %556 to i64
  %arrayidx.i5291 = getelementptr inbounds i8, i8* %558, i64 %idxprom.i5290
  store i8 %conv.i5289, i8* %arrayidx.i5291, align 1, !tbaa !12
  %559 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5292 = add nsw i32 %559, 1
  store i32 %inc.i5292, i32* %numZ, align 4, !tbaa !94
  %560 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5293 = shl i32 %560, 8
  store i32 %shl.i5293, i32* %bsBuff.i5476, align 8, !tbaa !142
  %561 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5294 = add nsw i32 %561, -8
  store i32 %sub.i5294, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5295 = icmp sgt i32 %561, 15
  br i1 %cmp.i5295, label %while.body.i5296, label %bsW.exit5302

bsW.exit5302:                                     ; preds = %while.body.i5296, %while.body1938
  %.pre22.i53115719 = phi i32 [ %.pre22.i5286, %while.body1938 ], [ %inc.i5292, %while.body.i5296 ]
  %562 = phi i32 [ %.pre.i5285, %while.body1938 ], [ %shl.i5293, %while.body.i5296 ]
  %.lcssa.i5297 = phi i32 [ %555, %while.body1938 ], [ %sub.i5294, %while.body.i5296 ]
  %sub6.i5298 = sub i32 30, %.lcssa.i5297
  %shl7.i5299 = shl i32 2, %sub6.i5298
  %or.i5300 = or i32 %shl7.i5299, %562
  store i32 %or.i5300, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5301 = add nsw i32 %.lcssa.i5297, 2
  store i32 %add.i5301, i32* %bsLive.i5474, align 4, !tbaa !141
  %inc1939 = add nsw i32 %curr.15511, 1
  %563 = load i8, i8* %arrayidx1934, align 1, !tbaa !12
  %conv1935 = zext i8 %563 to i32
  %cmp1936 = icmp slt i32 %inc1939, %conv1935
  br i1 %cmp1936, label %while.body1938, label %while.end1940.loopexit

while.end1940.loopexit:                           ; preds = %bsW.exit5302
  %conv1935.le = zext i8 %563 to i32
  br label %while.end1940

while.end1940:                                    ; preds = %while.end1940.loopexit, %for.body1928
  %conv19475514.pre-phi = phi i32 [ %conv19355509, %for.body1928 ], [ %conv1935.le, %while.end1940.loopexit ]
  %.pre.i52605726 = phi i32 [ %.pre.i52855724, %for.body1928 ], [ %or.i5300, %while.end1940.loopexit ]
  %564 = phi i32 [ %553, %for.body1928 ], [ %add.i5301, %while.end1940.loopexit ]
  %.pre22.i53115718 = phi i32 [ %.pre22.i53115721, %for.body1928 ], [ %.pre22.i53115719, %while.end1940.loopexit ]
  %curr.1.lcssa = phi i32 [ %curr.05523, %for.body1928 ], [ %inc1939, %while.end1940.loopexit ]
  %cmp19485515 = icmp sgt i32 %curr.1.lcssa, %conv19475514.pre-phi
  %cmp20.i52545516 = icmp sgt i32 %564, 7
  br i1 %cmp19485515, label %while.body1950.preheader, label %while.end1952

while.body1950.preheader:                         ; preds = %while.end1940
  br label %while.body1950

while.body1950:                                   ; preds = %bsW.exit5277, %while.body1950.preheader
  %.pre.i5260 = phi i32 [ %or.i5275, %bsW.exit5277 ], [ %.pre.i52605726, %while.body1950.preheader ]
  %.pre22.i5261 = phi i32 [ %.pre22.i53115716, %bsW.exit5277 ], [ %.pre22.i53115718, %while.body1950.preheader ]
  %cmp20.i52545518 = phi i1 [ %cmp20.i5254, %bsW.exit5277 ], [ %cmp20.i52545516, %while.body1950.preheader ]
  %565 = phi i32 [ %add.i5276, %bsW.exit5277 ], [ %564, %while.body1950.preheader ]
  %curr.25517 = phi i32 [ %dec1951, %bsW.exit5277 ], [ %curr.1.lcssa, %while.body1950.preheader ]
  br i1 %cmp20.i52545518, label %while.body.i5271.preheader, label %bsW.exit5277

while.body.i5271.preheader:                       ; preds = %while.body1950
  br label %while.body.i5271

while.body.i5271:                                 ; preds = %while.body.i5271, %while.body.i5271.preheader
  %566 = phi i32 [ %inc.i5267, %while.body.i5271 ], [ %.pre22.i5261, %while.body.i5271.preheader ]
  %567 = phi i32 [ %shl.i5268, %while.body.i5271 ], [ %.pre.i5260, %while.body.i5271.preheader ]
  %shr.i5263 = lshr i32 %567, 24
  %conv.i5264 = trunc i32 %shr.i5263 to i8
  %568 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5265 = sext i32 %566 to i64
  %arrayidx.i5266 = getelementptr inbounds i8, i8* %568, i64 %idxprom.i5265
  store i8 %conv.i5264, i8* %arrayidx.i5266, align 1, !tbaa !12
  %569 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5267 = add nsw i32 %569, 1
  store i32 %inc.i5267, i32* %numZ, align 4, !tbaa !94
  %570 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5268 = shl i32 %570, 8
  store i32 %shl.i5268, i32* %bsBuff.i5476, align 8, !tbaa !142
  %571 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5269 = add nsw i32 %571, -8
  store i32 %sub.i5269, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5270 = icmp sgt i32 %571, 15
  br i1 %cmp.i5270, label %while.body.i5271, label %bsW.exit5277

bsW.exit5277:                                     ; preds = %while.body.i5271, %while.body1950
  %.pre22.i53115716 = phi i32 [ %.pre22.i5261, %while.body1950 ], [ %inc.i5267, %while.body.i5271 ]
  %572 = phi i32 [ %.pre.i5260, %while.body1950 ], [ %shl.i5268, %while.body.i5271 ]
  %.lcssa.i5272 = phi i32 [ %565, %while.body1950 ], [ %sub.i5269, %while.body.i5271 ]
  %sub6.i5273 = sub i32 30, %.lcssa.i5272
  %shl7.i5274 = shl i32 3, %sub6.i5273
  %or.i5275 = or i32 %shl7.i5274, %572
  store i32 %or.i5275, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5276 = add nsw i32 %.lcssa.i5272, 2
  store i32 %add.i5276, i32* %bsLive.i5474, align 4, !tbaa !141
  %dec1951 = add nsw i32 %curr.25517, -1
  %573 = load i8, i8* %arrayidx1934, align 1, !tbaa !12
  %conv1947 = zext i8 %573 to i32
  %cmp1948 = icmp sgt i32 %dec1951, %conv1947
  %cmp20.i5254 = icmp sgt i32 %.lcssa.i5272, 5
  br i1 %cmp1948, label %while.body1950, label %while.end1952

while.end1952:                                    ; preds = %bsW.exit5277, %while.end1940
  %.pre.i5237 = phi i32 [ %.pre.i52605726, %while.end1940 ], [ %or.i5275, %bsW.exit5277 ]
  %.pre22.i5238 = phi i32 [ %.pre22.i53115718, %while.end1940 ], [ %.pre22.i53115716, %bsW.exit5277 ]
  %curr.2.lcssa = phi i32 [ %curr.1.lcssa, %while.end1940 ], [ %dec1951, %bsW.exit5277 ]
  %.lcssa = phi i32 [ %564, %while.end1940 ], [ %add.i5276, %bsW.exit5277 ]
  %cmp20.i5254.lcssa = phi i1 [ %cmp20.i52545516, %while.end1940 ], [ %cmp20.i5254, %bsW.exit5277 ]
  br i1 %cmp20.i5254.lcssa, label %while.body.i5248.preheader, label %bsW.exit5252

while.body.i5248.preheader:                       ; preds = %while.end1952
  br label %while.body.i5248

while.body.i5248:                                 ; preds = %while.body.i5248, %while.body.i5248.preheader
  %574 = phi i32 [ %inc.i5244, %while.body.i5248 ], [ %.pre22.i5238, %while.body.i5248.preheader ]
  %575 = phi i32 [ %shl.i5245, %while.body.i5248 ], [ %.pre.i5237, %while.body.i5248.preheader ]
  %shr.i5240 = lshr i32 %575, 24
  %conv.i5241 = trunc i32 %shr.i5240 to i8
  %576 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5242 = sext i32 %574 to i64
  %arrayidx.i5243 = getelementptr inbounds i8, i8* %576, i64 %idxprom.i5242
  store i8 %conv.i5241, i8* %arrayidx.i5243, align 1, !tbaa !12
  %577 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5244 = add nsw i32 %577, 1
  store i32 %inc.i5244, i32* %numZ, align 4, !tbaa !94
  %578 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5245 = shl i32 %578, 8
  store i32 %shl.i5245, i32* %bsBuff.i5476, align 8, !tbaa !142
  %579 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5246 = add nsw i32 %579, -8
  store i32 %sub.i5246, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5247 = icmp sgt i32 %579, 15
  br i1 %cmp.i5247, label %while.body.i5248, label %bsW.exit5252

bsW.exit5252:                                     ; preds = %while.body.i5248, %while.end1952
  %.pre22.i53115714 = phi i32 [ %.pre22.i5238, %while.end1952 ], [ %inc.i5244, %while.body.i5248 ]
  %580 = phi i32 [ %.pre.i5237, %while.end1952 ], [ %shl.i5245, %while.body.i5248 ]
  %.lcssa.i5249 = phi i32 [ %.lcssa, %while.end1952 ], [ %sub.i5246, %while.body.i5248 ]
  store i32 %580, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5251 = add nsw i32 %.lcssa.i5249, 1
  store i32 %add.i5251, i32* %bsLive.i5474, align 4, !tbaa !141
  %indvars.iv.next5604 = add nuw nsw i64 %indvars.iv5603, 1
  %cmp1926 = icmp slt i64 %indvars.iv.next5604, %15
  br i1 %cmp1926, label %for.body1928, label %for.end1955

for.end1955:                                      ; preds = %bsW.exit5252, %bsW.exit5327
  %581 = phi i32 [ %.pre22.i53115722, %bsW.exit5327 ], [ %.pre22.i53115714, %bsW.exit5252 ]
  %.pre.i53105711 = phi i32 [ %or.i5325, %bsW.exit5327 ], [ %580, %bsW.exit5252 ]
  %582 = phi i32 [ %add.i5326, %bsW.exit5327 ], [ %add.i5251, %bsW.exit5252 ]
  %indvars.iv.next5606 = add nuw nsw i64 %indvars.iv5605, 1
  %cmp1917 = icmp ult i64 %indvars.iv.next5606, %31
  br i1 %cmp1917, label %for.body1919, label %for.end1958

for.end1958:                                      ; preds = %for.end1955
  %583 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp1960 = icmp sgt i32 %583, 2
  br i1 %cmp1960, label %if.then1962, label %if.end1966

if.then1962:                                      ; preds = %for.end1958
  %584 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %sub1964 = sub nsw i32 %581, %543
  %585 = getelementptr [18 x i8], [18 x i8]* @.str.9.74, i64 0, i64 0
  %call1965 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %584, i8* %585, i32 %sub1964) #15
  %.pre5728 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %if.end1966

if.end1966:                                       ; preds = %if.then1962, %for.end1958
  %586 = phi i32 [ %.pre5728, %if.then1962 ], [ %581, %for.end1958 ]
  %587 = load i32, i32* %nMTF12, align 4, !tbaa !147
  %cmp19715506 = icmp sgt i32 %587, 0
  br i1 %cmp19715506, label %if.end1974.preheader, label %while.end2446

if.end1974.preheader:                             ; preds = %if.end1966
  br label %if.end1974

if.end1974:                                       ; preds = %if.end2443, %if.end1974.preheader
  %indvars.iv5601 = phi i64 [ %indvars.iv.next5602, %if.end2443 ], [ 0, %if.end1974.preheader ]
  %588 = phi i32 [ %1106, %if.end2443 ], [ %587, %if.end1974.preheader ]
  %gs.25508 = phi i32 [ %add2444, %if.end2443 ], [ 0, %if.end1974.preheader ]
  %sub1976 = add nsw i32 %gs.25508, 49
  %cmp1978 = icmp slt i32 %sub1976, %588
  %sub1982 = add nsw i32 %588, -1
  %spec.select3903 = select i1 %cmp1978, i32 %sub1976, i32 %sub1982
  %arrayidx1986 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 33, i64 %indvars.iv5601
  %589 = load i8, i8* %arrayidx1986, align 1, !tbaa !12
  %conv1987 = zext i8 %589 to i32
  %cmp1988 = icmp ugt i32 %nGroups.0, %conv1987
  br i1 %cmp1988, label %if.end1991, label %if.then1990

if.then1990:                                      ; preds = %if.end1974
  tail call void @BZ2_bz__AssertH__fail(i32 3006) #2
  br label %if.end1991

if.end1991:                                       ; preds = %if.then1990, %if.end1974
  %sub1995 = sub nsw i32 %spec.select3903, %gs.25508
  %cmp1997 = icmp eq i32 %sub1995, 49
  %or.cond3904 = and i1 %cmp131, %cmp1997
  br i1 %or.cond3904, label %if.then1999, label %if.else2414

if.then1999:                                      ; preds = %if.end1991
  %590 = load i8, i8* %arrayidx1986, align 1, !tbaa !12
  %idxprom2004 = zext i8 %590 to i64
  %idxprom2015 = sext i32 %gs.25508 to i64
  %arrayidx2016 = getelementptr inbounds i16, i16* %2, i64 %idxprom2015
  %591 = load i16, i16* %arrayidx2016, align 2, !tbaa !33
  %idxprom2017 = zext i16 %591 to i64
  %arrayidx2018 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2017
  %592 = load i8, i8* %arrayidx2018, align 1, !tbaa !12
  %conv2019 = zext i8 %592 to i32
  %arrayidx2021 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2017
  %593 = load i32, i32* %arrayidx2021, align 4, !tbaa !6
  %594 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp20.i5205 = icmp sgt i32 %594, 7
  %.pre.i5211 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  br i1 %cmp20.i5205, label %while.body.lr.ph.i5213, label %bsW.exit5229

while.body.lr.ph.i5213:                           ; preds = %if.then1999
  %.pre22.i5212 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5222

while.body.i5222:                                 ; preds = %while.body.i5222, %while.body.lr.ph.i5213
  %595 = phi i32 [ %.pre22.i5212, %while.body.lr.ph.i5213 ], [ %inc.i5218, %while.body.i5222 ]
  %596 = phi i32 [ %.pre.i5211, %while.body.lr.ph.i5213 ], [ %shl.i5219, %while.body.i5222 ]
  %shr.i5214 = lshr i32 %596, 24
  %conv.i5215 = trunc i32 %shr.i5214 to i8
  %597 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5216 = sext i32 %595 to i64
  %arrayidx.i5217 = getelementptr inbounds i8, i8* %597, i64 %idxprom.i5216
  store i8 %conv.i5215, i8* %arrayidx.i5217, align 1, !tbaa !12
  %598 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5218 = add nsw i32 %598, 1
  store i32 %inc.i5218, i32* %numZ, align 4, !tbaa !94
  %599 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5219 = shl i32 %599, 8
  store i32 %shl.i5219, i32* %bsBuff.i5476, align 8, !tbaa !142
  %600 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5220 = add nsw i32 %600, -8
  store i32 %sub.i5220, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5221 = icmp sgt i32 %600, 15
  br i1 %cmp.i5221, label %while.body.i5222, label %bsW.exit5229

bsW.exit5229:                                     ; preds = %while.body.i5222, %if.then1999
  %601 = phi i32 [ %.pre.i5211, %if.then1999 ], [ %shl.i5219, %while.body.i5222 ]
  %.lcssa.i5223 = phi i32 [ %594, %if.then1999 ], [ %sub.i5220, %while.body.i5222 ]
  %sub5.i5224 = sub nsw i32 32, %conv2019
  %sub6.i5225 = sub i32 %sub5.i5224, %.lcssa.i5223
  %shl7.i5226 = shl i32 %593, %sub6.i5225
  %or.i5227 = or i32 %shl7.i5226, %601
  store i32 %or.i5227, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5228 = add nsw i32 %.lcssa.i5223, %conv2019
  store i32 %add.i5228, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2022 = add nsw i32 %gs.25508, 1
  %idxprom2023 = sext i32 %add2022 to i64
  %arrayidx2024 = getelementptr inbounds i16, i16* %2, i64 %idxprom2023
  %602 = load i16, i16* %arrayidx2024, align 2, !tbaa !33
  %idxprom2025 = zext i16 %602 to i64
  %arrayidx2026 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2025
  %603 = load i8, i8* %arrayidx2026, align 1, !tbaa !12
  %conv2027 = zext i8 %603 to i32
  %arrayidx2029 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2025
  %604 = load i32, i32* %arrayidx2029, align 4, !tbaa !6
  %cmp20.i5179 = icmp sgt i32 %add.i5228, 7
  br i1 %cmp20.i5179, label %while.body.lr.ph.i5187, label %bsW.exit5203

while.body.lr.ph.i5187:                           ; preds = %bsW.exit5229
  %.pre22.i5186 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5196

while.body.i5196:                                 ; preds = %while.body.i5196, %while.body.lr.ph.i5187
  %605 = phi i32 [ %.pre22.i5186, %while.body.lr.ph.i5187 ], [ %inc.i5192, %while.body.i5196 ]
  %606 = phi i32 [ %or.i5227, %while.body.lr.ph.i5187 ], [ %shl.i5193, %while.body.i5196 ]
  %shr.i5188 = lshr i32 %606, 24
  %conv.i5189 = trunc i32 %shr.i5188 to i8
  %607 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5190 = sext i32 %605 to i64
  %arrayidx.i5191 = getelementptr inbounds i8, i8* %607, i64 %idxprom.i5190
  store i8 %conv.i5189, i8* %arrayidx.i5191, align 1, !tbaa !12
  %608 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5192 = add nsw i32 %608, 1
  store i32 %inc.i5192, i32* %numZ, align 4, !tbaa !94
  %609 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5193 = shl i32 %609, 8
  store i32 %shl.i5193, i32* %bsBuff.i5476, align 8, !tbaa !142
  %610 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5194 = add nsw i32 %610, -8
  store i32 %sub.i5194, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5195 = icmp sgt i32 %610, 15
  br i1 %cmp.i5195, label %while.body.i5196, label %bsW.exit5203

bsW.exit5203:                                     ; preds = %while.body.i5196, %bsW.exit5229
  %611 = phi i32 [ %or.i5227, %bsW.exit5229 ], [ %shl.i5193, %while.body.i5196 ]
  %.lcssa.i5197 = phi i32 [ %add.i5228, %bsW.exit5229 ], [ %sub.i5194, %while.body.i5196 ]
  %sub5.i5198 = sub nsw i32 32, %conv2027
  %sub6.i5199 = sub i32 %sub5.i5198, %.lcssa.i5197
  %shl7.i5200 = shl i32 %604, %sub6.i5199
  %or.i5201 = or i32 %shl7.i5200, %611
  store i32 %or.i5201, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5202 = add nsw i32 %.lcssa.i5197, %conv2027
  store i32 %add.i5202, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2030 = add nsw i32 %gs.25508, 2
  %idxprom2031 = sext i32 %add2030 to i64
  %arrayidx2032 = getelementptr inbounds i16, i16* %2, i64 %idxprom2031
  %612 = load i16, i16* %arrayidx2032, align 2, !tbaa !33
  %idxprom2033 = zext i16 %612 to i64
  %arrayidx2034 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2033
  %613 = load i8, i8* %arrayidx2034, align 1, !tbaa !12
  %conv2035 = zext i8 %613 to i32
  %arrayidx2037 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2033
  %614 = load i32, i32* %arrayidx2037, align 4, !tbaa !6
  %cmp20.i5153 = icmp sgt i32 %add.i5202, 7
  br i1 %cmp20.i5153, label %while.body.lr.ph.i5161, label %bsW.exit5177

while.body.lr.ph.i5161:                           ; preds = %bsW.exit5203
  %.pre22.i5160 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5170

while.body.i5170:                                 ; preds = %while.body.i5170, %while.body.lr.ph.i5161
  %615 = phi i32 [ %.pre22.i5160, %while.body.lr.ph.i5161 ], [ %inc.i5166, %while.body.i5170 ]
  %616 = phi i32 [ %or.i5201, %while.body.lr.ph.i5161 ], [ %shl.i5167, %while.body.i5170 ]
  %shr.i5162 = lshr i32 %616, 24
  %conv.i5163 = trunc i32 %shr.i5162 to i8
  %617 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5164 = sext i32 %615 to i64
  %arrayidx.i5165 = getelementptr inbounds i8, i8* %617, i64 %idxprom.i5164
  store i8 %conv.i5163, i8* %arrayidx.i5165, align 1, !tbaa !12
  %618 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5166 = add nsw i32 %618, 1
  store i32 %inc.i5166, i32* %numZ, align 4, !tbaa !94
  %619 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5167 = shl i32 %619, 8
  store i32 %shl.i5167, i32* %bsBuff.i5476, align 8, !tbaa !142
  %620 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5168 = add nsw i32 %620, -8
  store i32 %sub.i5168, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5169 = icmp sgt i32 %620, 15
  br i1 %cmp.i5169, label %while.body.i5170, label %bsW.exit5177

bsW.exit5177:                                     ; preds = %while.body.i5170, %bsW.exit5203
  %621 = phi i32 [ %or.i5201, %bsW.exit5203 ], [ %shl.i5167, %while.body.i5170 ]
  %.lcssa.i5171 = phi i32 [ %add.i5202, %bsW.exit5203 ], [ %sub.i5168, %while.body.i5170 ]
  %sub5.i5172 = sub nsw i32 32, %conv2035
  %sub6.i5173 = sub i32 %sub5.i5172, %.lcssa.i5171
  %shl7.i5174 = shl i32 %614, %sub6.i5173
  %or.i5175 = or i32 %shl7.i5174, %621
  store i32 %or.i5175, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5176 = add nsw i32 %.lcssa.i5171, %conv2035
  store i32 %add.i5176, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2038 = add nsw i32 %gs.25508, 3
  %idxprom2039 = sext i32 %add2038 to i64
  %arrayidx2040 = getelementptr inbounds i16, i16* %2, i64 %idxprom2039
  %622 = load i16, i16* %arrayidx2040, align 2, !tbaa !33
  %idxprom2041 = zext i16 %622 to i64
  %arrayidx2042 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2041
  %623 = load i8, i8* %arrayidx2042, align 1, !tbaa !12
  %conv2043 = zext i8 %623 to i32
  %arrayidx2045 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2041
  %624 = load i32, i32* %arrayidx2045, align 4, !tbaa !6
  %cmp20.i5127 = icmp sgt i32 %add.i5176, 7
  br i1 %cmp20.i5127, label %while.body.lr.ph.i5135, label %bsW.exit5151

while.body.lr.ph.i5135:                           ; preds = %bsW.exit5177
  %.pre22.i5134 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5144

while.body.i5144:                                 ; preds = %while.body.i5144, %while.body.lr.ph.i5135
  %625 = phi i32 [ %.pre22.i5134, %while.body.lr.ph.i5135 ], [ %inc.i5140, %while.body.i5144 ]
  %626 = phi i32 [ %or.i5175, %while.body.lr.ph.i5135 ], [ %shl.i5141, %while.body.i5144 ]
  %shr.i5136 = lshr i32 %626, 24
  %conv.i5137 = trunc i32 %shr.i5136 to i8
  %627 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5138 = sext i32 %625 to i64
  %arrayidx.i5139 = getelementptr inbounds i8, i8* %627, i64 %idxprom.i5138
  store i8 %conv.i5137, i8* %arrayidx.i5139, align 1, !tbaa !12
  %628 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5140 = add nsw i32 %628, 1
  store i32 %inc.i5140, i32* %numZ, align 4, !tbaa !94
  %629 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5141 = shl i32 %629, 8
  store i32 %shl.i5141, i32* %bsBuff.i5476, align 8, !tbaa !142
  %630 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5142 = add nsw i32 %630, -8
  store i32 %sub.i5142, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5143 = icmp sgt i32 %630, 15
  br i1 %cmp.i5143, label %while.body.i5144, label %bsW.exit5151

bsW.exit5151:                                     ; preds = %while.body.i5144, %bsW.exit5177
  %631 = phi i32 [ %or.i5175, %bsW.exit5177 ], [ %shl.i5141, %while.body.i5144 ]
  %.lcssa.i5145 = phi i32 [ %add.i5176, %bsW.exit5177 ], [ %sub.i5142, %while.body.i5144 ]
  %sub5.i5146 = sub nsw i32 32, %conv2043
  %sub6.i5147 = sub i32 %sub5.i5146, %.lcssa.i5145
  %shl7.i5148 = shl i32 %624, %sub6.i5147
  %or.i5149 = or i32 %shl7.i5148, %631
  store i32 %or.i5149, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5150 = add nsw i32 %.lcssa.i5145, %conv2043
  store i32 %add.i5150, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2046 = add nsw i32 %gs.25508, 4
  %idxprom2047 = sext i32 %add2046 to i64
  %arrayidx2048 = getelementptr inbounds i16, i16* %2, i64 %idxprom2047
  %632 = load i16, i16* %arrayidx2048, align 2, !tbaa !33
  %idxprom2049 = zext i16 %632 to i64
  %arrayidx2050 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2049
  %633 = load i8, i8* %arrayidx2050, align 1, !tbaa !12
  %conv2051 = zext i8 %633 to i32
  %arrayidx2053 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2049
  %634 = load i32, i32* %arrayidx2053, align 4, !tbaa !6
  %cmp20.i5101 = icmp sgt i32 %add.i5150, 7
  br i1 %cmp20.i5101, label %while.body.lr.ph.i5109, label %bsW.exit5125

while.body.lr.ph.i5109:                           ; preds = %bsW.exit5151
  %.pre22.i5108 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5118

while.body.i5118:                                 ; preds = %while.body.i5118, %while.body.lr.ph.i5109
  %635 = phi i32 [ %.pre22.i5108, %while.body.lr.ph.i5109 ], [ %inc.i5114, %while.body.i5118 ]
  %636 = phi i32 [ %or.i5149, %while.body.lr.ph.i5109 ], [ %shl.i5115, %while.body.i5118 ]
  %shr.i5110 = lshr i32 %636, 24
  %conv.i5111 = trunc i32 %shr.i5110 to i8
  %637 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5112 = sext i32 %635 to i64
  %arrayidx.i5113 = getelementptr inbounds i8, i8* %637, i64 %idxprom.i5112
  store i8 %conv.i5111, i8* %arrayidx.i5113, align 1, !tbaa !12
  %638 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5114 = add nsw i32 %638, 1
  store i32 %inc.i5114, i32* %numZ, align 4, !tbaa !94
  %639 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5115 = shl i32 %639, 8
  store i32 %shl.i5115, i32* %bsBuff.i5476, align 8, !tbaa !142
  %640 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5116 = add nsw i32 %640, -8
  store i32 %sub.i5116, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5117 = icmp sgt i32 %640, 15
  br i1 %cmp.i5117, label %while.body.i5118, label %bsW.exit5125

bsW.exit5125:                                     ; preds = %while.body.i5118, %bsW.exit5151
  %641 = phi i32 [ %or.i5149, %bsW.exit5151 ], [ %shl.i5115, %while.body.i5118 ]
  %.lcssa.i5119 = phi i32 [ %add.i5150, %bsW.exit5151 ], [ %sub.i5116, %while.body.i5118 ]
  %sub5.i5120 = sub nsw i32 32, %conv2051
  %sub6.i5121 = sub i32 %sub5.i5120, %.lcssa.i5119
  %shl7.i5122 = shl i32 %634, %sub6.i5121
  %or.i5123 = or i32 %shl7.i5122, %641
  store i32 %or.i5123, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5124 = add nsw i32 %.lcssa.i5119, %conv2051
  store i32 %add.i5124, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2054 = add nsw i32 %gs.25508, 5
  %idxprom2055 = sext i32 %add2054 to i64
  %arrayidx2056 = getelementptr inbounds i16, i16* %2, i64 %idxprom2055
  %642 = load i16, i16* %arrayidx2056, align 2, !tbaa !33
  %idxprom2057 = zext i16 %642 to i64
  %arrayidx2058 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2057
  %643 = load i8, i8* %arrayidx2058, align 1, !tbaa !12
  %conv2059 = zext i8 %643 to i32
  %arrayidx2061 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2057
  %644 = load i32, i32* %arrayidx2061, align 4, !tbaa !6
  %cmp20.i5075 = icmp sgt i32 %add.i5124, 7
  br i1 %cmp20.i5075, label %while.body.lr.ph.i5083, label %bsW.exit5099

while.body.lr.ph.i5083:                           ; preds = %bsW.exit5125
  %.pre22.i5082 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5092

while.body.i5092:                                 ; preds = %while.body.i5092, %while.body.lr.ph.i5083
  %645 = phi i32 [ %.pre22.i5082, %while.body.lr.ph.i5083 ], [ %inc.i5088, %while.body.i5092 ]
  %646 = phi i32 [ %or.i5123, %while.body.lr.ph.i5083 ], [ %shl.i5089, %while.body.i5092 ]
  %shr.i5084 = lshr i32 %646, 24
  %conv.i5085 = trunc i32 %shr.i5084 to i8
  %647 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5086 = sext i32 %645 to i64
  %arrayidx.i5087 = getelementptr inbounds i8, i8* %647, i64 %idxprom.i5086
  store i8 %conv.i5085, i8* %arrayidx.i5087, align 1, !tbaa !12
  %648 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5088 = add nsw i32 %648, 1
  store i32 %inc.i5088, i32* %numZ, align 4, !tbaa !94
  %649 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5089 = shl i32 %649, 8
  store i32 %shl.i5089, i32* %bsBuff.i5476, align 8, !tbaa !142
  %650 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5090 = add nsw i32 %650, -8
  store i32 %sub.i5090, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5091 = icmp sgt i32 %650, 15
  br i1 %cmp.i5091, label %while.body.i5092, label %bsW.exit5099

bsW.exit5099:                                     ; preds = %while.body.i5092, %bsW.exit5125
  %651 = phi i32 [ %or.i5123, %bsW.exit5125 ], [ %shl.i5089, %while.body.i5092 ]
  %.lcssa.i5093 = phi i32 [ %add.i5124, %bsW.exit5125 ], [ %sub.i5090, %while.body.i5092 ]
  %sub5.i5094 = sub nsw i32 32, %conv2059
  %sub6.i5095 = sub i32 %sub5.i5094, %.lcssa.i5093
  %shl7.i5096 = shl i32 %644, %sub6.i5095
  %or.i5097 = or i32 %shl7.i5096, %651
  store i32 %or.i5097, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5098 = add nsw i32 %.lcssa.i5093, %conv2059
  store i32 %add.i5098, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2062 = add nsw i32 %gs.25508, 6
  %idxprom2063 = sext i32 %add2062 to i64
  %arrayidx2064 = getelementptr inbounds i16, i16* %2, i64 %idxprom2063
  %652 = load i16, i16* %arrayidx2064, align 2, !tbaa !33
  %idxprom2065 = zext i16 %652 to i64
  %arrayidx2066 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2065
  %653 = load i8, i8* %arrayidx2066, align 1, !tbaa !12
  %conv2067 = zext i8 %653 to i32
  %arrayidx2069 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2065
  %654 = load i32, i32* %arrayidx2069, align 4, !tbaa !6
  %cmp20.i5049 = icmp sgt i32 %add.i5098, 7
  br i1 %cmp20.i5049, label %while.body.lr.ph.i5057, label %bsW.exit5073

while.body.lr.ph.i5057:                           ; preds = %bsW.exit5099
  %.pre22.i5056 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5066

while.body.i5066:                                 ; preds = %while.body.i5066, %while.body.lr.ph.i5057
  %655 = phi i32 [ %.pre22.i5056, %while.body.lr.ph.i5057 ], [ %inc.i5062, %while.body.i5066 ]
  %656 = phi i32 [ %or.i5097, %while.body.lr.ph.i5057 ], [ %shl.i5063, %while.body.i5066 ]
  %shr.i5058 = lshr i32 %656, 24
  %conv.i5059 = trunc i32 %shr.i5058 to i8
  %657 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5060 = sext i32 %655 to i64
  %arrayidx.i5061 = getelementptr inbounds i8, i8* %657, i64 %idxprom.i5060
  store i8 %conv.i5059, i8* %arrayidx.i5061, align 1, !tbaa !12
  %658 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5062 = add nsw i32 %658, 1
  store i32 %inc.i5062, i32* %numZ, align 4, !tbaa !94
  %659 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5063 = shl i32 %659, 8
  store i32 %shl.i5063, i32* %bsBuff.i5476, align 8, !tbaa !142
  %660 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5064 = add nsw i32 %660, -8
  store i32 %sub.i5064, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5065 = icmp sgt i32 %660, 15
  br i1 %cmp.i5065, label %while.body.i5066, label %bsW.exit5073

bsW.exit5073:                                     ; preds = %while.body.i5066, %bsW.exit5099
  %661 = phi i32 [ %or.i5097, %bsW.exit5099 ], [ %shl.i5063, %while.body.i5066 ]
  %.lcssa.i5067 = phi i32 [ %add.i5098, %bsW.exit5099 ], [ %sub.i5064, %while.body.i5066 ]
  %sub5.i5068 = sub nsw i32 32, %conv2067
  %sub6.i5069 = sub i32 %sub5.i5068, %.lcssa.i5067
  %shl7.i5070 = shl i32 %654, %sub6.i5069
  %or.i5071 = or i32 %shl7.i5070, %661
  store i32 %or.i5071, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5072 = add nsw i32 %.lcssa.i5067, %conv2067
  store i32 %add.i5072, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2070 = add nsw i32 %gs.25508, 7
  %idxprom2071 = sext i32 %add2070 to i64
  %arrayidx2072 = getelementptr inbounds i16, i16* %2, i64 %idxprom2071
  %662 = load i16, i16* %arrayidx2072, align 2, !tbaa !33
  %idxprom2073 = zext i16 %662 to i64
  %arrayidx2074 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2073
  %663 = load i8, i8* %arrayidx2074, align 1, !tbaa !12
  %conv2075 = zext i8 %663 to i32
  %arrayidx2077 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2073
  %664 = load i32, i32* %arrayidx2077, align 4, !tbaa !6
  %cmp20.i5023 = icmp sgt i32 %add.i5072, 7
  br i1 %cmp20.i5023, label %while.body.lr.ph.i5031, label %bsW.exit5047

while.body.lr.ph.i5031:                           ; preds = %bsW.exit5073
  %.pre22.i5030 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5040

while.body.i5040:                                 ; preds = %while.body.i5040, %while.body.lr.ph.i5031
  %665 = phi i32 [ %.pre22.i5030, %while.body.lr.ph.i5031 ], [ %inc.i5036, %while.body.i5040 ]
  %666 = phi i32 [ %or.i5071, %while.body.lr.ph.i5031 ], [ %shl.i5037, %while.body.i5040 ]
  %shr.i5032 = lshr i32 %666, 24
  %conv.i5033 = trunc i32 %shr.i5032 to i8
  %667 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5034 = sext i32 %665 to i64
  %arrayidx.i5035 = getelementptr inbounds i8, i8* %667, i64 %idxprom.i5034
  store i8 %conv.i5033, i8* %arrayidx.i5035, align 1, !tbaa !12
  %668 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5036 = add nsw i32 %668, 1
  store i32 %inc.i5036, i32* %numZ, align 4, !tbaa !94
  %669 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5037 = shl i32 %669, 8
  store i32 %shl.i5037, i32* %bsBuff.i5476, align 8, !tbaa !142
  %670 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5038 = add nsw i32 %670, -8
  store i32 %sub.i5038, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5039 = icmp sgt i32 %670, 15
  br i1 %cmp.i5039, label %while.body.i5040, label %bsW.exit5047

bsW.exit5047:                                     ; preds = %while.body.i5040, %bsW.exit5073
  %671 = phi i32 [ %or.i5071, %bsW.exit5073 ], [ %shl.i5037, %while.body.i5040 ]
  %.lcssa.i5041 = phi i32 [ %add.i5072, %bsW.exit5073 ], [ %sub.i5038, %while.body.i5040 ]
  %sub5.i5042 = sub nsw i32 32, %conv2075
  %sub6.i5043 = sub i32 %sub5.i5042, %.lcssa.i5041
  %shl7.i5044 = shl i32 %664, %sub6.i5043
  %or.i5045 = or i32 %shl7.i5044, %671
  store i32 %or.i5045, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5046 = add nsw i32 %.lcssa.i5041, %conv2075
  store i32 %add.i5046, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2078 = add nsw i32 %gs.25508, 8
  %idxprom2079 = sext i32 %add2078 to i64
  %arrayidx2080 = getelementptr inbounds i16, i16* %2, i64 %idxprom2079
  %672 = load i16, i16* %arrayidx2080, align 2, !tbaa !33
  %idxprom2081 = zext i16 %672 to i64
  %arrayidx2082 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2081
  %673 = load i8, i8* %arrayidx2082, align 1, !tbaa !12
  %conv2083 = zext i8 %673 to i32
  %arrayidx2085 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2081
  %674 = load i32, i32* %arrayidx2085, align 4, !tbaa !6
  %cmp20.i4997 = icmp sgt i32 %add.i5046, 7
  br i1 %cmp20.i4997, label %while.body.lr.ph.i5005, label %bsW.exit5021

while.body.lr.ph.i5005:                           ; preds = %bsW.exit5047
  %.pre22.i5004 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i5014

while.body.i5014:                                 ; preds = %while.body.i5014, %while.body.lr.ph.i5005
  %675 = phi i32 [ %.pre22.i5004, %while.body.lr.ph.i5005 ], [ %inc.i5010, %while.body.i5014 ]
  %676 = phi i32 [ %or.i5045, %while.body.lr.ph.i5005 ], [ %shl.i5011, %while.body.i5014 ]
  %shr.i5006 = lshr i32 %676, 24
  %conv.i5007 = trunc i32 %shr.i5006 to i8
  %677 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i5008 = sext i32 %675 to i64
  %arrayidx.i5009 = getelementptr inbounds i8, i8* %677, i64 %idxprom.i5008
  store i8 %conv.i5007, i8* %arrayidx.i5009, align 1, !tbaa !12
  %678 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i5010 = add nsw i32 %678, 1
  store i32 %inc.i5010, i32* %numZ, align 4, !tbaa !94
  %679 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i5011 = shl i32 %679, 8
  store i32 %shl.i5011, i32* %bsBuff.i5476, align 8, !tbaa !142
  %680 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i5012 = add nsw i32 %680, -8
  store i32 %sub.i5012, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i5013 = icmp sgt i32 %680, 15
  br i1 %cmp.i5013, label %while.body.i5014, label %bsW.exit5021

bsW.exit5021:                                     ; preds = %while.body.i5014, %bsW.exit5047
  %681 = phi i32 [ %or.i5045, %bsW.exit5047 ], [ %shl.i5011, %while.body.i5014 ]
  %.lcssa.i5015 = phi i32 [ %add.i5046, %bsW.exit5047 ], [ %sub.i5012, %while.body.i5014 ]
  %sub5.i5016 = sub nsw i32 32, %conv2083
  %sub6.i5017 = sub i32 %sub5.i5016, %.lcssa.i5015
  %shl7.i5018 = shl i32 %674, %sub6.i5017
  %or.i5019 = or i32 %shl7.i5018, %681
  store i32 %or.i5019, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i5020 = add nsw i32 %.lcssa.i5015, %conv2083
  store i32 %add.i5020, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2086 = add nsw i32 %gs.25508, 9
  %idxprom2087 = sext i32 %add2086 to i64
  %arrayidx2088 = getelementptr inbounds i16, i16* %2, i64 %idxprom2087
  %682 = load i16, i16* %arrayidx2088, align 2, !tbaa !33
  %idxprom2089 = zext i16 %682 to i64
  %arrayidx2090 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2089
  %683 = load i8, i8* %arrayidx2090, align 1, !tbaa !12
  %conv2091 = zext i8 %683 to i32
  %arrayidx2093 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2089
  %684 = load i32, i32* %arrayidx2093, align 4, !tbaa !6
  %cmp20.i4971 = icmp sgt i32 %add.i5020, 7
  br i1 %cmp20.i4971, label %while.body.lr.ph.i4979, label %bsW.exit4995

while.body.lr.ph.i4979:                           ; preds = %bsW.exit5021
  %.pre22.i4978 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4988

while.body.i4988:                                 ; preds = %while.body.i4988, %while.body.lr.ph.i4979
  %685 = phi i32 [ %.pre22.i4978, %while.body.lr.ph.i4979 ], [ %inc.i4984, %while.body.i4988 ]
  %686 = phi i32 [ %or.i5019, %while.body.lr.ph.i4979 ], [ %shl.i4985, %while.body.i4988 ]
  %shr.i4980 = lshr i32 %686, 24
  %conv.i4981 = trunc i32 %shr.i4980 to i8
  %687 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4982 = sext i32 %685 to i64
  %arrayidx.i4983 = getelementptr inbounds i8, i8* %687, i64 %idxprom.i4982
  store i8 %conv.i4981, i8* %arrayidx.i4983, align 1, !tbaa !12
  %688 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4984 = add nsw i32 %688, 1
  store i32 %inc.i4984, i32* %numZ, align 4, !tbaa !94
  %689 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4985 = shl i32 %689, 8
  store i32 %shl.i4985, i32* %bsBuff.i5476, align 8, !tbaa !142
  %690 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4986 = add nsw i32 %690, -8
  store i32 %sub.i4986, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4987 = icmp sgt i32 %690, 15
  br i1 %cmp.i4987, label %while.body.i4988, label %bsW.exit4995

bsW.exit4995:                                     ; preds = %while.body.i4988, %bsW.exit5021
  %691 = phi i32 [ %or.i5019, %bsW.exit5021 ], [ %shl.i4985, %while.body.i4988 ]
  %.lcssa.i4989 = phi i32 [ %add.i5020, %bsW.exit5021 ], [ %sub.i4986, %while.body.i4988 ]
  %sub5.i4990 = sub nsw i32 32, %conv2091
  %sub6.i4991 = sub i32 %sub5.i4990, %.lcssa.i4989
  %shl7.i4992 = shl i32 %684, %sub6.i4991
  %or.i4993 = or i32 %shl7.i4992, %691
  store i32 %or.i4993, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4994 = add nsw i32 %.lcssa.i4989, %conv2091
  store i32 %add.i4994, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2094 = add nsw i32 %gs.25508, 10
  %idxprom2095 = sext i32 %add2094 to i64
  %arrayidx2096 = getelementptr inbounds i16, i16* %2, i64 %idxprom2095
  %692 = load i16, i16* %arrayidx2096, align 2, !tbaa !33
  %idxprom2097 = zext i16 %692 to i64
  %arrayidx2098 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2097
  %693 = load i8, i8* %arrayidx2098, align 1, !tbaa !12
  %conv2099 = zext i8 %693 to i32
  %arrayidx2101 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2097
  %694 = load i32, i32* %arrayidx2101, align 4, !tbaa !6
  %cmp20.i4945 = icmp sgt i32 %add.i4994, 7
  br i1 %cmp20.i4945, label %while.body.lr.ph.i4953, label %bsW.exit4969

while.body.lr.ph.i4953:                           ; preds = %bsW.exit4995
  %.pre22.i4952 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4962

while.body.i4962:                                 ; preds = %while.body.i4962, %while.body.lr.ph.i4953
  %695 = phi i32 [ %.pre22.i4952, %while.body.lr.ph.i4953 ], [ %inc.i4958, %while.body.i4962 ]
  %696 = phi i32 [ %or.i4993, %while.body.lr.ph.i4953 ], [ %shl.i4959, %while.body.i4962 ]
  %shr.i4954 = lshr i32 %696, 24
  %conv.i4955 = trunc i32 %shr.i4954 to i8
  %697 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4956 = sext i32 %695 to i64
  %arrayidx.i4957 = getelementptr inbounds i8, i8* %697, i64 %idxprom.i4956
  store i8 %conv.i4955, i8* %arrayidx.i4957, align 1, !tbaa !12
  %698 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4958 = add nsw i32 %698, 1
  store i32 %inc.i4958, i32* %numZ, align 4, !tbaa !94
  %699 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4959 = shl i32 %699, 8
  store i32 %shl.i4959, i32* %bsBuff.i5476, align 8, !tbaa !142
  %700 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4960 = add nsw i32 %700, -8
  store i32 %sub.i4960, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4961 = icmp sgt i32 %700, 15
  br i1 %cmp.i4961, label %while.body.i4962, label %bsW.exit4969

bsW.exit4969:                                     ; preds = %while.body.i4962, %bsW.exit4995
  %701 = phi i32 [ %or.i4993, %bsW.exit4995 ], [ %shl.i4959, %while.body.i4962 ]
  %.lcssa.i4963 = phi i32 [ %add.i4994, %bsW.exit4995 ], [ %sub.i4960, %while.body.i4962 ]
  %sub5.i4964 = sub nsw i32 32, %conv2099
  %sub6.i4965 = sub i32 %sub5.i4964, %.lcssa.i4963
  %shl7.i4966 = shl i32 %694, %sub6.i4965
  %or.i4967 = or i32 %shl7.i4966, %701
  store i32 %or.i4967, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4968 = add nsw i32 %.lcssa.i4963, %conv2099
  store i32 %add.i4968, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2102 = add nsw i32 %gs.25508, 11
  %idxprom2103 = sext i32 %add2102 to i64
  %arrayidx2104 = getelementptr inbounds i16, i16* %2, i64 %idxprom2103
  %702 = load i16, i16* %arrayidx2104, align 2, !tbaa !33
  %idxprom2105 = zext i16 %702 to i64
  %arrayidx2106 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2105
  %703 = load i8, i8* %arrayidx2106, align 1, !tbaa !12
  %conv2107 = zext i8 %703 to i32
  %arrayidx2109 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2105
  %704 = load i32, i32* %arrayidx2109, align 4, !tbaa !6
  %cmp20.i4919 = icmp sgt i32 %add.i4968, 7
  br i1 %cmp20.i4919, label %while.body.lr.ph.i4927, label %bsW.exit4943

while.body.lr.ph.i4927:                           ; preds = %bsW.exit4969
  %.pre22.i4926 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4936

while.body.i4936:                                 ; preds = %while.body.i4936, %while.body.lr.ph.i4927
  %705 = phi i32 [ %.pre22.i4926, %while.body.lr.ph.i4927 ], [ %inc.i4932, %while.body.i4936 ]
  %706 = phi i32 [ %or.i4967, %while.body.lr.ph.i4927 ], [ %shl.i4933, %while.body.i4936 ]
  %shr.i4928 = lshr i32 %706, 24
  %conv.i4929 = trunc i32 %shr.i4928 to i8
  %707 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4930 = sext i32 %705 to i64
  %arrayidx.i4931 = getelementptr inbounds i8, i8* %707, i64 %idxprom.i4930
  store i8 %conv.i4929, i8* %arrayidx.i4931, align 1, !tbaa !12
  %708 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4932 = add nsw i32 %708, 1
  store i32 %inc.i4932, i32* %numZ, align 4, !tbaa !94
  %709 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4933 = shl i32 %709, 8
  store i32 %shl.i4933, i32* %bsBuff.i5476, align 8, !tbaa !142
  %710 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4934 = add nsw i32 %710, -8
  store i32 %sub.i4934, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4935 = icmp sgt i32 %710, 15
  br i1 %cmp.i4935, label %while.body.i4936, label %bsW.exit4943

bsW.exit4943:                                     ; preds = %while.body.i4936, %bsW.exit4969
  %711 = phi i32 [ %or.i4967, %bsW.exit4969 ], [ %shl.i4933, %while.body.i4936 ]
  %.lcssa.i4937 = phi i32 [ %add.i4968, %bsW.exit4969 ], [ %sub.i4934, %while.body.i4936 ]
  %sub5.i4938 = sub nsw i32 32, %conv2107
  %sub6.i4939 = sub i32 %sub5.i4938, %.lcssa.i4937
  %shl7.i4940 = shl i32 %704, %sub6.i4939
  %or.i4941 = or i32 %shl7.i4940, %711
  store i32 %or.i4941, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4942 = add nsw i32 %.lcssa.i4937, %conv2107
  store i32 %add.i4942, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2110 = add nsw i32 %gs.25508, 12
  %idxprom2111 = sext i32 %add2110 to i64
  %arrayidx2112 = getelementptr inbounds i16, i16* %2, i64 %idxprom2111
  %712 = load i16, i16* %arrayidx2112, align 2, !tbaa !33
  %idxprom2113 = zext i16 %712 to i64
  %arrayidx2114 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2113
  %713 = load i8, i8* %arrayidx2114, align 1, !tbaa !12
  %conv2115 = zext i8 %713 to i32
  %arrayidx2117 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2113
  %714 = load i32, i32* %arrayidx2117, align 4, !tbaa !6
  %cmp20.i4893 = icmp sgt i32 %add.i4942, 7
  br i1 %cmp20.i4893, label %while.body.lr.ph.i4901, label %bsW.exit4917

while.body.lr.ph.i4901:                           ; preds = %bsW.exit4943
  %.pre22.i4900 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4910

while.body.i4910:                                 ; preds = %while.body.i4910, %while.body.lr.ph.i4901
  %715 = phi i32 [ %.pre22.i4900, %while.body.lr.ph.i4901 ], [ %inc.i4906, %while.body.i4910 ]
  %716 = phi i32 [ %or.i4941, %while.body.lr.ph.i4901 ], [ %shl.i4907, %while.body.i4910 ]
  %shr.i4902 = lshr i32 %716, 24
  %conv.i4903 = trunc i32 %shr.i4902 to i8
  %717 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4904 = sext i32 %715 to i64
  %arrayidx.i4905 = getelementptr inbounds i8, i8* %717, i64 %idxprom.i4904
  store i8 %conv.i4903, i8* %arrayidx.i4905, align 1, !tbaa !12
  %718 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4906 = add nsw i32 %718, 1
  store i32 %inc.i4906, i32* %numZ, align 4, !tbaa !94
  %719 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4907 = shl i32 %719, 8
  store i32 %shl.i4907, i32* %bsBuff.i5476, align 8, !tbaa !142
  %720 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4908 = add nsw i32 %720, -8
  store i32 %sub.i4908, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4909 = icmp sgt i32 %720, 15
  br i1 %cmp.i4909, label %while.body.i4910, label %bsW.exit4917

bsW.exit4917:                                     ; preds = %while.body.i4910, %bsW.exit4943
  %721 = phi i32 [ %or.i4941, %bsW.exit4943 ], [ %shl.i4907, %while.body.i4910 ]
  %.lcssa.i4911 = phi i32 [ %add.i4942, %bsW.exit4943 ], [ %sub.i4908, %while.body.i4910 ]
  %sub5.i4912 = sub nsw i32 32, %conv2115
  %sub6.i4913 = sub i32 %sub5.i4912, %.lcssa.i4911
  %shl7.i4914 = shl i32 %714, %sub6.i4913
  %or.i4915 = or i32 %shl7.i4914, %721
  store i32 %or.i4915, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4916 = add nsw i32 %.lcssa.i4911, %conv2115
  store i32 %add.i4916, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2118 = add nsw i32 %gs.25508, 13
  %idxprom2119 = sext i32 %add2118 to i64
  %arrayidx2120 = getelementptr inbounds i16, i16* %2, i64 %idxprom2119
  %722 = load i16, i16* %arrayidx2120, align 2, !tbaa !33
  %idxprom2121 = zext i16 %722 to i64
  %arrayidx2122 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2121
  %723 = load i8, i8* %arrayidx2122, align 1, !tbaa !12
  %conv2123 = zext i8 %723 to i32
  %arrayidx2125 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2121
  %724 = load i32, i32* %arrayidx2125, align 4, !tbaa !6
  %cmp20.i4867 = icmp sgt i32 %add.i4916, 7
  br i1 %cmp20.i4867, label %while.body.lr.ph.i4875, label %bsW.exit4891

while.body.lr.ph.i4875:                           ; preds = %bsW.exit4917
  %.pre22.i4874 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4884

while.body.i4884:                                 ; preds = %while.body.i4884, %while.body.lr.ph.i4875
  %725 = phi i32 [ %.pre22.i4874, %while.body.lr.ph.i4875 ], [ %inc.i4880, %while.body.i4884 ]
  %726 = phi i32 [ %or.i4915, %while.body.lr.ph.i4875 ], [ %shl.i4881, %while.body.i4884 ]
  %shr.i4876 = lshr i32 %726, 24
  %conv.i4877 = trunc i32 %shr.i4876 to i8
  %727 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4878 = sext i32 %725 to i64
  %arrayidx.i4879 = getelementptr inbounds i8, i8* %727, i64 %idxprom.i4878
  store i8 %conv.i4877, i8* %arrayidx.i4879, align 1, !tbaa !12
  %728 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4880 = add nsw i32 %728, 1
  store i32 %inc.i4880, i32* %numZ, align 4, !tbaa !94
  %729 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4881 = shl i32 %729, 8
  store i32 %shl.i4881, i32* %bsBuff.i5476, align 8, !tbaa !142
  %730 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4882 = add nsw i32 %730, -8
  store i32 %sub.i4882, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4883 = icmp sgt i32 %730, 15
  br i1 %cmp.i4883, label %while.body.i4884, label %bsW.exit4891

bsW.exit4891:                                     ; preds = %while.body.i4884, %bsW.exit4917
  %731 = phi i32 [ %or.i4915, %bsW.exit4917 ], [ %shl.i4881, %while.body.i4884 ]
  %.lcssa.i4885 = phi i32 [ %add.i4916, %bsW.exit4917 ], [ %sub.i4882, %while.body.i4884 ]
  %sub5.i4886 = sub nsw i32 32, %conv2123
  %sub6.i4887 = sub i32 %sub5.i4886, %.lcssa.i4885
  %shl7.i4888 = shl i32 %724, %sub6.i4887
  %or.i4889 = or i32 %shl7.i4888, %731
  store i32 %or.i4889, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4890 = add nsw i32 %.lcssa.i4885, %conv2123
  store i32 %add.i4890, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2126 = add nsw i32 %gs.25508, 14
  %idxprom2127 = sext i32 %add2126 to i64
  %arrayidx2128 = getelementptr inbounds i16, i16* %2, i64 %idxprom2127
  %732 = load i16, i16* %arrayidx2128, align 2, !tbaa !33
  %idxprom2129 = zext i16 %732 to i64
  %arrayidx2130 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2129
  %733 = load i8, i8* %arrayidx2130, align 1, !tbaa !12
  %conv2131 = zext i8 %733 to i32
  %arrayidx2133 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2129
  %734 = load i32, i32* %arrayidx2133, align 4, !tbaa !6
  %cmp20.i4841 = icmp sgt i32 %add.i4890, 7
  br i1 %cmp20.i4841, label %while.body.lr.ph.i4849, label %bsW.exit4865

while.body.lr.ph.i4849:                           ; preds = %bsW.exit4891
  %.pre22.i4848 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4858

while.body.i4858:                                 ; preds = %while.body.i4858, %while.body.lr.ph.i4849
  %735 = phi i32 [ %.pre22.i4848, %while.body.lr.ph.i4849 ], [ %inc.i4854, %while.body.i4858 ]
  %736 = phi i32 [ %or.i4889, %while.body.lr.ph.i4849 ], [ %shl.i4855, %while.body.i4858 ]
  %shr.i4850 = lshr i32 %736, 24
  %conv.i4851 = trunc i32 %shr.i4850 to i8
  %737 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4852 = sext i32 %735 to i64
  %arrayidx.i4853 = getelementptr inbounds i8, i8* %737, i64 %idxprom.i4852
  store i8 %conv.i4851, i8* %arrayidx.i4853, align 1, !tbaa !12
  %738 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4854 = add nsw i32 %738, 1
  store i32 %inc.i4854, i32* %numZ, align 4, !tbaa !94
  %739 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4855 = shl i32 %739, 8
  store i32 %shl.i4855, i32* %bsBuff.i5476, align 8, !tbaa !142
  %740 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4856 = add nsw i32 %740, -8
  store i32 %sub.i4856, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4857 = icmp sgt i32 %740, 15
  br i1 %cmp.i4857, label %while.body.i4858, label %bsW.exit4865

bsW.exit4865:                                     ; preds = %while.body.i4858, %bsW.exit4891
  %741 = phi i32 [ %or.i4889, %bsW.exit4891 ], [ %shl.i4855, %while.body.i4858 ]
  %.lcssa.i4859 = phi i32 [ %add.i4890, %bsW.exit4891 ], [ %sub.i4856, %while.body.i4858 ]
  %sub5.i4860 = sub nsw i32 32, %conv2131
  %sub6.i4861 = sub i32 %sub5.i4860, %.lcssa.i4859
  %shl7.i4862 = shl i32 %734, %sub6.i4861
  %or.i4863 = or i32 %shl7.i4862, %741
  store i32 %or.i4863, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4864 = add nsw i32 %.lcssa.i4859, %conv2131
  store i32 %add.i4864, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2134 = add nsw i32 %gs.25508, 15
  %idxprom2135 = sext i32 %add2134 to i64
  %arrayidx2136 = getelementptr inbounds i16, i16* %2, i64 %idxprom2135
  %742 = load i16, i16* %arrayidx2136, align 2, !tbaa !33
  %idxprom2137 = zext i16 %742 to i64
  %arrayidx2138 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2137
  %743 = load i8, i8* %arrayidx2138, align 1, !tbaa !12
  %conv2139 = zext i8 %743 to i32
  %arrayidx2141 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2137
  %744 = load i32, i32* %arrayidx2141, align 4, !tbaa !6
  %cmp20.i4815 = icmp sgt i32 %add.i4864, 7
  br i1 %cmp20.i4815, label %while.body.lr.ph.i4823, label %bsW.exit4839

while.body.lr.ph.i4823:                           ; preds = %bsW.exit4865
  %.pre22.i4822 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4832

while.body.i4832:                                 ; preds = %while.body.i4832, %while.body.lr.ph.i4823
  %745 = phi i32 [ %.pre22.i4822, %while.body.lr.ph.i4823 ], [ %inc.i4828, %while.body.i4832 ]
  %746 = phi i32 [ %or.i4863, %while.body.lr.ph.i4823 ], [ %shl.i4829, %while.body.i4832 ]
  %shr.i4824 = lshr i32 %746, 24
  %conv.i4825 = trunc i32 %shr.i4824 to i8
  %747 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4826 = sext i32 %745 to i64
  %arrayidx.i4827 = getelementptr inbounds i8, i8* %747, i64 %idxprom.i4826
  store i8 %conv.i4825, i8* %arrayidx.i4827, align 1, !tbaa !12
  %748 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4828 = add nsw i32 %748, 1
  store i32 %inc.i4828, i32* %numZ, align 4, !tbaa !94
  %749 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4829 = shl i32 %749, 8
  store i32 %shl.i4829, i32* %bsBuff.i5476, align 8, !tbaa !142
  %750 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4830 = add nsw i32 %750, -8
  store i32 %sub.i4830, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4831 = icmp sgt i32 %750, 15
  br i1 %cmp.i4831, label %while.body.i4832, label %bsW.exit4839

bsW.exit4839:                                     ; preds = %while.body.i4832, %bsW.exit4865
  %751 = phi i32 [ %or.i4863, %bsW.exit4865 ], [ %shl.i4829, %while.body.i4832 ]
  %.lcssa.i4833 = phi i32 [ %add.i4864, %bsW.exit4865 ], [ %sub.i4830, %while.body.i4832 ]
  %sub5.i4834 = sub nsw i32 32, %conv2139
  %sub6.i4835 = sub i32 %sub5.i4834, %.lcssa.i4833
  %shl7.i4836 = shl i32 %744, %sub6.i4835
  %or.i4837 = or i32 %shl7.i4836, %751
  store i32 %or.i4837, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4838 = add nsw i32 %.lcssa.i4833, %conv2139
  store i32 %add.i4838, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2142 = add nsw i32 %gs.25508, 16
  %idxprom2143 = sext i32 %add2142 to i64
  %arrayidx2144 = getelementptr inbounds i16, i16* %2, i64 %idxprom2143
  %752 = load i16, i16* %arrayidx2144, align 2, !tbaa !33
  %idxprom2145 = zext i16 %752 to i64
  %arrayidx2146 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2145
  %753 = load i8, i8* %arrayidx2146, align 1, !tbaa !12
  %conv2147 = zext i8 %753 to i32
  %arrayidx2149 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2145
  %754 = load i32, i32* %arrayidx2149, align 4, !tbaa !6
  %cmp20.i4789 = icmp sgt i32 %add.i4838, 7
  br i1 %cmp20.i4789, label %while.body.lr.ph.i4797, label %bsW.exit4813

while.body.lr.ph.i4797:                           ; preds = %bsW.exit4839
  %.pre22.i4796 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4806

while.body.i4806:                                 ; preds = %while.body.i4806, %while.body.lr.ph.i4797
  %755 = phi i32 [ %.pre22.i4796, %while.body.lr.ph.i4797 ], [ %inc.i4802, %while.body.i4806 ]
  %756 = phi i32 [ %or.i4837, %while.body.lr.ph.i4797 ], [ %shl.i4803, %while.body.i4806 ]
  %shr.i4798 = lshr i32 %756, 24
  %conv.i4799 = trunc i32 %shr.i4798 to i8
  %757 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4800 = sext i32 %755 to i64
  %arrayidx.i4801 = getelementptr inbounds i8, i8* %757, i64 %idxprom.i4800
  store i8 %conv.i4799, i8* %arrayidx.i4801, align 1, !tbaa !12
  %758 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4802 = add nsw i32 %758, 1
  store i32 %inc.i4802, i32* %numZ, align 4, !tbaa !94
  %759 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4803 = shl i32 %759, 8
  store i32 %shl.i4803, i32* %bsBuff.i5476, align 8, !tbaa !142
  %760 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4804 = add nsw i32 %760, -8
  store i32 %sub.i4804, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4805 = icmp sgt i32 %760, 15
  br i1 %cmp.i4805, label %while.body.i4806, label %bsW.exit4813

bsW.exit4813:                                     ; preds = %while.body.i4806, %bsW.exit4839
  %761 = phi i32 [ %or.i4837, %bsW.exit4839 ], [ %shl.i4803, %while.body.i4806 ]
  %.lcssa.i4807 = phi i32 [ %add.i4838, %bsW.exit4839 ], [ %sub.i4804, %while.body.i4806 ]
  %sub5.i4808 = sub nsw i32 32, %conv2147
  %sub6.i4809 = sub i32 %sub5.i4808, %.lcssa.i4807
  %shl7.i4810 = shl i32 %754, %sub6.i4809
  %or.i4811 = or i32 %shl7.i4810, %761
  store i32 %or.i4811, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4812 = add nsw i32 %.lcssa.i4807, %conv2147
  store i32 %add.i4812, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2150 = add nsw i32 %gs.25508, 17
  %idxprom2151 = sext i32 %add2150 to i64
  %arrayidx2152 = getelementptr inbounds i16, i16* %2, i64 %idxprom2151
  %762 = load i16, i16* %arrayidx2152, align 2, !tbaa !33
  %idxprom2153 = zext i16 %762 to i64
  %arrayidx2154 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2153
  %763 = load i8, i8* %arrayidx2154, align 1, !tbaa !12
  %conv2155 = zext i8 %763 to i32
  %arrayidx2157 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2153
  %764 = load i32, i32* %arrayidx2157, align 4, !tbaa !6
  %cmp20.i4763 = icmp sgt i32 %add.i4812, 7
  br i1 %cmp20.i4763, label %while.body.lr.ph.i4771, label %bsW.exit4787

while.body.lr.ph.i4771:                           ; preds = %bsW.exit4813
  %.pre22.i4770 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4780

while.body.i4780:                                 ; preds = %while.body.i4780, %while.body.lr.ph.i4771
  %765 = phi i32 [ %.pre22.i4770, %while.body.lr.ph.i4771 ], [ %inc.i4776, %while.body.i4780 ]
  %766 = phi i32 [ %or.i4811, %while.body.lr.ph.i4771 ], [ %shl.i4777, %while.body.i4780 ]
  %shr.i4772 = lshr i32 %766, 24
  %conv.i4773 = trunc i32 %shr.i4772 to i8
  %767 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4774 = sext i32 %765 to i64
  %arrayidx.i4775 = getelementptr inbounds i8, i8* %767, i64 %idxprom.i4774
  store i8 %conv.i4773, i8* %arrayidx.i4775, align 1, !tbaa !12
  %768 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4776 = add nsw i32 %768, 1
  store i32 %inc.i4776, i32* %numZ, align 4, !tbaa !94
  %769 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4777 = shl i32 %769, 8
  store i32 %shl.i4777, i32* %bsBuff.i5476, align 8, !tbaa !142
  %770 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4778 = add nsw i32 %770, -8
  store i32 %sub.i4778, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4779 = icmp sgt i32 %770, 15
  br i1 %cmp.i4779, label %while.body.i4780, label %bsW.exit4787

bsW.exit4787:                                     ; preds = %while.body.i4780, %bsW.exit4813
  %771 = phi i32 [ %or.i4811, %bsW.exit4813 ], [ %shl.i4777, %while.body.i4780 ]
  %.lcssa.i4781 = phi i32 [ %add.i4812, %bsW.exit4813 ], [ %sub.i4778, %while.body.i4780 ]
  %sub5.i4782 = sub nsw i32 32, %conv2155
  %sub6.i4783 = sub i32 %sub5.i4782, %.lcssa.i4781
  %shl7.i4784 = shl i32 %764, %sub6.i4783
  %or.i4785 = or i32 %shl7.i4784, %771
  store i32 %or.i4785, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4786 = add nsw i32 %.lcssa.i4781, %conv2155
  store i32 %add.i4786, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2158 = add nsw i32 %gs.25508, 18
  %idxprom2159 = sext i32 %add2158 to i64
  %arrayidx2160 = getelementptr inbounds i16, i16* %2, i64 %idxprom2159
  %772 = load i16, i16* %arrayidx2160, align 2, !tbaa !33
  %idxprom2161 = zext i16 %772 to i64
  %arrayidx2162 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2161
  %773 = load i8, i8* %arrayidx2162, align 1, !tbaa !12
  %conv2163 = zext i8 %773 to i32
  %arrayidx2165 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2161
  %774 = load i32, i32* %arrayidx2165, align 4, !tbaa !6
  %cmp20.i4737 = icmp sgt i32 %add.i4786, 7
  br i1 %cmp20.i4737, label %while.body.lr.ph.i4745, label %bsW.exit4761

while.body.lr.ph.i4745:                           ; preds = %bsW.exit4787
  %.pre22.i4744 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4754

while.body.i4754:                                 ; preds = %while.body.i4754, %while.body.lr.ph.i4745
  %775 = phi i32 [ %.pre22.i4744, %while.body.lr.ph.i4745 ], [ %inc.i4750, %while.body.i4754 ]
  %776 = phi i32 [ %or.i4785, %while.body.lr.ph.i4745 ], [ %shl.i4751, %while.body.i4754 ]
  %shr.i4746 = lshr i32 %776, 24
  %conv.i4747 = trunc i32 %shr.i4746 to i8
  %777 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4748 = sext i32 %775 to i64
  %arrayidx.i4749 = getelementptr inbounds i8, i8* %777, i64 %idxprom.i4748
  store i8 %conv.i4747, i8* %arrayidx.i4749, align 1, !tbaa !12
  %778 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4750 = add nsw i32 %778, 1
  store i32 %inc.i4750, i32* %numZ, align 4, !tbaa !94
  %779 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4751 = shl i32 %779, 8
  store i32 %shl.i4751, i32* %bsBuff.i5476, align 8, !tbaa !142
  %780 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4752 = add nsw i32 %780, -8
  store i32 %sub.i4752, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4753 = icmp sgt i32 %780, 15
  br i1 %cmp.i4753, label %while.body.i4754, label %bsW.exit4761

bsW.exit4761:                                     ; preds = %while.body.i4754, %bsW.exit4787
  %781 = phi i32 [ %or.i4785, %bsW.exit4787 ], [ %shl.i4751, %while.body.i4754 ]
  %.lcssa.i4755 = phi i32 [ %add.i4786, %bsW.exit4787 ], [ %sub.i4752, %while.body.i4754 ]
  %sub5.i4756 = sub nsw i32 32, %conv2163
  %sub6.i4757 = sub i32 %sub5.i4756, %.lcssa.i4755
  %shl7.i4758 = shl i32 %774, %sub6.i4757
  %or.i4759 = or i32 %shl7.i4758, %781
  store i32 %or.i4759, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4760 = add nsw i32 %.lcssa.i4755, %conv2163
  store i32 %add.i4760, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2166 = add nsw i32 %gs.25508, 19
  %idxprom2167 = sext i32 %add2166 to i64
  %arrayidx2168 = getelementptr inbounds i16, i16* %2, i64 %idxprom2167
  %782 = load i16, i16* %arrayidx2168, align 2, !tbaa !33
  %idxprom2169 = zext i16 %782 to i64
  %arrayidx2170 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2169
  %783 = load i8, i8* %arrayidx2170, align 1, !tbaa !12
  %conv2171 = zext i8 %783 to i32
  %arrayidx2173 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2169
  %784 = load i32, i32* %arrayidx2173, align 4, !tbaa !6
  %cmp20.i4711 = icmp sgt i32 %add.i4760, 7
  br i1 %cmp20.i4711, label %while.body.lr.ph.i4719, label %bsW.exit4735

while.body.lr.ph.i4719:                           ; preds = %bsW.exit4761
  %.pre22.i4718 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4728

while.body.i4728:                                 ; preds = %while.body.i4728, %while.body.lr.ph.i4719
  %785 = phi i32 [ %.pre22.i4718, %while.body.lr.ph.i4719 ], [ %inc.i4724, %while.body.i4728 ]
  %786 = phi i32 [ %or.i4759, %while.body.lr.ph.i4719 ], [ %shl.i4725, %while.body.i4728 ]
  %shr.i4720 = lshr i32 %786, 24
  %conv.i4721 = trunc i32 %shr.i4720 to i8
  %787 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4722 = sext i32 %785 to i64
  %arrayidx.i4723 = getelementptr inbounds i8, i8* %787, i64 %idxprom.i4722
  store i8 %conv.i4721, i8* %arrayidx.i4723, align 1, !tbaa !12
  %788 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4724 = add nsw i32 %788, 1
  store i32 %inc.i4724, i32* %numZ, align 4, !tbaa !94
  %789 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4725 = shl i32 %789, 8
  store i32 %shl.i4725, i32* %bsBuff.i5476, align 8, !tbaa !142
  %790 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4726 = add nsw i32 %790, -8
  store i32 %sub.i4726, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4727 = icmp sgt i32 %790, 15
  br i1 %cmp.i4727, label %while.body.i4728, label %bsW.exit4735

bsW.exit4735:                                     ; preds = %while.body.i4728, %bsW.exit4761
  %791 = phi i32 [ %or.i4759, %bsW.exit4761 ], [ %shl.i4725, %while.body.i4728 ]
  %.lcssa.i4729 = phi i32 [ %add.i4760, %bsW.exit4761 ], [ %sub.i4726, %while.body.i4728 ]
  %sub5.i4730 = sub nsw i32 32, %conv2171
  %sub6.i4731 = sub i32 %sub5.i4730, %.lcssa.i4729
  %shl7.i4732 = shl i32 %784, %sub6.i4731
  %or.i4733 = or i32 %shl7.i4732, %791
  store i32 %or.i4733, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4734 = add nsw i32 %.lcssa.i4729, %conv2171
  store i32 %add.i4734, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2174 = add nsw i32 %gs.25508, 20
  %idxprom2175 = sext i32 %add2174 to i64
  %arrayidx2176 = getelementptr inbounds i16, i16* %2, i64 %idxprom2175
  %792 = load i16, i16* %arrayidx2176, align 2, !tbaa !33
  %idxprom2177 = zext i16 %792 to i64
  %arrayidx2178 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2177
  %793 = load i8, i8* %arrayidx2178, align 1, !tbaa !12
  %conv2179 = zext i8 %793 to i32
  %arrayidx2181 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2177
  %794 = load i32, i32* %arrayidx2181, align 4, !tbaa !6
  %cmp20.i4685 = icmp sgt i32 %add.i4734, 7
  br i1 %cmp20.i4685, label %while.body.lr.ph.i4693, label %bsW.exit4709

while.body.lr.ph.i4693:                           ; preds = %bsW.exit4735
  %.pre22.i4692 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4702

while.body.i4702:                                 ; preds = %while.body.i4702, %while.body.lr.ph.i4693
  %795 = phi i32 [ %.pre22.i4692, %while.body.lr.ph.i4693 ], [ %inc.i4698, %while.body.i4702 ]
  %796 = phi i32 [ %or.i4733, %while.body.lr.ph.i4693 ], [ %shl.i4699, %while.body.i4702 ]
  %shr.i4694 = lshr i32 %796, 24
  %conv.i4695 = trunc i32 %shr.i4694 to i8
  %797 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4696 = sext i32 %795 to i64
  %arrayidx.i4697 = getelementptr inbounds i8, i8* %797, i64 %idxprom.i4696
  store i8 %conv.i4695, i8* %arrayidx.i4697, align 1, !tbaa !12
  %798 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4698 = add nsw i32 %798, 1
  store i32 %inc.i4698, i32* %numZ, align 4, !tbaa !94
  %799 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4699 = shl i32 %799, 8
  store i32 %shl.i4699, i32* %bsBuff.i5476, align 8, !tbaa !142
  %800 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4700 = add nsw i32 %800, -8
  store i32 %sub.i4700, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4701 = icmp sgt i32 %800, 15
  br i1 %cmp.i4701, label %while.body.i4702, label %bsW.exit4709

bsW.exit4709:                                     ; preds = %while.body.i4702, %bsW.exit4735
  %801 = phi i32 [ %or.i4733, %bsW.exit4735 ], [ %shl.i4699, %while.body.i4702 ]
  %.lcssa.i4703 = phi i32 [ %add.i4734, %bsW.exit4735 ], [ %sub.i4700, %while.body.i4702 ]
  %sub5.i4704 = sub nsw i32 32, %conv2179
  %sub6.i4705 = sub i32 %sub5.i4704, %.lcssa.i4703
  %shl7.i4706 = shl i32 %794, %sub6.i4705
  %or.i4707 = or i32 %shl7.i4706, %801
  store i32 %or.i4707, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4708 = add nsw i32 %.lcssa.i4703, %conv2179
  store i32 %add.i4708, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2182 = add nsw i32 %gs.25508, 21
  %idxprom2183 = sext i32 %add2182 to i64
  %arrayidx2184 = getelementptr inbounds i16, i16* %2, i64 %idxprom2183
  %802 = load i16, i16* %arrayidx2184, align 2, !tbaa !33
  %idxprom2185 = zext i16 %802 to i64
  %arrayidx2186 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2185
  %803 = load i8, i8* %arrayidx2186, align 1, !tbaa !12
  %conv2187 = zext i8 %803 to i32
  %arrayidx2189 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2185
  %804 = load i32, i32* %arrayidx2189, align 4, !tbaa !6
  %cmp20.i4659 = icmp sgt i32 %add.i4708, 7
  br i1 %cmp20.i4659, label %while.body.lr.ph.i4667, label %bsW.exit4683

while.body.lr.ph.i4667:                           ; preds = %bsW.exit4709
  %.pre22.i4666 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4676

while.body.i4676:                                 ; preds = %while.body.i4676, %while.body.lr.ph.i4667
  %805 = phi i32 [ %.pre22.i4666, %while.body.lr.ph.i4667 ], [ %inc.i4672, %while.body.i4676 ]
  %806 = phi i32 [ %or.i4707, %while.body.lr.ph.i4667 ], [ %shl.i4673, %while.body.i4676 ]
  %shr.i4668 = lshr i32 %806, 24
  %conv.i4669 = trunc i32 %shr.i4668 to i8
  %807 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4670 = sext i32 %805 to i64
  %arrayidx.i4671 = getelementptr inbounds i8, i8* %807, i64 %idxprom.i4670
  store i8 %conv.i4669, i8* %arrayidx.i4671, align 1, !tbaa !12
  %808 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4672 = add nsw i32 %808, 1
  store i32 %inc.i4672, i32* %numZ, align 4, !tbaa !94
  %809 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4673 = shl i32 %809, 8
  store i32 %shl.i4673, i32* %bsBuff.i5476, align 8, !tbaa !142
  %810 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4674 = add nsw i32 %810, -8
  store i32 %sub.i4674, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4675 = icmp sgt i32 %810, 15
  br i1 %cmp.i4675, label %while.body.i4676, label %bsW.exit4683

bsW.exit4683:                                     ; preds = %while.body.i4676, %bsW.exit4709
  %811 = phi i32 [ %or.i4707, %bsW.exit4709 ], [ %shl.i4673, %while.body.i4676 ]
  %.lcssa.i4677 = phi i32 [ %add.i4708, %bsW.exit4709 ], [ %sub.i4674, %while.body.i4676 ]
  %sub5.i4678 = sub nsw i32 32, %conv2187
  %sub6.i4679 = sub i32 %sub5.i4678, %.lcssa.i4677
  %shl7.i4680 = shl i32 %804, %sub6.i4679
  %or.i4681 = or i32 %shl7.i4680, %811
  store i32 %or.i4681, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4682 = add nsw i32 %.lcssa.i4677, %conv2187
  store i32 %add.i4682, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2190 = add nsw i32 %gs.25508, 22
  %idxprom2191 = sext i32 %add2190 to i64
  %arrayidx2192 = getelementptr inbounds i16, i16* %2, i64 %idxprom2191
  %812 = load i16, i16* %arrayidx2192, align 2, !tbaa !33
  %idxprom2193 = zext i16 %812 to i64
  %arrayidx2194 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2193
  %813 = load i8, i8* %arrayidx2194, align 1, !tbaa !12
  %conv2195 = zext i8 %813 to i32
  %arrayidx2197 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2193
  %814 = load i32, i32* %arrayidx2197, align 4, !tbaa !6
  %cmp20.i4633 = icmp sgt i32 %add.i4682, 7
  br i1 %cmp20.i4633, label %while.body.lr.ph.i4641, label %bsW.exit4657

while.body.lr.ph.i4641:                           ; preds = %bsW.exit4683
  %.pre22.i4640 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4650

while.body.i4650:                                 ; preds = %while.body.i4650, %while.body.lr.ph.i4641
  %815 = phi i32 [ %.pre22.i4640, %while.body.lr.ph.i4641 ], [ %inc.i4646, %while.body.i4650 ]
  %816 = phi i32 [ %or.i4681, %while.body.lr.ph.i4641 ], [ %shl.i4647, %while.body.i4650 ]
  %shr.i4642 = lshr i32 %816, 24
  %conv.i4643 = trunc i32 %shr.i4642 to i8
  %817 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4644 = sext i32 %815 to i64
  %arrayidx.i4645 = getelementptr inbounds i8, i8* %817, i64 %idxprom.i4644
  store i8 %conv.i4643, i8* %arrayidx.i4645, align 1, !tbaa !12
  %818 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4646 = add nsw i32 %818, 1
  store i32 %inc.i4646, i32* %numZ, align 4, !tbaa !94
  %819 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4647 = shl i32 %819, 8
  store i32 %shl.i4647, i32* %bsBuff.i5476, align 8, !tbaa !142
  %820 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4648 = add nsw i32 %820, -8
  store i32 %sub.i4648, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4649 = icmp sgt i32 %820, 15
  br i1 %cmp.i4649, label %while.body.i4650, label %bsW.exit4657

bsW.exit4657:                                     ; preds = %while.body.i4650, %bsW.exit4683
  %821 = phi i32 [ %or.i4681, %bsW.exit4683 ], [ %shl.i4647, %while.body.i4650 ]
  %.lcssa.i4651 = phi i32 [ %add.i4682, %bsW.exit4683 ], [ %sub.i4648, %while.body.i4650 ]
  %sub5.i4652 = sub nsw i32 32, %conv2195
  %sub6.i4653 = sub i32 %sub5.i4652, %.lcssa.i4651
  %shl7.i4654 = shl i32 %814, %sub6.i4653
  %or.i4655 = or i32 %shl7.i4654, %821
  store i32 %or.i4655, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4656 = add nsw i32 %.lcssa.i4651, %conv2195
  store i32 %add.i4656, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2198 = add nsw i32 %gs.25508, 23
  %idxprom2199 = sext i32 %add2198 to i64
  %arrayidx2200 = getelementptr inbounds i16, i16* %2, i64 %idxprom2199
  %822 = load i16, i16* %arrayidx2200, align 2, !tbaa !33
  %idxprom2201 = zext i16 %822 to i64
  %arrayidx2202 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2201
  %823 = load i8, i8* %arrayidx2202, align 1, !tbaa !12
  %conv2203 = zext i8 %823 to i32
  %arrayidx2205 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2201
  %824 = load i32, i32* %arrayidx2205, align 4, !tbaa !6
  %cmp20.i4607 = icmp sgt i32 %add.i4656, 7
  br i1 %cmp20.i4607, label %while.body.lr.ph.i4615, label %bsW.exit4631

while.body.lr.ph.i4615:                           ; preds = %bsW.exit4657
  %.pre22.i4614 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4624

while.body.i4624:                                 ; preds = %while.body.i4624, %while.body.lr.ph.i4615
  %825 = phi i32 [ %.pre22.i4614, %while.body.lr.ph.i4615 ], [ %inc.i4620, %while.body.i4624 ]
  %826 = phi i32 [ %or.i4655, %while.body.lr.ph.i4615 ], [ %shl.i4621, %while.body.i4624 ]
  %shr.i4616 = lshr i32 %826, 24
  %conv.i4617 = trunc i32 %shr.i4616 to i8
  %827 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4618 = sext i32 %825 to i64
  %arrayidx.i4619 = getelementptr inbounds i8, i8* %827, i64 %idxprom.i4618
  store i8 %conv.i4617, i8* %arrayidx.i4619, align 1, !tbaa !12
  %828 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4620 = add nsw i32 %828, 1
  store i32 %inc.i4620, i32* %numZ, align 4, !tbaa !94
  %829 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4621 = shl i32 %829, 8
  store i32 %shl.i4621, i32* %bsBuff.i5476, align 8, !tbaa !142
  %830 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4622 = add nsw i32 %830, -8
  store i32 %sub.i4622, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4623 = icmp sgt i32 %830, 15
  br i1 %cmp.i4623, label %while.body.i4624, label %bsW.exit4631

bsW.exit4631:                                     ; preds = %while.body.i4624, %bsW.exit4657
  %831 = phi i32 [ %or.i4655, %bsW.exit4657 ], [ %shl.i4621, %while.body.i4624 ]
  %.lcssa.i4625 = phi i32 [ %add.i4656, %bsW.exit4657 ], [ %sub.i4622, %while.body.i4624 ]
  %sub5.i4626 = sub nsw i32 32, %conv2203
  %sub6.i4627 = sub i32 %sub5.i4626, %.lcssa.i4625
  %shl7.i4628 = shl i32 %824, %sub6.i4627
  %or.i4629 = or i32 %shl7.i4628, %831
  store i32 %or.i4629, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4630 = add nsw i32 %.lcssa.i4625, %conv2203
  store i32 %add.i4630, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2206 = add nsw i32 %gs.25508, 24
  %idxprom2207 = sext i32 %add2206 to i64
  %arrayidx2208 = getelementptr inbounds i16, i16* %2, i64 %idxprom2207
  %832 = load i16, i16* %arrayidx2208, align 2, !tbaa !33
  %idxprom2209 = zext i16 %832 to i64
  %arrayidx2210 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2209
  %833 = load i8, i8* %arrayidx2210, align 1, !tbaa !12
  %conv2211 = zext i8 %833 to i32
  %arrayidx2213 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2209
  %834 = load i32, i32* %arrayidx2213, align 4, !tbaa !6
  %cmp20.i4581 = icmp sgt i32 %add.i4630, 7
  br i1 %cmp20.i4581, label %while.body.lr.ph.i4589, label %bsW.exit4605

while.body.lr.ph.i4589:                           ; preds = %bsW.exit4631
  %.pre22.i4588 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4598

while.body.i4598:                                 ; preds = %while.body.i4598, %while.body.lr.ph.i4589
  %835 = phi i32 [ %.pre22.i4588, %while.body.lr.ph.i4589 ], [ %inc.i4594, %while.body.i4598 ]
  %836 = phi i32 [ %or.i4629, %while.body.lr.ph.i4589 ], [ %shl.i4595, %while.body.i4598 ]
  %shr.i4590 = lshr i32 %836, 24
  %conv.i4591 = trunc i32 %shr.i4590 to i8
  %837 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4592 = sext i32 %835 to i64
  %arrayidx.i4593 = getelementptr inbounds i8, i8* %837, i64 %idxprom.i4592
  store i8 %conv.i4591, i8* %arrayidx.i4593, align 1, !tbaa !12
  %838 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4594 = add nsw i32 %838, 1
  store i32 %inc.i4594, i32* %numZ, align 4, !tbaa !94
  %839 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4595 = shl i32 %839, 8
  store i32 %shl.i4595, i32* %bsBuff.i5476, align 8, !tbaa !142
  %840 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4596 = add nsw i32 %840, -8
  store i32 %sub.i4596, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4597 = icmp sgt i32 %840, 15
  br i1 %cmp.i4597, label %while.body.i4598, label %bsW.exit4605

bsW.exit4605:                                     ; preds = %while.body.i4598, %bsW.exit4631
  %841 = phi i32 [ %or.i4629, %bsW.exit4631 ], [ %shl.i4595, %while.body.i4598 ]
  %.lcssa.i4599 = phi i32 [ %add.i4630, %bsW.exit4631 ], [ %sub.i4596, %while.body.i4598 ]
  %sub5.i4600 = sub nsw i32 32, %conv2211
  %sub6.i4601 = sub i32 %sub5.i4600, %.lcssa.i4599
  %shl7.i4602 = shl i32 %834, %sub6.i4601
  %or.i4603 = or i32 %shl7.i4602, %841
  store i32 %or.i4603, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4604 = add nsw i32 %.lcssa.i4599, %conv2211
  store i32 %add.i4604, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2214 = add nsw i32 %gs.25508, 25
  %idxprom2215 = sext i32 %add2214 to i64
  %arrayidx2216 = getelementptr inbounds i16, i16* %2, i64 %idxprom2215
  %842 = load i16, i16* %arrayidx2216, align 2, !tbaa !33
  %idxprom2217 = zext i16 %842 to i64
  %arrayidx2218 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2217
  %843 = load i8, i8* %arrayidx2218, align 1, !tbaa !12
  %conv2219 = zext i8 %843 to i32
  %arrayidx2221 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2217
  %844 = load i32, i32* %arrayidx2221, align 4, !tbaa !6
  %cmp20.i4555 = icmp sgt i32 %add.i4604, 7
  br i1 %cmp20.i4555, label %while.body.lr.ph.i4563, label %bsW.exit4579

while.body.lr.ph.i4563:                           ; preds = %bsW.exit4605
  %.pre22.i4562 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4572

while.body.i4572:                                 ; preds = %while.body.i4572, %while.body.lr.ph.i4563
  %845 = phi i32 [ %.pre22.i4562, %while.body.lr.ph.i4563 ], [ %inc.i4568, %while.body.i4572 ]
  %846 = phi i32 [ %or.i4603, %while.body.lr.ph.i4563 ], [ %shl.i4569, %while.body.i4572 ]
  %shr.i4564 = lshr i32 %846, 24
  %conv.i4565 = trunc i32 %shr.i4564 to i8
  %847 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4566 = sext i32 %845 to i64
  %arrayidx.i4567 = getelementptr inbounds i8, i8* %847, i64 %idxprom.i4566
  store i8 %conv.i4565, i8* %arrayidx.i4567, align 1, !tbaa !12
  %848 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4568 = add nsw i32 %848, 1
  store i32 %inc.i4568, i32* %numZ, align 4, !tbaa !94
  %849 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4569 = shl i32 %849, 8
  store i32 %shl.i4569, i32* %bsBuff.i5476, align 8, !tbaa !142
  %850 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4570 = add nsw i32 %850, -8
  store i32 %sub.i4570, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4571 = icmp sgt i32 %850, 15
  br i1 %cmp.i4571, label %while.body.i4572, label %bsW.exit4579

bsW.exit4579:                                     ; preds = %while.body.i4572, %bsW.exit4605
  %851 = phi i32 [ %or.i4603, %bsW.exit4605 ], [ %shl.i4569, %while.body.i4572 ]
  %.lcssa.i4573 = phi i32 [ %add.i4604, %bsW.exit4605 ], [ %sub.i4570, %while.body.i4572 ]
  %sub5.i4574 = sub nsw i32 32, %conv2219
  %sub6.i4575 = sub i32 %sub5.i4574, %.lcssa.i4573
  %shl7.i4576 = shl i32 %844, %sub6.i4575
  %or.i4577 = or i32 %shl7.i4576, %851
  store i32 %or.i4577, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4578 = add nsw i32 %.lcssa.i4573, %conv2219
  store i32 %add.i4578, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2222 = add nsw i32 %gs.25508, 26
  %idxprom2223 = sext i32 %add2222 to i64
  %arrayidx2224 = getelementptr inbounds i16, i16* %2, i64 %idxprom2223
  %852 = load i16, i16* %arrayidx2224, align 2, !tbaa !33
  %idxprom2225 = zext i16 %852 to i64
  %arrayidx2226 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2225
  %853 = load i8, i8* %arrayidx2226, align 1, !tbaa !12
  %conv2227 = zext i8 %853 to i32
  %arrayidx2229 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2225
  %854 = load i32, i32* %arrayidx2229, align 4, !tbaa !6
  %cmp20.i4529 = icmp sgt i32 %add.i4578, 7
  br i1 %cmp20.i4529, label %while.body.lr.ph.i4537, label %bsW.exit4553

while.body.lr.ph.i4537:                           ; preds = %bsW.exit4579
  %.pre22.i4536 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4546

while.body.i4546:                                 ; preds = %while.body.i4546, %while.body.lr.ph.i4537
  %855 = phi i32 [ %.pre22.i4536, %while.body.lr.ph.i4537 ], [ %inc.i4542, %while.body.i4546 ]
  %856 = phi i32 [ %or.i4577, %while.body.lr.ph.i4537 ], [ %shl.i4543, %while.body.i4546 ]
  %shr.i4538 = lshr i32 %856, 24
  %conv.i4539 = trunc i32 %shr.i4538 to i8
  %857 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4540 = sext i32 %855 to i64
  %arrayidx.i4541 = getelementptr inbounds i8, i8* %857, i64 %idxprom.i4540
  store i8 %conv.i4539, i8* %arrayidx.i4541, align 1, !tbaa !12
  %858 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4542 = add nsw i32 %858, 1
  store i32 %inc.i4542, i32* %numZ, align 4, !tbaa !94
  %859 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4543 = shl i32 %859, 8
  store i32 %shl.i4543, i32* %bsBuff.i5476, align 8, !tbaa !142
  %860 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4544 = add nsw i32 %860, -8
  store i32 %sub.i4544, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4545 = icmp sgt i32 %860, 15
  br i1 %cmp.i4545, label %while.body.i4546, label %bsW.exit4553

bsW.exit4553:                                     ; preds = %while.body.i4546, %bsW.exit4579
  %861 = phi i32 [ %or.i4577, %bsW.exit4579 ], [ %shl.i4543, %while.body.i4546 ]
  %.lcssa.i4547 = phi i32 [ %add.i4578, %bsW.exit4579 ], [ %sub.i4544, %while.body.i4546 ]
  %sub5.i4548 = sub nsw i32 32, %conv2227
  %sub6.i4549 = sub i32 %sub5.i4548, %.lcssa.i4547
  %shl7.i4550 = shl i32 %854, %sub6.i4549
  %or.i4551 = or i32 %shl7.i4550, %861
  store i32 %or.i4551, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4552 = add nsw i32 %.lcssa.i4547, %conv2227
  store i32 %add.i4552, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2230 = add nsw i32 %gs.25508, 27
  %idxprom2231 = sext i32 %add2230 to i64
  %arrayidx2232 = getelementptr inbounds i16, i16* %2, i64 %idxprom2231
  %862 = load i16, i16* %arrayidx2232, align 2, !tbaa !33
  %idxprom2233 = zext i16 %862 to i64
  %arrayidx2234 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2233
  %863 = load i8, i8* %arrayidx2234, align 1, !tbaa !12
  %conv2235 = zext i8 %863 to i32
  %arrayidx2237 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2233
  %864 = load i32, i32* %arrayidx2237, align 4, !tbaa !6
  %cmp20.i4503 = icmp sgt i32 %add.i4552, 7
  br i1 %cmp20.i4503, label %while.body.lr.ph.i4511, label %bsW.exit4527

while.body.lr.ph.i4511:                           ; preds = %bsW.exit4553
  %.pre22.i4510 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4520

while.body.i4520:                                 ; preds = %while.body.i4520, %while.body.lr.ph.i4511
  %865 = phi i32 [ %.pre22.i4510, %while.body.lr.ph.i4511 ], [ %inc.i4516, %while.body.i4520 ]
  %866 = phi i32 [ %or.i4551, %while.body.lr.ph.i4511 ], [ %shl.i4517, %while.body.i4520 ]
  %shr.i4512 = lshr i32 %866, 24
  %conv.i4513 = trunc i32 %shr.i4512 to i8
  %867 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4514 = sext i32 %865 to i64
  %arrayidx.i4515 = getelementptr inbounds i8, i8* %867, i64 %idxprom.i4514
  store i8 %conv.i4513, i8* %arrayidx.i4515, align 1, !tbaa !12
  %868 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4516 = add nsw i32 %868, 1
  store i32 %inc.i4516, i32* %numZ, align 4, !tbaa !94
  %869 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4517 = shl i32 %869, 8
  store i32 %shl.i4517, i32* %bsBuff.i5476, align 8, !tbaa !142
  %870 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4518 = add nsw i32 %870, -8
  store i32 %sub.i4518, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4519 = icmp sgt i32 %870, 15
  br i1 %cmp.i4519, label %while.body.i4520, label %bsW.exit4527

bsW.exit4527:                                     ; preds = %while.body.i4520, %bsW.exit4553
  %871 = phi i32 [ %or.i4551, %bsW.exit4553 ], [ %shl.i4517, %while.body.i4520 ]
  %.lcssa.i4521 = phi i32 [ %add.i4552, %bsW.exit4553 ], [ %sub.i4518, %while.body.i4520 ]
  %sub5.i4522 = sub nsw i32 32, %conv2235
  %sub6.i4523 = sub i32 %sub5.i4522, %.lcssa.i4521
  %shl7.i4524 = shl i32 %864, %sub6.i4523
  %or.i4525 = or i32 %shl7.i4524, %871
  store i32 %or.i4525, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4526 = add nsw i32 %.lcssa.i4521, %conv2235
  store i32 %add.i4526, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2238 = add nsw i32 %gs.25508, 28
  %idxprom2239 = sext i32 %add2238 to i64
  %arrayidx2240 = getelementptr inbounds i16, i16* %2, i64 %idxprom2239
  %872 = load i16, i16* %arrayidx2240, align 2, !tbaa !33
  %idxprom2241 = zext i16 %872 to i64
  %arrayidx2242 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2241
  %873 = load i8, i8* %arrayidx2242, align 1, !tbaa !12
  %conv2243 = zext i8 %873 to i32
  %arrayidx2245 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2241
  %874 = load i32, i32* %arrayidx2245, align 4, !tbaa !6
  %cmp20.i4477 = icmp sgt i32 %add.i4526, 7
  br i1 %cmp20.i4477, label %while.body.lr.ph.i4485, label %bsW.exit4501

while.body.lr.ph.i4485:                           ; preds = %bsW.exit4527
  %.pre22.i4484 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4494

while.body.i4494:                                 ; preds = %while.body.i4494, %while.body.lr.ph.i4485
  %875 = phi i32 [ %.pre22.i4484, %while.body.lr.ph.i4485 ], [ %inc.i4490, %while.body.i4494 ]
  %876 = phi i32 [ %or.i4525, %while.body.lr.ph.i4485 ], [ %shl.i4491, %while.body.i4494 ]
  %shr.i4486 = lshr i32 %876, 24
  %conv.i4487 = trunc i32 %shr.i4486 to i8
  %877 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4488 = sext i32 %875 to i64
  %arrayidx.i4489 = getelementptr inbounds i8, i8* %877, i64 %idxprom.i4488
  store i8 %conv.i4487, i8* %arrayidx.i4489, align 1, !tbaa !12
  %878 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4490 = add nsw i32 %878, 1
  store i32 %inc.i4490, i32* %numZ, align 4, !tbaa !94
  %879 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4491 = shl i32 %879, 8
  store i32 %shl.i4491, i32* %bsBuff.i5476, align 8, !tbaa !142
  %880 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4492 = add nsw i32 %880, -8
  store i32 %sub.i4492, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4493 = icmp sgt i32 %880, 15
  br i1 %cmp.i4493, label %while.body.i4494, label %bsW.exit4501

bsW.exit4501:                                     ; preds = %while.body.i4494, %bsW.exit4527
  %881 = phi i32 [ %or.i4525, %bsW.exit4527 ], [ %shl.i4491, %while.body.i4494 ]
  %.lcssa.i4495 = phi i32 [ %add.i4526, %bsW.exit4527 ], [ %sub.i4492, %while.body.i4494 ]
  %sub5.i4496 = sub nsw i32 32, %conv2243
  %sub6.i4497 = sub i32 %sub5.i4496, %.lcssa.i4495
  %shl7.i4498 = shl i32 %874, %sub6.i4497
  %or.i4499 = or i32 %shl7.i4498, %881
  store i32 %or.i4499, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4500 = add nsw i32 %.lcssa.i4495, %conv2243
  store i32 %add.i4500, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2246 = add nsw i32 %gs.25508, 29
  %idxprom2247 = sext i32 %add2246 to i64
  %arrayidx2248 = getelementptr inbounds i16, i16* %2, i64 %idxprom2247
  %882 = load i16, i16* %arrayidx2248, align 2, !tbaa !33
  %idxprom2249 = zext i16 %882 to i64
  %arrayidx2250 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2249
  %883 = load i8, i8* %arrayidx2250, align 1, !tbaa !12
  %conv2251 = zext i8 %883 to i32
  %arrayidx2253 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2249
  %884 = load i32, i32* %arrayidx2253, align 4, !tbaa !6
  %cmp20.i4451 = icmp sgt i32 %add.i4500, 7
  br i1 %cmp20.i4451, label %while.body.lr.ph.i4459, label %bsW.exit4475

while.body.lr.ph.i4459:                           ; preds = %bsW.exit4501
  %.pre22.i4458 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4468

while.body.i4468:                                 ; preds = %while.body.i4468, %while.body.lr.ph.i4459
  %885 = phi i32 [ %.pre22.i4458, %while.body.lr.ph.i4459 ], [ %inc.i4464, %while.body.i4468 ]
  %886 = phi i32 [ %or.i4499, %while.body.lr.ph.i4459 ], [ %shl.i4465, %while.body.i4468 ]
  %shr.i4460 = lshr i32 %886, 24
  %conv.i4461 = trunc i32 %shr.i4460 to i8
  %887 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4462 = sext i32 %885 to i64
  %arrayidx.i4463 = getelementptr inbounds i8, i8* %887, i64 %idxprom.i4462
  store i8 %conv.i4461, i8* %arrayidx.i4463, align 1, !tbaa !12
  %888 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4464 = add nsw i32 %888, 1
  store i32 %inc.i4464, i32* %numZ, align 4, !tbaa !94
  %889 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4465 = shl i32 %889, 8
  store i32 %shl.i4465, i32* %bsBuff.i5476, align 8, !tbaa !142
  %890 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4466 = add nsw i32 %890, -8
  store i32 %sub.i4466, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4467 = icmp sgt i32 %890, 15
  br i1 %cmp.i4467, label %while.body.i4468, label %bsW.exit4475

bsW.exit4475:                                     ; preds = %while.body.i4468, %bsW.exit4501
  %891 = phi i32 [ %or.i4499, %bsW.exit4501 ], [ %shl.i4465, %while.body.i4468 ]
  %.lcssa.i4469 = phi i32 [ %add.i4500, %bsW.exit4501 ], [ %sub.i4466, %while.body.i4468 ]
  %sub5.i4470 = sub nsw i32 32, %conv2251
  %sub6.i4471 = sub i32 %sub5.i4470, %.lcssa.i4469
  %shl7.i4472 = shl i32 %884, %sub6.i4471
  %or.i4473 = or i32 %shl7.i4472, %891
  store i32 %or.i4473, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4474 = add nsw i32 %.lcssa.i4469, %conv2251
  store i32 %add.i4474, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2254 = add nsw i32 %gs.25508, 30
  %idxprom2255 = sext i32 %add2254 to i64
  %arrayidx2256 = getelementptr inbounds i16, i16* %2, i64 %idxprom2255
  %892 = load i16, i16* %arrayidx2256, align 2, !tbaa !33
  %idxprom2257 = zext i16 %892 to i64
  %arrayidx2258 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2257
  %893 = load i8, i8* %arrayidx2258, align 1, !tbaa !12
  %conv2259 = zext i8 %893 to i32
  %arrayidx2261 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2257
  %894 = load i32, i32* %arrayidx2261, align 4, !tbaa !6
  %cmp20.i4425 = icmp sgt i32 %add.i4474, 7
  br i1 %cmp20.i4425, label %while.body.lr.ph.i4433, label %bsW.exit4449

while.body.lr.ph.i4433:                           ; preds = %bsW.exit4475
  %.pre22.i4432 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4442

while.body.i4442:                                 ; preds = %while.body.i4442, %while.body.lr.ph.i4433
  %895 = phi i32 [ %.pre22.i4432, %while.body.lr.ph.i4433 ], [ %inc.i4438, %while.body.i4442 ]
  %896 = phi i32 [ %or.i4473, %while.body.lr.ph.i4433 ], [ %shl.i4439, %while.body.i4442 ]
  %shr.i4434 = lshr i32 %896, 24
  %conv.i4435 = trunc i32 %shr.i4434 to i8
  %897 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4436 = sext i32 %895 to i64
  %arrayidx.i4437 = getelementptr inbounds i8, i8* %897, i64 %idxprom.i4436
  store i8 %conv.i4435, i8* %arrayidx.i4437, align 1, !tbaa !12
  %898 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4438 = add nsw i32 %898, 1
  store i32 %inc.i4438, i32* %numZ, align 4, !tbaa !94
  %899 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4439 = shl i32 %899, 8
  store i32 %shl.i4439, i32* %bsBuff.i5476, align 8, !tbaa !142
  %900 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4440 = add nsw i32 %900, -8
  store i32 %sub.i4440, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4441 = icmp sgt i32 %900, 15
  br i1 %cmp.i4441, label %while.body.i4442, label %bsW.exit4449

bsW.exit4449:                                     ; preds = %while.body.i4442, %bsW.exit4475
  %901 = phi i32 [ %or.i4473, %bsW.exit4475 ], [ %shl.i4439, %while.body.i4442 ]
  %.lcssa.i4443 = phi i32 [ %add.i4474, %bsW.exit4475 ], [ %sub.i4440, %while.body.i4442 ]
  %sub5.i4444 = sub nsw i32 32, %conv2259
  %sub6.i4445 = sub i32 %sub5.i4444, %.lcssa.i4443
  %shl7.i4446 = shl i32 %894, %sub6.i4445
  %or.i4447 = or i32 %shl7.i4446, %901
  store i32 %or.i4447, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4448 = add nsw i32 %.lcssa.i4443, %conv2259
  store i32 %add.i4448, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2262 = add nsw i32 %gs.25508, 31
  %idxprom2263 = sext i32 %add2262 to i64
  %arrayidx2264 = getelementptr inbounds i16, i16* %2, i64 %idxprom2263
  %902 = load i16, i16* %arrayidx2264, align 2, !tbaa !33
  %idxprom2265 = zext i16 %902 to i64
  %arrayidx2266 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2265
  %903 = load i8, i8* %arrayidx2266, align 1, !tbaa !12
  %conv2267 = zext i8 %903 to i32
  %arrayidx2269 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2265
  %904 = load i32, i32* %arrayidx2269, align 4, !tbaa !6
  %cmp20.i4399 = icmp sgt i32 %add.i4448, 7
  br i1 %cmp20.i4399, label %while.body.lr.ph.i4407, label %bsW.exit4423

while.body.lr.ph.i4407:                           ; preds = %bsW.exit4449
  %.pre22.i4406 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4416

while.body.i4416:                                 ; preds = %while.body.i4416, %while.body.lr.ph.i4407
  %905 = phi i32 [ %.pre22.i4406, %while.body.lr.ph.i4407 ], [ %inc.i4412, %while.body.i4416 ]
  %906 = phi i32 [ %or.i4447, %while.body.lr.ph.i4407 ], [ %shl.i4413, %while.body.i4416 ]
  %shr.i4408 = lshr i32 %906, 24
  %conv.i4409 = trunc i32 %shr.i4408 to i8
  %907 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4410 = sext i32 %905 to i64
  %arrayidx.i4411 = getelementptr inbounds i8, i8* %907, i64 %idxprom.i4410
  store i8 %conv.i4409, i8* %arrayidx.i4411, align 1, !tbaa !12
  %908 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4412 = add nsw i32 %908, 1
  store i32 %inc.i4412, i32* %numZ, align 4, !tbaa !94
  %909 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4413 = shl i32 %909, 8
  store i32 %shl.i4413, i32* %bsBuff.i5476, align 8, !tbaa !142
  %910 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4414 = add nsw i32 %910, -8
  store i32 %sub.i4414, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4415 = icmp sgt i32 %910, 15
  br i1 %cmp.i4415, label %while.body.i4416, label %bsW.exit4423

bsW.exit4423:                                     ; preds = %while.body.i4416, %bsW.exit4449
  %911 = phi i32 [ %or.i4447, %bsW.exit4449 ], [ %shl.i4413, %while.body.i4416 ]
  %.lcssa.i4417 = phi i32 [ %add.i4448, %bsW.exit4449 ], [ %sub.i4414, %while.body.i4416 ]
  %sub5.i4418 = sub nsw i32 32, %conv2267
  %sub6.i4419 = sub i32 %sub5.i4418, %.lcssa.i4417
  %shl7.i4420 = shl i32 %904, %sub6.i4419
  %or.i4421 = or i32 %shl7.i4420, %911
  store i32 %or.i4421, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4422 = add nsw i32 %.lcssa.i4417, %conv2267
  store i32 %add.i4422, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2270 = add nsw i32 %gs.25508, 32
  %idxprom2271 = sext i32 %add2270 to i64
  %arrayidx2272 = getelementptr inbounds i16, i16* %2, i64 %idxprom2271
  %912 = load i16, i16* %arrayidx2272, align 2, !tbaa !33
  %idxprom2273 = zext i16 %912 to i64
  %arrayidx2274 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2273
  %913 = load i8, i8* %arrayidx2274, align 1, !tbaa !12
  %conv2275 = zext i8 %913 to i32
  %arrayidx2277 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2273
  %914 = load i32, i32* %arrayidx2277, align 4, !tbaa !6
  %cmp20.i4373 = icmp sgt i32 %add.i4422, 7
  br i1 %cmp20.i4373, label %while.body.lr.ph.i4381, label %bsW.exit4397

while.body.lr.ph.i4381:                           ; preds = %bsW.exit4423
  %.pre22.i4380 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4390

while.body.i4390:                                 ; preds = %while.body.i4390, %while.body.lr.ph.i4381
  %915 = phi i32 [ %.pre22.i4380, %while.body.lr.ph.i4381 ], [ %inc.i4386, %while.body.i4390 ]
  %916 = phi i32 [ %or.i4421, %while.body.lr.ph.i4381 ], [ %shl.i4387, %while.body.i4390 ]
  %shr.i4382 = lshr i32 %916, 24
  %conv.i4383 = trunc i32 %shr.i4382 to i8
  %917 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4384 = sext i32 %915 to i64
  %arrayidx.i4385 = getelementptr inbounds i8, i8* %917, i64 %idxprom.i4384
  store i8 %conv.i4383, i8* %arrayidx.i4385, align 1, !tbaa !12
  %918 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4386 = add nsw i32 %918, 1
  store i32 %inc.i4386, i32* %numZ, align 4, !tbaa !94
  %919 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4387 = shl i32 %919, 8
  store i32 %shl.i4387, i32* %bsBuff.i5476, align 8, !tbaa !142
  %920 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4388 = add nsw i32 %920, -8
  store i32 %sub.i4388, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4389 = icmp sgt i32 %920, 15
  br i1 %cmp.i4389, label %while.body.i4390, label %bsW.exit4397

bsW.exit4397:                                     ; preds = %while.body.i4390, %bsW.exit4423
  %921 = phi i32 [ %or.i4421, %bsW.exit4423 ], [ %shl.i4387, %while.body.i4390 ]
  %.lcssa.i4391 = phi i32 [ %add.i4422, %bsW.exit4423 ], [ %sub.i4388, %while.body.i4390 ]
  %sub5.i4392 = sub nsw i32 32, %conv2275
  %sub6.i4393 = sub i32 %sub5.i4392, %.lcssa.i4391
  %shl7.i4394 = shl i32 %914, %sub6.i4393
  %or.i4395 = or i32 %shl7.i4394, %921
  store i32 %or.i4395, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4396 = add nsw i32 %.lcssa.i4391, %conv2275
  store i32 %add.i4396, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2278 = add nsw i32 %gs.25508, 33
  %idxprom2279 = sext i32 %add2278 to i64
  %arrayidx2280 = getelementptr inbounds i16, i16* %2, i64 %idxprom2279
  %922 = load i16, i16* %arrayidx2280, align 2, !tbaa !33
  %idxprom2281 = zext i16 %922 to i64
  %arrayidx2282 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2281
  %923 = load i8, i8* %arrayidx2282, align 1, !tbaa !12
  %conv2283 = zext i8 %923 to i32
  %arrayidx2285 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2281
  %924 = load i32, i32* %arrayidx2285, align 4, !tbaa !6
  %cmp20.i4347 = icmp sgt i32 %add.i4396, 7
  br i1 %cmp20.i4347, label %while.body.lr.ph.i4355, label %bsW.exit4371

while.body.lr.ph.i4355:                           ; preds = %bsW.exit4397
  %.pre22.i4354 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4364

while.body.i4364:                                 ; preds = %while.body.i4364, %while.body.lr.ph.i4355
  %925 = phi i32 [ %.pre22.i4354, %while.body.lr.ph.i4355 ], [ %inc.i4360, %while.body.i4364 ]
  %926 = phi i32 [ %or.i4395, %while.body.lr.ph.i4355 ], [ %shl.i4361, %while.body.i4364 ]
  %shr.i4356 = lshr i32 %926, 24
  %conv.i4357 = trunc i32 %shr.i4356 to i8
  %927 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4358 = sext i32 %925 to i64
  %arrayidx.i4359 = getelementptr inbounds i8, i8* %927, i64 %idxprom.i4358
  store i8 %conv.i4357, i8* %arrayidx.i4359, align 1, !tbaa !12
  %928 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4360 = add nsw i32 %928, 1
  store i32 %inc.i4360, i32* %numZ, align 4, !tbaa !94
  %929 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4361 = shl i32 %929, 8
  store i32 %shl.i4361, i32* %bsBuff.i5476, align 8, !tbaa !142
  %930 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4362 = add nsw i32 %930, -8
  store i32 %sub.i4362, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4363 = icmp sgt i32 %930, 15
  br i1 %cmp.i4363, label %while.body.i4364, label %bsW.exit4371

bsW.exit4371:                                     ; preds = %while.body.i4364, %bsW.exit4397
  %931 = phi i32 [ %or.i4395, %bsW.exit4397 ], [ %shl.i4361, %while.body.i4364 ]
  %.lcssa.i4365 = phi i32 [ %add.i4396, %bsW.exit4397 ], [ %sub.i4362, %while.body.i4364 ]
  %sub5.i4366 = sub nsw i32 32, %conv2283
  %sub6.i4367 = sub i32 %sub5.i4366, %.lcssa.i4365
  %shl7.i4368 = shl i32 %924, %sub6.i4367
  %or.i4369 = or i32 %shl7.i4368, %931
  store i32 %or.i4369, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4370 = add nsw i32 %.lcssa.i4365, %conv2283
  store i32 %add.i4370, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2286 = add nsw i32 %gs.25508, 34
  %idxprom2287 = sext i32 %add2286 to i64
  %arrayidx2288 = getelementptr inbounds i16, i16* %2, i64 %idxprom2287
  %932 = load i16, i16* %arrayidx2288, align 2, !tbaa !33
  %idxprom2289 = zext i16 %932 to i64
  %arrayidx2290 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2289
  %933 = load i8, i8* %arrayidx2290, align 1, !tbaa !12
  %conv2291 = zext i8 %933 to i32
  %arrayidx2293 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2289
  %934 = load i32, i32* %arrayidx2293, align 4, !tbaa !6
  %cmp20.i4321 = icmp sgt i32 %add.i4370, 7
  br i1 %cmp20.i4321, label %while.body.lr.ph.i4329, label %bsW.exit4345

while.body.lr.ph.i4329:                           ; preds = %bsW.exit4371
  %.pre22.i4328 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4338

while.body.i4338:                                 ; preds = %while.body.i4338, %while.body.lr.ph.i4329
  %935 = phi i32 [ %.pre22.i4328, %while.body.lr.ph.i4329 ], [ %inc.i4334, %while.body.i4338 ]
  %936 = phi i32 [ %or.i4369, %while.body.lr.ph.i4329 ], [ %shl.i4335, %while.body.i4338 ]
  %shr.i4330 = lshr i32 %936, 24
  %conv.i4331 = trunc i32 %shr.i4330 to i8
  %937 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4332 = sext i32 %935 to i64
  %arrayidx.i4333 = getelementptr inbounds i8, i8* %937, i64 %idxprom.i4332
  store i8 %conv.i4331, i8* %arrayidx.i4333, align 1, !tbaa !12
  %938 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4334 = add nsw i32 %938, 1
  store i32 %inc.i4334, i32* %numZ, align 4, !tbaa !94
  %939 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4335 = shl i32 %939, 8
  store i32 %shl.i4335, i32* %bsBuff.i5476, align 8, !tbaa !142
  %940 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4336 = add nsw i32 %940, -8
  store i32 %sub.i4336, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4337 = icmp sgt i32 %940, 15
  br i1 %cmp.i4337, label %while.body.i4338, label %bsW.exit4345

bsW.exit4345:                                     ; preds = %while.body.i4338, %bsW.exit4371
  %941 = phi i32 [ %or.i4369, %bsW.exit4371 ], [ %shl.i4335, %while.body.i4338 ]
  %.lcssa.i4339 = phi i32 [ %add.i4370, %bsW.exit4371 ], [ %sub.i4336, %while.body.i4338 ]
  %sub5.i4340 = sub nsw i32 32, %conv2291
  %sub6.i4341 = sub i32 %sub5.i4340, %.lcssa.i4339
  %shl7.i4342 = shl i32 %934, %sub6.i4341
  %or.i4343 = or i32 %shl7.i4342, %941
  store i32 %or.i4343, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4344 = add nsw i32 %.lcssa.i4339, %conv2291
  store i32 %add.i4344, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2294 = add nsw i32 %gs.25508, 35
  %idxprom2295 = sext i32 %add2294 to i64
  %arrayidx2296 = getelementptr inbounds i16, i16* %2, i64 %idxprom2295
  %942 = load i16, i16* %arrayidx2296, align 2, !tbaa !33
  %idxprom2297 = zext i16 %942 to i64
  %arrayidx2298 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2297
  %943 = load i8, i8* %arrayidx2298, align 1, !tbaa !12
  %conv2299 = zext i8 %943 to i32
  %arrayidx2301 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2297
  %944 = load i32, i32* %arrayidx2301, align 4, !tbaa !6
  %cmp20.i4295 = icmp sgt i32 %add.i4344, 7
  br i1 %cmp20.i4295, label %while.body.lr.ph.i4303, label %bsW.exit4319

while.body.lr.ph.i4303:                           ; preds = %bsW.exit4345
  %.pre22.i4302 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4312

while.body.i4312:                                 ; preds = %while.body.i4312, %while.body.lr.ph.i4303
  %945 = phi i32 [ %.pre22.i4302, %while.body.lr.ph.i4303 ], [ %inc.i4308, %while.body.i4312 ]
  %946 = phi i32 [ %or.i4343, %while.body.lr.ph.i4303 ], [ %shl.i4309, %while.body.i4312 ]
  %shr.i4304 = lshr i32 %946, 24
  %conv.i4305 = trunc i32 %shr.i4304 to i8
  %947 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4306 = sext i32 %945 to i64
  %arrayidx.i4307 = getelementptr inbounds i8, i8* %947, i64 %idxprom.i4306
  store i8 %conv.i4305, i8* %arrayidx.i4307, align 1, !tbaa !12
  %948 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4308 = add nsw i32 %948, 1
  store i32 %inc.i4308, i32* %numZ, align 4, !tbaa !94
  %949 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4309 = shl i32 %949, 8
  store i32 %shl.i4309, i32* %bsBuff.i5476, align 8, !tbaa !142
  %950 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4310 = add nsw i32 %950, -8
  store i32 %sub.i4310, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4311 = icmp sgt i32 %950, 15
  br i1 %cmp.i4311, label %while.body.i4312, label %bsW.exit4319

bsW.exit4319:                                     ; preds = %while.body.i4312, %bsW.exit4345
  %951 = phi i32 [ %or.i4343, %bsW.exit4345 ], [ %shl.i4309, %while.body.i4312 ]
  %.lcssa.i4313 = phi i32 [ %add.i4344, %bsW.exit4345 ], [ %sub.i4310, %while.body.i4312 ]
  %sub5.i4314 = sub nsw i32 32, %conv2299
  %sub6.i4315 = sub i32 %sub5.i4314, %.lcssa.i4313
  %shl7.i4316 = shl i32 %944, %sub6.i4315
  %or.i4317 = or i32 %shl7.i4316, %951
  store i32 %or.i4317, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4318 = add nsw i32 %.lcssa.i4313, %conv2299
  store i32 %add.i4318, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2302 = add nsw i32 %gs.25508, 36
  %idxprom2303 = sext i32 %add2302 to i64
  %arrayidx2304 = getelementptr inbounds i16, i16* %2, i64 %idxprom2303
  %952 = load i16, i16* %arrayidx2304, align 2, !tbaa !33
  %idxprom2305 = zext i16 %952 to i64
  %arrayidx2306 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2305
  %953 = load i8, i8* %arrayidx2306, align 1, !tbaa !12
  %conv2307 = zext i8 %953 to i32
  %arrayidx2309 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2305
  %954 = load i32, i32* %arrayidx2309, align 4, !tbaa !6
  %cmp20.i4269 = icmp sgt i32 %add.i4318, 7
  br i1 %cmp20.i4269, label %while.body.lr.ph.i4277, label %bsW.exit4293

while.body.lr.ph.i4277:                           ; preds = %bsW.exit4319
  %.pre22.i4276 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4286

while.body.i4286:                                 ; preds = %while.body.i4286, %while.body.lr.ph.i4277
  %955 = phi i32 [ %.pre22.i4276, %while.body.lr.ph.i4277 ], [ %inc.i4282, %while.body.i4286 ]
  %956 = phi i32 [ %or.i4317, %while.body.lr.ph.i4277 ], [ %shl.i4283, %while.body.i4286 ]
  %shr.i4278 = lshr i32 %956, 24
  %conv.i4279 = trunc i32 %shr.i4278 to i8
  %957 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4280 = sext i32 %955 to i64
  %arrayidx.i4281 = getelementptr inbounds i8, i8* %957, i64 %idxprom.i4280
  store i8 %conv.i4279, i8* %arrayidx.i4281, align 1, !tbaa !12
  %958 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4282 = add nsw i32 %958, 1
  store i32 %inc.i4282, i32* %numZ, align 4, !tbaa !94
  %959 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4283 = shl i32 %959, 8
  store i32 %shl.i4283, i32* %bsBuff.i5476, align 8, !tbaa !142
  %960 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4284 = add nsw i32 %960, -8
  store i32 %sub.i4284, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4285 = icmp sgt i32 %960, 15
  br i1 %cmp.i4285, label %while.body.i4286, label %bsW.exit4293

bsW.exit4293:                                     ; preds = %while.body.i4286, %bsW.exit4319
  %961 = phi i32 [ %or.i4317, %bsW.exit4319 ], [ %shl.i4283, %while.body.i4286 ]
  %.lcssa.i4287 = phi i32 [ %add.i4318, %bsW.exit4319 ], [ %sub.i4284, %while.body.i4286 ]
  %sub5.i4288 = sub nsw i32 32, %conv2307
  %sub6.i4289 = sub i32 %sub5.i4288, %.lcssa.i4287
  %shl7.i4290 = shl i32 %954, %sub6.i4289
  %or.i4291 = or i32 %shl7.i4290, %961
  store i32 %or.i4291, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4292 = add nsw i32 %.lcssa.i4287, %conv2307
  store i32 %add.i4292, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2310 = add nsw i32 %gs.25508, 37
  %idxprom2311 = sext i32 %add2310 to i64
  %arrayidx2312 = getelementptr inbounds i16, i16* %2, i64 %idxprom2311
  %962 = load i16, i16* %arrayidx2312, align 2, !tbaa !33
  %idxprom2313 = zext i16 %962 to i64
  %arrayidx2314 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2313
  %963 = load i8, i8* %arrayidx2314, align 1, !tbaa !12
  %conv2315 = zext i8 %963 to i32
  %arrayidx2317 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2313
  %964 = load i32, i32* %arrayidx2317, align 4, !tbaa !6
  %cmp20.i4243 = icmp sgt i32 %add.i4292, 7
  br i1 %cmp20.i4243, label %while.body.lr.ph.i4251, label %bsW.exit4267

while.body.lr.ph.i4251:                           ; preds = %bsW.exit4293
  %.pre22.i4250 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4260

while.body.i4260:                                 ; preds = %while.body.i4260, %while.body.lr.ph.i4251
  %965 = phi i32 [ %.pre22.i4250, %while.body.lr.ph.i4251 ], [ %inc.i4256, %while.body.i4260 ]
  %966 = phi i32 [ %or.i4291, %while.body.lr.ph.i4251 ], [ %shl.i4257, %while.body.i4260 ]
  %shr.i4252 = lshr i32 %966, 24
  %conv.i4253 = trunc i32 %shr.i4252 to i8
  %967 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4254 = sext i32 %965 to i64
  %arrayidx.i4255 = getelementptr inbounds i8, i8* %967, i64 %idxprom.i4254
  store i8 %conv.i4253, i8* %arrayidx.i4255, align 1, !tbaa !12
  %968 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4256 = add nsw i32 %968, 1
  store i32 %inc.i4256, i32* %numZ, align 4, !tbaa !94
  %969 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4257 = shl i32 %969, 8
  store i32 %shl.i4257, i32* %bsBuff.i5476, align 8, !tbaa !142
  %970 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4258 = add nsw i32 %970, -8
  store i32 %sub.i4258, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4259 = icmp sgt i32 %970, 15
  br i1 %cmp.i4259, label %while.body.i4260, label %bsW.exit4267

bsW.exit4267:                                     ; preds = %while.body.i4260, %bsW.exit4293
  %971 = phi i32 [ %or.i4291, %bsW.exit4293 ], [ %shl.i4257, %while.body.i4260 ]
  %.lcssa.i4261 = phi i32 [ %add.i4292, %bsW.exit4293 ], [ %sub.i4258, %while.body.i4260 ]
  %sub5.i4262 = sub nsw i32 32, %conv2315
  %sub6.i4263 = sub i32 %sub5.i4262, %.lcssa.i4261
  %shl7.i4264 = shl i32 %964, %sub6.i4263
  %or.i4265 = or i32 %shl7.i4264, %971
  store i32 %or.i4265, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4266 = add nsw i32 %.lcssa.i4261, %conv2315
  store i32 %add.i4266, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2318 = add nsw i32 %gs.25508, 38
  %idxprom2319 = sext i32 %add2318 to i64
  %arrayidx2320 = getelementptr inbounds i16, i16* %2, i64 %idxprom2319
  %972 = load i16, i16* %arrayidx2320, align 2, !tbaa !33
  %idxprom2321 = zext i16 %972 to i64
  %arrayidx2322 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2321
  %973 = load i8, i8* %arrayidx2322, align 1, !tbaa !12
  %conv2323 = zext i8 %973 to i32
  %arrayidx2325 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2321
  %974 = load i32, i32* %arrayidx2325, align 4, !tbaa !6
  %cmp20.i4217 = icmp sgt i32 %add.i4266, 7
  br i1 %cmp20.i4217, label %while.body.lr.ph.i4225, label %bsW.exit4241

while.body.lr.ph.i4225:                           ; preds = %bsW.exit4267
  %.pre22.i4224 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4234

while.body.i4234:                                 ; preds = %while.body.i4234, %while.body.lr.ph.i4225
  %975 = phi i32 [ %.pre22.i4224, %while.body.lr.ph.i4225 ], [ %inc.i4230, %while.body.i4234 ]
  %976 = phi i32 [ %or.i4265, %while.body.lr.ph.i4225 ], [ %shl.i4231, %while.body.i4234 ]
  %shr.i4226 = lshr i32 %976, 24
  %conv.i4227 = trunc i32 %shr.i4226 to i8
  %977 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4228 = sext i32 %975 to i64
  %arrayidx.i4229 = getelementptr inbounds i8, i8* %977, i64 %idxprom.i4228
  store i8 %conv.i4227, i8* %arrayidx.i4229, align 1, !tbaa !12
  %978 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4230 = add nsw i32 %978, 1
  store i32 %inc.i4230, i32* %numZ, align 4, !tbaa !94
  %979 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4231 = shl i32 %979, 8
  store i32 %shl.i4231, i32* %bsBuff.i5476, align 8, !tbaa !142
  %980 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4232 = add nsw i32 %980, -8
  store i32 %sub.i4232, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4233 = icmp sgt i32 %980, 15
  br i1 %cmp.i4233, label %while.body.i4234, label %bsW.exit4241

bsW.exit4241:                                     ; preds = %while.body.i4234, %bsW.exit4267
  %981 = phi i32 [ %or.i4265, %bsW.exit4267 ], [ %shl.i4231, %while.body.i4234 ]
  %.lcssa.i4235 = phi i32 [ %add.i4266, %bsW.exit4267 ], [ %sub.i4232, %while.body.i4234 ]
  %sub5.i4236 = sub nsw i32 32, %conv2323
  %sub6.i4237 = sub i32 %sub5.i4236, %.lcssa.i4235
  %shl7.i4238 = shl i32 %974, %sub6.i4237
  %or.i4239 = or i32 %shl7.i4238, %981
  store i32 %or.i4239, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4240 = add nsw i32 %.lcssa.i4235, %conv2323
  store i32 %add.i4240, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2326 = add nsw i32 %gs.25508, 39
  %idxprom2327 = sext i32 %add2326 to i64
  %arrayidx2328 = getelementptr inbounds i16, i16* %2, i64 %idxprom2327
  %982 = load i16, i16* %arrayidx2328, align 2, !tbaa !33
  %idxprom2329 = zext i16 %982 to i64
  %arrayidx2330 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2329
  %983 = load i8, i8* %arrayidx2330, align 1, !tbaa !12
  %conv2331 = zext i8 %983 to i32
  %arrayidx2333 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2329
  %984 = load i32, i32* %arrayidx2333, align 4, !tbaa !6
  %cmp20.i4191 = icmp sgt i32 %add.i4240, 7
  br i1 %cmp20.i4191, label %while.body.lr.ph.i4199, label %bsW.exit4215

while.body.lr.ph.i4199:                           ; preds = %bsW.exit4241
  %.pre22.i4198 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4208

while.body.i4208:                                 ; preds = %while.body.i4208, %while.body.lr.ph.i4199
  %985 = phi i32 [ %.pre22.i4198, %while.body.lr.ph.i4199 ], [ %inc.i4204, %while.body.i4208 ]
  %986 = phi i32 [ %or.i4239, %while.body.lr.ph.i4199 ], [ %shl.i4205, %while.body.i4208 ]
  %shr.i4200 = lshr i32 %986, 24
  %conv.i4201 = trunc i32 %shr.i4200 to i8
  %987 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4202 = sext i32 %985 to i64
  %arrayidx.i4203 = getelementptr inbounds i8, i8* %987, i64 %idxprom.i4202
  store i8 %conv.i4201, i8* %arrayidx.i4203, align 1, !tbaa !12
  %988 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4204 = add nsw i32 %988, 1
  store i32 %inc.i4204, i32* %numZ, align 4, !tbaa !94
  %989 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4205 = shl i32 %989, 8
  store i32 %shl.i4205, i32* %bsBuff.i5476, align 8, !tbaa !142
  %990 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4206 = add nsw i32 %990, -8
  store i32 %sub.i4206, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4207 = icmp sgt i32 %990, 15
  br i1 %cmp.i4207, label %while.body.i4208, label %bsW.exit4215

bsW.exit4215:                                     ; preds = %while.body.i4208, %bsW.exit4241
  %991 = phi i32 [ %or.i4239, %bsW.exit4241 ], [ %shl.i4205, %while.body.i4208 ]
  %.lcssa.i4209 = phi i32 [ %add.i4240, %bsW.exit4241 ], [ %sub.i4206, %while.body.i4208 ]
  %sub5.i4210 = sub nsw i32 32, %conv2331
  %sub6.i4211 = sub i32 %sub5.i4210, %.lcssa.i4209
  %shl7.i4212 = shl i32 %984, %sub6.i4211
  %or.i4213 = or i32 %shl7.i4212, %991
  store i32 %or.i4213, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4214 = add nsw i32 %.lcssa.i4209, %conv2331
  store i32 %add.i4214, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2334 = add nsw i32 %gs.25508, 40
  %idxprom2335 = sext i32 %add2334 to i64
  %arrayidx2336 = getelementptr inbounds i16, i16* %2, i64 %idxprom2335
  %992 = load i16, i16* %arrayidx2336, align 2, !tbaa !33
  %idxprom2337 = zext i16 %992 to i64
  %arrayidx2338 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2337
  %993 = load i8, i8* %arrayidx2338, align 1, !tbaa !12
  %conv2339 = zext i8 %993 to i32
  %arrayidx2341 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2337
  %994 = load i32, i32* %arrayidx2341, align 4, !tbaa !6
  %cmp20.i4165 = icmp sgt i32 %add.i4214, 7
  br i1 %cmp20.i4165, label %while.body.lr.ph.i4173, label %bsW.exit4189

while.body.lr.ph.i4173:                           ; preds = %bsW.exit4215
  %.pre22.i4172 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4182

while.body.i4182:                                 ; preds = %while.body.i4182, %while.body.lr.ph.i4173
  %995 = phi i32 [ %.pre22.i4172, %while.body.lr.ph.i4173 ], [ %inc.i4178, %while.body.i4182 ]
  %996 = phi i32 [ %or.i4213, %while.body.lr.ph.i4173 ], [ %shl.i4179, %while.body.i4182 ]
  %shr.i4174 = lshr i32 %996, 24
  %conv.i4175 = trunc i32 %shr.i4174 to i8
  %997 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4176 = sext i32 %995 to i64
  %arrayidx.i4177 = getelementptr inbounds i8, i8* %997, i64 %idxprom.i4176
  store i8 %conv.i4175, i8* %arrayidx.i4177, align 1, !tbaa !12
  %998 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4178 = add nsw i32 %998, 1
  store i32 %inc.i4178, i32* %numZ, align 4, !tbaa !94
  %999 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4179 = shl i32 %999, 8
  store i32 %shl.i4179, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1000 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4180 = add nsw i32 %1000, -8
  store i32 %sub.i4180, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4181 = icmp sgt i32 %1000, 15
  br i1 %cmp.i4181, label %while.body.i4182, label %bsW.exit4189

bsW.exit4189:                                     ; preds = %while.body.i4182, %bsW.exit4215
  %1001 = phi i32 [ %or.i4213, %bsW.exit4215 ], [ %shl.i4179, %while.body.i4182 ]
  %.lcssa.i4183 = phi i32 [ %add.i4214, %bsW.exit4215 ], [ %sub.i4180, %while.body.i4182 ]
  %sub5.i4184 = sub nsw i32 32, %conv2339
  %sub6.i4185 = sub i32 %sub5.i4184, %.lcssa.i4183
  %shl7.i4186 = shl i32 %994, %sub6.i4185
  %or.i4187 = or i32 %shl7.i4186, %1001
  store i32 %or.i4187, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4188 = add nsw i32 %.lcssa.i4183, %conv2339
  store i32 %add.i4188, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2342 = add nsw i32 %gs.25508, 41
  %idxprom2343 = sext i32 %add2342 to i64
  %arrayidx2344 = getelementptr inbounds i16, i16* %2, i64 %idxprom2343
  %1002 = load i16, i16* %arrayidx2344, align 2, !tbaa !33
  %idxprom2345 = zext i16 %1002 to i64
  %arrayidx2346 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2345
  %1003 = load i8, i8* %arrayidx2346, align 1, !tbaa !12
  %conv2347 = zext i8 %1003 to i32
  %arrayidx2349 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2345
  %1004 = load i32, i32* %arrayidx2349, align 4, !tbaa !6
  %cmp20.i4139 = icmp sgt i32 %add.i4188, 7
  br i1 %cmp20.i4139, label %while.body.lr.ph.i4147, label %bsW.exit4163

while.body.lr.ph.i4147:                           ; preds = %bsW.exit4189
  %.pre22.i4146 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4156

while.body.i4156:                                 ; preds = %while.body.i4156, %while.body.lr.ph.i4147
  %1005 = phi i32 [ %.pre22.i4146, %while.body.lr.ph.i4147 ], [ %inc.i4152, %while.body.i4156 ]
  %1006 = phi i32 [ %or.i4187, %while.body.lr.ph.i4147 ], [ %shl.i4153, %while.body.i4156 ]
  %shr.i4148 = lshr i32 %1006, 24
  %conv.i4149 = trunc i32 %shr.i4148 to i8
  %1007 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4150 = sext i32 %1005 to i64
  %arrayidx.i4151 = getelementptr inbounds i8, i8* %1007, i64 %idxprom.i4150
  store i8 %conv.i4149, i8* %arrayidx.i4151, align 1, !tbaa !12
  %1008 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4152 = add nsw i32 %1008, 1
  store i32 %inc.i4152, i32* %numZ, align 4, !tbaa !94
  %1009 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4153 = shl i32 %1009, 8
  store i32 %shl.i4153, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1010 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4154 = add nsw i32 %1010, -8
  store i32 %sub.i4154, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4155 = icmp sgt i32 %1010, 15
  br i1 %cmp.i4155, label %while.body.i4156, label %bsW.exit4163

bsW.exit4163:                                     ; preds = %while.body.i4156, %bsW.exit4189
  %1011 = phi i32 [ %or.i4187, %bsW.exit4189 ], [ %shl.i4153, %while.body.i4156 ]
  %.lcssa.i4157 = phi i32 [ %add.i4188, %bsW.exit4189 ], [ %sub.i4154, %while.body.i4156 ]
  %sub5.i4158 = sub nsw i32 32, %conv2347
  %sub6.i4159 = sub i32 %sub5.i4158, %.lcssa.i4157
  %shl7.i4160 = shl i32 %1004, %sub6.i4159
  %or.i4161 = or i32 %shl7.i4160, %1011
  store i32 %or.i4161, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4162 = add nsw i32 %.lcssa.i4157, %conv2347
  store i32 %add.i4162, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2350 = add nsw i32 %gs.25508, 42
  %idxprom2351 = sext i32 %add2350 to i64
  %arrayidx2352 = getelementptr inbounds i16, i16* %2, i64 %idxprom2351
  %1012 = load i16, i16* %arrayidx2352, align 2, !tbaa !33
  %idxprom2353 = zext i16 %1012 to i64
  %arrayidx2354 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2353
  %1013 = load i8, i8* %arrayidx2354, align 1, !tbaa !12
  %conv2355 = zext i8 %1013 to i32
  %arrayidx2357 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2353
  %1014 = load i32, i32* %arrayidx2357, align 4, !tbaa !6
  %cmp20.i4113 = icmp sgt i32 %add.i4162, 7
  br i1 %cmp20.i4113, label %while.body.lr.ph.i4121, label %bsW.exit4137

while.body.lr.ph.i4121:                           ; preds = %bsW.exit4163
  %.pre22.i4120 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4130

while.body.i4130:                                 ; preds = %while.body.i4130, %while.body.lr.ph.i4121
  %1015 = phi i32 [ %.pre22.i4120, %while.body.lr.ph.i4121 ], [ %inc.i4126, %while.body.i4130 ]
  %1016 = phi i32 [ %or.i4161, %while.body.lr.ph.i4121 ], [ %shl.i4127, %while.body.i4130 ]
  %shr.i4122 = lshr i32 %1016, 24
  %conv.i4123 = trunc i32 %shr.i4122 to i8
  %1017 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4124 = sext i32 %1015 to i64
  %arrayidx.i4125 = getelementptr inbounds i8, i8* %1017, i64 %idxprom.i4124
  store i8 %conv.i4123, i8* %arrayidx.i4125, align 1, !tbaa !12
  %1018 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4126 = add nsw i32 %1018, 1
  store i32 %inc.i4126, i32* %numZ, align 4, !tbaa !94
  %1019 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4127 = shl i32 %1019, 8
  store i32 %shl.i4127, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1020 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4128 = add nsw i32 %1020, -8
  store i32 %sub.i4128, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4129 = icmp sgt i32 %1020, 15
  br i1 %cmp.i4129, label %while.body.i4130, label %bsW.exit4137

bsW.exit4137:                                     ; preds = %while.body.i4130, %bsW.exit4163
  %1021 = phi i32 [ %or.i4161, %bsW.exit4163 ], [ %shl.i4127, %while.body.i4130 ]
  %.lcssa.i4131 = phi i32 [ %add.i4162, %bsW.exit4163 ], [ %sub.i4128, %while.body.i4130 ]
  %sub5.i4132 = sub nsw i32 32, %conv2355
  %sub6.i4133 = sub i32 %sub5.i4132, %.lcssa.i4131
  %shl7.i4134 = shl i32 %1014, %sub6.i4133
  %or.i4135 = or i32 %shl7.i4134, %1021
  store i32 %or.i4135, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4136 = add nsw i32 %.lcssa.i4131, %conv2355
  store i32 %add.i4136, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2358 = add nsw i32 %gs.25508, 43
  %idxprom2359 = sext i32 %add2358 to i64
  %arrayidx2360 = getelementptr inbounds i16, i16* %2, i64 %idxprom2359
  %1022 = load i16, i16* %arrayidx2360, align 2, !tbaa !33
  %idxprom2361 = zext i16 %1022 to i64
  %arrayidx2362 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2361
  %1023 = load i8, i8* %arrayidx2362, align 1, !tbaa !12
  %conv2363 = zext i8 %1023 to i32
  %arrayidx2365 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2361
  %1024 = load i32, i32* %arrayidx2365, align 4, !tbaa !6
  %cmp20.i4087 = icmp sgt i32 %add.i4136, 7
  br i1 %cmp20.i4087, label %while.body.lr.ph.i4095, label %bsW.exit4111

while.body.lr.ph.i4095:                           ; preds = %bsW.exit4137
  %.pre22.i4094 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4104

while.body.i4104:                                 ; preds = %while.body.i4104, %while.body.lr.ph.i4095
  %1025 = phi i32 [ %.pre22.i4094, %while.body.lr.ph.i4095 ], [ %inc.i4100, %while.body.i4104 ]
  %1026 = phi i32 [ %or.i4135, %while.body.lr.ph.i4095 ], [ %shl.i4101, %while.body.i4104 ]
  %shr.i4096 = lshr i32 %1026, 24
  %conv.i4097 = trunc i32 %shr.i4096 to i8
  %1027 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4098 = sext i32 %1025 to i64
  %arrayidx.i4099 = getelementptr inbounds i8, i8* %1027, i64 %idxprom.i4098
  store i8 %conv.i4097, i8* %arrayidx.i4099, align 1, !tbaa !12
  %1028 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4100 = add nsw i32 %1028, 1
  store i32 %inc.i4100, i32* %numZ, align 4, !tbaa !94
  %1029 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4101 = shl i32 %1029, 8
  store i32 %shl.i4101, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1030 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4102 = add nsw i32 %1030, -8
  store i32 %sub.i4102, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4103 = icmp sgt i32 %1030, 15
  br i1 %cmp.i4103, label %while.body.i4104, label %bsW.exit4111

bsW.exit4111:                                     ; preds = %while.body.i4104, %bsW.exit4137
  %1031 = phi i32 [ %or.i4135, %bsW.exit4137 ], [ %shl.i4101, %while.body.i4104 ]
  %.lcssa.i4105 = phi i32 [ %add.i4136, %bsW.exit4137 ], [ %sub.i4102, %while.body.i4104 ]
  %sub5.i4106 = sub nsw i32 32, %conv2363
  %sub6.i4107 = sub i32 %sub5.i4106, %.lcssa.i4105
  %shl7.i4108 = shl i32 %1024, %sub6.i4107
  %or.i4109 = or i32 %shl7.i4108, %1031
  store i32 %or.i4109, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4110 = add nsw i32 %.lcssa.i4105, %conv2363
  store i32 %add.i4110, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2366 = add nsw i32 %gs.25508, 44
  %idxprom2367 = sext i32 %add2366 to i64
  %arrayidx2368 = getelementptr inbounds i16, i16* %2, i64 %idxprom2367
  %1032 = load i16, i16* %arrayidx2368, align 2, !tbaa !33
  %idxprom2369 = zext i16 %1032 to i64
  %arrayidx2370 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2369
  %1033 = load i8, i8* %arrayidx2370, align 1, !tbaa !12
  %conv2371 = zext i8 %1033 to i32
  %arrayidx2373 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2369
  %1034 = load i32, i32* %arrayidx2373, align 4, !tbaa !6
  %cmp20.i4061 = icmp sgt i32 %add.i4110, 7
  br i1 %cmp20.i4061, label %while.body.lr.ph.i4069, label %bsW.exit4085

while.body.lr.ph.i4069:                           ; preds = %bsW.exit4111
  %.pre22.i4068 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4078

while.body.i4078:                                 ; preds = %while.body.i4078, %while.body.lr.ph.i4069
  %1035 = phi i32 [ %.pre22.i4068, %while.body.lr.ph.i4069 ], [ %inc.i4074, %while.body.i4078 ]
  %1036 = phi i32 [ %or.i4109, %while.body.lr.ph.i4069 ], [ %shl.i4075, %while.body.i4078 ]
  %shr.i4070 = lshr i32 %1036, 24
  %conv.i4071 = trunc i32 %shr.i4070 to i8
  %1037 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4072 = sext i32 %1035 to i64
  %arrayidx.i4073 = getelementptr inbounds i8, i8* %1037, i64 %idxprom.i4072
  store i8 %conv.i4071, i8* %arrayidx.i4073, align 1, !tbaa !12
  %1038 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4074 = add nsw i32 %1038, 1
  store i32 %inc.i4074, i32* %numZ, align 4, !tbaa !94
  %1039 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4075 = shl i32 %1039, 8
  store i32 %shl.i4075, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1040 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4076 = add nsw i32 %1040, -8
  store i32 %sub.i4076, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4077 = icmp sgt i32 %1040, 15
  br i1 %cmp.i4077, label %while.body.i4078, label %bsW.exit4085

bsW.exit4085:                                     ; preds = %while.body.i4078, %bsW.exit4111
  %1041 = phi i32 [ %or.i4109, %bsW.exit4111 ], [ %shl.i4075, %while.body.i4078 ]
  %.lcssa.i4079 = phi i32 [ %add.i4110, %bsW.exit4111 ], [ %sub.i4076, %while.body.i4078 ]
  %sub5.i4080 = sub nsw i32 32, %conv2371
  %sub6.i4081 = sub i32 %sub5.i4080, %.lcssa.i4079
  %shl7.i4082 = shl i32 %1034, %sub6.i4081
  %or.i4083 = or i32 %shl7.i4082, %1041
  store i32 %or.i4083, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4084 = add nsw i32 %.lcssa.i4079, %conv2371
  store i32 %add.i4084, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2374 = add nsw i32 %gs.25508, 45
  %idxprom2375 = sext i32 %add2374 to i64
  %arrayidx2376 = getelementptr inbounds i16, i16* %2, i64 %idxprom2375
  %1042 = load i16, i16* %arrayidx2376, align 2, !tbaa !33
  %idxprom2377 = zext i16 %1042 to i64
  %arrayidx2378 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2377
  %1043 = load i8, i8* %arrayidx2378, align 1, !tbaa !12
  %conv2379 = zext i8 %1043 to i32
  %arrayidx2381 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2377
  %1044 = load i32, i32* %arrayidx2381, align 4, !tbaa !6
  %cmp20.i4035 = icmp sgt i32 %add.i4084, 7
  br i1 %cmp20.i4035, label %while.body.lr.ph.i4043, label %bsW.exit4059

while.body.lr.ph.i4043:                           ; preds = %bsW.exit4085
  %.pre22.i4042 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4052

while.body.i4052:                                 ; preds = %while.body.i4052, %while.body.lr.ph.i4043
  %1045 = phi i32 [ %.pre22.i4042, %while.body.lr.ph.i4043 ], [ %inc.i4048, %while.body.i4052 ]
  %1046 = phi i32 [ %or.i4083, %while.body.lr.ph.i4043 ], [ %shl.i4049, %while.body.i4052 ]
  %shr.i4044 = lshr i32 %1046, 24
  %conv.i4045 = trunc i32 %shr.i4044 to i8
  %1047 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4046 = sext i32 %1045 to i64
  %arrayidx.i4047 = getelementptr inbounds i8, i8* %1047, i64 %idxprom.i4046
  store i8 %conv.i4045, i8* %arrayidx.i4047, align 1, !tbaa !12
  %1048 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4048 = add nsw i32 %1048, 1
  store i32 %inc.i4048, i32* %numZ, align 4, !tbaa !94
  %1049 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4049 = shl i32 %1049, 8
  store i32 %shl.i4049, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1050 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4050 = add nsw i32 %1050, -8
  store i32 %sub.i4050, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4051 = icmp sgt i32 %1050, 15
  br i1 %cmp.i4051, label %while.body.i4052, label %bsW.exit4059

bsW.exit4059:                                     ; preds = %while.body.i4052, %bsW.exit4085
  %1051 = phi i32 [ %or.i4083, %bsW.exit4085 ], [ %shl.i4049, %while.body.i4052 ]
  %.lcssa.i4053 = phi i32 [ %add.i4084, %bsW.exit4085 ], [ %sub.i4050, %while.body.i4052 ]
  %sub5.i4054 = sub nsw i32 32, %conv2379
  %sub6.i4055 = sub i32 %sub5.i4054, %.lcssa.i4053
  %shl7.i4056 = shl i32 %1044, %sub6.i4055
  %or.i4057 = or i32 %shl7.i4056, %1051
  store i32 %or.i4057, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4058 = add nsw i32 %.lcssa.i4053, %conv2379
  store i32 %add.i4058, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2382 = add nsw i32 %gs.25508, 46
  %idxprom2383 = sext i32 %add2382 to i64
  %arrayidx2384 = getelementptr inbounds i16, i16* %2, i64 %idxprom2383
  %1052 = load i16, i16* %arrayidx2384, align 2, !tbaa !33
  %idxprom2385 = zext i16 %1052 to i64
  %arrayidx2386 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2385
  %1053 = load i8, i8* %arrayidx2386, align 1, !tbaa !12
  %conv2387 = zext i8 %1053 to i32
  %arrayidx2389 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2385
  %1054 = load i32, i32* %arrayidx2389, align 4, !tbaa !6
  %cmp20.i4009 = icmp sgt i32 %add.i4058, 7
  br i1 %cmp20.i4009, label %while.body.lr.ph.i4017, label %bsW.exit4033

while.body.lr.ph.i4017:                           ; preds = %bsW.exit4059
  %.pre22.i4016 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4026

while.body.i4026:                                 ; preds = %while.body.i4026, %while.body.lr.ph.i4017
  %1055 = phi i32 [ %.pre22.i4016, %while.body.lr.ph.i4017 ], [ %inc.i4022, %while.body.i4026 ]
  %1056 = phi i32 [ %or.i4057, %while.body.lr.ph.i4017 ], [ %shl.i4023, %while.body.i4026 ]
  %shr.i4018 = lshr i32 %1056, 24
  %conv.i4019 = trunc i32 %shr.i4018 to i8
  %1057 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i4020 = sext i32 %1055 to i64
  %arrayidx.i4021 = getelementptr inbounds i8, i8* %1057, i64 %idxprom.i4020
  store i8 %conv.i4019, i8* %arrayidx.i4021, align 1, !tbaa !12
  %1058 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i4022 = add nsw i32 %1058, 1
  store i32 %inc.i4022, i32* %numZ, align 4, !tbaa !94
  %1059 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i4023 = shl i32 %1059, 8
  store i32 %shl.i4023, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1060 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i4024 = add nsw i32 %1060, -8
  store i32 %sub.i4024, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i4025 = icmp sgt i32 %1060, 15
  br i1 %cmp.i4025, label %while.body.i4026, label %bsW.exit4033

bsW.exit4033:                                     ; preds = %while.body.i4026, %bsW.exit4059
  %1061 = phi i32 [ %or.i4057, %bsW.exit4059 ], [ %shl.i4023, %while.body.i4026 ]
  %.lcssa.i4027 = phi i32 [ %add.i4058, %bsW.exit4059 ], [ %sub.i4024, %while.body.i4026 ]
  %sub5.i4028 = sub nsw i32 32, %conv2387
  %sub6.i4029 = sub i32 %sub5.i4028, %.lcssa.i4027
  %shl7.i4030 = shl i32 %1054, %sub6.i4029
  %or.i4031 = or i32 %shl7.i4030, %1061
  store i32 %or.i4031, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4032 = add nsw i32 %.lcssa.i4027, %conv2387
  store i32 %add.i4032, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2390 = add nsw i32 %gs.25508, 47
  %idxprom2391 = sext i32 %add2390 to i64
  %arrayidx2392 = getelementptr inbounds i16, i16* %2, i64 %idxprom2391
  %1062 = load i16, i16* %arrayidx2392, align 2, !tbaa !33
  %idxprom2393 = zext i16 %1062 to i64
  %arrayidx2394 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2393
  %1063 = load i8, i8* %arrayidx2394, align 1, !tbaa !12
  %conv2395 = zext i8 %1063 to i32
  %arrayidx2397 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2393
  %1064 = load i32, i32* %arrayidx2397, align 4, !tbaa !6
  %cmp20.i3983 = icmp sgt i32 %add.i4032, 7
  br i1 %cmp20.i3983, label %while.body.lr.ph.i3991, label %bsW.exit4007

while.body.lr.ph.i3991:                           ; preds = %bsW.exit4033
  %.pre22.i3990 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i4000

while.body.i4000:                                 ; preds = %while.body.i4000, %while.body.lr.ph.i3991
  %1065 = phi i32 [ %.pre22.i3990, %while.body.lr.ph.i3991 ], [ %inc.i3996, %while.body.i4000 ]
  %1066 = phi i32 [ %or.i4031, %while.body.lr.ph.i3991 ], [ %shl.i3997, %while.body.i4000 ]
  %shr.i3992 = lshr i32 %1066, 24
  %conv.i3993 = trunc i32 %shr.i3992 to i8
  %1067 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i3994 = sext i32 %1065 to i64
  %arrayidx.i3995 = getelementptr inbounds i8, i8* %1067, i64 %idxprom.i3994
  store i8 %conv.i3993, i8* %arrayidx.i3995, align 1, !tbaa !12
  %1068 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i3996 = add nsw i32 %1068, 1
  store i32 %inc.i3996, i32* %numZ, align 4, !tbaa !94
  %1069 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i3997 = shl i32 %1069, 8
  store i32 %shl.i3997, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1070 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i3998 = add nsw i32 %1070, -8
  store i32 %sub.i3998, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i3999 = icmp sgt i32 %1070, 15
  br i1 %cmp.i3999, label %while.body.i4000, label %bsW.exit4007

bsW.exit4007:                                     ; preds = %while.body.i4000, %bsW.exit4033
  %1071 = phi i32 [ %or.i4031, %bsW.exit4033 ], [ %shl.i3997, %while.body.i4000 ]
  %.lcssa.i4001 = phi i32 [ %add.i4032, %bsW.exit4033 ], [ %sub.i3998, %while.body.i4000 ]
  %sub5.i4002 = sub nsw i32 32, %conv2395
  %sub6.i4003 = sub i32 %sub5.i4002, %.lcssa.i4001
  %shl7.i4004 = shl i32 %1064, %sub6.i4003
  %or.i4005 = or i32 %shl7.i4004, %1071
  store i32 %or.i4005, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i4006 = add nsw i32 %.lcssa.i4001, %conv2395
  store i32 %add.i4006, i32* %bsLive.i5474, align 4, !tbaa !141
  %add2398 = add nsw i32 %gs.25508, 48
  %idxprom2399 = sext i32 %add2398 to i64
  %arrayidx2400 = getelementptr inbounds i16, i16* %2, i64 %idxprom2399
  %1072 = load i16, i16* %arrayidx2400, align 2, !tbaa !33
  %idxprom2401 = zext i16 %1072 to i64
  %arrayidx2402 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2401
  %1073 = load i8, i8* %arrayidx2402, align 1, !tbaa !12
  %conv2403 = zext i8 %1073 to i32
  %arrayidx2405 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2401
  %1074 = load i32, i32* %arrayidx2405, align 4, !tbaa !6
  %cmp20.i3957 = icmp sgt i32 %add.i4006, 7
  br i1 %cmp20.i3957, label %while.body.lr.ph.i3965, label %bsW.exit3981

while.body.lr.ph.i3965:                           ; preds = %bsW.exit4007
  %.pre22.i3964 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i3974

while.body.i3974:                                 ; preds = %while.body.i3974, %while.body.lr.ph.i3965
  %1075 = phi i32 [ %.pre22.i3964, %while.body.lr.ph.i3965 ], [ %inc.i3970, %while.body.i3974 ]
  %1076 = phi i32 [ %or.i4005, %while.body.lr.ph.i3965 ], [ %shl.i3971, %while.body.i3974 ]
  %shr.i3966 = lshr i32 %1076, 24
  %conv.i3967 = trunc i32 %shr.i3966 to i8
  %1077 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i3968 = sext i32 %1075 to i64
  %arrayidx.i3969 = getelementptr inbounds i8, i8* %1077, i64 %idxprom.i3968
  store i8 %conv.i3967, i8* %arrayidx.i3969, align 1, !tbaa !12
  %1078 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i3970 = add nsw i32 %1078, 1
  store i32 %inc.i3970, i32* %numZ, align 4, !tbaa !94
  %1079 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i3971 = shl i32 %1079, 8
  store i32 %shl.i3971, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1080 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i3972 = add nsw i32 %1080, -8
  store i32 %sub.i3972, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i3973 = icmp sgt i32 %1080, 15
  br i1 %cmp.i3973, label %while.body.i3974, label %bsW.exit3981

bsW.exit3981:                                     ; preds = %while.body.i3974, %bsW.exit4007
  %1081 = phi i32 [ %or.i4005, %bsW.exit4007 ], [ %shl.i3971, %while.body.i3974 ]
  %.lcssa.i3975 = phi i32 [ %add.i4006, %bsW.exit4007 ], [ %sub.i3972, %while.body.i3974 ]
  %sub5.i3976 = sub nsw i32 32, %conv2403
  %sub6.i3977 = sub i32 %sub5.i3976, %.lcssa.i3975
  %shl7.i3978 = shl i32 %1074, %sub6.i3977
  %or.i3979 = or i32 %shl7.i3978, %1081
  store i32 %or.i3979, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i3980 = add nsw i32 %.lcssa.i3975, %conv2403
  store i32 %add.i3980, i32* %bsLive.i5474, align 4, !tbaa !141
  %idxprom2407 = sext i32 %sub1976 to i64
  %arrayidx2408 = getelementptr inbounds i16, i16* %2, i64 %idxprom2407
  %1082 = load i16, i16* %arrayidx2408, align 2, !tbaa !33
  %idxprom2409 = zext i16 %1082 to i64
  %arrayidx2410 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2004, i64 %idxprom2409
  %1083 = load i8, i8* %arrayidx2410, align 1, !tbaa !12
  %conv2411 = zext i8 %1083 to i32
  %arrayidx2413 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2004, i64 %idxprom2409
  %1084 = load i32, i32* %arrayidx2413, align 4, !tbaa !6
  %cmp20.i3931 = icmp sgt i32 %add.i3980, 7
  br i1 %cmp20.i3931, label %while.body.lr.ph.i3939, label %bsW.exit3955

while.body.lr.ph.i3939:                           ; preds = %bsW.exit3981
  %.pre22.i3938 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i3948

while.body.i3948:                                 ; preds = %while.body.i3948, %while.body.lr.ph.i3939
  %1085 = phi i32 [ %.pre22.i3938, %while.body.lr.ph.i3939 ], [ %inc.i3944, %while.body.i3948 ]
  %1086 = phi i32 [ %or.i3979, %while.body.lr.ph.i3939 ], [ %shl.i3945, %while.body.i3948 ]
  %shr.i3940 = lshr i32 %1086, 24
  %conv.i3941 = trunc i32 %shr.i3940 to i8
  %1087 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i3942 = sext i32 %1085 to i64
  %arrayidx.i3943 = getelementptr inbounds i8, i8* %1087, i64 %idxprom.i3942
  store i8 %conv.i3941, i8* %arrayidx.i3943, align 1, !tbaa !12
  %1088 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i3944 = add nsw i32 %1088, 1
  store i32 %inc.i3944, i32* %numZ, align 4, !tbaa !94
  %1089 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i3945 = shl i32 %1089, 8
  store i32 %shl.i3945, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1090 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i3946 = add nsw i32 %1090, -8
  store i32 %sub.i3946, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i3947 = icmp sgt i32 %1090, 15
  br i1 %cmp.i3947, label %while.body.i3948, label %bsW.exit3955

bsW.exit3955:                                     ; preds = %while.body.i3948, %bsW.exit3981
  %1091 = phi i32 [ %or.i3979, %bsW.exit3981 ], [ %shl.i3945, %while.body.i3948 ]
  %.lcssa.i3949 = phi i32 [ %add.i3980, %bsW.exit3981 ], [ %sub.i3946, %while.body.i3948 ]
  %sub5.i3950 = sub nsw i32 32, %conv2411
  %sub6.i3951 = sub i32 %sub5.i3950, %.lcssa.i3949
  %shl7.i3952 = shl i32 %1084, %sub6.i3951
  %or.i3953 = or i32 %shl7.i3952, %1091
  store i32 %or.i3953, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i3954 = add nsw i32 %.lcssa.i3949, %conv2411
  store i32 %add.i3954, i32* %bsLive.i5474, align 4, !tbaa !141
  br label %if.end2443

if.else2414:                                      ; preds = %if.end1991
  %cmp24165504 = icmp slt i32 %spec.select3903, %gs.25508
  br i1 %cmp24165504, label %if.end2443, label %for.body2418.lr.ph

for.body2418.lr.ph:                               ; preds = %if.else2414
  %1092 = sext i32 %gs.25508 to i64
  %1093 = sext i32 %spec.select3903 to i64
  %.pre5729 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %.pre.i3912.pre = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  br label %for.body2418

for.body2418:                                     ; preds = %bsW.exit3929, %for.body2418.lr.ph
  %.pre.i3912 = phi i32 [ %or.i3927, %bsW.exit3929 ], [ %.pre.i3912.pre, %for.body2418.lr.ph ]
  %1094 = phi i32 [ %add.i3928, %bsW.exit3929 ], [ %.pre5729, %for.body2418.lr.ph ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %bsW.exit3929 ], [ %1092, %for.body2418.lr.ph ]
  %1095 = load i8, i8* %arrayidx1986, align 1, !tbaa !12
  %idxprom2423 = zext i8 %1095 to i64
  %arrayidx2426 = getelementptr inbounds i16, i16* %2, i64 %indvars.iv
  %1096 = load i16, i16* %arrayidx2426, align 2, !tbaa !33
  %idxprom2427 = zext i16 %1096 to i64
  %arrayidx2428 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 %idxprom2423, i64 %idxprom2427
  %1097 = load i8, i8* %arrayidx2428, align 1, !tbaa !12
  %conv2429 = zext i8 %1097 to i32
  %arrayidx2439 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 36, i64 %idxprom2423, i64 %idxprom2427
  %1098 = load i32, i32* %arrayidx2439, align 4, !tbaa !6
  %cmp20.i3906 = icmp sgt i32 %1094, 7
  br i1 %cmp20.i3906, label %while.body.lr.ph.i3914, label %bsW.exit3929

while.body.lr.ph.i3914:                           ; preds = %for.body2418
  %.pre22.i3913 = load i32, i32* %numZ, align 4, !tbaa !94
  br label %while.body.i3923

while.body.i3923:                                 ; preds = %while.body.i3923, %while.body.lr.ph.i3914
  %1099 = phi i32 [ %.pre22.i3913, %while.body.lr.ph.i3914 ], [ %inc.i3919, %while.body.i3923 ]
  %1100 = phi i32 [ %.pre.i3912, %while.body.lr.ph.i3914 ], [ %shl.i3920, %while.body.i3923 ]
  %shr.i3915 = lshr i32 %1100, 24
  %conv.i3916 = trunc i32 %shr.i3915 to i8
  %1101 = load i8*, i8** %zbits.i5479, align 8, !tbaa !86
  %idxprom.i3917 = sext i32 %1099 to i64
  %arrayidx.i3918 = getelementptr inbounds i8, i8* %1101, i64 %idxprom.i3917
  store i8 %conv.i3916, i8* %arrayidx.i3918, align 1, !tbaa !12
  %1102 = load i32, i32* %numZ, align 4, !tbaa !94
  %inc.i3919 = add nsw i32 %1102, 1
  store i32 %inc.i3919, i32* %numZ, align 4, !tbaa !94
  %1103 = load i32, i32* %bsBuff.i5476, align 8, !tbaa !142
  %shl.i3920 = shl i32 %1103, 8
  store i32 %shl.i3920, i32* %bsBuff.i5476, align 8, !tbaa !142
  %1104 = load i32, i32* %bsLive.i5474, align 4, !tbaa !141
  %sub.i3921 = add nsw i32 %1104, -8
  store i32 %sub.i3921, i32* %bsLive.i5474, align 4, !tbaa !141
  %cmp.i3922 = icmp sgt i32 %1104, 15
  br i1 %cmp.i3922, label %while.body.i3923, label %bsW.exit3929

bsW.exit3929:                                     ; preds = %while.body.i3923, %for.body2418
  %1105 = phi i32 [ %.pre.i3912, %for.body2418 ], [ %shl.i3920, %while.body.i3923 ]
  %.lcssa.i3924 = phi i32 [ %1094, %for.body2418 ], [ %sub.i3921, %while.body.i3923 ]
  %sub5.i = sub nsw i32 32, %conv2429
  %sub6.i3925 = sub i32 %sub5.i, %.lcssa.i3924
  %shl7.i3926 = shl i32 %1098, %sub6.i3925
  %or.i3927 = or i32 %shl7.i3926, %1105
  store i32 %or.i3927, i32* %bsBuff.i5476, align 8, !tbaa !142
  %add.i3928 = add nsw i32 %.lcssa.i3924, %conv2429
  store i32 %add.i3928, i32* %bsLive.i5474, align 4, !tbaa !141
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp2416 = icmp slt i64 %indvars.iv, %1093
  br i1 %cmp2416, label %for.body2418, label %if.end2443

if.end2443:                                       ; preds = %bsW.exit3929, %if.else2414, %bsW.exit3955
  %add2444 = add nsw i32 %spec.select3903, 1
  %indvars.iv.next5602 = add nuw i64 %indvars.iv5601, 1
  %1106 = load i32, i32* %nMTF12, align 4, !tbaa !147
  %cmp1971 = icmp slt i32 %add2444, %1106
  br i1 %cmp1971, label %if.end1974, label %while.end2446.loopexit

while.end2446.loopexit:                           ; preds = %if.end2443
  %1107 = trunc i64 %indvars.iv.next5602 to i32
  br label %while.end2446

while.end2446:                                    ; preds = %while.end2446.loopexit, %if.end1966
  %selCtr.0.lcssa = phi i32 [ 0, %if.end1966 ], [ %1107, %while.end2446.loopexit ]
  %cmp2447 = icmp eq i32 %selCtr.0.lcssa, %nSelectors.1.lcssa
  br i1 %cmp2447, label %if.end2450, label %if.then2449

if.then2449:                                      ; preds = %while.end2446
  tail call void @BZ2_bz__AssertH__fail(i32 3007) #2
  br label %if.end2450

if.end2450:                                       ; preds = %if.then2449, %while.end2446
  %1108 = load i32, i32* %verbosity, align 8, !tbaa !29
  %cmp2452 = icmp sgt i32 %1108, 2
  br i1 %cmp2452, label %if.then2454, label %if.end2458

if.then2454:                                      ; preds = %if.end2450
  %1109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1110 = load i32, i32* %numZ, align 4, !tbaa !94
  %sub2456 = sub nsw i32 %1110, %586
  %1111 = getelementptr [10 x i8], [10 x i8]* @.str.10.75, i64 0, i64 0
  %call2457 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1109, i8* %1111, i32 %sub2456) #15
  br label %if.end2458

if.end2458:                                       ; preds = %if.then2454, %if.end2450
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %0) #2
  ret void

for.body1719.2:                                   ; preds = %if.end1715
  %arrayidx1722.2 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 2
  store i8 2, i8* %arrayidx1722.2, align 1, !tbaa !12
  %cmp1717.2 = icmp eq i32 %nGroups.0, 3
  br i1 %cmp1717.2, label %for.end1725, label %for.body1719.3

for.body1719.3:                                   ; preds = %for.body1719.2
  %arrayidx1722.3 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 3
  store i8 3, i8* %arrayidx1722.3, align 1, !tbaa !12
  %cmp1717.3 = icmp ugt i32 %nGroups.0, 4
  br i1 %cmp1717.3, label %for.body1719.4, label %for.end1725

for.body1719.4:                                   ; preds = %for.body1719.3
  %arrayidx1722.4 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 4
  store i8 4, i8* %arrayidx1722.4, align 1, !tbaa !12
  %cmp1717.4 = icmp eq i32 %nGroups.0, 5
  br i1 %cmp1717.4, label %for.end1725, label %for.body1719.5

for.body1719.5:                                   ; preds = %for.body1719.4
  %arrayidx1722.5 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 5
  store i8 5, i8* %arrayidx1722.5, align 1, !tbaa !12
  br label %for.end1725

for.body116.us.2:                                 ; preds = %for.body116.us
  call void @llvm.memset.p0i8.i64(i8* %scevgep5647.2, i8 0, i64 %36, i32 4, i1 false)
  br i1 %cmp114.us.2, label %for.end130, label %for.body116.us.3

for.body116.us.3:                                 ; preds = %for.body116.us.2
  call void @llvm.memset.p0i8.i64(i8* %scevgep5647.3, i8 0, i64 %36, i32 4, i1 false)
  br i1 %cmp114.us.3, label %for.body116.us.4, label %for.end130

for.body116.us.4:                                 ; preds = %for.body116.us.3
  call void @llvm.memset.p0i8.i64(i8* %scevgep5647.4, i8 0, i64 %36, i32 4, i1 false)
  br i1 %cmp114.us.4, label %for.end130, label %for.body116.us.5

for.body116.us.5:                                 ; preds = %for.body116.us.4
  call void @llvm.memset.p0i8.i64(i8* %scevgep5647.5, i8 0, i64 %36, i32 4, i1 false)
  br label %for.end130

for.body1147.2:                                   ; preds = %for.body1140
  %arrayidx1152.2 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 2, i64 %idxprom1151
  %1112 = load i8, i8* %arrayidx1152.2, align 1, !tbaa !12
  %conv1153.2 = zext i8 %1112 to i16
  %add1157.2 = add i16 %add1157.25833, %conv1153.2
  br i1 %cmp1145.2, label %for.end1161, label %for.body1147.3

for.body1147.3:                                   ; preds = %for.body1147.2
  %arrayidx1152.3 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 3, i64 %idxprom1151
  %1113 = load i8, i8* %arrayidx1152.3, align 1, !tbaa !12
  %conv1153.3 = zext i8 %1113 to i16
  %add1157.3 = add i16 %add1157.35835, %conv1153.3
  br i1 %cmp1145.3, label %for.body1147.4, label %for.end1161

for.body1147.4:                                   ; preds = %for.body1147.3
  %arrayidx1152.4 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 4, i64 %idxprom1151
  %1114 = load i8, i8* %arrayidx1152.4, align 1, !tbaa !12
  %conv1153.4 = zext i8 %1114 to i16
  %add1157.4 = add i16 %add1157.45837, %conv1153.4
  br i1 %cmp1145.4, label %for.end1161, label %for.body1147.5

for.body1147.5:                                   ; preds = %for.body1147.4
  %arrayidx1152.5 = getelementptr inbounds %struct.EState, %struct.EState* %s, i64 0, i32 35, i64 5, i64 %idxprom1151
  %1115 = load i8, i8* %arrayidx1152.5, align 1, !tbaa !12
  %conv1153.5 = zext i8 %1115 to i16
  %add1157.5 = add i16 %add1157.55839, %conv1153.5
  br label %for.end1161

for.body1169.2:                                   ; preds = %for.body1169
  %1116 = load i16, i16* %arrayidx1171.2, align 2, !tbaa !33
  %cmp1173.2 = icmp ugt i16 %spec.select3899.15809, %1116
  %1117 = icmp ult i16 %spec.select3899.15809, %1116
  %spec.select3899.25810 = select i1 %1117, i16 %spec.select3899.15809, i16 %1116
  %1118 = zext i16 %spec.select3899.25810 to i32
  %spec.select3900.2 = select i1 %cmp1173.2, i32 2, i32 %spec.select3900.1
  br i1 %cmp1167.2, label %for.end1182, label %for.body1169.3

for.body1169.3:                                   ; preds = %for.body1169.2
  %1119 = load i16, i16* %arrayidx1171.3, align 2, !tbaa !33
  %cmp1173.3 = icmp ugt i16 %spec.select3899.25810, %1119
  %1120 = icmp ult i16 %spec.select3899.25810, %1119
  %spec.select3899.35811 = select i1 %1120, i16 %spec.select3899.25810, i16 %1119
  %1121 = zext i16 %spec.select3899.35811 to i32
  %spec.select3900.3 = select i1 %cmp1173.3, i32 3, i32 %spec.select3900.2
  br i1 %cmp1167.3, label %for.body1169.4, label %for.end1182

for.body1169.4:                                   ; preds = %for.body1169.3
  %1122 = load i16, i16* %arrayidx1171.4, align 2, !tbaa !33
  %cmp1173.4 = icmp ugt i16 %spec.select3899.35811, %1122
  %1123 = icmp ult i16 %spec.select3899.35811, %1122
  %spec.select3899.45812 = select i1 %1123, i16 %spec.select3899.35811, i16 %1122
  %1124 = zext i16 %spec.select3899.45812 to i32
  %spec.select3900.4 = select i1 %cmp1173.4, i32 4, i32 %spec.select3900.3
  br i1 %cmp1167.4, label %for.end1182, label %for.body1169.5

for.body1169.5:                                   ; preds = %for.body1169.4
  %1125 = load i16, i16* %arrayidx1171.5, align 2, !tbaa !33
  %cmp1173.5 = icmp ugt i16 %spec.select3899.45812, %1125
  %1126 = icmp ult i16 %spec.select3899.45812, %1125
  %spec.select3899.55813 = select i1 %1126, i16 %spec.select3899.45812, i16 %1125
  %1127 = zext i16 %spec.select3899.55813 to i32
  %spec.select3900.5 = select i1 %cmp1173.5, i32 5, i32 %spec.select3900.4
  br label %for.end1182
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_decompress(%struct.DState* %s) local_unnamed_addr #1 {
entry:
  %s7037 = bitcast %struct.DState* %s to i8*
  %pos = alloca [6 x i8], align 1
  %strm1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 0
  %0 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %state = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 1
  %1 = load i32, i32* %state, align 8, !tbaa !105
  %cmp = icmp eq i32 %1, 10
  %save_i = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 40
  br i1 %cmp, label %if.end.thread, label %if.end

if.end.thread:                                    ; preds = %entry
  %save_j = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 41
  %save_t = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 42
  %save_alphaSize = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 43
  %save_nGroups = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 44
  %save_nSelectors = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 45
  %save_EOB = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 46
  %save_groupNo = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 47
  %save_groupPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 48
  %save_nextSym = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 49
  %save_nblockMAX = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 50
  %save_nblock = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 51
  %save_es = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 52
  %save_N = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 53
  %save_curr = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 54
  %save_zt = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 55
  %save_zn = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 56
  %save_zvec = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 57
  %save_zj = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 58
  %save_gSel = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 59
  %save_gMinlen = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 60
  %save_gLimit = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 61
  %save_gBase = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 62
  %save_gPerm = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 63
  %2 = bitcast i32* %save_i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull %2, i8 0, i64 108, i32 4, i1 false)
  store i32 10, i32* %state, align 8, !tbaa !105
  %bsLive = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %3 = load i32, i32* %bsLive, align 4, !tbaa !106
  %cmp285187 = icmp sgt i32 %3, 7
  br i1 %cmp285187, label %sw.bb.if.then29_crit_edge, label %if.end33.lr.ph

if.end:                                           ; preds = %entry
  %.pre = load i32, i32* %save_i, align 4, !tbaa !150
  %save_j3.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 41
  %.pre5368 = load i32, i32* %save_j3.phi.trans.insert, align 8, !tbaa !151
  %save_t4.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 42
  %.pre5369 = load i32, i32* %save_t4.phi.trans.insert, align 4, !tbaa !152
  %save_alphaSize5.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 43
  %.pre5370 = load i32, i32* %save_alphaSize5.phi.trans.insert, align 8, !tbaa !153
  %save_nGroups6.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 44
  %.pre5371 = load i32, i32* %save_nGroups6.phi.trans.insert, align 4, !tbaa !154
  %save_nSelectors7.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 45
  %.pre5372 = load i32, i32* %save_nSelectors7.phi.trans.insert, align 8, !tbaa !155
  %save_EOB8.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 46
  %.pre5373 = load i32, i32* %save_EOB8.phi.trans.insert, align 4, !tbaa !156
  %save_groupNo9.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 47
  %.pre5374 = load i32, i32* %save_groupNo9.phi.trans.insert, align 8, !tbaa !157
  %save_groupPos10.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 48
  %.pre5375 = load i32, i32* %save_groupPos10.phi.trans.insert, align 4, !tbaa !158
  %save_nextSym11.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 49
  %.pre5376 = load i32, i32* %save_nextSym11.phi.trans.insert, align 8, !tbaa !159
  %save_nblockMAX12.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 50
  %.pre5377 = load i32, i32* %save_nblockMAX12.phi.trans.insert, align 4, !tbaa !160
  %save_nblock13.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 51
  %.pre5378 = load i32, i32* %save_nblock13.phi.trans.insert, align 8, !tbaa !117
  %save_es14.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 52
  %.pre5379 = load i32, i32* %save_es14.phi.trans.insert, align 4, !tbaa !161
  %save_N15.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 53
  %.pre5380 = load i32, i32* %save_N15.phi.trans.insert, align 8, !tbaa !162
  %save_curr16.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 54
  %.pre5381 = load i32, i32* %save_curr16.phi.trans.insert, align 4, !tbaa !163
  %save_zt17.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 55
  %.pre5382 = load i32, i32* %save_zt17.phi.trans.insert, align 8, !tbaa !164
  %save_zn18.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 56
  %.pre5383 = load i32, i32* %save_zn18.phi.trans.insert, align 4, !tbaa !165
  %save_zvec19.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 57
  %.pre5384 = load i32, i32* %save_zvec19.phi.trans.insert, align 8, !tbaa !166
  %save_zj20.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 58
  %.pre5385 = load i32, i32* %save_zj20.phi.trans.insert, align 4, !tbaa !167
  %save_gSel21.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 59
  %.pre5386 = load i32, i32* %save_gSel21.phi.trans.insert, align 8, !tbaa !168
  %save_gMinlen22.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 60
  %.pre5387 = load i32, i32* %save_gMinlen22.phi.trans.insert, align 4, !tbaa !169
  %save_gLimit23.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 61
  %.pre5388 = load i32*, i32** %save_gLimit23.phi.trans.insert, align 8, !tbaa !170
  %save_gBase24.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 62
  %.pre5389 = load i32*, i32** %save_gBase24.phi.trans.insert, align 8, !tbaa !171
  %save_gPerm25.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 63
  %.pre5390 = load i32*, i32** %save_gPerm25.phi.trans.insert, align 8, !tbaa !172
  switch i32 %1, label %sw.default [
    i32 50, label %if.end.sw.bb3399_crit_edge
    i32 11, label %if.end.sw.bb62_crit_edge
    i32 12, label %if.end.sw.bb119_crit_edge
    i32 13, label %if.end.sw.bb176_crit_edge
    i32 14, label %if.end.sw.bb275_crit_edge
    i32 15, label %if.end.sw.bb337_crit_edge
    i32 16, label %if.end.sw.bb394_crit_edge
    i32 17, label %if.end.sw.bb451_crit_edge
    i32 18, label %if.end.sw.bb508_crit_edge
    i32 19, label %if.end.sw.bb565_crit_edge
    i32 20, label %if.end.sw.bb629_crit_edge
    i32 21, label %if.end.sw.bb686_crit_edge
    i32 22, label %if.end.sw.bb743_crit_edge
    i32 23, label %if.end.sw.bb800_crit_edge
    i32 24, label %if.end.sw.bb857_crit_edge
    i32 25, label %if.end.sw.bb909_crit_edge
    i32 26, label %if.end.sw.bb966_crit_edge
    i32 27, label %if.end.sw.bb1023_crit_edge
    i32 28, label %sw.bb1095
    i32 29, label %sw.bb1179
    i32 30, label %sw.bb1254
    i32 31, label %if.end.sw.bb1312_crit_edge
    i32 32, label %sw.bb1373.preheader
    i32 33, label %sw.bb1485
    i32 34, label %sw.bb1549
    i32 35, label %if.end.sw.bb1606_crit_edge
    i32 36, label %sw.bb1804
    i32 37, label %if.end.sw.bb1870_crit_edge
    i32 38, label %sw.bb1997
    i32 39, label %if.end.sw.bb2063_crit_edge
    i32 40, label %sw.bb2413
    i32 41, label %if.end.sw.bb2479_crit_edge
    i32 42, label %if.end.sw.bb2943_crit_edge
    i32 43, label %if.end.sw.bb3000_crit_edge
    i32 44, label %if.end.sw.bb3057_crit_edge
    i32 45, label %if.end.sw.bb3114_crit_edge
    i32 46, label %if.end.sw.bb3171_crit_edge
    i32 47, label %if.end.sw.bb3228_crit_edge
    i32 48, label %if.end.sw.bb3285_crit_edge
    i32 49, label %if.end.sw.bb3342_crit_edge
  ]

if.end.sw.bb275_crit_edge:                        ; preds = %if.end
  %.pre5530 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  br label %sw.bb275

if.end.sw.bb629_crit_edge:                        ; preds = %if.end
  %.pre5531 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  br label %sw.bb629

if.end.sw.bb3399_crit_edge:                       ; preds = %if.end
  %bsLive3403.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5523 = load i32, i32* %bsLive3403.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3399

if.end.sw.bb3342_crit_edge:                       ; preds = %if.end
  %bsLive3346.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5519 = load i32, i32* %bsLive3346.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3342

if.end.sw.bb3285_crit_edge:                       ; preds = %if.end
  %bsLive3289.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5515 = load i32, i32* %bsLive3289.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3285

if.end.sw.bb3228_crit_edge:                       ; preds = %if.end
  %bsLive3232.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5511 = load i32, i32* %bsLive3232.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3228

if.end.sw.bb3171_crit_edge:                       ; preds = %if.end
  %bsLive3175.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5507 = load i32, i32* %bsLive3175.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3171

if.end.sw.bb3114_crit_edge:                       ; preds = %if.end
  %bsLive3118.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5503 = load i32, i32* %bsLive3118.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3114

if.end.sw.bb3057_crit_edge:                       ; preds = %if.end
  %bsLive3061.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5499 = load i32, i32* %bsLive3061.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3057

if.end.sw.bb3000_crit_edge:                       ; preds = %if.end
  %bsLive3004.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5495 = load i32, i32* %bsLive3004.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb3000

if.end.sw.bb2943_crit_edge:                       ; preds = %if.end
  %bsLive2947.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5491 = load i32, i32* %bsLive2947.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb2943

if.end.sw.bb1606_crit_edge:                       ; preds = %if.end
  %bsLive1610.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5484 = load i32, i32* %bsLive1610.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb1606

if.end.sw.bb1870_crit_edge:                       ; preds = %if.end
  %bsLive1874.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5478 = load i32, i32* %bsLive1874.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb1870

if.end.sw.bb2063_crit_edge:                       ; preds = %if.end
  %bsLive2067.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5473 = load i32, i32* %bsLive2067.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb2063

if.end.sw.bb2479_crit_edge:                       ; preds = %if.end
  %bsLive2483.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5470 = load i32, i32* %bsLive2483.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb2479

if.end.sw.bb1312_crit_edge:                       ; preds = %if.end
  %bsLive1316.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5459 = load i32, i32* %bsLive1316.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb1312

if.end.sw.bb1023_crit_edge:                       ; preds = %if.end
  %bsLive1027.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5452 = load i32, i32* %bsLive1027.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb1023

if.end.sw.bb966_crit_edge:                        ; preds = %if.end
  %bsLive970.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5448 = load i32, i32* %bsLive970.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb966

if.end.sw.bb909_crit_edge:                        ; preds = %if.end
  %bsLive913.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5444 = load i32, i32* %bsLive913.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb909

if.end.sw.bb857_crit_edge:                        ; preds = %if.end
  %bsLive861.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5440 = load i32, i32* %bsLive861.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb857

if.end.sw.bb800_crit_edge:                        ; preds = %if.end
  %bsLive804.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5436 = load i32, i32* %bsLive804.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb800

if.end.sw.bb743_crit_edge:                        ; preds = %if.end
  %bsLive747.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5432 = load i32, i32* %bsLive747.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb743

if.end.sw.bb686_crit_edge:                        ; preds = %if.end
  %bsLive690.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5428 = load i32, i32* %bsLive690.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb686

if.end.sw.bb565_crit_edge:                        ; preds = %if.end
  %bsLive569.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5421 = load i32, i32* %bsLive569.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb565

if.end.sw.bb508_crit_edge:                        ; preds = %if.end
  %bsLive512.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5417 = load i32, i32* %bsLive512.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb508

if.end.sw.bb451_crit_edge:                        ; preds = %if.end
  %bsLive455.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5413 = load i32, i32* %bsLive455.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb451

if.end.sw.bb394_crit_edge:                        ; preds = %if.end
  %bsLive398.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5409 = load i32, i32* %bsLive398.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb394

if.end.sw.bb337_crit_edge:                        ; preds = %if.end
  %bsLive341.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5405 = load i32, i32* %bsLive341.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb337

if.end.sw.bb176_crit_edge:                        ; preds = %if.end
  %bsLive180.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5399 = load i32, i32* %bsLive180.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb176

if.end.sw.bb119_crit_edge:                        ; preds = %if.end
  %bsLive123.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5396 = load i32, i32* %bsLive123.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb119

if.end.sw.bb62_crit_edge:                         ; preds = %if.end
  %bsLive66.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %.pre5393 = load i32, i32* %bsLive66.phi.trans.insert, align 4, !tbaa !106
  br label %sw.bb62

sw.bb.if.then29_crit_edge:                        ; preds = %if.end.thread
  %bsBuff.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %.pre5392 = load i32, i32* %bsBuff.phi.trans.insert, align 8, !tbaa !107
  br label %if.then29

if.end33.lr.ph:                                   ; preds = %if.end.thread
  %avail_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 1
  %bsBuff39 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %next_in = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 0
  %total_in_lo32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 2
  %total_in_hi32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 3
  %.pre5391 = load i32, i32* %avail_in, align 8, !tbaa !98
  br label %if.end33

if.then29:                                        ; preds = %if.end56, %sw.bb.if.then29_crit_edge
  %4 = phi i32 [ %.pre5392, %sw.bb.if.then29_crit_edge ], [ %or, %if.end56 ]
  %.lcssa5008 = phi i32 [ %3, %sw.bb.if.then29_crit_edge ], [ %add, %if.end56 ]
  %sub = add nsw i32 %.lcssa5008, -8
  %shr = lshr i32 %4, %sub
  store i32 %sub, i32* %bsLive, align 4, !tbaa !106
  %conv57 = and i32 %shr, 255
  %cmp58 = icmp eq i32 %conv57, 66
  br i1 %cmp58, label %sw.bb62, label %save_state_and_return

if.end33:                                         ; preds = %if.end56, %if.end33.lr.ph
  %5 = phi i32 [ %.pre5391, %if.end33.lr.ph ], [ %dec, %if.end56 ]
  %6 = phi i32 [ %3, %if.end33.lr.ph ], [ %add, %if.end56 ]
  %cmp35 = icmp eq i32 %5, 0
  br i1 %cmp35, label %save_state_and_return, label %if.end38

if.end38:                                         ; preds = %if.end33
  %7 = load i32, i32* %bsBuff39, align 8, !tbaa !107
  %shl = shl i32 %7, 8
  %8 = load i8*, i8** %next_in, align 8, !tbaa !102
  %9 = load i8, i8* %8, align 1, !tbaa !12
  %conv41 = zext i8 %9 to i32
  %or = or i32 %shl, %conv41
  store i32 %or, i32* %bsBuff39, align 8, !tbaa !107
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %bsLive, align 4, !tbaa !106
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i64 1
  store i8* %incdec.ptr, i8** %next_in, align 8, !tbaa !102
  %dec = add i32 %5, -1
  store i32 %dec, i32* %avail_in, align 8, !tbaa !98
  %10 = load i32, i32* %total_in_lo32, align 4, !tbaa !88
  %inc = add i32 %10, 1
  store i32 %inc, i32* %total_in_lo32, align 4, !tbaa !88
  %cmp51 = icmp eq i32 %inc, 0
  br i1 %cmp51, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end38
  %11 = load i32, i32* %total_in_hi32, align 8, !tbaa !89
  %inc55 = add i32 %11, 1
  store i32 %inc55, i32* %total_in_hi32, align 8, !tbaa !89
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end38
  %cmp28 = icmp sgt i32 %6, -1
  br i1 %cmp28, label %if.then29, label %if.end33

sw.bb62:                                          ; preds = %if.then29, %if.end.sw.bb62_crit_edge
  %12 = phi i32 [ %.pre, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %13 = phi i32 [ %.pre5368, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %14 = phi i32 [ %.pre5369, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %15 = phi i32 [ %.pre5370, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %16 = phi i32 [ %.pre5371, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %17 = phi i32 [ %.pre5372, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %18 = phi i32 [ %.pre5373, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %19 = phi i32 [ %.pre5374, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %20 = phi i32 [ %.pre5375, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %21 = phi i32 [ %.pre5376, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %22 = phi i32 [ %.pre5377, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %23 = phi i32 [ %.pre5378, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %24 = phi i32 [ %.pre5379, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %25 = phi i32 [ %.pre5380, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %26 = phi i32 [ %.pre5381, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %27 = phi i32 [ %.pre5382, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %28 = phi i32 [ %.pre5383, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %29 = phi i32 [ %.pre5384, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %30 = phi i32 [ %.pre5385, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %31 = phi i32 [ %.pre5386, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %32 = phi i32 [ %.pre5387, %if.end.sw.bb62_crit_edge ], [ 0, %if.then29 ]
  %33 = phi i32* [ %.pre5388, %if.end.sw.bb62_crit_edge ], [ null, %if.then29 ]
  %34 = phi i32* [ %.pre5389, %if.end.sw.bb62_crit_edge ], [ null, %if.then29 ]
  %35 = phi i32* [ %.pre5390, %if.end.sw.bb62_crit_edge ], [ null, %if.then29 ]
  %save_j3.pre-phi6821 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_j, %if.then29 ]
  %save_t4.pre-phi6765 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_t, %if.then29 ]
  %save_alphaSize5.pre-phi6709 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_alphaSize, %if.then29 ]
  %save_nGroups6.pre-phi6653 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_nGroups, %if.then29 ]
  %save_nSelectors7.pre-phi6597 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_nSelectors, %if.then29 ]
  %save_EOB8.pre-phi6541 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_EOB, %if.then29 ]
  %save_groupNo9.pre-phi6485 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_groupNo, %if.then29 ]
  %save_groupPos10.pre-phi6429 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_groupPos, %if.then29 ]
  %save_nextSym11.pre-phi6373 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_nextSym, %if.then29 ]
  %save_nblockMAX12.pre-phi6317 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_nblockMAX, %if.then29 ]
  %save_nblock13.pre-phi6261 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_nblock, %if.then29 ]
  %save_es14.pre-phi6205 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_es, %if.then29 ]
  %save_N15.pre-phi6149 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_N, %if.then29 ]
  %save_curr16.pre-phi6093 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_curr, %if.then29 ]
  %save_zt17.pre-phi6037 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_zt, %if.then29 ]
  %save_zn18.pre-phi5981 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_zn, %if.then29 ]
  %save_zvec19.pre-phi5925 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_zvec, %if.then29 ]
  %save_zj20.pre-phi5869 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_zj, %if.then29 ]
  %save_gSel21.pre-phi5813 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_gSel, %if.then29 ]
  %save_gMinlen22.pre-phi5757 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_gMinlen, %if.then29 ]
  %save_gLimit23.pre-phi5701 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_gLimit, %if.then29 ]
  %save_gBase24.pre-phi5645 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_gBase, %if.then29 ]
  %save_gPerm25.pre-phi5589 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %save_gPerm, %if.then29 ]
  %bsLive66.pre-phi = phi i32* [ %bsLive66.phi.trans.insert, %if.end.sw.bb62_crit_edge ], [ %bsLive, %if.then29 ]
  %36 = phi i32 [ %.pre5393, %if.end.sw.bb62_crit_edge ], [ %sub, %if.then29 ]
  store i32 11, i32* %state, align 8, !tbaa !105
  %cmp675184 = icmp sgt i32 %36, 7
  br i1 %cmp675184, label %sw.bb62.if.then69_crit_edge, label %if.end79.lr.ph

sw.bb62.if.then69_crit_edge:                      ; preds = %sw.bb62
  %bsBuff71.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %.pre5395 = load i32, i32* %bsBuff71.phi.trans.insert, align 8, !tbaa !107
  br label %if.then69

if.end79.lr.ph:                                   ; preds = %sw.bb62
  %avail_in81 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 1
  %bsBuff86 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %next_in89 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 0
  %total_in_lo32102 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 2
  %total_in_hi32110 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 3
  %.pre5394 = load i32, i32* %avail_in81, align 8, !tbaa !98
  br label %if.end79

if.then69:                                        ; preds = %if.end112, %sw.bb62.if.then69_crit_edge
  %37 = phi i32 [ %.pre5395, %sw.bb62.if.then69_crit_edge ], [ %or91, %if.end112 ]
  %.lcssa5005 = phi i32 [ %36, %sw.bb62.if.then69_crit_edge ], [ %add94, %if.end112 ]
  %sub73 = add nsw i32 %.lcssa5005, -8
  %shr74 = lshr i32 %37, %sub73
  store i32 %sub73, i32* %bsLive66.pre-phi, align 4, !tbaa !106
  %conv114 = and i32 %shr74, 255
  %cmp115 = icmp eq i32 %conv114, 90
  br i1 %cmp115, label %sw.bb119, label %save_state_and_return

if.end79:                                         ; preds = %if.end112, %if.end79.lr.ph
  %38 = phi i32 [ %.pre5394, %if.end79.lr.ph ], [ %dec100, %if.end112 ]
  %39 = phi i32 [ %36, %if.end79.lr.ph ], [ %add94, %if.end112 ]
  %cmp82 = icmp eq i32 %38, 0
  br i1 %cmp82, label %save_state_and_return, label %if.end85

if.end85:                                         ; preds = %if.end79
  %40 = load i32, i32* %bsBuff86, align 8, !tbaa !107
  %shl87 = shl i32 %40, 8
  %41 = load i8*, i8** %next_in89, align 8, !tbaa !102
  %42 = load i8, i8* %41, align 1, !tbaa !12
  %conv90 = zext i8 %42 to i32
  %or91 = or i32 %shl87, %conv90
  store i32 %or91, i32* %bsBuff86, align 8, !tbaa !107
  %add94 = add nsw i32 %39, 8
  store i32 %add94, i32* %bsLive66.pre-phi, align 4, !tbaa !106
  %incdec.ptr97 = getelementptr inbounds i8, i8* %41, i64 1
  store i8* %incdec.ptr97, i8** %next_in89, align 8, !tbaa !102
  %dec100 = add i32 %38, -1
  store i32 %dec100, i32* %avail_in81, align 8, !tbaa !98
  %43 = load i32, i32* %total_in_lo32102, align 4, !tbaa !88
  %inc103 = add i32 %43, 1
  store i32 %inc103, i32* %total_in_lo32102, align 4, !tbaa !88
  %cmp106 = icmp eq i32 %inc103, 0
  br i1 %cmp106, label %if.then108, label %if.end112

if.then108:                                       ; preds = %if.end85
  %44 = load i32, i32* %total_in_hi32110, align 8, !tbaa !89
  %inc111 = add i32 %44, 1
  store i32 %inc111, i32* %total_in_hi32110, align 8, !tbaa !89
  br label %if.end112

if.end112:                                        ; preds = %if.then108, %if.end85
  %cmp67 = icmp sgt i32 %39, -1
  br i1 %cmp67, label %if.then69, label %if.end79

sw.bb119:                                         ; preds = %if.then69, %if.end.sw.bb119_crit_edge
  %45 = phi i32 [ %.pre, %if.end.sw.bb119_crit_edge ], [ %12, %if.then69 ]
  %46 = phi i32 [ %.pre5368, %if.end.sw.bb119_crit_edge ], [ %13, %if.then69 ]
  %47 = phi i32 [ %.pre5369, %if.end.sw.bb119_crit_edge ], [ %14, %if.then69 ]
  %48 = phi i32 [ %.pre5370, %if.end.sw.bb119_crit_edge ], [ %15, %if.then69 ]
  %49 = phi i32 [ %.pre5371, %if.end.sw.bb119_crit_edge ], [ %16, %if.then69 ]
  %50 = phi i32 [ %.pre5372, %if.end.sw.bb119_crit_edge ], [ %17, %if.then69 ]
  %51 = phi i32 [ %.pre5373, %if.end.sw.bb119_crit_edge ], [ %18, %if.then69 ]
  %52 = phi i32 [ %.pre5374, %if.end.sw.bb119_crit_edge ], [ %19, %if.then69 ]
  %53 = phi i32 [ %.pre5375, %if.end.sw.bb119_crit_edge ], [ %20, %if.then69 ]
  %54 = phi i32 [ %.pre5376, %if.end.sw.bb119_crit_edge ], [ %21, %if.then69 ]
  %55 = phi i32 [ %.pre5377, %if.end.sw.bb119_crit_edge ], [ %22, %if.then69 ]
  %56 = phi i32 [ %.pre5378, %if.end.sw.bb119_crit_edge ], [ %23, %if.then69 ]
  %57 = phi i32 [ %.pre5379, %if.end.sw.bb119_crit_edge ], [ %24, %if.then69 ]
  %58 = phi i32 [ %.pre5380, %if.end.sw.bb119_crit_edge ], [ %25, %if.then69 ]
  %59 = phi i32 [ %.pre5381, %if.end.sw.bb119_crit_edge ], [ %26, %if.then69 ]
  %60 = phi i32 [ %.pre5382, %if.end.sw.bb119_crit_edge ], [ %27, %if.then69 ]
  %61 = phi i32 [ %.pre5383, %if.end.sw.bb119_crit_edge ], [ %28, %if.then69 ]
  %62 = phi i32 [ %.pre5384, %if.end.sw.bb119_crit_edge ], [ %29, %if.then69 ]
  %63 = phi i32 [ %.pre5385, %if.end.sw.bb119_crit_edge ], [ %30, %if.then69 ]
  %64 = phi i32 [ %.pre5386, %if.end.sw.bb119_crit_edge ], [ %31, %if.then69 ]
  %65 = phi i32 [ %.pre5387, %if.end.sw.bb119_crit_edge ], [ %32, %if.then69 ]
  %66 = phi i32* [ %.pre5388, %if.end.sw.bb119_crit_edge ], [ %33, %if.then69 ]
  %67 = phi i32* [ %.pre5389, %if.end.sw.bb119_crit_edge ], [ %34, %if.then69 ]
  %68 = phi i32* [ %.pre5390, %if.end.sw.bb119_crit_edge ], [ %35, %if.then69 ]
  %save_j3.pre-phi6820 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_j3.pre-phi6821, %if.then69 ]
  %save_t4.pre-phi6764 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_t4.pre-phi6765, %if.then69 ]
  %save_alphaSize5.pre-phi6708 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_alphaSize5.pre-phi6709, %if.then69 ]
  %save_nGroups6.pre-phi6652 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_nGroups6.pre-phi6653, %if.then69 ]
  %save_nSelectors7.pre-phi6596 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_nSelectors7.pre-phi6597, %if.then69 ]
  %save_EOB8.pre-phi6540 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_EOB8.pre-phi6541, %if.then69 ]
  %save_groupNo9.pre-phi6484 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_groupNo9.pre-phi6485, %if.then69 ]
  %save_groupPos10.pre-phi6428 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_groupPos10.pre-phi6429, %if.then69 ]
  %save_nextSym11.pre-phi6372 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_nextSym11.pre-phi6373, %if.then69 ]
  %save_nblockMAX12.pre-phi6316 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_nblockMAX12.pre-phi6317, %if.then69 ]
  %save_nblock13.pre-phi6260 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_nblock13.pre-phi6261, %if.then69 ]
  %save_es14.pre-phi6204 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_es14.pre-phi6205, %if.then69 ]
  %save_N15.pre-phi6148 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_N15.pre-phi6149, %if.then69 ]
  %save_curr16.pre-phi6092 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_curr16.pre-phi6093, %if.then69 ]
  %save_zt17.pre-phi6036 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_zt17.pre-phi6037, %if.then69 ]
  %save_zn18.pre-phi5980 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_zn18.pre-phi5981, %if.then69 ]
  %save_zvec19.pre-phi5924 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_zvec19.pre-phi5925, %if.then69 ]
  %save_zj20.pre-phi5868 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_zj20.pre-phi5869, %if.then69 ]
  %save_gSel21.pre-phi5812 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_gSel21.pre-phi5813, %if.then69 ]
  %save_gMinlen22.pre-phi5756 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_gMinlen22.pre-phi5757, %if.then69 ]
  %save_gLimit23.pre-phi5700 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_gLimit23.pre-phi5701, %if.then69 ]
  %save_gBase24.pre-phi5644 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_gBase24.pre-phi5645, %if.then69 ]
  %save_gPerm25.pre-phi5588 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %save_gPerm25.pre-phi5589, %if.then69 ]
  %bsLive123.pre-phi = phi i32* [ %bsLive123.phi.trans.insert, %if.end.sw.bb119_crit_edge ], [ %bsLive66.pre-phi, %if.then69 ]
  %69 = phi i32 [ %.pre5396, %if.end.sw.bb119_crit_edge ], [ %sub73, %if.then69 ]
  store i32 12, i32* %state, align 8, !tbaa !105
  %cmp1245181 = icmp sgt i32 %69, 7
  br i1 %cmp1245181, label %sw.bb119.if.then126_crit_edge, label %if.end136.lr.ph

sw.bb119.if.then126_crit_edge:                    ; preds = %sw.bb119
  %bsBuff128.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %.pre5398 = load i32, i32* %bsBuff128.phi.trans.insert, align 8, !tbaa !107
  br label %if.then126

if.end136.lr.ph:                                  ; preds = %sw.bb119
  %avail_in138 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 1
  %bsBuff143 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %next_in146 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 0
  %total_in_lo32159 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 2
  %total_in_hi32167 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 3
  %.pre5397 = load i32, i32* %avail_in138, align 8, !tbaa !98
  br label %if.end136

if.then126:                                       ; preds = %if.end169, %sw.bb119.if.then126_crit_edge
  %70 = phi i32 [ %.pre5398, %sw.bb119.if.then126_crit_edge ], [ %or148, %if.end169 ]
  %.lcssa5002 = phi i32 [ %69, %sw.bb119.if.then126_crit_edge ], [ %add151, %if.end169 ]
  %sub130 = add nsw i32 %.lcssa5002, -8
  %shr131 = lshr i32 %70, %sub130
  store i32 %sub130, i32* %bsLive123.pre-phi, align 4, !tbaa !106
  %conv171 = and i32 %shr131, 255
  %cmp172 = icmp eq i32 %conv171, 104
  br i1 %cmp172, label %sw.bb176, label %save_state_and_return

if.end136:                                        ; preds = %if.end169, %if.end136.lr.ph
  %71 = phi i32 [ %.pre5397, %if.end136.lr.ph ], [ %dec157, %if.end169 ]
  %72 = phi i32 [ %69, %if.end136.lr.ph ], [ %add151, %if.end169 ]
  %cmp139 = icmp eq i32 %71, 0
  br i1 %cmp139, label %save_state_and_return, label %if.end142

if.end142:                                        ; preds = %if.end136
  %73 = load i32, i32* %bsBuff143, align 8, !tbaa !107
  %shl144 = shl i32 %73, 8
  %74 = load i8*, i8** %next_in146, align 8, !tbaa !102
  %75 = load i8, i8* %74, align 1, !tbaa !12
  %conv147 = zext i8 %75 to i32
  %or148 = or i32 %shl144, %conv147
  store i32 %or148, i32* %bsBuff143, align 8, !tbaa !107
  %add151 = add nsw i32 %72, 8
  store i32 %add151, i32* %bsLive123.pre-phi, align 4, !tbaa !106
  %incdec.ptr154 = getelementptr inbounds i8, i8* %74, i64 1
  store i8* %incdec.ptr154, i8** %next_in146, align 8, !tbaa !102
  %dec157 = add i32 %71, -1
  store i32 %dec157, i32* %avail_in138, align 8, !tbaa !98
  %76 = load i32, i32* %total_in_lo32159, align 4, !tbaa !88
  %inc160 = add i32 %76, 1
  store i32 %inc160, i32* %total_in_lo32159, align 4, !tbaa !88
  %cmp163 = icmp eq i32 %inc160, 0
  br i1 %cmp163, label %if.then165, label %if.end169

if.then165:                                       ; preds = %if.end142
  %77 = load i32, i32* %total_in_hi32167, align 8, !tbaa !89
  %inc168 = add i32 %77, 1
  store i32 %inc168, i32* %total_in_hi32167, align 8, !tbaa !89
  br label %if.end169

if.end169:                                        ; preds = %if.then165, %if.end142
  %cmp124 = icmp sgt i32 %72, -1
  br i1 %cmp124, label %if.then126, label %if.end136

sw.bb176:                                         ; preds = %if.then126, %if.end.sw.bb176_crit_edge
  %78 = phi i32 [ %.pre, %if.end.sw.bb176_crit_edge ], [ %45, %if.then126 ]
  %79 = phi i32 [ %.pre5368, %if.end.sw.bb176_crit_edge ], [ %46, %if.then126 ]
  %80 = phi i32 [ %.pre5369, %if.end.sw.bb176_crit_edge ], [ %47, %if.then126 ]
  %81 = phi i32 [ %.pre5370, %if.end.sw.bb176_crit_edge ], [ %48, %if.then126 ]
  %82 = phi i32 [ %.pre5371, %if.end.sw.bb176_crit_edge ], [ %49, %if.then126 ]
  %83 = phi i32 [ %.pre5372, %if.end.sw.bb176_crit_edge ], [ %50, %if.then126 ]
  %84 = phi i32 [ %.pre5373, %if.end.sw.bb176_crit_edge ], [ %51, %if.then126 ]
  %85 = phi i32 [ %.pre5374, %if.end.sw.bb176_crit_edge ], [ %52, %if.then126 ]
  %86 = phi i32 [ %.pre5375, %if.end.sw.bb176_crit_edge ], [ %53, %if.then126 ]
  %87 = phi i32 [ %.pre5376, %if.end.sw.bb176_crit_edge ], [ %54, %if.then126 ]
  %88 = phi i32 [ %.pre5377, %if.end.sw.bb176_crit_edge ], [ %55, %if.then126 ]
  %89 = phi i32 [ %.pre5378, %if.end.sw.bb176_crit_edge ], [ %56, %if.then126 ]
  %90 = phi i32 [ %.pre5379, %if.end.sw.bb176_crit_edge ], [ %57, %if.then126 ]
  %91 = phi i32 [ %.pre5380, %if.end.sw.bb176_crit_edge ], [ %58, %if.then126 ]
  %92 = phi i32 [ %.pre5381, %if.end.sw.bb176_crit_edge ], [ %59, %if.then126 ]
  %93 = phi i32 [ %.pre5382, %if.end.sw.bb176_crit_edge ], [ %60, %if.then126 ]
  %94 = phi i32 [ %.pre5383, %if.end.sw.bb176_crit_edge ], [ %61, %if.then126 ]
  %95 = phi i32 [ %.pre5384, %if.end.sw.bb176_crit_edge ], [ %62, %if.then126 ]
  %96 = phi i32 [ %.pre5385, %if.end.sw.bb176_crit_edge ], [ %63, %if.then126 ]
  %97 = phi i32 [ %.pre5386, %if.end.sw.bb176_crit_edge ], [ %64, %if.then126 ]
  %98 = phi i32 [ %.pre5387, %if.end.sw.bb176_crit_edge ], [ %65, %if.then126 ]
  %99 = phi i32* [ %.pre5388, %if.end.sw.bb176_crit_edge ], [ %66, %if.then126 ]
  %100 = phi i32* [ %.pre5389, %if.end.sw.bb176_crit_edge ], [ %67, %if.then126 ]
  %101 = phi i32* [ %.pre5390, %if.end.sw.bb176_crit_edge ], [ %68, %if.then126 ]
  %save_j3.pre-phi6819 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_j3.pre-phi6820, %if.then126 ]
  %save_t4.pre-phi6763 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_t4.pre-phi6764, %if.then126 ]
  %save_alphaSize5.pre-phi6707 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_alphaSize5.pre-phi6708, %if.then126 ]
  %save_nGroups6.pre-phi6651 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_nGroups6.pre-phi6652, %if.then126 ]
  %save_nSelectors7.pre-phi6595 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_nSelectors7.pre-phi6596, %if.then126 ]
  %save_EOB8.pre-phi6539 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_EOB8.pre-phi6540, %if.then126 ]
  %save_groupNo9.pre-phi6483 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_groupNo9.pre-phi6484, %if.then126 ]
  %save_groupPos10.pre-phi6427 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_groupPos10.pre-phi6428, %if.then126 ]
  %save_nextSym11.pre-phi6371 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_nextSym11.pre-phi6372, %if.then126 ]
  %save_nblockMAX12.pre-phi6315 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_nblockMAX12.pre-phi6316, %if.then126 ]
  %save_nblock13.pre-phi6259 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_nblock13.pre-phi6260, %if.then126 ]
  %save_es14.pre-phi6203 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_es14.pre-phi6204, %if.then126 ]
  %save_N15.pre-phi6147 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_N15.pre-phi6148, %if.then126 ]
  %save_curr16.pre-phi6091 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_curr16.pre-phi6092, %if.then126 ]
  %save_zt17.pre-phi6035 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_zt17.pre-phi6036, %if.then126 ]
  %save_zn18.pre-phi5979 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_zn18.pre-phi5980, %if.then126 ]
  %save_zvec19.pre-phi5923 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_zvec19.pre-phi5924, %if.then126 ]
  %save_zj20.pre-phi5867 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_zj20.pre-phi5868, %if.then126 ]
  %save_gSel21.pre-phi5811 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_gSel21.pre-phi5812, %if.then126 ]
  %save_gMinlen22.pre-phi5755 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_gMinlen22.pre-phi5756, %if.then126 ]
  %save_gLimit23.pre-phi5699 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_gLimit23.pre-phi5700, %if.then126 ]
  %save_gBase24.pre-phi5643 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_gBase24.pre-phi5644, %if.then126 ]
  %save_gPerm25.pre-phi5587 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %save_gPerm25.pre-phi5588, %if.then126 ]
  %bsLive180.pre-phi = phi i32* [ %bsLive180.phi.trans.insert, %if.end.sw.bb176_crit_edge ], [ %bsLive123.pre-phi, %if.then126 ]
  %102 = phi i32 [ %.pre5399, %if.end.sw.bb176_crit_edge ], [ %sub130, %if.then126 ]
  store i32 13, i32* %state, align 8, !tbaa !105
  %cmp1815178 = icmp sgt i32 %102, 7
  br i1 %cmp1815178, label %sw.bb176.if.then183_crit_edge, label %if.end192.lr.ph

sw.bb176.if.then183_crit_edge:                    ; preds = %sw.bb176
  %bsBuff185.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %.pre5401 = load i32, i32* %bsBuff185.phi.trans.insert, align 8, !tbaa !107
  br label %if.then183

if.end192.lr.ph:                                  ; preds = %sw.bb176
  %avail_in194 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 1
  %bsBuff199 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  %next_in202 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 0
  %total_in_lo32215 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 2
  %total_in_hi32223 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 3
  %.pre5400 = load i32, i32* %avail_in194, align 8, !tbaa !98
  br label %if.end192

if.then183:                                       ; preds = %if.end225, %sw.bb176.if.then183_crit_edge
  %103 = phi i32 [ %.pre5401, %sw.bb176.if.then183_crit_edge ], [ %or204, %if.end225 ]
  %.lcssa4999 = phi i32 [ %102, %sw.bb176.if.then183_crit_edge ], [ %add207, %if.end225 ]
  %sub187 = add nsw i32 %.lcssa4999, -8
  %shr188 = lshr i32 %103, %sub187
  %and189 = and i32 %shr188, 255
  store i32 %sub187, i32* %bsLive180.pre-phi, align 4, !tbaa !106
  %blockSize100k = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 9
  store i32 %and189, i32* %blockSize100k, align 8, !tbaa !173
  %and189.off = add nsw i32 %and189, -49
  %104 = icmp ugt i32 %and189.off, 8
  br i1 %104, label %save_state_and_return, label %if.end234

if.end192:                                        ; preds = %if.end225, %if.end192.lr.ph
  %105 = phi i32 [ %.pre5400, %if.end192.lr.ph ], [ %dec213, %if.end225 ]
  %106 = phi i32 [ %102, %if.end192.lr.ph ], [ %add207, %if.end225 ]
  %cmp195 = icmp eq i32 %105, 0
  br i1 %cmp195, label %save_state_and_return, label %if.end198

if.end198:                                        ; preds = %if.end192
  %107 = load i32, i32* %bsBuff199, align 8, !tbaa !107
  %shl200 = shl i32 %107, 8
  %108 = load i8*, i8** %next_in202, align 8, !tbaa !102
  %109 = load i8, i8* %108, align 1, !tbaa !12
  %conv203 = zext i8 %109 to i32
  %or204 = or i32 %shl200, %conv203
  store i32 %or204, i32* %bsBuff199, align 8, !tbaa !107
  %add207 = add nsw i32 %106, 8
  store i32 %add207, i32* %bsLive180.pre-phi, align 4, !tbaa !106
  %incdec.ptr210 = getelementptr inbounds i8, i8* %108, i64 1
  store i8* %incdec.ptr210, i8** %next_in202, align 8, !tbaa !102
  %dec213 = add i32 %105, -1
  store i32 %dec213, i32* %avail_in194, align 8, !tbaa !98
  %110 = load i32, i32* %total_in_lo32215, align 4, !tbaa !88
  %inc216 = add i32 %110, 1
  store i32 %inc216, i32* %total_in_lo32215, align 4, !tbaa !88
  %cmp219 = icmp eq i32 %inc216, 0
  br i1 %cmp219, label %if.then221, label %if.end225

if.then221:                                       ; preds = %if.end198
  %111 = load i32, i32* %total_in_hi32223, align 8, !tbaa !89
  %inc224 = add i32 %111, 1
  store i32 %inc224, i32* %total_in_hi32223, align 8, !tbaa !89
  br label %if.end225

if.end225:                                        ; preds = %if.then221, %if.end198
  %cmp181 = icmp sgt i32 %106, -1
  br i1 %cmp181, label %if.then183, label %if.end192

if.end234:                                        ; preds = %if.then183
  %sub236 = add nsw i32 %and189, -48
  store i32 %sub236, i32* %blockSize100k, align 8, !tbaa !173
  %smallDecompress = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 10
  %112 = load i8, i8* %smallDecompress, align 4, !tbaa !109
  %tobool = icmp eq i8 %112, 0
  %bzalloc = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 9
  %113 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  %opaque = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i64 0, i32 11
  %114 = load i8*, i8** %opaque, align 8, !tbaa !78
  br i1 %tobool, label %if.else, label %if.then237

if.then237:                                       ; preds = %if.end234
  %mul240 = mul nsw i32 %sub236, 200000
  %call = tail call i8* %113(i8* %114, i32 %mul240, i32 1) #2
  %ll16 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 21
  %115 = bitcast i16** %ll16 to i8**
  store i8* %call, i8** %115, align 8, !tbaa !120
  %116 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %bzalloc, align 8, !tbaa !75
  %117 = load i8*, i8** %opaque, align 8, !tbaa !78
  %118 = load i32, i32* %blockSize100k, align 8, !tbaa !173
  %mul245 = mul nsw i32 %118, 100000
  %shr247 = ashr exact i32 %mul245, 1
  %call251 = tail call i8* %116(i8* %117, i32 %shr247, i32 1) #2
  %ll4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 22
  store i8* %call251, i8** %ll4, align 8, !tbaa !121
  %119 = load i16*, i16** %ll16, align 8, !tbaa !120
  %cmp253 = icmp eq i16* %119, null
  %cmp257 = icmp eq i8* %call251, null
  %or.cond4829 = or i1 %cmp257, %cmp253
  br i1 %or.cond4829, label %save_state_and_return, label %sw.bb275

if.else:                                          ; preds = %if.end234
  %mul266 = mul nsw i32 %sub236, 400000
  %call268 = tail call i8* %113(i8* %114, i32 %mul266, i32 1) #2
  %tt = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 20
  %120 = bitcast i32** %tt to i8**
  store i8* %call268, i8** %120, align 8, !tbaa !124
  %cmp270 = icmp eq i8* %call268, null
  br i1 %cmp270, label %save_state_and_return, label %sw.bb275

sw.bb275:                                         ; preds = %if.else, %if.then237, %if.end.sw.bb275_crit_edge
  %121 = phi i32 [ %.pre, %if.end.sw.bb275_crit_edge ], [ %78, %if.then237 ], [ %78, %if.else ]
  %122 = phi i32 [ %.pre5368, %if.end.sw.bb275_crit_edge ], [ %79, %if.then237 ], [ %79, %if.else ]
  %123 = phi i32 [ %.pre5369, %if.end.sw.bb275_crit_edge ], [ %80, %if.then237 ], [ %80, %if.else ]
  %124 = phi i32 [ %.pre5370, %if.end.sw.bb275_crit_edge ], [ %81, %if.then237 ], [ %81, %if.else ]
  %125 = phi i32 [ %.pre5371, %if.end.sw.bb275_crit_edge ], [ %82, %if.then237 ], [ %82, %if.else ]
  %126 = phi i32 [ %.pre5372, %if.end.sw.bb275_crit_edge ], [ %83, %if.then237 ], [ %83, %if.else ]
  %127 = phi i32 [ %.pre5373, %if.end.sw.bb275_crit_edge ], [ %84, %if.then237 ], [ %84, %if.else ]
  %128 = phi i32 [ %.pre5374, %if.end.sw.bb275_crit_edge ], [ %85, %if.then237 ], [ %85, %if.else ]
  %129 = phi i32 [ %.pre5375, %if.end.sw.bb275_crit_edge ], [ %86, %if.then237 ], [ %86, %if.else ]
  %130 = phi i32 [ %.pre5376, %if.end.sw.bb275_crit_edge ], [ %87, %if.then237 ], [ %87, %if.else ]
  %131 = phi i32 [ %.pre5377, %if.end.sw.bb275_crit_edge ], [ %88, %if.then237 ], [ %88, %if.else ]
  %132 = phi i32 [ %.pre5378, %if.end.sw.bb275_crit_edge ], [ %89, %if.then237 ], [ %89, %if.else ]
  %133 = phi i32 [ %.pre5379, %if.end.sw.bb275_crit_edge ], [ %90, %if.then237 ], [ %90, %if.else ]
  %134 = phi i32 [ %.pre5380, %if.end.sw.bb275_crit_edge ], [ %91, %if.then237 ], [ %91, %if.else ]
  %135 = phi i32 [ %.pre5381, %if.end.sw.bb275_crit_edge ], [ %92, %if.then237 ], [ %92, %if.else ]
  %136 = phi i32 [ %.pre5382, %if.end.sw.bb275_crit_edge ], [ %93, %if.then237 ], [ %93, %if.else ]
  %137 = phi i32 [ %.pre5383, %if.end.sw.bb275_crit_edge ], [ %94, %if.then237 ], [ %94, %if.else ]
  %138 = phi i32 [ %.pre5384, %if.end.sw.bb275_crit_edge ], [ %95, %if.then237 ], [ %95, %if.else ]
  %139 = phi i32 [ %.pre5385, %if.end.sw.bb275_crit_edge ], [ %96, %if.then237 ], [ %96, %if.else ]
  %140 = phi i32 [ %.pre5386, %if.end.sw.bb275_crit_edge ], [ %97, %if.then237 ], [ %97, %if.else ]
  %141 = phi i32 [ %.pre5387, %if.end.sw.bb275_crit_edge ], [ %98, %if.then237 ], [ %98, %if.else ]
  %142 = phi i32* [ %.pre5388, %if.end.sw.bb275_crit_edge ], [ %99, %if.then237 ], [ %99, %if.else ]
  %143 = phi i32* [ %.pre5389, %if.end.sw.bb275_crit_edge ], [ %100, %if.then237 ], [ %100, %if.else ]
  %144 = phi i32* [ %.pre5390, %if.end.sw.bb275_crit_edge ], [ %101, %if.then237 ], [ %101, %if.else ]
  %save_j3.pre-phi6818 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_j3.pre-phi6819, %if.then237 ], [ %save_j3.pre-phi6819, %if.else ]
  %save_t4.pre-phi6762 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_t4.pre-phi6763, %if.then237 ], [ %save_t4.pre-phi6763, %if.else ]
  %save_alphaSize5.pre-phi6706 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_alphaSize5.pre-phi6707, %if.then237 ], [ %save_alphaSize5.pre-phi6707, %if.else ]
  %save_nGroups6.pre-phi6650 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_nGroups6.pre-phi6651, %if.then237 ], [ %save_nGroups6.pre-phi6651, %if.else ]
  %save_nSelectors7.pre-phi6594 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_nSelectors7.pre-phi6595, %if.then237 ], [ %save_nSelectors7.pre-phi6595, %if.else ]
  %save_EOB8.pre-phi6538 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_EOB8.pre-phi6539, %if.then237 ], [ %save_EOB8.pre-phi6539, %if.else ]
  %save_groupNo9.pre-phi6482 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_groupNo9.pre-phi6483, %if.then237 ], [ %save_groupNo9.pre-phi6483, %if.else ]
  %save_groupPos10.pre-phi6426 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_groupPos10.pre-phi6427, %if.then237 ], [ %save_groupPos10.pre-phi6427, %if.else ]
  %save_nextSym11.pre-phi6370 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_nextSym11.pre-phi6371, %if.then237 ], [ %save_nextSym11.pre-phi6371, %if.else ]
  %save_nblockMAX12.pre-phi6314 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_nblockMAX12.pre-phi6315, %if.then237 ], [ %save_nblockMAX12.pre-phi6315, %if.else ]
  %save_nblock13.pre-phi6258 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_nblock13.pre-phi6259, %if.then237 ], [ %save_nblock13.pre-phi6259, %if.else ]
  %save_es14.pre-phi6202 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_es14.pre-phi6203, %if.then237 ], [ %save_es14.pre-phi6203, %if.else ]
  %save_N15.pre-phi6146 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_N15.pre-phi6147, %if.then237 ], [ %save_N15.pre-phi6147, %if.else ]
  %save_curr16.pre-phi6090 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_curr16.pre-phi6091, %if.then237 ], [ %save_curr16.pre-phi6091, %if.else ]
  %save_zt17.pre-phi6034 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_zt17.pre-phi6035, %if.then237 ], [ %save_zt17.pre-phi6035, %if.else ]
  %save_zn18.pre-phi5978 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_zn18.pre-phi5979, %if.then237 ], [ %save_zn18.pre-phi5979, %if.else ]
  %save_zvec19.pre-phi5922 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_zvec19.pre-phi5923, %if.then237 ], [ %save_zvec19.pre-phi5923, %if.else ]
  %save_zj20.pre-phi5866 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_zj20.pre-phi5867, %if.then237 ], [ %save_zj20.pre-phi5867, %if.else ]
  %save_gSel21.pre-phi5810 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_gSel21.pre-phi5811, %if.then237 ], [ %save_gSel21.pre-phi5811, %if.else ]
  %save_gMinlen22.pre-phi5754 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_gMinlen22.pre-phi5755, %if.then237 ], [ %save_gMinlen22.pre-phi5755, %if.else ]
  %save_gLimit23.pre-phi5698 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_gLimit23.pre-phi5699, %if.then237 ], [ %save_gLimit23.pre-phi5699, %if.else ]
  %save_gBase24.pre-phi5642 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_gBase24.pre-phi5643, %if.then237 ], [ %save_gBase24.pre-phi5643, %if.else ]
  %save_gPerm25.pre-phi5586 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb275_crit_edge ], [ %save_gPerm25.pre-phi5587, %if.then237 ], [ %save_gPerm25.pre-phi5587, %if.else ]
  %bsLive279.pre-phi = phi i32* [ %.pre5530, %if.end.sw.bb275_crit_edge ], [ %bsLive180.pre-phi, %if.then237 ], [ %bsLive180.pre-phi, %if.else ]
  store i32 14, i32* %state, align 8, !tbaa !105
  %145 = load i32, i32* %bsLive279.pre-phi, align 4, !tbaa !106
  %cmp2805175 = icmp sgt i32 %145, 7
  %bsBuff284.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp2805175, label %sw.bb275.if.then282_crit_edge, label %if.end292.lr.ph

sw.bb275.if.then282_crit_edge:                    ; preds = %sw.bb275
  %.pre5404 = load i32, i32* %bsBuff284.phi.trans.insert, align 8, !tbaa !107
  br label %if.then282

if.end292.lr.ph:                                  ; preds = %sw.bb275
  %.pre5402 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in294.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5402, i64 0, i32 1
  %.pre5403 = load i32, i32* %avail_in294.phi.trans.insert, align 8, !tbaa !98
  %next_in302 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5402, i64 0, i32 0
  %total_in_lo32315 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5402, i64 0, i32 2
  %total_in_hi32323 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5402, i64 0, i32 3
  br label %if.end292

if.then282:                                       ; preds = %if.end325, %sw.bb275.if.then282_crit_edge
  %146 = phi i32 [ %.pre5404, %sw.bb275.if.then282_crit_edge ], [ %or304, %if.end325 ]
  %.lcssa4996 = phi i32 [ %145, %sw.bb275.if.then282_crit_edge ], [ %add307, %if.end325 ]
  %sub286 = add nsw i32 %.lcssa4996, -8
  %shr287 = lshr i32 %146, %sub286
  store i32 %sub286, i32* %bsLive279.pre-phi, align 4, !tbaa !106
  %trunc4835 = trunc i32 %shr287 to i8
  switch i8 %trunc4835, label %save_state_and_return [
    i8 23, label %sw.bb2943
    i8 49, label %sw.bb337
  ]

if.end292:                                        ; preds = %if.end325, %if.end292.lr.ph
  %147 = phi i32 [ %.pre5403, %if.end292.lr.ph ], [ %dec313, %if.end325 ]
  %148 = phi i32 [ %145, %if.end292.lr.ph ], [ %add307, %if.end325 ]
  %cmp295 = icmp eq i32 %147, 0
  br i1 %cmp295, label %save_state_and_return, label %if.end298

if.end298:                                        ; preds = %if.end292
  %149 = load i32, i32* %bsBuff284.phi.trans.insert, align 8, !tbaa !107
  %shl300 = shl i32 %149, 8
  %150 = load i8*, i8** %next_in302, align 8, !tbaa !102
  %151 = load i8, i8* %150, align 1, !tbaa !12
  %conv303 = zext i8 %151 to i32
  %or304 = or i32 %shl300, %conv303
  store i32 %or304, i32* %bsBuff284.phi.trans.insert, align 8, !tbaa !107
  %add307 = add nsw i32 %148, 8
  store i32 %add307, i32* %bsLive279.pre-phi, align 4, !tbaa !106
  %incdec.ptr310 = getelementptr inbounds i8, i8* %150, i64 1
  store i8* %incdec.ptr310, i8** %next_in302, align 8, !tbaa !102
  %dec313 = add i32 %147, -1
  store i32 %dec313, i32* %avail_in294.phi.trans.insert, align 8, !tbaa !98
  %152 = load i32, i32* %total_in_lo32315, align 4, !tbaa !88
  %inc316 = add i32 %152, 1
  store i32 %inc316, i32* %total_in_lo32315, align 4, !tbaa !88
  %cmp319 = icmp eq i32 %inc316, 0
  br i1 %cmp319, label %if.then321, label %if.end325

if.then321:                                       ; preds = %if.end298
  %153 = load i32, i32* %total_in_hi32323, align 8, !tbaa !89
  %inc324 = add i32 %153, 1
  store i32 %inc324, i32* %total_in_hi32323, align 8, !tbaa !89
  br label %if.end325

if.end325:                                        ; preds = %if.then321, %if.end298
  %cmp280 = icmp sgt i32 %148, -1
  br i1 %cmp280, label %if.then282, label %if.end292

sw.bb337:                                         ; preds = %if.then282, %if.end.sw.bb337_crit_edge
  %154 = phi i32 [ %.pre, %if.end.sw.bb337_crit_edge ], [ %121, %if.then282 ]
  %155 = phi i32 [ %.pre5368, %if.end.sw.bb337_crit_edge ], [ %122, %if.then282 ]
  %156 = phi i32 [ %.pre5369, %if.end.sw.bb337_crit_edge ], [ %123, %if.then282 ]
  %157 = phi i32 [ %.pre5370, %if.end.sw.bb337_crit_edge ], [ %124, %if.then282 ]
  %158 = phi i32 [ %.pre5371, %if.end.sw.bb337_crit_edge ], [ %125, %if.then282 ]
  %159 = phi i32 [ %.pre5372, %if.end.sw.bb337_crit_edge ], [ %126, %if.then282 ]
  %160 = phi i32 [ %.pre5373, %if.end.sw.bb337_crit_edge ], [ %127, %if.then282 ]
  %161 = phi i32 [ %.pre5374, %if.end.sw.bb337_crit_edge ], [ %128, %if.then282 ]
  %162 = phi i32 [ %.pre5375, %if.end.sw.bb337_crit_edge ], [ %129, %if.then282 ]
  %163 = phi i32 [ %.pre5376, %if.end.sw.bb337_crit_edge ], [ %130, %if.then282 ]
  %164 = phi i32 [ %.pre5377, %if.end.sw.bb337_crit_edge ], [ %131, %if.then282 ]
  %165 = phi i32 [ %.pre5378, %if.end.sw.bb337_crit_edge ], [ %132, %if.then282 ]
  %166 = phi i32 [ %.pre5379, %if.end.sw.bb337_crit_edge ], [ %133, %if.then282 ]
  %167 = phi i32 [ %.pre5380, %if.end.sw.bb337_crit_edge ], [ %134, %if.then282 ]
  %168 = phi i32 [ %.pre5381, %if.end.sw.bb337_crit_edge ], [ %135, %if.then282 ]
  %169 = phi i32 [ %.pre5382, %if.end.sw.bb337_crit_edge ], [ %136, %if.then282 ]
  %170 = phi i32 [ %.pre5383, %if.end.sw.bb337_crit_edge ], [ %137, %if.then282 ]
  %171 = phi i32 [ %.pre5384, %if.end.sw.bb337_crit_edge ], [ %138, %if.then282 ]
  %172 = phi i32 [ %.pre5385, %if.end.sw.bb337_crit_edge ], [ %139, %if.then282 ]
  %173 = phi i32 [ %.pre5386, %if.end.sw.bb337_crit_edge ], [ %140, %if.then282 ]
  %174 = phi i32 [ %.pre5387, %if.end.sw.bb337_crit_edge ], [ %141, %if.then282 ]
  %175 = phi i32* [ %.pre5388, %if.end.sw.bb337_crit_edge ], [ %142, %if.then282 ]
  %176 = phi i32* [ %.pre5389, %if.end.sw.bb337_crit_edge ], [ %143, %if.then282 ]
  %177 = phi i32* [ %.pre5390, %if.end.sw.bb337_crit_edge ], [ %144, %if.then282 ]
  %save_j3.pre-phi6808 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_j3.pre-phi6818, %if.then282 ]
  %save_t4.pre-phi6752 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_t4.pre-phi6762, %if.then282 ]
  %save_alphaSize5.pre-phi6696 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_alphaSize5.pre-phi6706, %if.then282 ]
  %save_nGroups6.pre-phi6640 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_nGroups6.pre-phi6650, %if.then282 ]
  %save_nSelectors7.pre-phi6584 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_nSelectors7.pre-phi6594, %if.then282 ]
  %save_EOB8.pre-phi6528 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_EOB8.pre-phi6538, %if.then282 ]
  %save_groupNo9.pre-phi6472 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_groupNo9.pre-phi6482, %if.then282 ]
  %save_groupPos10.pre-phi6416 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_groupPos10.pre-phi6426, %if.then282 ]
  %save_nextSym11.pre-phi6360 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_nextSym11.pre-phi6370, %if.then282 ]
  %save_nblockMAX12.pre-phi6304 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_nblockMAX12.pre-phi6314, %if.then282 ]
  %save_nblock13.pre-phi6248 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_nblock13.pre-phi6258, %if.then282 ]
  %save_es14.pre-phi6192 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_es14.pre-phi6202, %if.then282 ]
  %save_N15.pre-phi6136 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_N15.pre-phi6146, %if.then282 ]
  %save_curr16.pre-phi6080 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_curr16.pre-phi6090, %if.then282 ]
  %save_zt17.pre-phi6024 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_zt17.pre-phi6034, %if.then282 ]
  %save_zn18.pre-phi5968 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_zn18.pre-phi5978, %if.then282 ]
  %save_zvec19.pre-phi5912 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_zvec19.pre-phi5922, %if.then282 ]
  %save_zj20.pre-phi5856 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_zj20.pre-phi5866, %if.then282 ]
  %save_gSel21.pre-phi5800 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_gSel21.pre-phi5810, %if.then282 ]
  %save_gMinlen22.pre-phi5744 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_gMinlen22.pre-phi5754, %if.then282 ]
  %save_gLimit23.pre-phi5688 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_gLimit23.pre-phi5698, %if.then282 ]
  %save_gBase24.pre-phi5632 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_gBase24.pre-phi5642, %if.then282 ]
  %save_gPerm25.pre-phi5576 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %save_gPerm25.pre-phi5586, %if.then282 ]
  %bsLive341.pre-phi = phi i32* [ %bsLive341.phi.trans.insert, %if.end.sw.bb337_crit_edge ], [ %bsLive279.pre-phi, %if.then282 ]
  %178 = phi i32 [ %.pre5405, %if.end.sw.bb337_crit_edge ], [ %sub286, %if.then282 ]
  store i32 15, i32* %state, align 8, !tbaa !105
  %cmp3425172 = icmp sgt i32 %178, 7
  %bsBuff346.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp3425172, label %sw.bb337.if.then344_crit_edge, label %if.end354.lr.ph

sw.bb337.if.then344_crit_edge:                    ; preds = %sw.bb337
  %.pre5408 = load i32, i32* %bsBuff346.phi.trans.insert, align 8, !tbaa !107
  br label %if.then344

if.end354.lr.ph:                                  ; preds = %sw.bb337
  %.pre5406 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in356.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5406, i64 0, i32 1
  %.pre5407 = load i32, i32* %avail_in356.phi.trans.insert, align 8, !tbaa !98
  %next_in364 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5406, i64 0, i32 0
  %total_in_lo32377 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5406, i64 0, i32 2
  %total_in_hi32385 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5406, i64 0, i32 3
  br label %if.end354

if.then344:                                       ; preds = %if.end387, %sw.bb337.if.then344_crit_edge
  %179 = phi i32 [ %.pre5408, %sw.bb337.if.then344_crit_edge ], [ %or366, %if.end387 ]
  %.lcssa4993 = phi i32 [ %178, %sw.bb337.if.then344_crit_edge ], [ %add369, %if.end387 ]
  %sub348 = add nsw i32 %.lcssa4993, -8
  %shr349 = lshr i32 %179, %sub348
  store i32 %sub348, i32* %bsLive341.pre-phi, align 4, !tbaa !106
  %conv389 = and i32 %shr349, 255
  %cmp390 = icmp eq i32 %conv389, 65
  br i1 %cmp390, label %sw.bb394, label %save_state_and_return

if.end354:                                        ; preds = %if.end387, %if.end354.lr.ph
  %180 = phi i32 [ %.pre5407, %if.end354.lr.ph ], [ %dec375, %if.end387 ]
  %181 = phi i32 [ %178, %if.end354.lr.ph ], [ %add369, %if.end387 ]
  %cmp357 = icmp eq i32 %180, 0
  br i1 %cmp357, label %save_state_and_return, label %if.end360

if.end360:                                        ; preds = %if.end354
  %182 = load i32, i32* %bsBuff346.phi.trans.insert, align 8, !tbaa !107
  %shl362 = shl i32 %182, 8
  %183 = load i8*, i8** %next_in364, align 8, !tbaa !102
  %184 = load i8, i8* %183, align 1, !tbaa !12
  %conv365 = zext i8 %184 to i32
  %or366 = or i32 %shl362, %conv365
  store i32 %or366, i32* %bsBuff346.phi.trans.insert, align 8, !tbaa !107
  %add369 = add nsw i32 %181, 8
  store i32 %add369, i32* %bsLive341.pre-phi, align 4, !tbaa !106
  %incdec.ptr372 = getelementptr inbounds i8, i8* %183, i64 1
  store i8* %incdec.ptr372, i8** %next_in364, align 8, !tbaa !102
  %dec375 = add i32 %180, -1
  store i32 %dec375, i32* %avail_in356.phi.trans.insert, align 8, !tbaa !98
  %185 = load i32, i32* %total_in_lo32377, align 4, !tbaa !88
  %inc378 = add i32 %185, 1
  store i32 %inc378, i32* %total_in_lo32377, align 4, !tbaa !88
  %cmp381 = icmp eq i32 %inc378, 0
  br i1 %cmp381, label %if.then383, label %if.end387

if.then383:                                       ; preds = %if.end360
  %186 = load i32, i32* %total_in_hi32385, align 8, !tbaa !89
  %inc386 = add i32 %186, 1
  store i32 %inc386, i32* %total_in_hi32385, align 8, !tbaa !89
  br label %if.end387

if.end387:                                        ; preds = %if.then383, %if.end360
  %cmp342 = icmp sgt i32 %181, -1
  br i1 %cmp342, label %if.then344, label %if.end354

sw.bb394:                                         ; preds = %if.then344, %if.end.sw.bb394_crit_edge
  %187 = phi i32 [ %.pre, %if.end.sw.bb394_crit_edge ], [ %154, %if.then344 ]
  %188 = phi i32 [ %.pre5368, %if.end.sw.bb394_crit_edge ], [ %155, %if.then344 ]
  %189 = phi i32 [ %.pre5369, %if.end.sw.bb394_crit_edge ], [ %156, %if.then344 ]
  %190 = phi i32 [ %.pre5370, %if.end.sw.bb394_crit_edge ], [ %157, %if.then344 ]
  %191 = phi i32 [ %.pre5371, %if.end.sw.bb394_crit_edge ], [ %158, %if.then344 ]
  %192 = phi i32 [ %.pre5372, %if.end.sw.bb394_crit_edge ], [ %159, %if.then344 ]
  %193 = phi i32 [ %.pre5373, %if.end.sw.bb394_crit_edge ], [ %160, %if.then344 ]
  %194 = phi i32 [ %.pre5374, %if.end.sw.bb394_crit_edge ], [ %161, %if.then344 ]
  %195 = phi i32 [ %.pre5375, %if.end.sw.bb394_crit_edge ], [ %162, %if.then344 ]
  %196 = phi i32 [ %.pre5376, %if.end.sw.bb394_crit_edge ], [ %163, %if.then344 ]
  %197 = phi i32 [ %.pre5377, %if.end.sw.bb394_crit_edge ], [ %164, %if.then344 ]
  %198 = phi i32 [ %.pre5378, %if.end.sw.bb394_crit_edge ], [ %165, %if.then344 ]
  %199 = phi i32 [ %.pre5379, %if.end.sw.bb394_crit_edge ], [ %166, %if.then344 ]
  %200 = phi i32 [ %.pre5380, %if.end.sw.bb394_crit_edge ], [ %167, %if.then344 ]
  %201 = phi i32 [ %.pre5381, %if.end.sw.bb394_crit_edge ], [ %168, %if.then344 ]
  %202 = phi i32 [ %.pre5382, %if.end.sw.bb394_crit_edge ], [ %169, %if.then344 ]
  %203 = phi i32 [ %.pre5383, %if.end.sw.bb394_crit_edge ], [ %170, %if.then344 ]
  %204 = phi i32 [ %.pre5384, %if.end.sw.bb394_crit_edge ], [ %171, %if.then344 ]
  %205 = phi i32 [ %.pre5385, %if.end.sw.bb394_crit_edge ], [ %172, %if.then344 ]
  %206 = phi i32 [ %.pre5386, %if.end.sw.bb394_crit_edge ], [ %173, %if.then344 ]
  %207 = phi i32 [ %.pre5387, %if.end.sw.bb394_crit_edge ], [ %174, %if.then344 ]
  %208 = phi i32* [ %.pre5388, %if.end.sw.bb394_crit_edge ], [ %175, %if.then344 ]
  %209 = phi i32* [ %.pre5389, %if.end.sw.bb394_crit_edge ], [ %176, %if.then344 ]
  %210 = phi i32* [ %.pre5390, %if.end.sw.bb394_crit_edge ], [ %177, %if.then344 ]
  %save_j3.pre-phi6807 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_j3.pre-phi6808, %if.then344 ]
  %save_t4.pre-phi6751 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_t4.pre-phi6752, %if.then344 ]
  %save_alphaSize5.pre-phi6695 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_alphaSize5.pre-phi6696, %if.then344 ]
  %save_nGroups6.pre-phi6639 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_nGroups6.pre-phi6640, %if.then344 ]
  %save_nSelectors7.pre-phi6583 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_nSelectors7.pre-phi6584, %if.then344 ]
  %save_EOB8.pre-phi6527 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_EOB8.pre-phi6528, %if.then344 ]
  %save_groupNo9.pre-phi6471 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_groupNo9.pre-phi6472, %if.then344 ]
  %save_groupPos10.pre-phi6415 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_groupPos10.pre-phi6416, %if.then344 ]
  %save_nextSym11.pre-phi6359 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_nextSym11.pre-phi6360, %if.then344 ]
  %save_nblockMAX12.pre-phi6303 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_nblockMAX12.pre-phi6304, %if.then344 ]
  %save_nblock13.pre-phi6247 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_nblock13.pre-phi6248, %if.then344 ]
  %save_es14.pre-phi6191 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_es14.pre-phi6192, %if.then344 ]
  %save_N15.pre-phi6135 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_N15.pre-phi6136, %if.then344 ]
  %save_curr16.pre-phi6079 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_curr16.pre-phi6080, %if.then344 ]
  %save_zt17.pre-phi6023 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_zt17.pre-phi6024, %if.then344 ]
  %save_zn18.pre-phi5967 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_zn18.pre-phi5968, %if.then344 ]
  %save_zvec19.pre-phi5911 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_zvec19.pre-phi5912, %if.then344 ]
  %save_zj20.pre-phi5855 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_zj20.pre-phi5856, %if.then344 ]
  %save_gSel21.pre-phi5799 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_gSel21.pre-phi5800, %if.then344 ]
  %save_gMinlen22.pre-phi5743 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_gMinlen22.pre-phi5744, %if.then344 ]
  %save_gLimit23.pre-phi5687 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_gLimit23.pre-phi5688, %if.then344 ]
  %save_gBase24.pre-phi5631 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_gBase24.pre-phi5632, %if.then344 ]
  %save_gPerm25.pre-phi5575 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %save_gPerm25.pre-phi5576, %if.then344 ]
  %bsLive398.pre-phi = phi i32* [ %bsLive398.phi.trans.insert, %if.end.sw.bb394_crit_edge ], [ %bsLive341.pre-phi, %if.then344 ]
  %211 = phi i32 [ %.pre5409, %if.end.sw.bb394_crit_edge ], [ %sub348, %if.then344 ]
  store i32 16, i32* %state, align 8, !tbaa !105
  %cmp3995169 = icmp sgt i32 %211, 7
  %bsBuff403.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp3995169, label %sw.bb394.if.then401_crit_edge, label %if.end411.lr.ph

sw.bb394.if.then401_crit_edge:                    ; preds = %sw.bb394
  %.pre5412 = load i32, i32* %bsBuff403.phi.trans.insert, align 8, !tbaa !107
  br label %if.then401

if.end411.lr.ph:                                  ; preds = %sw.bb394
  %.pre5410 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in413.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5410, i64 0, i32 1
  %.pre5411 = load i32, i32* %avail_in413.phi.trans.insert, align 8, !tbaa !98
  %next_in421 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5410, i64 0, i32 0
  %total_in_lo32434 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5410, i64 0, i32 2
  %total_in_hi32442 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5410, i64 0, i32 3
  br label %if.end411

if.then401:                                       ; preds = %if.end444, %sw.bb394.if.then401_crit_edge
  %212 = phi i32 [ %.pre5412, %sw.bb394.if.then401_crit_edge ], [ %or423, %if.end444 ]
  %.lcssa4990 = phi i32 [ %211, %sw.bb394.if.then401_crit_edge ], [ %add426, %if.end444 ]
  %sub405 = add nsw i32 %.lcssa4990, -8
  %shr406 = lshr i32 %212, %sub405
  store i32 %sub405, i32* %bsLive398.pre-phi, align 4, !tbaa !106
  %conv446 = and i32 %shr406, 255
  %cmp447 = icmp eq i32 %conv446, 89
  br i1 %cmp447, label %sw.bb451, label %save_state_and_return

if.end411:                                        ; preds = %if.end444, %if.end411.lr.ph
  %213 = phi i32 [ %.pre5411, %if.end411.lr.ph ], [ %dec432, %if.end444 ]
  %214 = phi i32 [ %211, %if.end411.lr.ph ], [ %add426, %if.end444 ]
  %cmp414 = icmp eq i32 %213, 0
  br i1 %cmp414, label %save_state_and_return, label %if.end417

if.end417:                                        ; preds = %if.end411
  %215 = load i32, i32* %bsBuff403.phi.trans.insert, align 8, !tbaa !107
  %shl419 = shl i32 %215, 8
  %216 = load i8*, i8** %next_in421, align 8, !tbaa !102
  %217 = load i8, i8* %216, align 1, !tbaa !12
  %conv422 = zext i8 %217 to i32
  %or423 = or i32 %shl419, %conv422
  store i32 %or423, i32* %bsBuff403.phi.trans.insert, align 8, !tbaa !107
  %add426 = add nsw i32 %214, 8
  store i32 %add426, i32* %bsLive398.pre-phi, align 4, !tbaa !106
  %incdec.ptr429 = getelementptr inbounds i8, i8* %216, i64 1
  store i8* %incdec.ptr429, i8** %next_in421, align 8, !tbaa !102
  %dec432 = add i32 %213, -1
  store i32 %dec432, i32* %avail_in413.phi.trans.insert, align 8, !tbaa !98
  %218 = load i32, i32* %total_in_lo32434, align 4, !tbaa !88
  %inc435 = add i32 %218, 1
  store i32 %inc435, i32* %total_in_lo32434, align 4, !tbaa !88
  %cmp438 = icmp eq i32 %inc435, 0
  br i1 %cmp438, label %if.then440, label %if.end444

if.then440:                                       ; preds = %if.end417
  %219 = load i32, i32* %total_in_hi32442, align 8, !tbaa !89
  %inc443 = add i32 %219, 1
  store i32 %inc443, i32* %total_in_hi32442, align 8, !tbaa !89
  br label %if.end444

if.end444:                                        ; preds = %if.then440, %if.end417
  %cmp399 = icmp sgt i32 %214, -1
  br i1 %cmp399, label %if.then401, label %if.end411

sw.bb451:                                         ; preds = %if.then401, %if.end.sw.bb451_crit_edge
  %220 = phi i32 [ %.pre, %if.end.sw.bb451_crit_edge ], [ %187, %if.then401 ]
  %221 = phi i32 [ %.pre5368, %if.end.sw.bb451_crit_edge ], [ %188, %if.then401 ]
  %222 = phi i32 [ %.pre5369, %if.end.sw.bb451_crit_edge ], [ %189, %if.then401 ]
  %223 = phi i32 [ %.pre5370, %if.end.sw.bb451_crit_edge ], [ %190, %if.then401 ]
  %224 = phi i32 [ %.pre5371, %if.end.sw.bb451_crit_edge ], [ %191, %if.then401 ]
  %225 = phi i32 [ %.pre5372, %if.end.sw.bb451_crit_edge ], [ %192, %if.then401 ]
  %226 = phi i32 [ %.pre5373, %if.end.sw.bb451_crit_edge ], [ %193, %if.then401 ]
  %227 = phi i32 [ %.pre5374, %if.end.sw.bb451_crit_edge ], [ %194, %if.then401 ]
  %228 = phi i32 [ %.pre5375, %if.end.sw.bb451_crit_edge ], [ %195, %if.then401 ]
  %229 = phi i32 [ %.pre5376, %if.end.sw.bb451_crit_edge ], [ %196, %if.then401 ]
  %230 = phi i32 [ %.pre5377, %if.end.sw.bb451_crit_edge ], [ %197, %if.then401 ]
  %231 = phi i32 [ %.pre5378, %if.end.sw.bb451_crit_edge ], [ %198, %if.then401 ]
  %232 = phi i32 [ %.pre5379, %if.end.sw.bb451_crit_edge ], [ %199, %if.then401 ]
  %233 = phi i32 [ %.pre5380, %if.end.sw.bb451_crit_edge ], [ %200, %if.then401 ]
  %234 = phi i32 [ %.pre5381, %if.end.sw.bb451_crit_edge ], [ %201, %if.then401 ]
  %235 = phi i32 [ %.pre5382, %if.end.sw.bb451_crit_edge ], [ %202, %if.then401 ]
  %236 = phi i32 [ %.pre5383, %if.end.sw.bb451_crit_edge ], [ %203, %if.then401 ]
  %237 = phi i32 [ %.pre5384, %if.end.sw.bb451_crit_edge ], [ %204, %if.then401 ]
  %238 = phi i32 [ %.pre5385, %if.end.sw.bb451_crit_edge ], [ %205, %if.then401 ]
  %239 = phi i32 [ %.pre5386, %if.end.sw.bb451_crit_edge ], [ %206, %if.then401 ]
  %240 = phi i32 [ %.pre5387, %if.end.sw.bb451_crit_edge ], [ %207, %if.then401 ]
  %241 = phi i32* [ %.pre5388, %if.end.sw.bb451_crit_edge ], [ %208, %if.then401 ]
  %242 = phi i32* [ %.pre5389, %if.end.sw.bb451_crit_edge ], [ %209, %if.then401 ]
  %243 = phi i32* [ %.pre5390, %if.end.sw.bb451_crit_edge ], [ %210, %if.then401 ]
  %save_j3.pre-phi6806 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_j3.pre-phi6807, %if.then401 ]
  %save_t4.pre-phi6750 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_t4.pre-phi6751, %if.then401 ]
  %save_alphaSize5.pre-phi6694 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_alphaSize5.pre-phi6695, %if.then401 ]
  %save_nGroups6.pre-phi6638 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_nGroups6.pre-phi6639, %if.then401 ]
  %save_nSelectors7.pre-phi6582 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_nSelectors7.pre-phi6583, %if.then401 ]
  %save_EOB8.pre-phi6526 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_EOB8.pre-phi6527, %if.then401 ]
  %save_groupNo9.pre-phi6470 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_groupNo9.pre-phi6471, %if.then401 ]
  %save_groupPos10.pre-phi6414 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_groupPos10.pre-phi6415, %if.then401 ]
  %save_nextSym11.pre-phi6358 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_nextSym11.pre-phi6359, %if.then401 ]
  %save_nblockMAX12.pre-phi6302 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_nblockMAX12.pre-phi6303, %if.then401 ]
  %save_nblock13.pre-phi6246 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_nblock13.pre-phi6247, %if.then401 ]
  %save_es14.pre-phi6190 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_es14.pre-phi6191, %if.then401 ]
  %save_N15.pre-phi6134 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_N15.pre-phi6135, %if.then401 ]
  %save_curr16.pre-phi6078 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_curr16.pre-phi6079, %if.then401 ]
  %save_zt17.pre-phi6022 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_zt17.pre-phi6023, %if.then401 ]
  %save_zn18.pre-phi5966 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_zn18.pre-phi5967, %if.then401 ]
  %save_zvec19.pre-phi5910 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_zvec19.pre-phi5911, %if.then401 ]
  %save_zj20.pre-phi5854 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_zj20.pre-phi5855, %if.then401 ]
  %save_gSel21.pre-phi5798 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_gSel21.pre-phi5799, %if.then401 ]
  %save_gMinlen22.pre-phi5742 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_gMinlen22.pre-phi5743, %if.then401 ]
  %save_gLimit23.pre-phi5686 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_gLimit23.pre-phi5687, %if.then401 ]
  %save_gBase24.pre-phi5630 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_gBase24.pre-phi5631, %if.then401 ]
  %save_gPerm25.pre-phi5574 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %save_gPerm25.pre-phi5575, %if.then401 ]
  %bsLive455.pre-phi = phi i32* [ %bsLive455.phi.trans.insert, %if.end.sw.bb451_crit_edge ], [ %bsLive398.pre-phi, %if.then401 ]
  %244 = phi i32 [ %.pre5413, %if.end.sw.bb451_crit_edge ], [ %sub405, %if.then401 ]
  store i32 17, i32* %state, align 8, !tbaa !105
  %cmp4565166 = icmp sgt i32 %244, 7
  %bsBuff460.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp4565166, label %sw.bb451.if.then458_crit_edge, label %if.end468.lr.ph

sw.bb451.if.then458_crit_edge:                    ; preds = %sw.bb451
  %.pre5416 = load i32, i32* %bsBuff460.phi.trans.insert, align 8, !tbaa !107
  br label %if.then458

if.end468.lr.ph:                                  ; preds = %sw.bb451
  %.pre5414 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in470.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5414, i64 0, i32 1
  %.pre5415 = load i32, i32* %avail_in470.phi.trans.insert, align 8, !tbaa !98
  %next_in478 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5414, i64 0, i32 0
  %total_in_lo32491 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5414, i64 0, i32 2
  %total_in_hi32499 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5414, i64 0, i32 3
  br label %if.end468

if.then458:                                       ; preds = %if.end501, %sw.bb451.if.then458_crit_edge
  %245 = phi i32 [ %.pre5416, %sw.bb451.if.then458_crit_edge ], [ %or480, %if.end501 ]
  %.lcssa4987 = phi i32 [ %244, %sw.bb451.if.then458_crit_edge ], [ %add483, %if.end501 ]
  %sub462 = add nsw i32 %.lcssa4987, -8
  %shr463 = lshr i32 %245, %sub462
  store i32 %sub462, i32* %bsLive455.pre-phi, align 4, !tbaa !106
  %conv503 = and i32 %shr463, 255
  %cmp504 = icmp eq i32 %conv503, 38
  br i1 %cmp504, label %sw.bb508, label %save_state_and_return

if.end468:                                        ; preds = %if.end501, %if.end468.lr.ph
  %246 = phi i32 [ %.pre5415, %if.end468.lr.ph ], [ %dec489, %if.end501 ]
  %247 = phi i32 [ %244, %if.end468.lr.ph ], [ %add483, %if.end501 ]
  %cmp471 = icmp eq i32 %246, 0
  br i1 %cmp471, label %save_state_and_return, label %if.end474

if.end474:                                        ; preds = %if.end468
  %248 = load i32, i32* %bsBuff460.phi.trans.insert, align 8, !tbaa !107
  %shl476 = shl i32 %248, 8
  %249 = load i8*, i8** %next_in478, align 8, !tbaa !102
  %250 = load i8, i8* %249, align 1, !tbaa !12
  %conv479 = zext i8 %250 to i32
  %or480 = or i32 %shl476, %conv479
  store i32 %or480, i32* %bsBuff460.phi.trans.insert, align 8, !tbaa !107
  %add483 = add nsw i32 %247, 8
  store i32 %add483, i32* %bsLive455.pre-phi, align 4, !tbaa !106
  %incdec.ptr486 = getelementptr inbounds i8, i8* %249, i64 1
  store i8* %incdec.ptr486, i8** %next_in478, align 8, !tbaa !102
  %dec489 = add i32 %246, -1
  store i32 %dec489, i32* %avail_in470.phi.trans.insert, align 8, !tbaa !98
  %251 = load i32, i32* %total_in_lo32491, align 4, !tbaa !88
  %inc492 = add i32 %251, 1
  store i32 %inc492, i32* %total_in_lo32491, align 4, !tbaa !88
  %cmp495 = icmp eq i32 %inc492, 0
  br i1 %cmp495, label %if.then497, label %if.end501

if.then497:                                       ; preds = %if.end474
  %252 = load i32, i32* %total_in_hi32499, align 8, !tbaa !89
  %inc500 = add i32 %252, 1
  store i32 %inc500, i32* %total_in_hi32499, align 8, !tbaa !89
  br label %if.end501

if.end501:                                        ; preds = %if.then497, %if.end474
  %cmp456 = icmp sgt i32 %247, -1
  br i1 %cmp456, label %if.then458, label %if.end468

sw.bb508:                                         ; preds = %if.then458, %if.end.sw.bb508_crit_edge
  %253 = phi i32 [ %.pre, %if.end.sw.bb508_crit_edge ], [ %220, %if.then458 ]
  %254 = phi i32 [ %.pre5368, %if.end.sw.bb508_crit_edge ], [ %221, %if.then458 ]
  %255 = phi i32 [ %.pre5369, %if.end.sw.bb508_crit_edge ], [ %222, %if.then458 ]
  %256 = phi i32 [ %.pre5370, %if.end.sw.bb508_crit_edge ], [ %223, %if.then458 ]
  %257 = phi i32 [ %.pre5371, %if.end.sw.bb508_crit_edge ], [ %224, %if.then458 ]
  %258 = phi i32 [ %.pre5372, %if.end.sw.bb508_crit_edge ], [ %225, %if.then458 ]
  %259 = phi i32 [ %.pre5373, %if.end.sw.bb508_crit_edge ], [ %226, %if.then458 ]
  %260 = phi i32 [ %.pre5374, %if.end.sw.bb508_crit_edge ], [ %227, %if.then458 ]
  %261 = phi i32 [ %.pre5375, %if.end.sw.bb508_crit_edge ], [ %228, %if.then458 ]
  %262 = phi i32 [ %.pre5376, %if.end.sw.bb508_crit_edge ], [ %229, %if.then458 ]
  %263 = phi i32 [ %.pre5377, %if.end.sw.bb508_crit_edge ], [ %230, %if.then458 ]
  %264 = phi i32 [ %.pre5378, %if.end.sw.bb508_crit_edge ], [ %231, %if.then458 ]
  %265 = phi i32 [ %.pre5379, %if.end.sw.bb508_crit_edge ], [ %232, %if.then458 ]
  %266 = phi i32 [ %.pre5380, %if.end.sw.bb508_crit_edge ], [ %233, %if.then458 ]
  %267 = phi i32 [ %.pre5381, %if.end.sw.bb508_crit_edge ], [ %234, %if.then458 ]
  %268 = phi i32 [ %.pre5382, %if.end.sw.bb508_crit_edge ], [ %235, %if.then458 ]
  %269 = phi i32 [ %.pre5383, %if.end.sw.bb508_crit_edge ], [ %236, %if.then458 ]
  %270 = phi i32 [ %.pre5384, %if.end.sw.bb508_crit_edge ], [ %237, %if.then458 ]
  %271 = phi i32 [ %.pre5385, %if.end.sw.bb508_crit_edge ], [ %238, %if.then458 ]
  %272 = phi i32 [ %.pre5386, %if.end.sw.bb508_crit_edge ], [ %239, %if.then458 ]
  %273 = phi i32 [ %.pre5387, %if.end.sw.bb508_crit_edge ], [ %240, %if.then458 ]
  %274 = phi i32* [ %.pre5388, %if.end.sw.bb508_crit_edge ], [ %241, %if.then458 ]
  %275 = phi i32* [ %.pre5389, %if.end.sw.bb508_crit_edge ], [ %242, %if.then458 ]
  %276 = phi i32* [ %.pre5390, %if.end.sw.bb508_crit_edge ], [ %243, %if.then458 ]
  %save_j3.pre-phi6805 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_j3.pre-phi6806, %if.then458 ]
  %save_t4.pre-phi6749 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_t4.pre-phi6750, %if.then458 ]
  %save_alphaSize5.pre-phi6693 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_alphaSize5.pre-phi6694, %if.then458 ]
  %save_nGroups6.pre-phi6637 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_nGroups6.pre-phi6638, %if.then458 ]
  %save_nSelectors7.pre-phi6581 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_nSelectors7.pre-phi6582, %if.then458 ]
  %save_EOB8.pre-phi6525 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_EOB8.pre-phi6526, %if.then458 ]
  %save_groupNo9.pre-phi6469 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_groupNo9.pre-phi6470, %if.then458 ]
  %save_groupPos10.pre-phi6413 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_groupPos10.pre-phi6414, %if.then458 ]
  %save_nextSym11.pre-phi6357 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_nextSym11.pre-phi6358, %if.then458 ]
  %save_nblockMAX12.pre-phi6301 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_nblockMAX12.pre-phi6302, %if.then458 ]
  %save_nblock13.pre-phi6245 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_nblock13.pre-phi6246, %if.then458 ]
  %save_es14.pre-phi6189 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_es14.pre-phi6190, %if.then458 ]
  %save_N15.pre-phi6133 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_N15.pre-phi6134, %if.then458 ]
  %save_curr16.pre-phi6077 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_curr16.pre-phi6078, %if.then458 ]
  %save_zt17.pre-phi6021 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_zt17.pre-phi6022, %if.then458 ]
  %save_zn18.pre-phi5965 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_zn18.pre-phi5966, %if.then458 ]
  %save_zvec19.pre-phi5909 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_zvec19.pre-phi5910, %if.then458 ]
  %save_zj20.pre-phi5853 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_zj20.pre-phi5854, %if.then458 ]
  %save_gSel21.pre-phi5797 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_gSel21.pre-phi5798, %if.then458 ]
  %save_gMinlen22.pre-phi5741 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_gMinlen22.pre-phi5742, %if.then458 ]
  %save_gLimit23.pre-phi5685 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_gLimit23.pre-phi5686, %if.then458 ]
  %save_gBase24.pre-phi5629 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_gBase24.pre-phi5630, %if.then458 ]
  %save_gPerm25.pre-phi5573 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %save_gPerm25.pre-phi5574, %if.then458 ]
  %bsLive512.pre-phi = phi i32* [ %bsLive512.phi.trans.insert, %if.end.sw.bb508_crit_edge ], [ %bsLive455.pre-phi, %if.then458 ]
  %277 = phi i32 [ %.pre5417, %if.end.sw.bb508_crit_edge ], [ %sub462, %if.then458 ]
  store i32 18, i32* %state, align 8, !tbaa !105
  %cmp5135163 = icmp sgt i32 %277, 7
  %bsBuff517.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp5135163, label %sw.bb508.if.then515_crit_edge, label %if.end525.lr.ph

sw.bb508.if.then515_crit_edge:                    ; preds = %sw.bb508
  %.pre5420 = load i32, i32* %bsBuff517.phi.trans.insert, align 8, !tbaa !107
  br label %if.then515

if.end525.lr.ph:                                  ; preds = %sw.bb508
  %.pre5418 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in527.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5418, i64 0, i32 1
  %.pre5419 = load i32, i32* %avail_in527.phi.trans.insert, align 8, !tbaa !98
  %next_in535 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5418, i64 0, i32 0
  %total_in_lo32548 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5418, i64 0, i32 2
  %total_in_hi32556 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5418, i64 0, i32 3
  br label %if.end525

if.then515:                                       ; preds = %if.end558, %sw.bb508.if.then515_crit_edge
  %278 = phi i32 [ %.pre5420, %sw.bb508.if.then515_crit_edge ], [ %or537, %if.end558 ]
  %.lcssa4984 = phi i32 [ %277, %sw.bb508.if.then515_crit_edge ], [ %add540, %if.end558 ]
  %sub519 = add nsw i32 %.lcssa4984, -8
  %shr520 = lshr i32 %278, %sub519
  store i32 %sub519, i32* %bsLive512.pre-phi, align 4, !tbaa !106
  %conv560 = and i32 %shr520, 255
  %cmp561 = icmp eq i32 %conv560, 83
  br i1 %cmp561, label %sw.bb565, label %save_state_and_return

if.end525:                                        ; preds = %if.end558, %if.end525.lr.ph
  %279 = phi i32 [ %.pre5419, %if.end525.lr.ph ], [ %dec546, %if.end558 ]
  %280 = phi i32 [ %277, %if.end525.lr.ph ], [ %add540, %if.end558 ]
  %cmp528 = icmp eq i32 %279, 0
  br i1 %cmp528, label %save_state_and_return, label %if.end531

if.end531:                                        ; preds = %if.end525
  %281 = load i32, i32* %bsBuff517.phi.trans.insert, align 8, !tbaa !107
  %shl533 = shl i32 %281, 8
  %282 = load i8*, i8** %next_in535, align 8, !tbaa !102
  %283 = load i8, i8* %282, align 1, !tbaa !12
  %conv536 = zext i8 %283 to i32
  %or537 = or i32 %shl533, %conv536
  store i32 %or537, i32* %bsBuff517.phi.trans.insert, align 8, !tbaa !107
  %add540 = add nsw i32 %280, 8
  store i32 %add540, i32* %bsLive512.pre-phi, align 4, !tbaa !106
  %incdec.ptr543 = getelementptr inbounds i8, i8* %282, i64 1
  store i8* %incdec.ptr543, i8** %next_in535, align 8, !tbaa !102
  %dec546 = add i32 %279, -1
  store i32 %dec546, i32* %avail_in527.phi.trans.insert, align 8, !tbaa !98
  %284 = load i32, i32* %total_in_lo32548, align 4, !tbaa !88
  %inc549 = add i32 %284, 1
  store i32 %inc549, i32* %total_in_lo32548, align 4, !tbaa !88
  %cmp552 = icmp eq i32 %inc549, 0
  br i1 %cmp552, label %if.then554, label %if.end558

if.then554:                                       ; preds = %if.end531
  %285 = load i32, i32* %total_in_hi32556, align 8, !tbaa !89
  %inc557 = add i32 %285, 1
  store i32 %inc557, i32* %total_in_hi32556, align 8, !tbaa !89
  br label %if.end558

if.end558:                                        ; preds = %if.then554, %if.end531
  %cmp513 = icmp sgt i32 %280, -1
  br i1 %cmp513, label %if.then515, label %if.end525

sw.bb565:                                         ; preds = %if.then515, %if.end.sw.bb565_crit_edge
  %286 = phi i32 [ %.pre, %if.end.sw.bb565_crit_edge ], [ %253, %if.then515 ]
  %287 = phi i32 [ %.pre5368, %if.end.sw.bb565_crit_edge ], [ %254, %if.then515 ]
  %288 = phi i32 [ %.pre5369, %if.end.sw.bb565_crit_edge ], [ %255, %if.then515 ]
  %289 = phi i32 [ %.pre5370, %if.end.sw.bb565_crit_edge ], [ %256, %if.then515 ]
  %290 = phi i32 [ %.pre5371, %if.end.sw.bb565_crit_edge ], [ %257, %if.then515 ]
  %291 = phi i32 [ %.pre5372, %if.end.sw.bb565_crit_edge ], [ %258, %if.then515 ]
  %292 = phi i32 [ %.pre5373, %if.end.sw.bb565_crit_edge ], [ %259, %if.then515 ]
  %293 = phi i32 [ %.pre5374, %if.end.sw.bb565_crit_edge ], [ %260, %if.then515 ]
  %294 = phi i32 [ %.pre5375, %if.end.sw.bb565_crit_edge ], [ %261, %if.then515 ]
  %295 = phi i32 [ %.pre5376, %if.end.sw.bb565_crit_edge ], [ %262, %if.then515 ]
  %296 = phi i32 [ %.pre5377, %if.end.sw.bb565_crit_edge ], [ %263, %if.then515 ]
  %297 = phi i32 [ %.pre5378, %if.end.sw.bb565_crit_edge ], [ %264, %if.then515 ]
  %298 = phi i32 [ %.pre5379, %if.end.sw.bb565_crit_edge ], [ %265, %if.then515 ]
  %299 = phi i32 [ %.pre5380, %if.end.sw.bb565_crit_edge ], [ %266, %if.then515 ]
  %300 = phi i32 [ %.pre5381, %if.end.sw.bb565_crit_edge ], [ %267, %if.then515 ]
  %301 = phi i32 [ %.pre5382, %if.end.sw.bb565_crit_edge ], [ %268, %if.then515 ]
  %302 = phi i32 [ %.pre5383, %if.end.sw.bb565_crit_edge ], [ %269, %if.then515 ]
  %303 = phi i32 [ %.pre5384, %if.end.sw.bb565_crit_edge ], [ %270, %if.then515 ]
  %304 = phi i32 [ %.pre5385, %if.end.sw.bb565_crit_edge ], [ %271, %if.then515 ]
  %305 = phi i32 [ %.pre5386, %if.end.sw.bb565_crit_edge ], [ %272, %if.then515 ]
  %306 = phi i32 [ %.pre5387, %if.end.sw.bb565_crit_edge ], [ %273, %if.then515 ]
  %307 = phi i32* [ %.pre5388, %if.end.sw.bb565_crit_edge ], [ %274, %if.then515 ]
  %308 = phi i32* [ %.pre5389, %if.end.sw.bb565_crit_edge ], [ %275, %if.then515 ]
  %309 = phi i32* [ %.pre5390, %if.end.sw.bb565_crit_edge ], [ %276, %if.then515 ]
  %save_j3.pre-phi6804 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_j3.pre-phi6805, %if.then515 ]
  %save_t4.pre-phi6748 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_t4.pre-phi6749, %if.then515 ]
  %save_alphaSize5.pre-phi6692 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_alphaSize5.pre-phi6693, %if.then515 ]
  %save_nGroups6.pre-phi6636 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_nGroups6.pre-phi6637, %if.then515 ]
  %save_nSelectors7.pre-phi6580 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_nSelectors7.pre-phi6581, %if.then515 ]
  %save_EOB8.pre-phi6524 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_EOB8.pre-phi6525, %if.then515 ]
  %save_groupNo9.pre-phi6468 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_groupNo9.pre-phi6469, %if.then515 ]
  %save_groupPos10.pre-phi6412 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_groupPos10.pre-phi6413, %if.then515 ]
  %save_nextSym11.pre-phi6356 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_nextSym11.pre-phi6357, %if.then515 ]
  %save_nblockMAX12.pre-phi6300 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_nblockMAX12.pre-phi6301, %if.then515 ]
  %save_nblock13.pre-phi6244 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_nblock13.pre-phi6245, %if.then515 ]
  %save_es14.pre-phi6188 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_es14.pre-phi6189, %if.then515 ]
  %save_N15.pre-phi6132 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_N15.pre-phi6133, %if.then515 ]
  %save_curr16.pre-phi6076 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_curr16.pre-phi6077, %if.then515 ]
  %save_zt17.pre-phi6020 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_zt17.pre-phi6021, %if.then515 ]
  %save_zn18.pre-phi5964 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_zn18.pre-phi5965, %if.then515 ]
  %save_zvec19.pre-phi5908 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_zvec19.pre-phi5909, %if.then515 ]
  %save_zj20.pre-phi5852 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_zj20.pre-phi5853, %if.then515 ]
  %save_gSel21.pre-phi5796 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_gSel21.pre-phi5797, %if.then515 ]
  %save_gMinlen22.pre-phi5740 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_gMinlen22.pre-phi5741, %if.then515 ]
  %save_gLimit23.pre-phi5684 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_gLimit23.pre-phi5685, %if.then515 ]
  %save_gBase24.pre-phi5628 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_gBase24.pre-phi5629, %if.then515 ]
  %save_gPerm25.pre-phi5572 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %save_gPerm25.pre-phi5573, %if.then515 ]
  %bsLive569.pre-phi = phi i32* [ %bsLive569.phi.trans.insert, %if.end.sw.bb565_crit_edge ], [ %bsLive512.pre-phi, %if.then515 ]
  %310 = phi i32 [ %.pre5421, %if.end.sw.bb565_crit_edge ], [ %sub519, %if.then515 ]
  store i32 19, i32* %state, align 8, !tbaa !105
  %cmp5705160 = icmp sgt i32 %310, 7
  %bsBuff574.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp5705160, label %sw.bb565.if.then572_crit_edge, label %if.end582.lr.ph

sw.bb565.if.then572_crit_edge:                    ; preds = %sw.bb565
  %.pre5424 = load i32, i32* %bsBuff574.phi.trans.insert, align 8, !tbaa !107
  br label %if.then572

if.end582.lr.ph:                                  ; preds = %sw.bb565
  %.pre5422 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in584.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5422, i64 0, i32 1
  %.pre5423 = load i32, i32* %avail_in584.phi.trans.insert, align 8, !tbaa !98
  %next_in592 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5422, i64 0, i32 0
  %total_in_lo32605 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5422, i64 0, i32 2
  %total_in_hi32613 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5422, i64 0, i32 3
  br label %if.end582

if.then572:                                       ; preds = %if.end615, %sw.bb565.if.then572_crit_edge
  %311 = phi i32 [ %.pre5424, %sw.bb565.if.then572_crit_edge ], [ %or594, %if.end615 ]
  %.lcssa4981 = phi i32 [ %310, %sw.bb565.if.then572_crit_edge ], [ %add597, %if.end615 ]
  %sub576 = add nsw i32 %.lcssa4981, -8
  %shr577 = lshr i32 %311, %sub576
  store i32 %sub576, i32* %bsLive569.pre-phi, align 4, !tbaa !106
  %conv617 = and i32 %shr577, 255
  %cmp618 = icmp eq i32 %conv617, 89
  br i1 %cmp618, label %if.end621, label %save_state_and_return

if.end582:                                        ; preds = %if.end615, %if.end582.lr.ph
  %312 = phi i32 [ %.pre5423, %if.end582.lr.ph ], [ %dec603, %if.end615 ]
  %313 = phi i32 [ %310, %if.end582.lr.ph ], [ %add597, %if.end615 ]
  %cmp585 = icmp eq i32 %312, 0
  br i1 %cmp585, label %save_state_and_return, label %if.end588

if.end588:                                        ; preds = %if.end582
  %314 = load i32, i32* %bsBuff574.phi.trans.insert, align 8, !tbaa !107
  %shl590 = shl i32 %314, 8
  %315 = load i8*, i8** %next_in592, align 8, !tbaa !102
  %316 = load i8, i8* %315, align 1, !tbaa !12
  %conv593 = zext i8 %316 to i32
  %or594 = or i32 %shl590, %conv593
  store i32 %or594, i32* %bsBuff574.phi.trans.insert, align 8, !tbaa !107
  %add597 = add nsw i32 %313, 8
  store i32 %add597, i32* %bsLive569.pre-phi, align 4, !tbaa !106
  %incdec.ptr600 = getelementptr inbounds i8, i8* %315, i64 1
  store i8* %incdec.ptr600, i8** %next_in592, align 8, !tbaa !102
  %dec603 = add i32 %312, -1
  store i32 %dec603, i32* %avail_in584.phi.trans.insert, align 8, !tbaa !98
  %317 = load i32, i32* %total_in_lo32605, align 4, !tbaa !88
  %inc606 = add i32 %317, 1
  store i32 %inc606, i32* %total_in_lo32605, align 4, !tbaa !88
  %cmp609 = icmp eq i32 %inc606, 0
  br i1 %cmp609, label %if.then611, label %if.end615

if.then611:                                       ; preds = %if.end588
  %318 = load i32, i32* %total_in_hi32613, align 8, !tbaa !89
  %inc614 = add i32 %318, 1
  store i32 %inc614, i32* %total_in_hi32613, align 8, !tbaa !89
  br label %if.end615

if.end615:                                        ; preds = %if.then611, %if.end588
  %cmp570 = icmp sgt i32 %313, -1
  br i1 %cmp570, label %if.then572, label %if.end582

if.end621:                                        ; preds = %if.then572
  %currBlockNo = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 11
  %319 = load i32, i32* %currBlockNo, align 8, !tbaa !110
  %inc622 = add nsw i32 %319, 1
  store i32 %inc622, i32* %currBlockNo, align 8, !tbaa !110
  %verbosity = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 12
  %320 = load i32, i32* %verbosity, align 4, !tbaa !111
  %cmp623 = icmp sgt i32 %320, 1
  br i1 %cmp623, label %if.then625, label %if.end628

if.then625:                                       ; preds = %if.end621
  %321 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %322 = getelementptr [20 x i8], [20 x i8]* @.str.80, i64 0, i64 0
  %call627 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %321, i8* %322, i32 %inc622) #15
  br label %if.end628

if.end628:                                        ; preds = %if.then625, %if.end621
  %storedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 23
  store i32 0, i32* %storedBlockCRC, align 8, !tbaa !125
  br label %sw.bb629

sw.bb629:                                         ; preds = %if.end628, %if.end.sw.bb629_crit_edge
  %323 = phi i32 [ %.pre, %if.end.sw.bb629_crit_edge ], [ %286, %if.end628 ]
  %324 = phi i32 [ %.pre5368, %if.end.sw.bb629_crit_edge ], [ %287, %if.end628 ]
  %325 = phi i32 [ %.pre5369, %if.end.sw.bb629_crit_edge ], [ %288, %if.end628 ]
  %326 = phi i32 [ %.pre5370, %if.end.sw.bb629_crit_edge ], [ %289, %if.end628 ]
  %327 = phi i32 [ %.pre5371, %if.end.sw.bb629_crit_edge ], [ %290, %if.end628 ]
  %328 = phi i32 [ %.pre5372, %if.end.sw.bb629_crit_edge ], [ %291, %if.end628 ]
  %329 = phi i32 [ %.pre5373, %if.end.sw.bb629_crit_edge ], [ %292, %if.end628 ]
  %330 = phi i32 [ %.pre5374, %if.end.sw.bb629_crit_edge ], [ %293, %if.end628 ]
  %331 = phi i32 [ %.pre5375, %if.end.sw.bb629_crit_edge ], [ %294, %if.end628 ]
  %332 = phi i32 [ %.pre5376, %if.end.sw.bb629_crit_edge ], [ %295, %if.end628 ]
  %333 = phi i32 [ %.pre5377, %if.end.sw.bb629_crit_edge ], [ %296, %if.end628 ]
  %334 = phi i32 [ %.pre5378, %if.end.sw.bb629_crit_edge ], [ %297, %if.end628 ]
  %335 = phi i32 [ %.pre5379, %if.end.sw.bb629_crit_edge ], [ %298, %if.end628 ]
  %336 = phi i32 [ %.pre5380, %if.end.sw.bb629_crit_edge ], [ %299, %if.end628 ]
  %337 = phi i32 [ %.pre5381, %if.end.sw.bb629_crit_edge ], [ %300, %if.end628 ]
  %338 = phi i32 [ %.pre5382, %if.end.sw.bb629_crit_edge ], [ %301, %if.end628 ]
  %339 = phi i32 [ %.pre5383, %if.end.sw.bb629_crit_edge ], [ %302, %if.end628 ]
  %340 = phi i32 [ %.pre5384, %if.end.sw.bb629_crit_edge ], [ %303, %if.end628 ]
  %341 = phi i32 [ %.pre5385, %if.end.sw.bb629_crit_edge ], [ %304, %if.end628 ]
  %342 = phi i32 [ %.pre5386, %if.end.sw.bb629_crit_edge ], [ %305, %if.end628 ]
  %343 = phi i32 [ %.pre5387, %if.end.sw.bb629_crit_edge ], [ %306, %if.end628 ]
  %344 = phi i32* [ %.pre5388, %if.end.sw.bb629_crit_edge ], [ %307, %if.end628 ]
  %345 = phi i32* [ %.pre5389, %if.end.sw.bb629_crit_edge ], [ %308, %if.end628 ]
  %346 = phi i32* [ %.pre5390, %if.end.sw.bb629_crit_edge ], [ %309, %if.end628 ]
  %save_j3.pre-phi6803 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_j3.pre-phi6804, %if.end628 ]
  %save_t4.pre-phi6747 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_t4.pre-phi6748, %if.end628 ]
  %save_alphaSize5.pre-phi6691 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_alphaSize5.pre-phi6692, %if.end628 ]
  %save_nGroups6.pre-phi6635 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_nGroups6.pre-phi6636, %if.end628 ]
  %save_nSelectors7.pre-phi6579 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_nSelectors7.pre-phi6580, %if.end628 ]
  %save_EOB8.pre-phi6523 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_EOB8.pre-phi6524, %if.end628 ]
  %save_groupNo9.pre-phi6467 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_groupNo9.pre-phi6468, %if.end628 ]
  %save_groupPos10.pre-phi6411 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_groupPos10.pre-phi6412, %if.end628 ]
  %save_nextSym11.pre-phi6355 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_nextSym11.pre-phi6356, %if.end628 ]
  %save_nblockMAX12.pre-phi6299 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_nblockMAX12.pre-phi6300, %if.end628 ]
  %save_nblock13.pre-phi6243 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_nblock13.pre-phi6244, %if.end628 ]
  %save_es14.pre-phi6187 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_es14.pre-phi6188, %if.end628 ]
  %save_N15.pre-phi6131 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_N15.pre-phi6132, %if.end628 ]
  %save_curr16.pre-phi6075 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_curr16.pre-phi6076, %if.end628 ]
  %save_zt17.pre-phi6019 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_zt17.pre-phi6020, %if.end628 ]
  %save_zn18.pre-phi5963 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_zn18.pre-phi5964, %if.end628 ]
  %save_zvec19.pre-phi5907 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_zvec19.pre-phi5908, %if.end628 ]
  %save_zj20.pre-phi5851 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_zj20.pre-phi5852, %if.end628 ]
  %save_gSel21.pre-phi5795 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_gSel21.pre-phi5796, %if.end628 ]
  %save_gMinlen22.pre-phi5739 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_gMinlen22.pre-phi5740, %if.end628 ]
  %save_gLimit23.pre-phi5683 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_gLimit23.pre-phi5684, %if.end628 ]
  %save_gBase24.pre-phi5627 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_gBase24.pre-phi5628, %if.end628 ]
  %save_gPerm25.pre-phi5571 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb629_crit_edge ], [ %save_gPerm25.pre-phi5572, %if.end628 ]
  %bsLive633.pre-phi = phi i32* [ %.pre5531, %if.end.sw.bb629_crit_edge ], [ %bsLive569.pre-phi, %if.end628 ]
  store i32 20, i32* %state, align 8, !tbaa !105
  %347 = load i32, i32* %bsLive633.pre-phi, align 4, !tbaa !106
  %cmp6345157 = icmp sgt i32 %347, 7
  %bsBuff638.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp6345157, label %sw.bb629.if.then636_crit_edge, label %if.end646.lr.ph

sw.bb629.if.then636_crit_edge:                    ; preds = %sw.bb629
  %.pre5427 = load i32, i32* %bsBuff638.phi.trans.insert, align 8, !tbaa !107
  br label %if.then636

if.end646.lr.ph:                                  ; preds = %sw.bb629
  %.pre5425 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in648.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5425, i64 0, i32 1
  %.pre5426 = load i32, i32* %avail_in648.phi.trans.insert, align 8, !tbaa !98
  %next_in656 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5425, i64 0, i32 0
  %total_in_lo32669 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5425, i64 0, i32 2
  %total_in_hi32677 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5425, i64 0, i32 3
  br label %if.end646

if.then636:                                       ; preds = %if.end679, %sw.bb629.if.then636_crit_edge
  %348 = phi i32 [ %.pre5427, %sw.bb629.if.then636_crit_edge ], [ %or658, %if.end679 ]
  %.lcssa4978 = phi i32 [ %347, %sw.bb629.if.then636_crit_edge ], [ %add661, %if.end679 ]
  %sub640 = add nsw i32 %.lcssa4978, -8
  %shr641 = lshr i32 %348, %sub640
  store i32 %sub640, i32* %bsLive633.pre-phi, align 4, !tbaa !106
  %storedBlockCRC681 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 23
  %349 = load i32, i32* %storedBlockCRC681, align 8, !tbaa !125
  %shl682 = shl i32 %349, 8
  %conv683 = and i32 %shr641, 255
  %or684 = or i32 %shl682, %conv683
  store i32 %or684, i32* %storedBlockCRC681, align 8, !tbaa !125
  br label %sw.bb686

if.end646:                                        ; preds = %if.end679, %if.end646.lr.ph
  %350 = phi i32 [ %.pre5426, %if.end646.lr.ph ], [ %dec667, %if.end679 ]
  %351 = phi i32 [ %347, %if.end646.lr.ph ], [ %add661, %if.end679 ]
  %cmp649 = icmp eq i32 %350, 0
  br i1 %cmp649, label %save_state_and_return, label %if.end652

if.end652:                                        ; preds = %if.end646
  %352 = load i32, i32* %bsBuff638.phi.trans.insert, align 8, !tbaa !107
  %shl654 = shl i32 %352, 8
  %353 = load i8*, i8** %next_in656, align 8, !tbaa !102
  %354 = load i8, i8* %353, align 1, !tbaa !12
  %conv657 = zext i8 %354 to i32
  %or658 = or i32 %shl654, %conv657
  store i32 %or658, i32* %bsBuff638.phi.trans.insert, align 8, !tbaa !107
  %add661 = add nsw i32 %351, 8
  store i32 %add661, i32* %bsLive633.pre-phi, align 4, !tbaa !106
  %incdec.ptr664 = getelementptr inbounds i8, i8* %353, i64 1
  store i8* %incdec.ptr664, i8** %next_in656, align 8, !tbaa !102
  %dec667 = add i32 %350, -1
  store i32 %dec667, i32* %avail_in648.phi.trans.insert, align 8, !tbaa !98
  %355 = load i32, i32* %total_in_lo32669, align 4, !tbaa !88
  %inc670 = add i32 %355, 1
  store i32 %inc670, i32* %total_in_lo32669, align 4, !tbaa !88
  %cmp673 = icmp eq i32 %inc670, 0
  br i1 %cmp673, label %if.then675, label %if.end679

if.then675:                                       ; preds = %if.end652
  %356 = load i32, i32* %total_in_hi32677, align 8, !tbaa !89
  %inc678 = add i32 %356, 1
  store i32 %inc678, i32* %total_in_hi32677, align 8, !tbaa !89
  br label %if.end679

if.end679:                                        ; preds = %if.then675, %if.end652
  %cmp634 = icmp sgt i32 %351, -1
  br i1 %cmp634, label %if.then636, label %if.end646

sw.bb686:                                         ; preds = %if.then636, %if.end.sw.bb686_crit_edge
  %357 = phi i32 [ %.pre, %if.end.sw.bb686_crit_edge ], [ %323, %if.then636 ]
  %358 = phi i32 [ %.pre5368, %if.end.sw.bb686_crit_edge ], [ %324, %if.then636 ]
  %359 = phi i32 [ %.pre5369, %if.end.sw.bb686_crit_edge ], [ %325, %if.then636 ]
  %360 = phi i32 [ %.pre5370, %if.end.sw.bb686_crit_edge ], [ %326, %if.then636 ]
  %361 = phi i32 [ %.pre5371, %if.end.sw.bb686_crit_edge ], [ %327, %if.then636 ]
  %362 = phi i32 [ %.pre5372, %if.end.sw.bb686_crit_edge ], [ %328, %if.then636 ]
  %363 = phi i32 [ %.pre5373, %if.end.sw.bb686_crit_edge ], [ %329, %if.then636 ]
  %364 = phi i32 [ %.pre5374, %if.end.sw.bb686_crit_edge ], [ %330, %if.then636 ]
  %365 = phi i32 [ %.pre5375, %if.end.sw.bb686_crit_edge ], [ %331, %if.then636 ]
  %366 = phi i32 [ %.pre5376, %if.end.sw.bb686_crit_edge ], [ %332, %if.then636 ]
  %367 = phi i32 [ %.pre5377, %if.end.sw.bb686_crit_edge ], [ %333, %if.then636 ]
  %368 = phi i32 [ %.pre5378, %if.end.sw.bb686_crit_edge ], [ %334, %if.then636 ]
  %369 = phi i32 [ %.pre5379, %if.end.sw.bb686_crit_edge ], [ %335, %if.then636 ]
  %370 = phi i32 [ %.pre5380, %if.end.sw.bb686_crit_edge ], [ %336, %if.then636 ]
  %371 = phi i32 [ %.pre5381, %if.end.sw.bb686_crit_edge ], [ %337, %if.then636 ]
  %372 = phi i32 [ %.pre5382, %if.end.sw.bb686_crit_edge ], [ %338, %if.then636 ]
  %373 = phi i32 [ %.pre5383, %if.end.sw.bb686_crit_edge ], [ %339, %if.then636 ]
  %374 = phi i32 [ %.pre5384, %if.end.sw.bb686_crit_edge ], [ %340, %if.then636 ]
  %375 = phi i32 [ %.pre5385, %if.end.sw.bb686_crit_edge ], [ %341, %if.then636 ]
  %376 = phi i32 [ %.pre5386, %if.end.sw.bb686_crit_edge ], [ %342, %if.then636 ]
  %377 = phi i32 [ %.pre5387, %if.end.sw.bb686_crit_edge ], [ %343, %if.then636 ]
  %378 = phi i32* [ %.pre5388, %if.end.sw.bb686_crit_edge ], [ %344, %if.then636 ]
  %379 = phi i32* [ %.pre5389, %if.end.sw.bb686_crit_edge ], [ %345, %if.then636 ]
  %380 = phi i32* [ %.pre5390, %if.end.sw.bb686_crit_edge ], [ %346, %if.then636 ]
  %save_j3.pre-phi6802 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_j3.pre-phi6803, %if.then636 ]
  %save_t4.pre-phi6746 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_t4.pre-phi6747, %if.then636 ]
  %save_alphaSize5.pre-phi6690 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_alphaSize5.pre-phi6691, %if.then636 ]
  %save_nGroups6.pre-phi6634 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_nGroups6.pre-phi6635, %if.then636 ]
  %save_nSelectors7.pre-phi6578 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_nSelectors7.pre-phi6579, %if.then636 ]
  %save_EOB8.pre-phi6522 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_EOB8.pre-phi6523, %if.then636 ]
  %save_groupNo9.pre-phi6466 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_groupNo9.pre-phi6467, %if.then636 ]
  %save_groupPos10.pre-phi6410 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_groupPos10.pre-phi6411, %if.then636 ]
  %save_nextSym11.pre-phi6354 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_nextSym11.pre-phi6355, %if.then636 ]
  %save_nblockMAX12.pre-phi6298 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_nblockMAX12.pre-phi6299, %if.then636 ]
  %save_nblock13.pre-phi6242 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_nblock13.pre-phi6243, %if.then636 ]
  %save_es14.pre-phi6186 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_es14.pre-phi6187, %if.then636 ]
  %save_N15.pre-phi6130 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_N15.pre-phi6131, %if.then636 ]
  %save_curr16.pre-phi6074 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_curr16.pre-phi6075, %if.then636 ]
  %save_zt17.pre-phi6018 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_zt17.pre-phi6019, %if.then636 ]
  %save_zn18.pre-phi5962 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_zn18.pre-phi5963, %if.then636 ]
  %save_zvec19.pre-phi5906 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_zvec19.pre-phi5907, %if.then636 ]
  %save_zj20.pre-phi5850 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_zj20.pre-phi5851, %if.then636 ]
  %save_gSel21.pre-phi5794 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_gSel21.pre-phi5795, %if.then636 ]
  %save_gMinlen22.pre-phi5738 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_gMinlen22.pre-phi5739, %if.then636 ]
  %save_gLimit23.pre-phi5682 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_gLimit23.pre-phi5683, %if.then636 ]
  %save_gBase24.pre-phi5626 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_gBase24.pre-phi5627, %if.then636 ]
  %save_gPerm25.pre-phi5570 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %save_gPerm25.pre-phi5571, %if.then636 ]
  %bsLive690.pre-phi = phi i32* [ %bsLive690.phi.trans.insert, %if.end.sw.bb686_crit_edge ], [ %bsLive633.pre-phi, %if.then636 ]
  %381 = phi i32 [ %.pre5428, %if.end.sw.bb686_crit_edge ], [ %sub640, %if.then636 ]
  store i32 21, i32* %state, align 8, !tbaa !105
  %cmp6915154 = icmp sgt i32 %381, 7
  %bsBuff695.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp6915154, label %sw.bb686.if.then693_crit_edge, label %if.end703.lr.ph

sw.bb686.if.then693_crit_edge:                    ; preds = %sw.bb686
  %.pre5431 = load i32, i32* %bsBuff695.phi.trans.insert, align 8, !tbaa !107
  br label %if.then693

if.end703.lr.ph:                                  ; preds = %sw.bb686
  %.pre5429 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in705.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5429, i64 0, i32 1
  %.pre5430 = load i32, i32* %avail_in705.phi.trans.insert, align 8, !tbaa !98
  %next_in713 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5429, i64 0, i32 0
  %total_in_lo32726 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5429, i64 0, i32 2
  %total_in_hi32734 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5429, i64 0, i32 3
  br label %if.end703

if.then693:                                       ; preds = %if.end736, %sw.bb686.if.then693_crit_edge
  %382 = phi i32 [ %.pre5431, %sw.bb686.if.then693_crit_edge ], [ %or715, %if.end736 ]
  %.lcssa4975 = phi i32 [ %381, %sw.bb686.if.then693_crit_edge ], [ %add718, %if.end736 ]
  %sub697 = add nsw i32 %.lcssa4975, -8
  %shr698 = lshr i32 %382, %sub697
  store i32 %sub697, i32* %bsLive690.pre-phi, align 4, !tbaa !106
  %storedBlockCRC738 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 23
  %383 = load i32, i32* %storedBlockCRC738, align 8, !tbaa !125
  %shl739 = shl i32 %383, 8
  %conv740 = and i32 %shr698, 255
  %or741 = or i32 %shl739, %conv740
  store i32 %or741, i32* %storedBlockCRC738, align 8, !tbaa !125
  br label %sw.bb743

if.end703:                                        ; preds = %if.end736, %if.end703.lr.ph
  %384 = phi i32 [ %.pre5430, %if.end703.lr.ph ], [ %dec724, %if.end736 ]
  %385 = phi i32 [ %381, %if.end703.lr.ph ], [ %add718, %if.end736 ]
  %cmp706 = icmp eq i32 %384, 0
  br i1 %cmp706, label %save_state_and_return, label %if.end709

if.end709:                                        ; preds = %if.end703
  %386 = load i32, i32* %bsBuff695.phi.trans.insert, align 8, !tbaa !107
  %shl711 = shl i32 %386, 8
  %387 = load i8*, i8** %next_in713, align 8, !tbaa !102
  %388 = load i8, i8* %387, align 1, !tbaa !12
  %conv714 = zext i8 %388 to i32
  %or715 = or i32 %shl711, %conv714
  store i32 %or715, i32* %bsBuff695.phi.trans.insert, align 8, !tbaa !107
  %add718 = add nsw i32 %385, 8
  store i32 %add718, i32* %bsLive690.pre-phi, align 4, !tbaa !106
  %incdec.ptr721 = getelementptr inbounds i8, i8* %387, i64 1
  store i8* %incdec.ptr721, i8** %next_in713, align 8, !tbaa !102
  %dec724 = add i32 %384, -1
  store i32 %dec724, i32* %avail_in705.phi.trans.insert, align 8, !tbaa !98
  %389 = load i32, i32* %total_in_lo32726, align 4, !tbaa !88
  %inc727 = add i32 %389, 1
  store i32 %inc727, i32* %total_in_lo32726, align 4, !tbaa !88
  %cmp730 = icmp eq i32 %inc727, 0
  br i1 %cmp730, label %if.then732, label %if.end736

if.then732:                                       ; preds = %if.end709
  %390 = load i32, i32* %total_in_hi32734, align 8, !tbaa !89
  %inc735 = add i32 %390, 1
  store i32 %inc735, i32* %total_in_hi32734, align 8, !tbaa !89
  br label %if.end736

if.end736:                                        ; preds = %if.then732, %if.end709
  %cmp691 = icmp sgt i32 %385, -1
  br i1 %cmp691, label %if.then693, label %if.end703

sw.bb743:                                         ; preds = %if.then693, %if.end.sw.bb743_crit_edge
  %391 = phi i32 [ %.pre, %if.end.sw.bb743_crit_edge ], [ %357, %if.then693 ]
  %392 = phi i32 [ %.pre5368, %if.end.sw.bb743_crit_edge ], [ %358, %if.then693 ]
  %393 = phi i32 [ %.pre5369, %if.end.sw.bb743_crit_edge ], [ %359, %if.then693 ]
  %394 = phi i32 [ %.pre5370, %if.end.sw.bb743_crit_edge ], [ %360, %if.then693 ]
  %395 = phi i32 [ %.pre5371, %if.end.sw.bb743_crit_edge ], [ %361, %if.then693 ]
  %396 = phi i32 [ %.pre5372, %if.end.sw.bb743_crit_edge ], [ %362, %if.then693 ]
  %397 = phi i32 [ %.pre5373, %if.end.sw.bb743_crit_edge ], [ %363, %if.then693 ]
  %398 = phi i32 [ %.pre5374, %if.end.sw.bb743_crit_edge ], [ %364, %if.then693 ]
  %399 = phi i32 [ %.pre5375, %if.end.sw.bb743_crit_edge ], [ %365, %if.then693 ]
  %400 = phi i32 [ %.pre5376, %if.end.sw.bb743_crit_edge ], [ %366, %if.then693 ]
  %401 = phi i32 [ %.pre5377, %if.end.sw.bb743_crit_edge ], [ %367, %if.then693 ]
  %402 = phi i32 [ %.pre5378, %if.end.sw.bb743_crit_edge ], [ %368, %if.then693 ]
  %403 = phi i32 [ %.pre5379, %if.end.sw.bb743_crit_edge ], [ %369, %if.then693 ]
  %404 = phi i32 [ %.pre5380, %if.end.sw.bb743_crit_edge ], [ %370, %if.then693 ]
  %405 = phi i32 [ %.pre5381, %if.end.sw.bb743_crit_edge ], [ %371, %if.then693 ]
  %406 = phi i32 [ %.pre5382, %if.end.sw.bb743_crit_edge ], [ %372, %if.then693 ]
  %407 = phi i32 [ %.pre5383, %if.end.sw.bb743_crit_edge ], [ %373, %if.then693 ]
  %408 = phi i32 [ %.pre5384, %if.end.sw.bb743_crit_edge ], [ %374, %if.then693 ]
  %409 = phi i32 [ %.pre5385, %if.end.sw.bb743_crit_edge ], [ %375, %if.then693 ]
  %410 = phi i32 [ %.pre5386, %if.end.sw.bb743_crit_edge ], [ %376, %if.then693 ]
  %411 = phi i32 [ %.pre5387, %if.end.sw.bb743_crit_edge ], [ %377, %if.then693 ]
  %412 = phi i32* [ %.pre5388, %if.end.sw.bb743_crit_edge ], [ %378, %if.then693 ]
  %413 = phi i32* [ %.pre5389, %if.end.sw.bb743_crit_edge ], [ %379, %if.then693 ]
  %414 = phi i32* [ %.pre5390, %if.end.sw.bb743_crit_edge ], [ %380, %if.then693 ]
  %save_j3.pre-phi6801 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_j3.pre-phi6802, %if.then693 ]
  %save_t4.pre-phi6745 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_t4.pre-phi6746, %if.then693 ]
  %save_alphaSize5.pre-phi6689 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_alphaSize5.pre-phi6690, %if.then693 ]
  %save_nGroups6.pre-phi6633 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_nGroups6.pre-phi6634, %if.then693 ]
  %save_nSelectors7.pre-phi6577 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_nSelectors7.pre-phi6578, %if.then693 ]
  %save_EOB8.pre-phi6521 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_EOB8.pre-phi6522, %if.then693 ]
  %save_groupNo9.pre-phi6465 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_groupNo9.pre-phi6466, %if.then693 ]
  %save_groupPos10.pre-phi6409 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_groupPos10.pre-phi6410, %if.then693 ]
  %save_nextSym11.pre-phi6353 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_nextSym11.pre-phi6354, %if.then693 ]
  %save_nblockMAX12.pre-phi6297 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_nblockMAX12.pre-phi6298, %if.then693 ]
  %save_nblock13.pre-phi6241 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_nblock13.pre-phi6242, %if.then693 ]
  %save_es14.pre-phi6185 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_es14.pre-phi6186, %if.then693 ]
  %save_N15.pre-phi6129 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_N15.pre-phi6130, %if.then693 ]
  %save_curr16.pre-phi6073 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_curr16.pre-phi6074, %if.then693 ]
  %save_zt17.pre-phi6017 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_zt17.pre-phi6018, %if.then693 ]
  %save_zn18.pre-phi5961 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_zn18.pre-phi5962, %if.then693 ]
  %save_zvec19.pre-phi5905 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_zvec19.pre-phi5906, %if.then693 ]
  %save_zj20.pre-phi5849 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_zj20.pre-phi5850, %if.then693 ]
  %save_gSel21.pre-phi5793 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_gSel21.pre-phi5794, %if.then693 ]
  %save_gMinlen22.pre-phi5737 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_gMinlen22.pre-phi5738, %if.then693 ]
  %save_gLimit23.pre-phi5681 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_gLimit23.pre-phi5682, %if.then693 ]
  %save_gBase24.pre-phi5625 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_gBase24.pre-phi5626, %if.then693 ]
  %save_gPerm25.pre-phi5569 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %save_gPerm25.pre-phi5570, %if.then693 ]
  %bsLive747.pre-phi = phi i32* [ %bsLive747.phi.trans.insert, %if.end.sw.bb743_crit_edge ], [ %bsLive690.pre-phi, %if.then693 ]
  %415 = phi i32 [ %.pre5432, %if.end.sw.bb743_crit_edge ], [ %sub697, %if.then693 ]
  store i32 22, i32* %state, align 8, !tbaa !105
  %cmp7485151 = icmp sgt i32 %415, 7
  %bsBuff752.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp7485151, label %sw.bb743.if.then750_crit_edge, label %if.end760.lr.ph

sw.bb743.if.then750_crit_edge:                    ; preds = %sw.bb743
  %.pre5435 = load i32, i32* %bsBuff752.phi.trans.insert, align 8, !tbaa !107
  br label %if.then750

if.end760.lr.ph:                                  ; preds = %sw.bb743
  %.pre5433 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in762.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5433, i64 0, i32 1
  %.pre5434 = load i32, i32* %avail_in762.phi.trans.insert, align 8, !tbaa !98
  %next_in770 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5433, i64 0, i32 0
  %total_in_lo32783 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5433, i64 0, i32 2
  %total_in_hi32791 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5433, i64 0, i32 3
  br label %if.end760

if.then750:                                       ; preds = %if.end793, %sw.bb743.if.then750_crit_edge
  %416 = phi i32 [ %.pre5435, %sw.bb743.if.then750_crit_edge ], [ %or772, %if.end793 ]
  %.lcssa4972 = phi i32 [ %415, %sw.bb743.if.then750_crit_edge ], [ %add775, %if.end793 ]
  %sub754 = add nsw i32 %.lcssa4972, -8
  %shr755 = lshr i32 %416, %sub754
  store i32 %sub754, i32* %bsLive747.pre-phi, align 4, !tbaa !106
  %storedBlockCRC795 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 23
  %417 = load i32, i32* %storedBlockCRC795, align 8, !tbaa !125
  %shl796 = shl i32 %417, 8
  %conv797 = and i32 %shr755, 255
  %or798 = or i32 %shl796, %conv797
  store i32 %or798, i32* %storedBlockCRC795, align 8, !tbaa !125
  br label %sw.bb800

if.end760:                                        ; preds = %if.end793, %if.end760.lr.ph
  %418 = phi i32 [ %.pre5434, %if.end760.lr.ph ], [ %dec781, %if.end793 ]
  %419 = phi i32 [ %415, %if.end760.lr.ph ], [ %add775, %if.end793 ]
  %cmp763 = icmp eq i32 %418, 0
  br i1 %cmp763, label %save_state_and_return, label %if.end766

if.end766:                                        ; preds = %if.end760
  %420 = load i32, i32* %bsBuff752.phi.trans.insert, align 8, !tbaa !107
  %shl768 = shl i32 %420, 8
  %421 = load i8*, i8** %next_in770, align 8, !tbaa !102
  %422 = load i8, i8* %421, align 1, !tbaa !12
  %conv771 = zext i8 %422 to i32
  %or772 = or i32 %shl768, %conv771
  store i32 %or772, i32* %bsBuff752.phi.trans.insert, align 8, !tbaa !107
  %add775 = add nsw i32 %419, 8
  store i32 %add775, i32* %bsLive747.pre-phi, align 4, !tbaa !106
  %incdec.ptr778 = getelementptr inbounds i8, i8* %421, i64 1
  store i8* %incdec.ptr778, i8** %next_in770, align 8, !tbaa !102
  %dec781 = add i32 %418, -1
  store i32 %dec781, i32* %avail_in762.phi.trans.insert, align 8, !tbaa !98
  %423 = load i32, i32* %total_in_lo32783, align 4, !tbaa !88
  %inc784 = add i32 %423, 1
  store i32 %inc784, i32* %total_in_lo32783, align 4, !tbaa !88
  %cmp787 = icmp eq i32 %inc784, 0
  br i1 %cmp787, label %if.then789, label %if.end793

if.then789:                                       ; preds = %if.end766
  %424 = load i32, i32* %total_in_hi32791, align 8, !tbaa !89
  %inc792 = add i32 %424, 1
  store i32 %inc792, i32* %total_in_hi32791, align 8, !tbaa !89
  br label %if.end793

if.end793:                                        ; preds = %if.then789, %if.end766
  %cmp748 = icmp sgt i32 %419, -1
  br i1 %cmp748, label %if.then750, label %if.end760

sw.bb800:                                         ; preds = %if.then750, %if.end.sw.bb800_crit_edge
  %425 = phi i32 [ %.pre, %if.end.sw.bb800_crit_edge ], [ %391, %if.then750 ]
  %426 = phi i32 [ %.pre5368, %if.end.sw.bb800_crit_edge ], [ %392, %if.then750 ]
  %427 = phi i32 [ %.pre5369, %if.end.sw.bb800_crit_edge ], [ %393, %if.then750 ]
  %428 = phi i32 [ %.pre5370, %if.end.sw.bb800_crit_edge ], [ %394, %if.then750 ]
  %429 = phi i32 [ %.pre5371, %if.end.sw.bb800_crit_edge ], [ %395, %if.then750 ]
  %430 = phi i32 [ %.pre5372, %if.end.sw.bb800_crit_edge ], [ %396, %if.then750 ]
  %431 = phi i32 [ %.pre5373, %if.end.sw.bb800_crit_edge ], [ %397, %if.then750 ]
  %432 = phi i32 [ %.pre5374, %if.end.sw.bb800_crit_edge ], [ %398, %if.then750 ]
  %433 = phi i32 [ %.pre5375, %if.end.sw.bb800_crit_edge ], [ %399, %if.then750 ]
  %434 = phi i32 [ %.pre5376, %if.end.sw.bb800_crit_edge ], [ %400, %if.then750 ]
  %435 = phi i32 [ %.pre5377, %if.end.sw.bb800_crit_edge ], [ %401, %if.then750 ]
  %436 = phi i32 [ %.pre5378, %if.end.sw.bb800_crit_edge ], [ %402, %if.then750 ]
  %437 = phi i32 [ %.pre5379, %if.end.sw.bb800_crit_edge ], [ %403, %if.then750 ]
  %438 = phi i32 [ %.pre5380, %if.end.sw.bb800_crit_edge ], [ %404, %if.then750 ]
  %439 = phi i32 [ %.pre5381, %if.end.sw.bb800_crit_edge ], [ %405, %if.then750 ]
  %440 = phi i32 [ %.pre5382, %if.end.sw.bb800_crit_edge ], [ %406, %if.then750 ]
  %441 = phi i32 [ %.pre5383, %if.end.sw.bb800_crit_edge ], [ %407, %if.then750 ]
  %442 = phi i32 [ %.pre5384, %if.end.sw.bb800_crit_edge ], [ %408, %if.then750 ]
  %443 = phi i32 [ %.pre5385, %if.end.sw.bb800_crit_edge ], [ %409, %if.then750 ]
  %444 = phi i32 [ %.pre5386, %if.end.sw.bb800_crit_edge ], [ %410, %if.then750 ]
  %445 = phi i32 [ %.pre5387, %if.end.sw.bb800_crit_edge ], [ %411, %if.then750 ]
  %446 = phi i32* [ %.pre5388, %if.end.sw.bb800_crit_edge ], [ %412, %if.then750 ]
  %447 = phi i32* [ %.pre5389, %if.end.sw.bb800_crit_edge ], [ %413, %if.then750 ]
  %448 = phi i32* [ %.pre5390, %if.end.sw.bb800_crit_edge ], [ %414, %if.then750 ]
  %save_j3.pre-phi6800 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_j3.pre-phi6801, %if.then750 ]
  %save_t4.pre-phi6744 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_t4.pre-phi6745, %if.then750 ]
  %save_alphaSize5.pre-phi6688 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_alphaSize5.pre-phi6689, %if.then750 ]
  %save_nGroups6.pre-phi6632 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_nGroups6.pre-phi6633, %if.then750 ]
  %save_nSelectors7.pre-phi6576 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_nSelectors7.pre-phi6577, %if.then750 ]
  %save_EOB8.pre-phi6520 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_EOB8.pre-phi6521, %if.then750 ]
  %save_groupNo9.pre-phi6464 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_groupNo9.pre-phi6465, %if.then750 ]
  %save_groupPos10.pre-phi6408 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_groupPos10.pre-phi6409, %if.then750 ]
  %save_nextSym11.pre-phi6352 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_nextSym11.pre-phi6353, %if.then750 ]
  %save_nblockMAX12.pre-phi6296 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_nblockMAX12.pre-phi6297, %if.then750 ]
  %save_nblock13.pre-phi6240 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_nblock13.pre-phi6241, %if.then750 ]
  %save_es14.pre-phi6184 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_es14.pre-phi6185, %if.then750 ]
  %save_N15.pre-phi6128 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_N15.pre-phi6129, %if.then750 ]
  %save_curr16.pre-phi6072 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_curr16.pre-phi6073, %if.then750 ]
  %save_zt17.pre-phi6016 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_zt17.pre-phi6017, %if.then750 ]
  %save_zn18.pre-phi5960 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_zn18.pre-phi5961, %if.then750 ]
  %save_zvec19.pre-phi5904 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_zvec19.pre-phi5905, %if.then750 ]
  %save_zj20.pre-phi5848 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_zj20.pre-phi5849, %if.then750 ]
  %save_gSel21.pre-phi5792 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_gSel21.pre-phi5793, %if.then750 ]
  %save_gMinlen22.pre-phi5736 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_gMinlen22.pre-phi5737, %if.then750 ]
  %save_gLimit23.pre-phi5680 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_gLimit23.pre-phi5681, %if.then750 ]
  %save_gBase24.pre-phi5624 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_gBase24.pre-phi5625, %if.then750 ]
  %save_gPerm25.pre-phi5568 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %save_gPerm25.pre-phi5569, %if.then750 ]
  %bsLive804.pre-phi = phi i32* [ %bsLive804.phi.trans.insert, %if.end.sw.bb800_crit_edge ], [ %bsLive747.pre-phi, %if.then750 ]
  %449 = phi i32 [ %.pre5436, %if.end.sw.bb800_crit_edge ], [ %sub754, %if.then750 ]
  store i32 23, i32* %state, align 8, !tbaa !105
  %cmp8055148 = icmp sgt i32 %449, 7
  %bsBuff809.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp8055148, label %sw.bb800.if.then807_crit_edge, label %if.end817.lr.ph

sw.bb800.if.then807_crit_edge:                    ; preds = %sw.bb800
  %.pre5439 = load i32, i32* %bsBuff809.phi.trans.insert, align 8, !tbaa !107
  br label %if.then807

if.end817.lr.ph:                                  ; preds = %sw.bb800
  %.pre5437 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in819.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5437, i64 0, i32 1
  %.pre5438 = load i32, i32* %avail_in819.phi.trans.insert, align 8, !tbaa !98
  %next_in827 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5437, i64 0, i32 0
  %total_in_lo32840 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5437, i64 0, i32 2
  %total_in_hi32848 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5437, i64 0, i32 3
  br label %if.end817

if.then807:                                       ; preds = %if.end850, %sw.bb800.if.then807_crit_edge
  %450 = phi i32 [ %.pre5439, %sw.bb800.if.then807_crit_edge ], [ %or829, %if.end850 ]
  %.lcssa4969 = phi i32 [ %449, %sw.bb800.if.then807_crit_edge ], [ %add832, %if.end850 ]
  %sub811 = add nsw i32 %.lcssa4969, -8
  %shr812 = lshr i32 %450, %sub811
  store i32 %sub811, i32* %bsLive804.pre-phi, align 4, !tbaa !106
  %storedBlockCRC852 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 23
  %451 = load i32, i32* %storedBlockCRC852, align 8, !tbaa !125
  %shl853 = shl i32 %451, 8
  %conv854 = and i32 %shr812, 255
  %or855 = or i32 %shl853, %conv854
  store i32 %or855, i32* %storedBlockCRC852, align 8, !tbaa !125
  br label %sw.bb857

if.end817:                                        ; preds = %if.end850, %if.end817.lr.ph
  %452 = phi i32 [ %.pre5438, %if.end817.lr.ph ], [ %dec838, %if.end850 ]
  %453 = phi i32 [ %449, %if.end817.lr.ph ], [ %add832, %if.end850 ]
  %cmp820 = icmp eq i32 %452, 0
  br i1 %cmp820, label %save_state_and_return, label %if.end823

if.end823:                                        ; preds = %if.end817
  %454 = load i32, i32* %bsBuff809.phi.trans.insert, align 8, !tbaa !107
  %shl825 = shl i32 %454, 8
  %455 = load i8*, i8** %next_in827, align 8, !tbaa !102
  %456 = load i8, i8* %455, align 1, !tbaa !12
  %conv828 = zext i8 %456 to i32
  %or829 = or i32 %shl825, %conv828
  store i32 %or829, i32* %bsBuff809.phi.trans.insert, align 8, !tbaa !107
  %add832 = add nsw i32 %453, 8
  store i32 %add832, i32* %bsLive804.pre-phi, align 4, !tbaa !106
  %incdec.ptr835 = getelementptr inbounds i8, i8* %455, i64 1
  store i8* %incdec.ptr835, i8** %next_in827, align 8, !tbaa !102
  %dec838 = add i32 %452, -1
  store i32 %dec838, i32* %avail_in819.phi.trans.insert, align 8, !tbaa !98
  %457 = load i32, i32* %total_in_lo32840, align 4, !tbaa !88
  %inc841 = add i32 %457, 1
  store i32 %inc841, i32* %total_in_lo32840, align 4, !tbaa !88
  %cmp844 = icmp eq i32 %inc841, 0
  br i1 %cmp844, label %if.then846, label %if.end850

if.then846:                                       ; preds = %if.end823
  %458 = load i32, i32* %total_in_hi32848, align 8, !tbaa !89
  %inc849 = add i32 %458, 1
  store i32 %inc849, i32* %total_in_hi32848, align 8, !tbaa !89
  br label %if.end850

if.end850:                                        ; preds = %if.then846, %if.end823
  %cmp805 = icmp sgt i32 %453, -1
  br i1 %cmp805, label %if.then807, label %if.end817

sw.bb857:                                         ; preds = %if.then807, %if.end.sw.bb857_crit_edge
  %459 = phi i32 [ %.pre, %if.end.sw.bb857_crit_edge ], [ %425, %if.then807 ]
  %460 = phi i32 [ %.pre5368, %if.end.sw.bb857_crit_edge ], [ %426, %if.then807 ]
  %461 = phi i32 [ %.pre5369, %if.end.sw.bb857_crit_edge ], [ %427, %if.then807 ]
  %462 = phi i32 [ %.pre5370, %if.end.sw.bb857_crit_edge ], [ %428, %if.then807 ]
  %463 = phi i32 [ %.pre5371, %if.end.sw.bb857_crit_edge ], [ %429, %if.then807 ]
  %464 = phi i32 [ %.pre5372, %if.end.sw.bb857_crit_edge ], [ %430, %if.then807 ]
  %465 = phi i32 [ %.pre5373, %if.end.sw.bb857_crit_edge ], [ %431, %if.then807 ]
  %466 = phi i32 [ %.pre5374, %if.end.sw.bb857_crit_edge ], [ %432, %if.then807 ]
  %467 = phi i32 [ %.pre5375, %if.end.sw.bb857_crit_edge ], [ %433, %if.then807 ]
  %468 = phi i32 [ %.pre5376, %if.end.sw.bb857_crit_edge ], [ %434, %if.then807 ]
  %469 = phi i32 [ %.pre5377, %if.end.sw.bb857_crit_edge ], [ %435, %if.then807 ]
  %470 = phi i32 [ %.pre5378, %if.end.sw.bb857_crit_edge ], [ %436, %if.then807 ]
  %471 = phi i32 [ %.pre5379, %if.end.sw.bb857_crit_edge ], [ %437, %if.then807 ]
  %472 = phi i32 [ %.pre5380, %if.end.sw.bb857_crit_edge ], [ %438, %if.then807 ]
  %473 = phi i32 [ %.pre5381, %if.end.sw.bb857_crit_edge ], [ %439, %if.then807 ]
  %474 = phi i32 [ %.pre5382, %if.end.sw.bb857_crit_edge ], [ %440, %if.then807 ]
  %475 = phi i32 [ %.pre5383, %if.end.sw.bb857_crit_edge ], [ %441, %if.then807 ]
  %476 = phi i32 [ %.pre5384, %if.end.sw.bb857_crit_edge ], [ %442, %if.then807 ]
  %477 = phi i32 [ %.pre5385, %if.end.sw.bb857_crit_edge ], [ %443, %if.then807 ]
  %478 = phi i32 [ %.pre5386, %if.end.sw.bb857_crit_edge ], [ %444, %if.then807 ]
  %479 = phi i32 [ %.pre5387, %if.end.sw.bb857_crit_edge ], [ %445, %if.then807 ]
  %480 = phi i32* [ %.pre5388, %if.end.sw.bb857_crit_edge ], [ %446, %if.then807 ]
  %481 = phi i32* [ %.pre5389, %if.end.sw.bb857_crit_edge ], [ %447, %if.then807 ]
  %482 = phi i32* [ %.pre5390, %if.end.sw.bb857_crit_edge ], [ %448, %if.then807 ]
  %save_j3.pre-phi6799 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_j3.pre-phi6800, %if.then807 ]
  %save_t4.pre-phi6743 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_t4.pre-phi6744, %if.then807 ]
  %save_alphaSize5.pre-phi6687 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_alphaSize5.pre-phi6688, %if.then807 ]
  %save_nGroups6.pre-phi6631 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_nGroups6.pre-phi6632, %if.then807 ]
  %save_nSelectors7.pre-phi6575 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_nSelectors7.pre-phi6576, %if.then807 ]
  %save_EOB8.pre-phi6519 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_EOB8.pre-phi6520, %if.then807 ]
  %save_groupNo9.pre-phi6463 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_groupNo9.pre-phi6464, %if.then807 ]
  %save_groupPos10.pre-phi6407 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_groupPos10.pre-phi6408, %if.then807 ]
  %save_nextSym11.pre-phi6351 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_nextSym11.pre-phi6352, %if.then807 ]
  %save_nblockMAX12.pre-phi6295 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_nblockMAX12.pre-phi6296, %if.then807 ]
  %save_nblock13.pre-phi6239 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_nblock13.pre-phi6240, %if.then807 ]
  %save_es14.pre-phi6183 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_es14.pre-phi6184, %if.then807 ]
  %save_N15.pre-phi6127 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_N15.pre-phi6128, %if.then807 ]
  %save_curr16.pre-phi6071 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_curr16.pre-phi6072, %if.then807 ]
  %save_zt17.pre-phi6015 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_zt17.pre-phi6016, %if.then807 ]
  %save_zn18.pre-phi5959 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_zn18.pre-phi5960, %if.then807 ]
  %save_zvec19.pre-phi5903 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_zvec19.pre-phi5904, %if.then807 ]
  %save_zj20.pre-phi5847 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_zj20.pre-phi5848, %if.then807 ]
  %save_gSel21.pre-phi5791 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_gSel21.pre-phi5792, %if.then807 ]
  %save_gMinlen22.pre-phi5735 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_gMinlen22.pre-phi5736, %if.then807 ]
  %save_gLimit23.pre-phi5679 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_gLimit23.pre-phi5680, %if.then807 ]
  %save_gBase24.pre-phi5623 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_gBase24.pre-phi5624, %if.then807 ]
  %save_gPerm25.pre-phi5567 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %save_gPerm25.pre-phi5568, %if.then807 ]
  %bsLive861.pre-phi = phi i32* [ %bsLive861.phi.trans.insert, %if.end.sw.bb857_crit_edge ], [ %bsLive804.pre-phi, %if.then807 ]
  %483 = phi i32 [ %.pre5440, %if.end.sw.bb857_crit_edge ], [ %sub811, %if.then807 ]
  store i32 24, i32* %state, align 8, !tbaa !105
  %cmp8625145 = icmp sgt i32 %483, 0
  %bsBuff866.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp8625145, label %sw.bb857.if.then864_crit_edge, label %if.end874.lr.ph

sw.bb857.if.then864_crit_edge:                    ; preds = %sw.bb857
  %.pre5443 = load i32, i32* %bsBuff866.phi.trans.insert, align 8, !tbaa !107
  br label %if.then864

if.end874.lr.ph:                                  ; preds = %sw.bb857
  %.pre5441 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in876.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5441, i64 0, i32 1
  %.pre5442 = load i32, i32* %avail_in876.phi.trans.insert, align 8, !tbaa !98
  %next_in884 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5441, i64 0, i32 0
  %total_in_lo32897 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5441, i64 0, i32 2
  %total_in_hi32905 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5441, i64 0, i32 3
  br label %if.end874

if.then864:                                       ; preds = %if.end907, %sw.bb857.if.then864_crit_edge
  %484 = phi i32 [ %.pre5443, %sw.bb857.if.then864_crit_edge ], [ %or886, %if.end907 ]
  %.lcssa4966 = phi i32 [ %483, %sw.bb857.if.then864_crit_edge ], [ %add889, %if.end907 ]
  %sub868 = add nsw i32 %.lcssa4966, -1
  %shr869 = lshr i32 %484, %sub868
  store i32 %sub868, i32* %bsLive861.pre-phi, align 4, !tbaa !106
  %485 = trunc i32 %shr869 to i8
  %conv873 = and i8 %485, 1
  %blockRandomised = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 4
  store i8 %conv873, i8* %blockRandomised, align 4, !tbaa !112
  %origPtr = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 13
  store i32 0, i32* %origPtr, align 8, !tbaa !174
  br label %sw.bb909

if.end874:                                        ; preds = %if.end907, %if.end874.lr.ph
  %486 = phi i32 [ %.pre5442, %if.end874.lr.ph ], [ %dec895, %if.end907 ]
  %487 = phi i32 [ %483, %if.end874.lr.ph ], [ %add889, %if.end907 ]
  %cmp877 = icmp eq i32 %486, 0
  br i1 %cmp877, label %save_state_and_return, label %if.end880

if.end880:                                        ; preds = %if.end874
  %488 = load i32, i32* %bsBuff866.phi.trans.insert, align 8, !tbaa !107
  %shl882 = shl i32 %488, 8
  %489 = load i8*, i8** %next_in884, align 8, !tbaa !102
  %490 = load i8, i8* %489, align 1, !tbaa !12
  %conv885 = zext i8 %490 to i32
  %or886 = or i32 %shl882, %conv885
  store i32 %or886, i32* %bsBuff866.phi.trans.insert, align 8, !tbaa !107
  %add889 = add nsw i32 %487, 8
  store i32 %add889, i32* %bsLive861.pre-phi, align 4, !tbaa !106
  %incdec.ptr892 = getelementptr inbounds i8, i8* %489, i64 1
  store i8* %incdec.ptr892, i8** %next_in884, align 8, !tbaa !102
  %dec895 = add i32 %486, -1
  store i32 %dec895, i32* %avail_in876.phi.trans.insert, align 8, !tbaa !98
  %491 = load i32, i32* %total_in_lo32897, align 4, !tbaa !88
  %inc898 = add i32 %491, 1
  store i32 %inc898, i32* %total_in_lo32897, align 4, !tbaa !88
  %cmp901 = icmp eq i32 %inc898, 0
  br i1 %cmp901, label %if.then903, label %if.end907

if.then903:                                       ; preds = %if.end880
  %492 = load i32, i32* %total_in_hi32905, align 8, !tbaa !89
  %inc906 = add i32 %492, 1
  store i32 %inc906, i32* %total_in_hi32905, align 8, !tbaa !89
  br label %if.end907

if.end907:                                        ; preds = %if.then903, %if.end880
  %cmp862 = icmp sgt i32 %487, -8
  br i1 %cmp862, label %if.then864, label %if.end874

sw.bb909:                                         ; preds = %if.then864, %if.end.sw.bb909_crit_edge
  %493 = phi i32 [ %.pre, %if.end.sw.bb909_crit_edge ], [ %459, %if.then864 ]
  %494 = phi i32 [ %.pre5368, %if.end.sw.bb909_crit_edge ], [ %460, %if.then864 ]
  %495 = phi i32 [ %.pre5369, %if.end.sw.bb909_crit_edge ], [ %461, %if.then864 ]
  %496 = phi i32 [ %.pre5370, %if.end.sw.bb909_crit_edge ], [ %462, %if.then864 ]
  %497 = phi i32 [ %.pre5371, %if.end.sw.bb909_crit_edge ], [ %463, %if.then864 ]
  %498 = phi i32 [ %.pre5372, %if.end.sw.bb909_crit_edge ], [ %464, %if.then864 ]
  %499 = phi i32 [ %.pre5373, %if.end.sw.bb909_crit_edge ], [ %465, %if.then864 ]
  %500 = phi i32 [ %.pre5374, %if.end.sw.bb909_crit_edge ], [ %466, %if.then864 ]
  %501 = phi i32 [ %.pre5375, %if.end.sw.bb909_crit_edge ], [ %467, %if.then864 ]
  %502 = phi i32 [ %.pre5376, %if.end.sw.bb909_crit_edge ], [ %468, %if.then864 ]
  %503 = phi i32 [ %.pre5377, %if.end.sw.bb909_crit_edge ], [ %469, %if.then864 ]
  %504 = phi i32 [ %.pre5378, %if.end.sw.bb909_crit_edge ], [ %470, %if.then864 ]
  %505 = phi i32 [ %.pre5379, %if.end.sw.bb909_crit_edge ], [ %471, %if.then864 ]
  %506 = phi i32 [ %.pre5380, %if.end.sw.bb909_crit_edge ], [ %472, %if.then864 ]
  %507 = phi i32 [ %.pre5381, %if.end.sw.bb909_crit_edge ], [ %473, %if.then864 ]
  %508 = phi i32 [ %.pre5382, %if.end.sw.bb909_crit_edge ], [ %474, %if.then864 ]
  %509 = phi i32 [ %.pre5383, %if.end.sw.bb909_crit_edge ], [ %475, %if.then864 ]
  %510 = phi i32 [ %.pre5384, %if.end.sw.bb909_crit_edge ], [ %476, %if.then864 ]
  %511 = phi i32 [ %.pre5385, %if.end.sw.bb909_crit_edge ], [ %477, %if.then864 ]
  %512 = phi i32 [ %.pre5386, %if.end.sw.bb909_crit_edge ], [ %478, %if.then864 ]
  %513 = phi i32 [ %.pre5387, %if.end.sw.bb909_crit_edge ], [ %479, %if.then864 ]
  %514 = phi i32* [ %.pre5388, %if.end.sw.bb909_crit_edge ], [ %480, %if.then864 ]
  %515 = phi i32* [ %.pre5389, %if.end.sw.bb909_crit_edge ], [ %481, %if.then864 ]
  %516 = phi i32* [ %.pre5390, %if.end.sw.bb909_crit_edge ], [ %482, %if.then864 ]
  %save_j3.pre-phi6798 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_j3.pre-phi6799, %if.then864 ]
  %save_t4.pre-phi6742 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_t4.pre-phi6743, %if.then864 ]
  %save_alphaSize5.pre-phi6686 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_alphaSize5.pre-phi6687, %if.then864 ]
  %save_nGroups6.pre-phi6630 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_nGroups6.pre-phi6631, %if.then864 ]
  %save_nSelectors7.pre-phi6574 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_nSelectors7.pre-phi6575, %if.then864 ]
  %save_EOB8.pre-phi6518 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_EOB8.pre-phi6519, %if.then864 ]
  %save_groupNo9.pre-phi6462 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_groupNo9.pre-phi6463, %if.then864 ]
  %save_groupPos10.pre-phi6406 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_groupPos10.pre-phi6407, %if.then864 ]
  %save_nextSym11.pre-phi6350 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_nextSym11.pre-phi6351, %if.then864 ]
  %save_nblockMAX12.pre-phi6294 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_nblockMAX12.pre-phi6295, %if.then864 ]
  %save_nblock13.pre-phi6238 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_nblock13.pre-phi6239, %if.then864 ]
  %save_es14.pre-phi6182 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_es14.pre-phi6183, %if.then864 ]
  %save_N15.pre-phi6126 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_N15.pre-phi6127, %if.then864 ]
  %save_curr16.pre-phi6070 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_curr16.pre-phi6071, %if.then864 ]
  %save_zt17.pre-phi6014 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_zt17.pre-phi6015, %if.then864 ]
  %save_zn18.pre-phi5958 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_zn18.pre-phi5959, %if.then864 ]
  %save_zvec19.pre-phi5902 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_zvec19.pre-phi5903, %if.then864 ]
  %save_zj20.pre-phi5846 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_zj20.pre-phi5847, %if.then864 ]
  %save_gSel21.pre-phi5790 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_gSel21.pre-phi5791, %if.then864 ]
  %save_gMinlen22.pre-phi5734 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_gMinlen22.pre-phi5735, %if.then864 ]
  %save_gLimit23.pre-phi5678 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_gLimit23.pre-phi5679, %if.then864 ]
  %save_gBase24.pre-phi5622 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_gBase24.pre-phi5623, %if.then864 ]
  %save_gPerm25.pre-phi5566 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %save_gPerm25.pre-phi5567, %if.then864 ]
  %bsLive913.pre-phi = phi i32* [ %bsLive913.phi.trans.insert, %if.end.sw.bb909_crit_edge ], [ %bsLive861.pre-phi, %if.then864 ]
  %517 = phi i32 [ %.pre5444, %if.end.sw.bb909_crit_edge ], [ %sub868, %if.then864 ]
  store i32 25, i32* %state, align 8, !tbaa !105
  %cmp9145142 = icmp sgt i32 %517, 7
  %bsBuff918.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp9145142, label %sw.bb909.if.then916_crit_edge, label %if.end926.lr.ph

sw.bb909.if.then916_crit_edge:                    ; preds = %sw.bb909
  %.pre5447 = load i32, i32* %bsBuff918.phi.trans.insert, align 8, !tbaa !107
  br label %if.then916

if.end926.lr.ph:                                  ; preds = %sw.bb909
  %.pre5445 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in928.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5445, i64 0, i32 1
  %.pre5446 = load i32, i32* %avail_in928.phi.trans.insert, align 8, !tbaa !98
  %next_in936 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5445, i64 0, i32 0
  %total_in_lo32949 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5445, i64 0, i32 2
  %total_in_hi32957 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5445, i64 0, i32 3
  br label %if.end926

if.then916:                                       ; preds = %if.end959, %sw.bb909.if.then916_crit_edge
  %518 = phi i32 [ %.pre5447, %sw.bb909.if.then916_crit_edge ], [ %or938, %if.end959 ]
  %.lcssa4963 = phi i32 [ %517, %sw.bb909.if.then916_crit_edge ], [ %add941, %if.end959 ]
  %sub920 = add nsw i32 %.lcssa4963, -8
  %shr921 = lshr i32 %518, %sub920
  store i32 %sub920, i32* %bsLive913.pre-phi, align 4, !tbaa !106
  %origPtr961 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 13
  %519 = load i32, i32* %origPtr961, align 8, !tbaa !174
  %shl962 = shl i32 %519, 8
  %conv963 = and i32 %shr921, 255
  %or964 = or i32 %shl962, %conv963
  store i32 %or964, i32* %origPtr961, align 8, !tbaa !174
  br label %sw.bb966

if.end926:                                        ; preds = %if.end959, %if.end926.lr.ph
  %520 = phi i32 [ %.pre5446, %if.end926.lr.ph ], [ %dec947, %if.end959 ]
  %521 = phi i32 [ %517, %if.end926.lr.ph ], [ %add941, %if.end959 ]
  %cmp929 = icmp eq i32 %520, 0
  br i1 %cmp929, label %save_state_and_return, label %if.end932

if.end932:                                        ; preds = %if.end926
  %522 = load i32, i32* %bsBuff918.phi.trans.insert, align 8, !tbaa !107
  %shl934 = shl i32 %522, 8
  %523 = load i8*, i8** %next_in936, align 8, !tbaa !102
  %524 = load i8, i8* %523, align 1, !tbaa !12
  %conv937 = zext i8 %524 to i32
  %or938 = or i32 %shl934, %conv937
  store i32 %or938, i32* %bsBuff918.phi.trans.insert, align 8, !tbaa !107
  %add941 = add nsw i32 %521, 8
  store i32 %add941, i32* %bsLive913.pre-phi, align 4, !tbaa !106
  %incdec.ptr944 = getelementptr inbounds i8, i8* %523, i64 1
  store i8* %incdec.ptr944, i8** %next_in936, align 8, !tbaa !102
  %dec947 = add i32 %520, -1
  store i32 %dec947, i32* %avail_in928.phi.trans.insert, align 8, !tbaa !98
  %525 = load i32, i32* %total_in_lo32949, align 4, !tbaa !88
  %inc950 = add i32 %525, 1
  store i32 %inc950, i32* %total_in_lo32949, align 4, !tbaa !88
  %cmp953 = icmp eq i32 %inc950, 0
  br i1 %cmp953, label %if.then955, label %if.end959

if.then955:                                       ; preds = %if.end932
  %526 = load i32, i32* %total_in_hi32957, align 8, !tbaa !89
  %inc958 = add i32 %526, 1
  store i32 %inc958, i32* %total_in_hi32957, align 8, !tbaa !89
  br label %if.end959

if.end959:                                        ; preds = %if.then955, %if.end932
  %cmp914 = icmp sgt i32 %521, -1
  br i1 %cmp914, label %if.then916, label %if.end926

sw.bb966:                                         ; preds = %if.then916, %if.end.sw.bb966_crit_edge
  %527 = phi i32 [ %.pre, %if.end.sw.bb966_crit_edge ], [ %493, %if.then916 ]
  %528 = phi i32 [ %.pre5368, %if.end.sw.bb966_crit_edge ], [ %494, %if.then916 ]
  %529 = phi i32 [ %.pre5369, %if.end.sw.bb966_crit_edge ], [ %495, %if.then916 ]
  %530 = phi i32 [ %.pre5370, %if.end.sw.bb966_crit_edge ], [ %496, %if.then916 ]
  %531 = phi i32 [ %.pre5371, %if.end.sw.bb966_crit_edge ], [ %497, %if.then916 ]
  %532 = phi i32 [ %.pre5372, %if.end.sw.bb966_crit_edge ], [ %498, %if.then916 ]
  %533 = phi i32 [ %.pre5373, %if.end.sw.bb966_crit_edge ], [ %499, %if.then916 ]
  %534 = phi i32 [ %.pre5374, %if.end.sw.bb966_crit_edge ], [ %500, %if.then916 ]
  %535 = phi i32 [ %.pre5375, %if.end.sw.bb966_crit_edge ], [ %501, %if.then916 ]
  %536 = phi i32 [ %.pre5376, %if.end.sw.bb966_crit_edge ], [ %502, %if.then916 ]
  %537 = phi i32 [ %.pre5377, %if.end.sw.bb966_crit_edge ], [ %503, %if.then916 ]
  %538 = phi i32 [ %.pre5378, %if.end.sw.bb966_crit_edge ], [ %504, %if.then916 ]
  %539 = phi i32 [ %.pre5379, %if.end.sw.bb966_crit_edge ], [ %505, %if.then916 ]
  %540 = phi i32 [ %.pre5380, %if.end.sw.bb966_crit_edge ], [ %506, %if.then916 ]
  %541 = phi i32 [ %.pre5381, %if.end.sw.bb966_crit_edge ], [ %507, %if.then916 ]
  %542 = phi i32 [ %.pre5382, %if.end.sw.bb966_crit_edge ], [ %508, %if.then916 ]
  %543 = phi i32 [ %.pre5383, %if.end.sw.bb966_crit_edge ], [ %509, %if.then916 ]
  %544 = phi i32 [ %.pre5384, %if.end.sw.bb966_crit_edge ], [ %510, %if.then916 ]
  %545 = phi i32 [ %.pre5385, %if.end.sw.bb966_crit_edge ], [ %511, %if.then916 ]
  %546 = phi i32 [ %.pre5386, %if.end.sw.bb966_crit_edge ], [ %512, %if.then916 ]
  %547 = phi i32 [ %.pre5387, %if.end.sw.bb966_crit_edge ], [ %513, %if.then916 ]
  %548 = phi i32* [ %.pre5388, %if.end.sw.bb966_crit_edge ], [ %514, %if.then916 ]
  %549 = phi i32* [ %.pre5389, %if.end.sw.bb966_crit_edge ], [ %515, %if.then916 ]
  %550 = phi i32* [ %.pre5390, %if.end.sw.bb966_crit_edge ], [ %516, %if.then916 ]
  %save_j3.pre-phi6797 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_j3.pre-phi6798, %if.then916 ]
  %save_t4.pre-phi6741 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_t4.pre-phi6742, %if.then916 ]
  %save_alphaSize5.pre-phi6685 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_alphaSize5.pre-phi6686, %if.then916 ]
  %save_nGroups6.pre-phi6629 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_nGroups6.pre-phi6630, %if.then916 ]
  %save_nSelectors7.pre-phi6573 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_nSelectors7.pre-phi6574, %if.then916 ]
  %save_EOB8.pre-phi6517 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_EOB8.pre-phi6518, %if.then916 ]
  %save_groupNo9.pre-phi6461 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_groupNo9.pre-phi6462, %if.then916 ]
  %save_groupPos10.pre-phi6405 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_groupPos10.pre-phi6406, %if.then916 ]
  %save_nextSym11.pre-phi6349 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_nextSym11.pre-phi6350, %if.then916 ]
  %save_nblockMAX12.pre-phi6293 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_nblockMAX12.pre-phi6294, %if.then916 ]
  %save_nblock13.pre-phi6237 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_nblock13.pre-phi6238, %if.then916 ]
  %save_es14.pre-phi6181 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_es14.pre-phi6182, %if.then916 ]
  %save_N15.pre-phi6125 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_N15.pre-phi6126, %if.then916 ]
  %save_curr16.pre-phi6069 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_curr16.pre-phi6070, %if.then916 ]
  %save_zt17.pre-phi6013 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_zt17.pre-phi6014, %if.then916 ]
  %save_zn18.pre-phi5957 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_zn18.pre-phi5958, %if.then916 ]
  %save_zvec19.pre-phi5901 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_zvec19.pre-phi5902, %if.then916 ]
  %save_zj20.pre-phi5845 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_zj20.pre-phi5846, %if.then916 ]
  %save_gSel21.pre-phi5789 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_gSel21.pre-phi5790, %if.then916 ]
  %save_gMinlen22.pre-phi5733 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_gMinlen22.pre-phi5734, %if.then916 ]
  %save_gLimit23.pre-phi5677 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_gLimit23.pre-phi5678, %if.then916 ]
  %save_gBase24.pre-phi5621 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_gBase24.pre-phi5622, %if.then916 ]
  %save_gPerm25.pre-phi5565 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %save_gPerm25.pre-phi5566, %if.then916 ]
  %bsLive970.pre-phi = phi i32* [ %bsLive970.phi.trans.insert, %if.end.sw.bb966_crit_edge ], [ %bsLive913.pre-phi, %if.then916 ]
  %551 = phi i32 [ %.pre5448, %if.end.sw.bb966_crit_edge ], [ %sub920, %if.then916 ]
  store i32 26, i32* %state, align 8, !tbaa !105
  %cmp9715139 = icmp sgt i32 %551, 7
  %bsBuff975.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp9715139, label %sw.bb966.if.then973_crit_edge, label %if.end983.lr.ph

sw.bb966.if.then973_crit_edge:                    ; preds = %sw.bb966
  %.pre5451 = load i32, i32* %bsBuff975.phi.trans.insert, align 8, !tbaa !107
  br label %if.then973

if.end983.lr.ph:                                  ; preds = %sw.bb966
  %.pre5449 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in985.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5449, i64 0, i32 1
  %.pre5450 = load i32, i32* %avail_in985.phi.trans.insert, align 8, !tbaa !98
  %next_in993 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5449, i64 0, i32 0
  %total_in_lo321006 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5449, i64 0, i32 2
  %total_in_hi321014 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5449, i64 0, i32 3
  br label %if.end983

if.then973:                                       ; preds = %if.end1016, %sw.bb966.if.then973_crit_edge
  %552 = phi i32 [ %.pre5451, %sw.bb966.if.then973_crit_edge ], [ %or995, %if.end1016 ]
  %.lcssa4960 = phi i32 [ %551, %sw.bb966.if.then973_crit_edge ], [ %add998, %if.end1016 ]
  %sub977 = add nsw i32 %.lcssa4960, -8
  %shr978 = lshr i32 %552, %sub977
  store i32 %sub977, i32* %bsLive970.pre-phi, align 4, !tbaa !106
  %origPtr1018 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 13
  %553 = load i32, i32* %origPtr1018, align 8, !tbaa !174
  %shl1019 = shl i32 %553, 8
  %conv1020 = and i32 %shr978, 255
  %or1021 = or i32 %shl1019, %conv1020
  store i32 %or1021, i32* %origPtr1018, align 8, !tbaa !174
  br label %sw.bb1023

if.end983:                                        ; preds = %if.end1016, %if.end983.lr.ph
  %554 = phi i32 [ %.pre5450, %if.end983.lr.ph ], [ %dec1004, %if.end1016 ]
  %555 = phi i32 [ %551, %if.end983.lr.ph ], [ %add998, %if.end1016 ]
  %cmp986 = icmp eq i32 %554, 0
  br i1 %cmp986, label %save_state_and_return, label %if.end989

if.end989:                                        ; preds = %if.end983
  %556 = load i32, i32* %bsBuff975.phi.trans.insert, align 8, !tbaa !107
  %shl991 = shl i32 %556, 8
  %557 = load i8*, i8** %next_in993, align 8, !tbaa !102
  %558 = load i8, i8* %557, align 1, !tbaa !12
  %conv994 = zext i8 %558 to i32
  %or995 = or i32 %shl991, %conv994
  store i32 %or995, i32* %bsBuff975.phi.trans.insert, align 8, !tbaa !107
  %add998 = add nsw i32 %555, 8
  store i32 %add998, i32* %bsLive970.pre-phi, align 4, !tbaa !106
  %incdec.ptr1001 = getelementptr inbounds i8, i8* %557, i64 1
  store i8* %incdec.ptr1001, i8** %next_in993, align 8, !tbaa !102
  %dec1004 = add i32 %554, -1
  store i32 %dec1004, i32* %avail_in985.phi.trans.insert, align 8, !tbaa !98
  %559 = load i32, i32* %total_in_lo321006, align 4, !tbaa !88
  %inc1007 = add i32 %559, 1
  store i32 %inc1007, i32* %total_in_lo321006, align 4, !tbaa !88
  %cmp1010 = icmp eq i32 %inc1007, 0
  br i1 %cmp1010, label %if.then1012, label %if.end1016

if.then1012:                                      ; preds = %if.end989
  %560 = load i32, i32* %total_in_hi321014, align 8, !tbaa !89
  %inc1015 = add i32 %560, 1
  store i32 %inc1015, i32* %total_in_hi321014, align 8, !tbaa !89
  br label %if.end1016

if.end1016:                                       ; preds = %if.then1012, %if.end989
  %cmp971 = icmp sgt i32 %555, -1
  br i1 %cmp971, label %if.then973, label %if.end983

sw.bb1023:                                        ; preds = %if.then973, %if.end.sw.bb1023_crit_edge
  %561 = phi i32 [ %.pre, %if.end.sw.bb1023_crit_edge ], [ %527, %if.then973 ]
  %562 = phi i32 [ %.pre5368, %if.end.sw.bb1023_crit_edge ], [ %528, %if.then973 ]
  %563 = phi i32 [ %.pre5369, %if.end.sw.bb1023_crit_edge ], [ %529, %if.then973 ]
  %564 = phi i32 [ %.pre5370, %if.end.sw.bb1023_crit_edge ], [ %530, %if.then973 ]
  %565 = phi i32 [ %.pre5371, %if.end.sw.bb1023_crit_edge ], [ %531, %if.then973 ]
  %566 = phi i32 [ %.pre5372, %if.end.sw.bb1023_crit_edge ], [ %532, %if.then973 ]
  %567 = phi i32 [ %.pre5373, %if.end.sw.bb1023_crit_edge ], [ %533, %if.then973 ]
  %568 = phi i32 [ %.pre5374, %if.end.sw.bb1023_crit_edge ], [ %534, %if.then973 ]
  %569 = phi i32 [ %.pre5375, %if.end.sw.bb1023_crit_edge ], [ %535, %if.then973 ]
  %570 = phi i32 [ %.pre5376, %if.end.sw.bb1023_crit_edge ], [ %536, %if.then973 ]
  %571 = phi i32 [ %.pre5377, %if.end.sw.bb1023_crit_edge ], [ %537, %if.then973 ]
  %572 = phi i32 [ %.pre5378, %if.end.sw.bb1023_crit_edge ], [ %538, %if.then973 ]
  %573 = phi i32 [ %.pre5379, %if.end.sw.bb1023_crit_edge ], [ %539, %if.then973 ]
  %574 = phi i32 [ %.pre5380, %if.end.sw.bb1023_crit_edge ], [ %540, %if.then973 ]
  %575 = phi i32 [ %.pre5381, %if.end.sw.bb1023_crit_edge ], [ %541, %if.then973 ]
  %576 = phi i32 [ %.pre5382, %if.end.sw.bb1023_crit_edge ], [ %542, %if.then973 ]
  %577 = phi i32 [ %.pre5383, %if.end.sw.bb1023_crit_edge ], [ %543, %if.then973 ]
  %578 = phi i32 [ %.pre5384, %if.end.sw.bb1023_crit_edge ], [ %544, %if.then973 ]
  %579 = phi i32 [ %.pre5385, %if.end.sw.bb1023_crit_edge ], [ %545, %if.then973 ]
  %580 = phi i32 [ %.pre5386, %if.end.sw.bb1023_crit_edge ], [ %546, %if.then973 ]
  %581 = phi i32 [ %.pre5387, %if.end.sw.bb1023_crit_edge ], [ %547, %if.then973 ]
  %582 = phi i32* [ %.pre5388, %if.end.sw.bb1023_crit_edge ], [ %548, %if.then973 ]
  %583 = phi i32* [ %.pre5389, %if.end.sw.bb1023_crit_edge ], [ %549, %if.then973 ]
  %584 = phi i32* [ %.pre5390, %if.end.sw.bb1023_crit_edge ], [ %550, %if.then973 ]
  %save_j3.pre-phi6796 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_j3.pre-phi6797, %if.then973 ]
  %save_t4.pre-phi6740 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_t4.pre-phi6741, %if.then973 ]
  %save_alphaSize5.pre-phi6684 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_alphaSize5.pre-phi6685, %if.then973 ]
  %save_nGroups6.pre-phi6628 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_nGroups6.pre-phi6629, %if.then973 ]
  %save_nSelectors7.pre-phi6572 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_nSelectors7.pre-phi6573, %if.then973 ]
  %save_EOB8.pre-phi6516 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_EOB8.pre-phi6517, %if.then973 ]
  %save_groupNo9.pre-phi6460 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_groupNo9.pre-phi6461, %if.then973 ]
  %save_groupPos10.pre-phi6404 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_groupPos10.pre-phi6405, %if.then973 ]
  %save_nextSym11.pre-phi6348 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_nextSym11.pre-phi6349, %if.then973 ]
  %save_nblockMAX12.pre-phi6292 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_nblockMAX12.pre-phi6293, %if.then973 ]
  %save_nblock13.pre-phi6236 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_nblock13.pre-phi6237, %if.then973 ]
  %save_es14.pre-phi6180 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_es14.pre-phi6181, %if.then973 ]
  %save_N15.pre-phi6124 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_N15.pre-phi6125, %if.then973 ]
  %save_curr16.pre-phi6068 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_curr16.pre-phi6069, %if.then973 ]
  %save_zt17.pre-phi6012 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_zt17.pre-phi6013, %if.then973 ]
  %save_zn18.pre-phi5956 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_zn18.pre-phi5957, %if.then973 ]
  %save_zvec19.pre-phi5900 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_zvec19.pre-phi5901, %if.then973 ]
  %save_zj20.pre-phi5844 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_zj20.pre-phi5845, %if.then973 ]
  %save_gSel21.pre-phi5788 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_gSel21.pre-phi5789, %if.then973 ]
  %save_gMinlen22.pre-phi5732 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_gMinlen22.pre-phi5733, %if.then973 ]
  %save_gLimit23.pre-phi5676 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_gLimit23.pre-phi5677, %if.then973 ]
  %save_gBase24.pre-phi5620 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_gBase24.pre-phi5621, %if.then973 ]
  %save_gPerm25.pre-phi5564 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %save_gPerm25.pre-phi5565, %if.then973 ]
  %bsLive1027.pre-phi = phi i32* [ %bsLive1027.phi.trans.insert, %if.end.sw.bb1023_crit_edge ], [ %bsLive970.pre-phi, %if.then973 ]
  %585 = phi i32 [ %.pre5452, %if.end.sw.bb1023_crit_edge ], [ %sub977, %if.then973 ]
  store i32 27, i32* %state, align 8, !tbaa !105
  %cmp10285136 = icmp sgt i32 %585, 7
  %bsBuff1032.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp10285136, label %sw.bb1023.if.then1030_crit_edge, label %if.end1040.lr.ph

sw.bb1023.if.then1030_crit_edge:                  ; preds = %sw.bb1023
  %.pre5455 = load i32, i32* %bsBuff1032.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1030

if.end1040.lr.ph:                                 ; preds = %sw.bb1023
  %.pre5453 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1042.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5453, i64 0, i32 1
  %.pre5454 = load i32, i32* %avail_in1042.phi.trans.insert, align 8, !tbaa !98
  %next_in1050 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5453, i64 0, i32 0
  %total_in_lo321063 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5453, i64 0, i32 2
  %total_in_hi321071 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5453, i64 0, i32 3
  br label %if.end1040

if.then1030:                                      ; preds = %if.end1073, %sw.bb1023.if.then1030_crit_edge
  %586 = phi i32 [ %.pre5455, %sw.bb1023.if.then1030_crit_edge ], [ %or1052, %if.end1073 ]
  %.lcssa4957 = phi i32 [ %585, %sw.bb1023.if.then1030_crit_edge ], [ %add1055, %if.end1073 ]
  %sub1034 = add nsw i32 %.lcssa4957, -8
  %shr1035 = lshr i32 %586, %sub1034
  store i32 %sub1034, i32* %bsLive1027.pre-phi, align 4, !tbaa !106
  %origPtr1075 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 13
  %587 = load i32, i32* %origPtr1075, align 8, !tbaa !174
  %shl1076 = shl i32 %587, 8
  %conv1077 = and i32 %shr1035, 255
  %or1078 = or i32 %shl1076, %conv1077
  store i32 %or1078, i32* %origPtr1075, align 8, !tbaa !174
  %cmp1081 = icmp slt i32 %or1078, 0
  br i1 %cmp1081, label %save_state_and_return, label %if.end1084

if.end1040:                                       ; preds = %if.end1073, %if.end1040.lr.ph
  %588 = phi i32 [ %.pre5454, %if.end1040.lr.ph ], [ %dec1061, %if.end1073 ]
  %589 = phi i32 [ %585, %if.end1040.lr.ph ], [ %add1055, %if.end1073 ]
  %cmp1043 = icmp eq i32 %588, 0
  br i1 %cmp1043, label %save_state_and_return, label %if.end1046

if.end1046:                                       ; preds = %if.end1040
  %590 = load i32, i32* %bsBuff1032.phi.trans.insert, align 8, !tbaa !107
  %shl1048 = shl i32 %590, 8
  %591 = load i8*, i8** %next_in1050, align 8, !tbaa !102
  %592 = load i8, i8* %591, align 1, !tbaa !12
  %conv1051 = zext i8 %592 to i32
  %or1052 = or i32 %shl1048, %conv1051
  store i32 %or1052, i32* %bsBuff1032.phi.trans.insert, align 8, !tbaa !107
  %add1055 = add nsw i32 %589, 8
  store i32 %add1055, i32* %bsLive1027.pre-phi, align 4, !tbaa !106
  %incdec.ptr1058 = getelementptr inbounds i8, i8* %591, i64 1
  store i8* %incdec.ptr1058, i8** %next_in1050, align 8, !tbaa !102
  %dec1061 = add i32 %588, -1
  store i32 %dec1061, i32* %avail_in1042.phi.trans.insert, align 8, !tbaa !98
  %593 = load i32, i32* %total_in_lo321063, align 4, !tbaa !88
  %inc1064 = add i32 %593, 1
  store i32 %inc1064, i32* %total_in_lo321063, align 4, !tbaa !88
  %cmp1067 = icmp eq i32 %inc1064, 0
  br i1 %cmp1067, label %if.then1069, label %if.end1073

if.then1069:                                      ; preds = %if.end1046
  %594 = load i32, i32* %total_in_hi321071, align 8, !tbaa !89
  %inc1072 = add i32 %594, 1
  store i32 %inc1072, i32* %total_in_hi321071, align 8, !tbaa !89
  br label %if.end1073

if.end1073:                                       ; preds = %if.then1069, %if.end1046
  %cmp1028 = icmp sgt i32 %589, -1
  br i1 %cmp1028, label %if.then1030, label %if.end1040

if.end1084:                                       ; preds = %if.then1030
  %blockSize100k1086 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 9
  %595 = load i32, i32* %blockSize100k1086, align 8, !tbaa !173
  %mul1087 = mul nsw i32 %595, 100000
  %add1088 = or i32 %mul1087, 10
  %cmp1089 = icmp sgt i32 %or1078, %add1088
  br i1 %cmp1089, label %save_state_and_return, label %for.cond

for.cond:                                         ; preds = %if.then1102, %if.end1084
  %596 = phi i32 [ %619, %if.then1102 ], [ %562, %if.end1084 ]
  %597 = phi i32 [ %620, %if.then1102 ], [ %563, %if.end1084 ]
  %598 = phi i32 [ %621, %if.then1102 ], [ %564, %if.end1084 ]
  %599 = phi i32 [ %622, %if.then1102 ], [ %565, %if.end1084 ]
  %600 = phi i32 [ %623, %if.then1102 ], [ %566, %if.end1084 ]
  %601 = phi i32 [ %624, %if.then1102 ], [ %567, %if.end1084 ]
  %602 = phi i32 [ %625, %if.then1102 ], [ %568, %if.end1084 ]
  %603 = phi i32 [ %626, %if.then1102 ], [ %569, %if.end1084 ]
  %604 = phi i32 [ %627, %if.then1102 ], [ %570, %if.end1084 ]
  %605 = phi i32 [ %628, %if.then1102 ], [ %571, %if.end1084 ]
  %606 = phi i32 [ %629, %if.then1102 ], [ %572, %if.end1084 ]
  %607 = phi i32 [ %630, %if.then1102 ], [ %573, %if.end1084 ]
  %608 = phi i32 [ %631, %if.then1102 ], [ %574, %if.end1084 ]
  %609 = phi i32 [ %632, %if.then1102 ], [ %575, %if.end1084 ]
  %610 = phi i32 [ %633, %if.then1102 ], [ %576, %if.end1084 ]
  %611 = phi i32 [ %634, %if.then1102 ], [ %577, %if.end1084 ]
  %612 = phi i32 [ %635, %if.then1102 ], [ %578, %if.end1084 ]
  %613 = phi i32 [ %636, %if.then1102 ], [ %579, %if.end1084 ]
  %614 = phi i32 [ %637, %if.then1102 ], [ %580, %if.end1084 ]
  %615 = phi i32 [ %638, %if.then1102 ], [ %581, %if.end1084 ]
  %616 = phi i32* [ %639, %if.then1102 ], [ %582, %if.end1084 ]
  %617 = phi i32* [ %640, %if.then1102 ], [ %583, %if.end1084 ]
  %618 = phi i32* [ %641, %if.then1102 ], [ %584, %if.end1084 ]
  %save_j3.pre-phi6795 = phi i32* [ %save_j3.pre-phi6794, %if.then1102 ], [ %save_j3.pre-phi6796, %if.end1084 ]
  %save_t4.pre-phi6739 = phi i32* [ %save_t4.pre-phi6738, %if.then1102 ], [ %save_t4.pre-phi6740, %if.end1084 ]
  %save_alphaSize5.pre-phi6683 = phi i32* [ %save_alphaSize5.pre-phi6682, %if.then1102 ], [ %save_alphaSize5.pre-phi6684, %if.end1084 ]
  %save_nGroups6.pre-phi6627 = phi i32* [ %save_nGroups6.pre-phi6626, %if.then1102 ], [ %save_nGroups6.pre-phi6628, %if.end1084 ]
  %save_nSelectors7.pre-phi6571 = phi i32* [ %save_nSelectors7.pre-phi6570, %if.then1102 ], [ %save_nSelectors7.pre-phi6572, %if.end1084 ]
  %save_EOB8.pre-phi6515 = phi i32* [ %save_EOB8.pre-phi6514, %if.then1102 ], [ %save_EOB8.pre-phi6516, %if.end1084 ]
  %save_groupNo9.pre-phi6459 = phi i32* [ %save_groupNo9.pre-phi6458, %if.then1102 ], [ %save_groupNo9.pre-phi6460, %if.end1084 ]
  %save_groupPos10.pre-phi6403 = phi i32* [ %save_groupPos10.pre-phi6402, %if.then1102 ], [ %save_groupPos10.pre-phi6404, %if.end1084 ]
  %save_nextSym11.pre-phi6347 = phi i32* [ %save_nextSym11.pre-phi6346, %if.then1102 ], [ %save_nextSym11.pre-phi6348, %if.end1084 ]
  %save_nblockMAX12.pre-phi6291 = phi i32* [ %save_nblockMAX12.pre-phi6290, %if.then1102 ], [ %save_nblockMAX12.pre-phi6292, %if.end1084 ]
  %save_nblock13.pre-phi6235 = phi i32* [ %save_nblock13.pre-phi6234, %if.then1102 ], [ %save_nblock13.pre-phi6236, %if.end1084 ]
  %save_es14.pre-phi6179 = phi i32* [ %save_es14.pre-phi6178, %if.then1102 ], [ %save_es14.pre-phi6180, %if.end1084 ]
  %save_N15.pre-phi6123 = phi i32* [ %save_N15.pre-phi6122, %if.then1102 ], [ %save_N15.pre-phi6124, %if.end1084 ]
  %save_curr16.pre-phi6067 = phi i32* [ %save_curr16.pre-phi6066, %if.then1102 ], [ %save_curr16.pre-phi6068, %if.end1084 ]
  %save_zt17.pre-phi6011 = phi i32* [ %save_zt17.pre-phi6010, %if.then1102 ], [ %save_zt17.pre-phi6012, %if.end1084 ]
  %save_zn18.pre-phi5955 = phi i32* [ %save_zn18.pre-phi5954, %if.then1102 ], [ %save_zn18.pre-phi5956, %if.end1084 ]
  %save_zvec19.pre-phi5899 = phi i32* [ %save_zvec19.pre-phi5898, %if.then1102 ], [ %save_zvec19.pre-phi5900, %if.end1084 ]
  %save_zj20.pre-phi5843 = phi i32* [ %save_zj20.pre-phi5842, %if.then1102 ], [ %save_zj20.pre-phi5844, %if.end1084 ]
  %save_gSel21.pre-phi5787 = phi i32* [ %save_gSel21.pre-phi5786, %if.then1102 ], [ %save_gSel21.pre-phi5788, %if.end1084 ]
  %save_gMinlen22.pre-phi5731 = phi i32* [ %save_gMinlen22.pre-phi5730, %if.then1102 ], [ %save_gMinlen22.pre-phi5732, %if.end1084 ]
  %save_gLimit23.pre-phi5675 = phi i32** [ %save_gLimit23.pre-phi5674, %if.then1102 ], [ %save_gLimit23.pre-phi5676, %if.end1084 ]
  %save_gBase24.pre-phi5619 = phi i32** [ %save_gBase24.pre-phi5618, %if.then1102 ], [ %save_gBase24.pre-phi5620, %if.end1084 ]
  %save_gPerm25.pre-phi5563 = phi i32** [ %save_gPerm25.pre-phi5562, %if.then1102 ], [ %save_gPerm25.pre-phi5564, %if.end1084 ]
  %i.0 = phi i32 [ %inc1156, %if.then1102 ], [ 0, %if.end1084 ]
  %cmp1093 = icmp slt i32 %i.0, 16
  br i1 %cmp1093, label %sw.bb1095, label %for.end

sw.bb1095:                                        ; preds = %for.cond, %if.end
  %619 = phi i32 [ %.pre5368, %if.end ], [ %596, %for.cond ]
  %620 = phi i32 [ %.pre5369, %if.end ], [ %597, %for.cond ]
  %621 = phi i32 [ %.pre5370, %if.end ], [ %598, %for.cond ]
  %622 = phi i32 [ %.pre5371, %if.end ], [ %599, %for.cond ]
  %623 = phi i32 [ %.pre5372, %if.end ], [ %600, %for.cond ]
  %624 = phi i32 [ %.pre5373, %if.end ], [ %601, %for.cond ]
  %625 = phi i32 [ %.pre5374, %if.end ], [ %602, %for.cond ]
  %626 = phi i32 [ %.pre5375, %if.end ], [ %603, %for.cond ]
  %627 = phi i32 [ %.pre5376, %if.end ], [ %604, %for.cond ]
  %628 = phi i32 [ %.pre5377, %if.end ], [ %605, %for.cond ]
  %629 = phi i32 [ %.pre5378, %if.end ], [ %606, %for.cond ]
  %630 = phi i32 [ %.pre5379, %if.end ], [ %607, %for.cond ]
  %631 = phi i32 [ %.pre5380, %if.end ], [ %608, %for.cond ]
  %632 = phi i32 [ %.pre5381, %if.end ], [ %609, %for.cond ]
  %633 = phi i32 [ %.pre5382, %if.end ], [ %610, %for.cond ]
  %634 = phi i32 [ %.pre5383, %if.end ], [ %611, %for.cond ]
  %635 = phi i32 [ %.pre5384, %if.end ], [ %612, %for.cond ]
  %636 = phi i32 [ %.pre5385, %if.end ], [ %613, %for.cond ]
  %637 = phi i32 [ %.pre5386, %if.end ], [ %614, %for.cond ]
  %638 = phi i32 [ %.pre5387, %if.end ], [ %615, %for.cond ]
  %639 = phi i32* [ %.pre5388, %if.end ], [ %616, %for.cond ]
  %640 = phi i32* [ %.pre5389, %if.end ], [ %617, %for.cond ]
  %641 = phi i32* [ %.pre5390, %if.end ], [ %618, %for.cond ]
  %save_j3.pre-phi6794 = phi i32* [ %save_j3.phi.trans.insert, %if.end ], [ %save_j3.pre-phi6795, %for.cond ]
  %save_t4.pre-phi6738 = phi i32* [ %save_t4.phi.trans.insert, %if.end ], [ %save_t4.pre-phi6739, %for.cond ]
  %save_alphaSize5.pre-phi6682 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end ], [ %save_alphaSize5.pre-phi6683, %for.cond ]
  %save_nGroups6.pre-phi6626 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end ], [ %save_nGroups6.pre-phi6627, %for.cond ]
  %save_nSelectors7.pre-phi6570 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end ], [ %save_nSelectors7.pre-phi6571, %for.cond ]
  %save_EOB8.pre-phi6514 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end ], [ %save_EOB8.pre-phi6515, %for.cond ]
  %save_groupNo9.pre-phi6458 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end ], [ %save_groupNo9.pre-phi6459, %for.cond ]
  %save_groupPos10.pre-phi6402 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end ], [ %save_groupPos10.pre-phi6403, %for.cond ]
  %save_nextSym11.pre-phi6346 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end ], [ %save_nextSym11.pre-phi6347, %for.cond ]
  %save_nblockMAX12.pre-phi6290 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end ], [ %save_nblockMAX12.pre-phi6291, %for.cond ]
  %save_nblock13.pre-phi6234 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end ], [ %save_nblock13.pre-phi6235, %for.cond ]
  %save_es14.pre-phi6178 = phi i32* [ %save_es14.phi.trans.insert, %if.end ], [ %save_es14.pre-phi6179, %for.cond ]
  %save_N15.pre-phi6122 = phi i32* [ %save_N15.phi.trans.insert, %if.end ], [ %save_N15.pre-phi6123, %for.cond ]
  %save_curr16.pre-phi6066 = phi i32* [ %save_curr16.phi.trans.insert, %if.end ], [ %save_curr16.pre-phi6067, %for.cond ]
  %save_zt17.pre-phi6010 = phi i32* [ %save_zt17.phi.trans.insert, %if.end ], [ %save_zt17.pre-phi6011, %for.cond ]
  %save_zn18.pre-phi5954 = phi i32* [ %save_zn18.phi.trans.insert, %if.end ], [ %save_zn18.pre-phi5955, %for.cond ]
  %save_zvec19.pre-phi5898 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end ], [ %save_zvec19.pre-phi5899, %for.cond ]
  %save_zj20.pre-phi5842 = phi i32* [ %save_zj20.phi.trans.insert, %if.end ], [ %save_zj20.pre-phi5843, %for.cond ]
  %save_gSel21.pre-phi5786 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end ], [ %save_gSel21.pre-phi5787, %for.cond ]
  %save_gMinlen22.pre-phi5730 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end ], [ %save_gMinlen22.pre-phi5731, %for.cond ]
  %save_gLimit23.pre-phi5674 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end ], [ %save_gLimit23.pre-phi5675, %for.cond ]
  %save_gBase24.pre-phi5618 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end ], [ %save_gBase24.pre-phi5619, %for.cond ]
  %save_gPerm25.pre-phi5562 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end ], [ %save_gPerm25.pre-phi5563, %for.cond ]
  %i.1 = phi i32 [ %.pre, %if.end ], [ %i.0, %for.cond ]
  store i32 28, i32* %state, align 8, !tbaa !105
  %bsLive1099 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %642 = load i32, i32* %bsLive1099, align 4, !tbaa !106
  %cmp11005037 = icmp sgt i32 %642, 0
  %bsBuff1104.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp11005037, label %sw.bb1095.if.then1102_crit_edge, label %if.end1112.lr.ph

sw.bb1095.if.then1102_crit_edge:                  ; preds = %sw.bb1095
  %.pre5490 = load i32, i32* %bsBuff1104.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1102

if.end1112.lr.ph:                                 ; preds = %sw.bb1095
  %.pre5488 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1114.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5488, i64 0, i32 1
  %.pre5489 = load i32, i32* %avail_in1114.phi.trans.insert, align 8, !tbaa !98
  %next_in1122 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5488, i64 0, i32 0
  %total_in_lo321135 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5488, i64 0, i32 2
  %total_in_hi321143 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5488, i64 0, i32 3
  br label %if.end1112

if.then1102:                                      ; preds = %if.end1145, %sw.bb1095.if.then1102_crit_edge
  %643 = phi i32 [ %.pre5490, %sw.bb1095.if.then1102_crit_edge ], [ %or1124, %if.end1145 ]
  %.lcssa4906 = phi i32 [ %642, %sw.bb1095.if.then1102_crit_edge ], [ %add1127, %if.end1145 ]
  %sub1106 = add nsw i32 %.lcssa4906, -1
  store i32 %sub1106, i32* %bsLive1099, align 4, !tbaa !106
  %644 = shl i32 1, %sub1106
  %645 = and i32 %643, %644
  %cmp1148 = icmp ne i32 %645, 0
  %idxprom = sext i32 %i.1 to i64
  %arrayidx = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 29, i64 %idxprom
  %. = zext i1 %cmp1148 to i8
  store i8 %., i8* %arrayidx, align 1, !tbaa !12
  %inc1156 = add nsw i32 %i.1, 1
  br label %for.cond

if.end1112:                                       ; preds = %if.end1145, %if.end1112.lr.ph
  %646 = phi i32 [ %.pre5489, %if.end1112.lr.ph ], [ %dec1133, %if.end1145 ]
  %647 = phi i32 [ %642, %if.end1112.lr.ph ], [ %add1127, %if.end1145 ]
  %cmp1115 = icmp eq i32 %646, 0
  br i1 %cmp1115, label %save_state_and_return, label %if.end1118

if.end1118:                                       ; preds = %if.end1112
  %648 = load i32, i32* %bsBuff1104.phi.trans.insert, align 8, !tbaa !107
  %shl1120 = shl i32 %648, 8
  %649 = load i8*, i8** %next_in1122, align 8, !tbaa !102
  %650 = load i8, i8* %649, align 1, !tbaa !12
  %conv1123 = zext i8 %650 to i32
  %or1124 = or i32 %shl1120, %conv1123
  store i32 %or1124, i32* %bsBuff1104.phi.trans.insert, align 8, !tbaa !107
  %add1127 = add nsw i32 %647, 8
  store i32 %add1127, i32* %bsLive1099, align 4, !tbaa !106
  %incdec.ptr1130 = getelementptr inbounds i8, i8* %649, i64 1
  store i8* %incdec.ptr1130, i8** %next_in1122, align 8, !tbaa !102
  %dec1133 = add i32 %646, -1
  store i32 %dec1133, i32* %avail_in1114.phi.trans.insert, align 8, !tbaa !98
  %651 = load i32, i32* %total_in_lo321135, align 4, !tbaa !88
  %inc1136 = add i32 %651, 1
  store i32 %inc1136, i32* %total_in_lo321135, align 4, !tbaa !88
  %cmp1139 = icmp eq i32 %inc1136, 0
  br i1 %cmp1139, label %if.then1141, label %if.end1145

if.then1141:                                      ; preds = %if.end1118
  %652 = load i32, i32* %total_in_hi321143, align 8, !tbaa !89
  %inc1144 = add i32 %652, 1
  store i32 %inc1144, i32* %total_in_hi321143, align 8, !tbaa !89
  br label %if.end1145

if.end1145:                                       ; preds = %if.then1141, %if.end1118
  %cmp1100 = icmp sgt i32 %647, -8
  br i1 %cmp1100, label %if.then1102, label %if.end1112

for.end:                                          ; preds = %for.cond
  %scevgep5367 = getelementptr %struct.DState, %struct.DState* %s, i64 0, i32 28, i64 0
  call void @llvm.memset.p0i8.i64(i8* %scevgep5367, i8 0, i64 256, i32 1, i1 false)
  br label %for.cond1166

for.cond1166:                                     ; preds = %for.inc1245, %for.end
  %653 = phi i32 [ %732, %for.inc1245 ], [ %597, %for.end ]
  %654 = phi i32 [ %733, %for.inc1245 ], [ %598, %for.end ]
  %655 = phi i32 [ %734, %for.inc1245 ], [ %599, %for.end ]
  %656 = phi i32 [ %735, %for.inc1245 ], [ %600, %for.end ]
  %657 = phi i32 [ %736, %for.inc1245 ], [ %601, %for.end ]
  %658 = phi i32 [ %737, %for.inc1245 ], [ %602, %for.end ]
  %659 = phi i32 [ %738, %for.inc1245 ], [ %603, %for.end ]
  %660 = phi i32 [ %739, %for.inc1245 ], [ %604, %for.end ]
  %661 = phi i32 [ %740, %for.inc1245 ], [ %605, %for.end ]
  %662 = phi i32 [ %741, %for.inc1245 ], [ %606, %for.end ]
  %663 = phi i32 [ %742, %for.inc1245 ], [ %607, %for.end ]
  %664 = phi i32 [ %743, %for.inc1245 ], [ %608, %for.end ]
  %665 = phi i32 [ %744, %for.inc1245 ], [ %609, %for.end ]
  %666 = phi i32 [ %745, %for.inc1245 ], [ %610, %for.end ]
  %667 = phi i32 [ %746, %for.inc1245 ], [ %611, %for.end ]
  %668 = phi i32 [ %747, %for.inc1245 ], [ %612, %for.end ]
  %669 = phi i32 [ %748, %for.inc1245 ], [ %613, %for.end ]
  %670 = phi i32 [ %749, %for.inc1245 ], [ %614, %for.end ]
  %671 = phi i32 [ %750, %for.inc1245 ], [ %615, %for.end ]
  %672 = phi i32* [ %751, %for.inc1245 ], [ %616, %for.end ]
  %673 = phi i32* [ %752, %for.inc1245 ], [ %617, %for.end ]
  %674 = phi i32* [ %753, %for.inc1245 ], [ %618, %for.end ]
  %save_j3.pre-phi6793 = phi i32* [ %save_j3.pre-phi6792, %for.inc1245 ], [ %save_j3.pre-phi6795, %for.end ]
  %save_t4.pre-phi6737 = phi i32* [ %save_t4.pre-phi6736, %for.inc1245 ], [ %save_t4.pre-phi6739, %for.end ]
  %save_alphaSize5.pre-phi6681 = phi i32* [ %save_alphaSize5.pre-phi6680, %for.inc1245 ], [ %save_alphaSize5.pre-phi6683, %for.end ]
  %save_nGroups6.pre-phi6625 = phi i32* [ %save_nGroups6.pre-phi6624, %for.inc1245 ], [ %save_nGroups6.pre-phi6627, %for.end ]
  %save_nSelectors7.pre-phi6569 = phi i32* [ %save_nSelectors7.pre-phi6568, %for.inc1245 ], [ %save_nSelectors7.pre-phi6571, %for.end ]
  %save_EOB8.pre-phi6513 = phi i32* [ %save_EOB8.pre-phi6512, %for.inc1245 ], [ %save_EOB8.pre-phi6515, %for.end ]
  %save_groupNo9.pre-phi6457 = phi i32* [ %save_groupNo9.pre-phi6456, %for.inc1245 ], [ %save_groupNo9.pre-phi6459, %for.end ]
  %save_groupPos10.pre-phi6401 = phi i32* [ %save_groupPos10.pre-phi6400, %for.inc1245 ], [ %save_groupPos10.pre-phi6403, %for.end ]
  %save_nextSym11.pre-phi6345 = phi i32* [ %save_nextSym11.pre-phi6344, %for.inc1245 ], [ %save_nextSym11.pre-phi6347, %for.end ]
  %save_nblockMAX12.pre-phi6289 = phi i32* [ %save_nblockMAX12.pre-phi6288, %for.inc1245 ], [ %save_nblockMAX12.pre-phi6291, %for.end ]
  %save_nblock13.pre-phi6233 = phi i32* [ %save_nblock13.pre-phi6232, %for.inc1245 ], [ %save_nblock13.pre-phi6235, %for.end ]
  %save_es14.pre-phi6177 = phi i32* [ %save_es14.pre-phi6176, %for.inc1245 ], [ %save_es14.pre-phi6179, %for.end ]
  %save_N15.pre-phi6121 = phi i32* [ %save_N15.pre-phi6120, %for.inc1245 ], [ %save_N15.pre-phi6123, %for.end ]
  %save_curr16.pre-phi6065 = phi i32* [ %save_curr16.pre-phi6064, %for.inc1245 ], [ %save_curr16.pre-phi6067, %for.end ]
  %save_zt17.pre-phi6009 = phi i32* [ %save_zt17.pre-phi6008, %for.inc1245 ], [ %save_zt17.pre-phi6011, %for.end ]
  %save_zn18.pre-phi5953 = phi i32* [ %save_zn18.pre-phi5952, %for.inc1245 ], [ %save_zn18.pre-phi5955, %for.end ]
  %save_zvec19.pre-phi5897 = phi i32* [ %save_zvec19.pre-phi5896, %for.inc1245 ], [ %save_zvec19.pre-phi5899, %for.end ]
  %save_zj20.pre-phi5841 = phi i32* [ %save_zj20.pre-phi5840, %for.inc1245 ], [ %save_zj20.pre-phi5843, %for.end ]
  %save_gSel21.pre-phi5785 = phi i32* [ %save_gSel21.pre-phi5784, %for.inc1245 ], [ %save_gSel21.pre-phi5787, %for.end ]
  %save_gMinlen22.pre-phi5729 = phi i32* [ %save_gMinlen22.pre-phi5728, %for.inc1245 ], [ %save_gMinlen22.pre-phi5731, %for.end ]
  %save_gLimit23.pre-phi5673 = phi i32** [ %save_gLimit23.pre-phi5672, %for.inc1245 ], [ %save_gLimit23.pre-phi5675, %for.end ]
  %save_gBase24.pre-phi5617 = phi i32** [ %save_gBase24.pre-phi5616, %for.inc1245 ], [ %save_gBase24.pre-phi5619, %for.end ]
  %save_gPerm25.pre-phi5561 = phi i32** [ %save_gPerm25.pre-phi5560, %for.inc1245 ], [ %save_gPerm25.pre-phi5563, %for.end ]
  %j.0 = phi i32 [ %j.3, %for.inc1245 ], [ %596, %for.end ]
  %i.3 = phi i32 [ %inc1246, %for.inc1245 ], [ 0, %for.end ]
  %cmp1167 = icmp slt i32 %i.3, 16
  br i1 %cmp1167, label %for.body1169, label %for.end1247

for.body1169:                                     ; preds = %for.cond1166
  %idxprom1171 = sext i32 %i.3 to i64
  %arrayidx1172 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 29, i64 %idxprom1171
  %675 = load i8, i8* %arrayidx1172, align 1, !tbaa !12
  %tobool1173 = icmp eq i8 %675, 0
  br i1 %tobool1173, label %for.inc1245, label %for.cond1175

for.cond1175:                                     ; preds = %for.inc1241, %for.body1169
  %676 = phi i32 [ %698, %for.inc1241 ], [ %653, %for.body1169 ]
  %677 = phi i32 [ %699, %for.inc1241 ], [ %654, %for.body1169 ]
  %678 = phi i32 [ %700, %for.inc1241 ], [ %655, %for.body1169 ]
  %679 = phi i32 [ %701, %for.inc1241 ], [ %656, %for.body1169 ]
  %680 = phi i32 [ %702, %for.inc1241 ], [ %657, %for.body1169 ]
  %681 = phi i32 [ %703, %for.inc1241 ], [ %658, %for.body1169 ]
  %682 = phi i32 [ %704, %for.inc1241 ], [ %659, %for.body1169 ]
  %683 = phi i32 [ %705, %for.inc1241 ], [ %660, %for.body1169 ]
  %684 = phi i32 [ %706, %for.inc1241 ], [ %661, %for.body1169 ]
  %685 = phi i32 [ %707, %for.inc1241 ], [ %662, %for.body1169 ]
  %686 = phi i32 [ %708, %for.inc1241 ], [ %663, %for.body1169 ]
  %687 = phi i32 [ %709, %for.inc1241 ], [ %664, %for.body1169 ]
  %688 = phi i32 [ %710, %for.inc1241 ], [ %665, %for.body1169 ]
  %689 = phi i32 [ %711, %for.inc1241 ], [ %666, %for.body1169 ]
  %690 = phi i32 [ %712, %for.inc1241 ], [ %667, %for.body1169 ]
  %691 = phi i32 [ %713, %for.inc1241 ], [ %668, %for.body1169 ]
  %692 = phi i32 [ %714, %for.inc1241 ], [ %669, %for.body1169 ]
  %693 = phi i32 [ %715, %for.inc1241 ], [ %670, %for.body1169 ]
  %694 = phi i32 [ %716, %for.inc1241 ], [ %671, %for.body1169 ]
  %695 = phi i32* [ %717, %for.inc1241 ], [ %672, %for.body1169 ]
  %696 = phi i32* [ %718, %for.inc1241 ], [ %673, %for.body1169 ]
  %697 = phi i32* [ %719, %for.inc1241 ], [ %674, %for.body1169 ]
  %save_j3.pre-phi6791 = phi i32* [ %save_j3.pre-phi6790, %for.inc1241 ], [ %save_j3.pre-phi6793, %for.body1169 ]
  %save_t4.pre-phi6735 = phi i32* [ %save_t4.pre-phi6734, %for.inc1241 ], [ %save_t4.pre-phi6737, %for.body1169 ]
  %save_alphaSize5.pre-phi6679 = phi i32* [ %save_alphaSize5.pre-phi6678, %for.inc1241 ], [ %save_alphaSize5.pre-phi6681, %for.body1169 ]
  %save_nGroups6.pre-phi6623 = phi i32* [ %save_nGroups6.pre-phi6622, %for.inc1241 ], [ %save_nGroups6.pre-phi6625, %for.body1169 ]
  %save_nSelectors7.pre-phi6567 = phi i32* [ %save_nSelectors7.pre-phi6566, %for.inc1241 ], [ %save_nSelectors7.pre-phi6569, %for.body1169 ]
  %save_EOB8.pre-phi6511 = phi i32* [ %save_EOB8.pre-phi6510, %for.inc1241 ], [ %save_EOB8.pre-phi6513, %for.body1169 ]
  %save_groupNo9.pre-phi6455 = phi i32* [ %save_groupNo9.pre-phi6454, %for.inc1241 ], [ %save_groupNo9.pre-phi6457, %for.body1169 ]
  %save_groupPos10.pre-phi6399 = phi i32* [ %save_groupPos10.pre-phi6398, %for.inc1241 ], [ %save_groupPos10.pre-phi6401, %for.body1169 ]
  %save_nextSym11.pre-phi6343 = phi i32* [ %save_nextSym11.pre-phi6342, %for.inc1241 ], [ %save_nextSym11.pre-phi6345, %for.body1169 ]
  %save_nblockMAX12.pre-phi6287 = phi i32* [ %save_nblockMAX12.pre-phi6286, %for.inc1241 ], [ %save_nblockMAX12.pre-phi6289, %for.body1169 ]
  %save_nblock13.pre-phi6231 = phi i32* [ %save_nblock13.pre-phi6230, %for.inc1241 ], [ %save_nblock13.pre-phi6233, %for.body1169 ]
  %save_es14.pre-phi6175 = phi i32* [ %save_es14.pre-phi6174, %for.inc1241 ], [ %save_es14.pre-phi6177, %for.body1169 ]
  %save_N15.pre-phi6119 = phi i32* [ %save_N15.pre-phi6118, %for.inc1241 ], [ %save_N15.pre-phi6121, %for.body1169 ]
  %save_curr16.pre-phi6063 = phi i32* [ %save_curr16.pre-phi6062, %for.inc1241 ], [ %save_curr16.pre-phi6065, %for.body1169 ]
  %save_zt17.pre-phi6007 = phi i32* [ %save_zt17.pre-phi6006, %for.inc1241 ], [ %save_zt17.pre-phi6009, %for.body1169 ]
  %save_zn18.pre-phi5951 = phi i32* [ %save_zn18.pre-phi5950, %for.inc1241 ], [ %save_zn18.pre-phi5953, %for.body1169 ]
  %save_zvec19.pre-phi5895 = phi i32* [ %save_zvec19.pre-phi5894, %for.inc1241 ], [ %save_zvec19.pre-phi5897, %for.body1169 ]
  %save_zj20.pre-phi5839 = phi i32* [ %save_zj20.pre-phi5838, %for.inc1241 ], [ %save_zj20.pre-phi5841, %for.body1169 ]
  %save_gSel21.pre-phi5783 = phi i32* [ %save_gSel21.pre-phi5782, %for.inc1241 ], [ %save_gSel21.pre-phi5785, %for.body1169 ]
  %save_gMinlen22.pre-phi5727 = phi i32* [ %save_gMinlen22.pre-phi5726, %for.inc1241 ], [ %save_gMinlen22.pre-phi5729, %for.body1169 ]
  %save_gLimit23.pre-phi5671 = phi i32** [ %save_gLimit23.pre-phi5670, %for.inc1241 ], [ %save_gLimit23.pre-phi5673, %for.body1169 ]
  %save_gBase24.pre-phi5615 = phi i32** [ %save_gBase24.pre-phi5614, %for.inc1241 ], [ %save_gBase24.pre-phi5617, %for.body1169 ]
  %save_gPerm25.pre-phi5559 = phi i32** [ %save_gPerm25.pre-phi5558, %for.inc1241 ], [ %save_gPerm25.pre-phi5561, %for.body1169 ]
  %j.1 = phi i32 [ %inc1242, %for.inc1241 ], [ 0, %for.body1169 ]
  %i.4 = phi i32 [ %i.5, %for.inc1241 ], [ %i.3, %for.body1169 ]
  %cmp1176 = icmp slt i32 %j.1, 16
  br i1 %cmp1176, label %sw.bb1179, label %for.inc1245

sw.bb1179:                                        ; preds = %for.cond1175, %if.end
  %698 = phi i32 [ %.pre5369, %if.end ], [ %676, %for.cond1175 ]
  %699 = phi i32 [ %.pre5370, %if.end ], [ %677, %for.cond1175 ]
  %700 = phi i32 [ %.pre5371, %if.end ], [ %678, %for.cond1175 ]
  %701 = phi i32 [ %.pre5372, %if.end ], [ %679, %for.cond1175 ]
  %702 = phi i32 [ %.pre5373, %if.end ], [ %680, %for.cond1175 ]
  %703 = phi i32 [ %.pre5374, %if.end ], [ %681, %for.cond1175 ]
  %704 = phi i32 [ %.pre5375, %if.end ], [ %682, %for.cond1175 ]
  %705 = phi i32 [ %.pre5376, %if.end ], [ %683, %for.cond1175 ]
  %706 = phi i32 [ %.pre5377, %if.end ], [ %684, %for.cond1175 ]
  %707 = phi i32 [ %.pre5378, %if.end ], [ %685, %for.cond1175 ]
  %708 = phi i32 [ %.pre5379, %if.end ], [ %686, %for.cond1175 ]
  %709 = phi i32 [ %.pre5380, %if.end ], [ %687, %for.cond1175 ]
  %710 = phi i32 [ %.pre5381, %if.end ], [ %688, %for.cond1175 ]
  %711 = phi i32 [ %.pre5382, %if.end ], [ %689, %for.cond1175 ]
  %712 = phi i32 [ %.pre5383, %if.end ], [ %690, %for.cond1175 ]
  %713 = phi i32 [ %.pre5384, %if.end ], [ %691, %for.cond1175 ]
  %714 = phi i32 [ %.pre5385, %if.end ], [ %692, %for.cond1175 ]
  %715 = phi i32 [ %.pre5386, %if.end ], [ %693, %for.cond1175 ]
  %716 = phi i32 [ %.pre5387, %if.end ], [ %694, %for.cond1175 ]
  %717 = phi i32* [ %.pre5388, %if.end ], [ %695, %for.cond1175 ]
  %718 = phi i32* [ %.pre5389, %if.end ], [ %696, %for.cond1175 ]
  %719 = phi i32* [ %.pre5390, %if.end ], [ %697, %for.cond1175 ]
  %save_j3.pre-phi6790 = phi i32* [ %save_j3.phi.trans.insert, %if.end ], [ %save_j3.pre-phi6791, %for.cond1175 ]
  %save_t4.pre-phi6734 = phi i32* [ %save_t4.phi.trans.insert, %if.end ], [ %save_t4.pre-phi6735, %for.cond1175 ]
  %save_alphaSize5.pre-phi6678 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end ], [ %save_alphaSize5.pre-phi6679, %for.cond1175 ]
  %save_nGroups6.pre-phi6622 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end ], [ %save_nGroups6.pre-phi6623, %for.cond1175 ]
  %save_nSelectors7.pre-phi6566 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end ], [ %save_nSelectors7.pre-phi6567, %for.cond1175 ]
  %save_EOB8.pre-phi6510 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end ], [ %save_EOB8.pre-phi6511, %for.cond1175 ]
  %save_groupNo9.pre-phi6454 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end ], [ %save_groupNo9.pre-phi6455, %for.cond1175 ]
  %save_groupPos10.pre-phi6398 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end ], [ %save_groupPos10.pre-phi6399, %for.cond1175 ]
  %save_nextSym11.pre-phi6342 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end ], [ %save_nextSym11.pre-phi6343, %for.cond1175 ]
  %save_nblockMAX12.pre-phi6286 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end ], [ %save_nblockMAX12.pre-phi6287, %for.cond1175 ]
  %save_nblock13.pre-phi6230 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end ], [ %save_nblock13.pre-phi6231, %for.cond1175 ]
  %save_es14.pre-phi6174 = phi i32* [ %save_es14.phi.trans.insert, %if.end ], [ %save_es14.pre-phi6175, %for.cond1175 ]
  %save_N15.pre-phi6118 = phi i32* [ %save_N15.phi.trans.insert, %if.end ], [ %save_N15.pre-phi6119, %for.cond1175 ]
  %save_curr16.pre-phi6062 = phi i32* [ %save_curr16.phi.trans.insert, %if.end ], [ %save_curr16.pre-phi6063, %for.cond1175 ]
  %save_zt17.pre-phi6006 = phi i32* [ %save_zt17.phi.trans.insert, %if.end ], [ %save_zt17.pre-phi6007, %for.cond1175 ]
  %save_zn18.pre-phi5950 = phi i32* [ %save_zn18.phi.trans.insert, %if.end ], [ %save_zn18.pre-phi5951, %for.cond1175 ]
  %save_zvec19.pre-phi5894 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end ], [ %save_zvec19.pre-phi5895, %for.cond1175 ]
  %save_zj20.pre-phi5838 = phi i32* [ %save_zj20.phi.trans.insert, %if.end ], [ %save_zj20.pre-phi5839, %for.cond1175 ]
  %save_gSel21.pre-phi5782 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end ], [ %save_gSel21.pre-phi5783, %for.cond1175 ]
  %save_gMinlen22.pre-phi5726 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end ], [ %save_gMinlen22.pre-phi5727, %for.cond1175 ]
  %save_gLimit23.pre-phi5670 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end ], [ %save_gLimit23.pre-phi5671, %for.cond1175 ]
  %save_gBase24.pre-phi5614 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end ], [ %save_gBase24.pre-phi5615, %for.cond1175 ]
  %save_gPerm25.pre-phi5558 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end ], [ %save_gPerm25.pre-phi5559, %for.cond1175 ]
  %j.2 = phi i32 [ %.pre5368, %if.end ], [ %j.1, %for.cond1175 ]
  %i.5 = phi i32 [ %.pre, %if.end ], [ %i.4, %for.cond1175 ]
  store i32 29, i32* %state, align 8, !tbaa !105
  %bsLive1183 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %720 = load i32, i32* %bsLive1183, align 4, !tbaa !106
  %cmp11845040 = icmp sgt i32 %720, 0
  %bsBuff1188.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp11845040, label %sw.bb1179.if.then1186_crit_edge, label %if.end1196.preheader

if.end1196.preheader:                             ; preds = %sw.bb1179
  br label %if.end1196

sw.bb1179.if.then1186_crit_edge:                  ; preds = %sw.bb1179
  %.pre5487 = load i32, i32* %bsBuff1188.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1186

if.then1186:                                      ; preds = %if.end1229, %sw.bb1179.if.then1186_crit_edge
  %721 = phi i32 [ %.pre5487, %sw.bb1179.if.then1186_crit_edge ], [ %or1208, %if.end1229 ]
  %.lcssa4909 = phi i32 [ %720, %sw.bb1179.if.then1186_crit_edge ], [ %add1211, %if.end1229 ]
  %sub1190 = add nsw i32 %.lcssa4909, -1
  store i32 %sub1190, i32* %bsLive1183, align 4, !tbaa !106
  %722 = shl i32 1, %sub1190
  %723 = and i32 %721, %722
  %cmp1232 = icmp eq i32 %723, 0
  br i1 %cmp1232, label %for.inc1241, label %if.then1234

if.end1196:                                       ; preds = %if.end1229, %if.end1196.preheader
  %724 = phi i32 [ %add1211, %if.end1229 ], [ %720, %if.end1196.preheader ]
  %725 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1198 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %725, i64 0, i32 1
  %726 = load i32, i32* %avail_in1198, align 8, !tbaa !98
  %cmp1199 = icmp eq i32 %726, 0
  br i1 %cmp1199, label %save_state_and_return, label %if.end1202

if.end1202:                                       ; preds = %if.end1196
  %727 = load i32, i32* %bsBuff1188.phi.trans.insert, align 8, !tbaa !107
  %shl1204 = shl i32 %727, 8
  %next_in1206 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %725, i64 0, i32 0
  %728 = load i8*, i8** %next_in1206, align 8, !tbaa !102
  %729 = load i8, i8* %728, align 1, !tbaa !12
  %conv1207 = zext i8 %729 to i32
  %or1208 = or i32 %shl1204, %conv1207
  store i32 %or1208, i32* %bsBuff1188.phi.trans.insert, align 8, !tbaa !107
  %add1211 = add nsw i32 %724, 8
  store i32 %add1211, i32* %bsLive1183, align 4, !tbaa !106
  %incdec.ptr1214 = getelementptr inbounds i8, i8* %728, i64 1
  store i8* %incdec.ptr1214, i8** %next_in1206, align 8, !tbaa !102
  %dec1217 = add i32 %726, -1
  store i32 %dec1217, i32* %avail_in1198, align 8, !tbaa !98
  %total_in_lo321219 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %725, i64 0, i32 2
  %730 = load i32, i32* %total_in_lo321219, align 4, !tbaa !88
  %inc1220 = add i32 %730, 1
  store i32 %inc1220, i32* %total_in_lo321219, align 4, !tbaa !88
  %cmp1223 = icmp eq i32 %inc1220, 0
  br i1 %cmp1223, label %if.then1225, label %if.end1229

if.then1225:                                      ; preds = %if.end1202
  %total_in_hi321227 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %725, i64 0, i32 3
  %731 = load i32, i32* %total_in_hi321227, align 8, !tbaa !89
  %inc1228 = add i32 %731, 1
  store i32 %inc1228, i32* %total_in_hi321227, align 8, !tbaa !89
  br label %if.end1229

if.end1229:                                       ; preds = %if.then1225, %if.end1202
  %cmp1184 = icmp sgt i32 %724, -8
  br i1 %cmp1184, label %if.then1186, label %if.end1196

if.then1234:                                      ; preds = %if.then1186
  %mul1236 = shl i32 %i.5, 4
  %add1237 = add nsw i32 %mul1236, %j.2
  %idxprom1238 = sext i32 %add1237 to i64
  %arrayidx1239 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 28, i64 %idxprom1238
  store i8 1, i8* %arrayidx1239, align 1, !tbaa !12
  br label %for.inc1241

for.inc1241:                                      ; preds = %if.then1234, %if.then1186
  %inc1242 = add nsw i32 %j.2, 1
  br label %for.cond1175

for.inc1245:                                      ; preds = %for.cond1175, %for.body1169
  %732 = phi i32 [ %676, %for.cond1175 ], [ %653, %for.body1169 ]
  %733 = phi i32 [ %677, %for.cond1175 ], [ %654, %for.body1169 ]
  %734 = phi i32 [ %678, %for.cond1175 ], [ %655, %for.body1169 ]
  %735 = phi i32 [ %679, %for.cond1175 ], [ %656, %for.body1169 ]
  %736 = phi i32 [ %680, %for.cond1175 ], [ %657, %for.body1169 ]
  %737 = phi i32 [ %681, %for.cond1175 ], [ %658, %for.body1169 ]
  %738 = phi i32 [ %682, %for.cond1175 ], [ %659, %for.body1169 ]
  %739 = phi i32 [ %683, %for.cond1175 ], [ %660, %for.body1169 ]
  %740 = phi i32 [ %684, %for.cond1175 ], [ %661, %for.body1169 ]
  %741 = phi i32 [ %685, %for.cond1175 ], [ %662, %for.body1169 ]
  %742 = phi i32 [ %686, %for.cond1175 ], [ %663, %for.body1169 ]
  %743 = phi i32 [ %687, %for.cond1175 ], [ %664, %for.body1169 ]
  %744 = phi i32 [ %688, %for.cond1175 ], [ %665, %for.body1169 ]
  %745 = phi i32 [ %689, %for.cond1175 ], [ %666, %for.body1169 ]
  %746 = phi i32 [ %690, %for.cond1175 ], [ %667, %for.body1169 ]
  %747 = phi i32 [ %691, %for.cond1175 ], [ %668, %for.body1169 ]
  %748 = phi i32 [ %692, %for.cond1175 ], [ %669, %for.body1169 ]
  %749 = phi i32 [ %693, %for.cond1175 ], [ %670, %for.body1169 ]
  %750 = phi i32 [ %694, %for.cond1175 ], [ %671, %for.body1169 ]
  %751 = phi i32* [ %695, %for.cond1175 ], [ %672, %for.body1169 ]
  %752 = phi i32* [ %696, %for.cond1175 ], [ %673, %for.body1169 ]
  %753 = phi i32* [ %697, %for.cond1175 ], [ %674, %for.body1169 ]
  %save_j3.pre-phi6792 = phi i32* [ %save_j3.pre-phi6791, %for.cond1175 ], [ %save_j3.pre-phi6793, %for.body1169 ]
  %save_t4.pre-phi6736 = phi i32* [ %save_t4.pre-phi6735, %for.cond1175 ], [ %save_t4.pre-phi6737, %for.body1169 ]
  %save_alphaSize5.pre-phi6680 = phi i32* [ %save_alphaSize5.pre-phi6679, %for.cond1175 ], [ %save_alphaSize5.pre-phi6681, %for.body1169 ]
  %save_nGroups6.pre-phi6624 = phi i32* [ %save_nGroups6.pre-phi6623, %for.cond1175 ], [ %save_nGroups6.pre-phi6625, %for.body1169 ]
  %save_nSelectors7.pre-phi6568 = phi i32* [ %save_nSelectors7.pre-phi6567, %for.cond1175 ], [ %save_nSelectors7.pre-phi6569, %for.body1169 ]
  %save_EOB8.pre-phi6512 = phi i32* [ %save_EOB8.pre-phi6511, %for.cond1175 ], [ %save_EOB8.pre-phi6513, %for.body1169 ]
  %save_groupNo9.pre-phi6456 = phi i32* [ %save_groupNo9.pre-phi6455, %for.cond1175 ], [ %save_groupNo9.pre-phi6457, %for.body1169 ]
  %save_groupPos10.pre-phi6400 = phi i32* [ %save_groupPos10.pre-phi6399, %for.cond1175 ], [ %save_groupPos10.pre-phi6401, %for.body1169 ]
  %save_nextSym11.pre-phi6344 = phi i32* [ %save_nextSym11.pre-phi6343, %for.cond1175 ], [ %save_nextSym11.pre-phi6345, %for.body1169 ]
  %save_nblockMAX12.pre-phi6288 = phi i32* [ %save_nblockMAX12.pre-phi6287, %for.cond1175 ], [ %save_nblockMAX12.pre-phi6289, %for.body1169 ]
  %save_nblock13.pre-phi6232 = phi i32* [ %save_nblock13.pre-phi6231, %for.cond1175 ], [ %save_nblock13.pre-phi6233, %for.body1169 ]
  %save_es14.pre-phi6176 = phi i32* [ %save_es14.pre-phi6175, %for.cond1175 ], [ %save_es14.pre-phi6177, %for.body1169 ]
  %save_N15.pre-phi6120 = phi i32* [ %save_N15.pre-phi6119, %for.cond1175 ], [ %save_N15.pre-phi6121, %for.body1169 ]
  %save_curr16.pre-phi6064 = phi i32* [ %save_curr16.pre-phi6063, %for.cond1175 ], [ %save_curr16.pre-phi6065, %for.body1169 ]
  %save_zt17.pre-phi6008 = phi i32* [ %save_zt17.pre-phi6007, %for.cond1175 ], [ %save_zt17.pre-phi6009, %for.body1169 ]
  %save_zn18.pre-phi5952 = phi i32* [ %save_zn18.pre-phi5951, %for.cond1175 ], [ %save_zn18.pre-phi5953, %for.body1169 ]
  %save_zvec19.pre-phi5896 = phi i32* [ %save_zvec19.pre-phi5895, %for.cond1175 ], [ %save_zvec19.pre-phi5897, %for.body1169 ]
  %save_zj20.pre-phi5840 = phi i32* [ %save_zj20.pre-phi5839, %for.cond1175 ], [ %save_zj20.pre-phi5841, %for.body1169 ]
  %save_gSel21.pre-phi5784 = phi i32* [ %save_gSel21.pre-phi5783, %for.cond1175 ], [ %save_gSel21.pre-phi5785, %for.body1169 ]
  %save_gMinlen22.pre-phi5728 = phi i32* [ %save_gMinlen22.pre-phi5727, %for.cond1175 ], [ %save_gMinlen22.pre-phi5729, %for.body1169 ]
  %save_gLimit23.pre-phi5672 = phi i32** [ %save_gLimit23.pre-phi5671, %for.cond1175 ], [ %save_gLimit23.pre-phi5673, %for.body1169 ]
  %save_gBase24.pre-phi5616 = phi i32** [ %save_gBase24.pre-phi5615, %for.cond1175 ], [ %save_gBase24.pre-phi5617, %for.body1169 ]
  %save_gPerm25.pre-phi5560 = phi i32** [ %save_gPerm25.pre-phi5559, %for.cond1175 ], [ %save_gPerm25.pre-phi5561, %for.body1169 ]
  %j.3 = phi i32 [ %j.1, %for.cond1175 ], [ %j.0, %for.body1169 ]
  %i.6 = phi i32 [ %i.4, %for.cond1175 ], [ %i.3, %for.body1169 ]
  %inc1246 = add nsw i32 %i.6, 1
  br label %for.cond1166

for.end1247:                                      ; preds = %for.cond1166
  %nInUse.i = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 27
  store i32 0, i32* %nInUse.i, align 8, !tbaa !175
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.1, %for.end1247
  %754 = phi i32 [ 0, %for.end1247 ], [ %1965, %for.inc.i.1 ]
  %indvars.iv.i = phi i64 [ 0, %for.end1247 ], [ %indvars.iv.next.i.1, %for.inc.i.1 ]
  %i.014.i = phi i32 [ 0, %for.end1247 ], [ %inc5.i.1, %for.inc.i.1 ]
  %arrayidx.i = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 28, i64 %indvars.iv.i
  %755 = load i8, i8* %arrayidx.i, align 1, !tbaa !12
  %tobool.i = icmp eq i8 %755, 0
  br i1 %tobool.i, label %for.inc.i, label %if.then.i

if.then.i:                                        ; preds = %for.body.i
  %conv.i = trunc i32 %i.014.i to i8
  %idxprom2.i = sext i32 %754 to i64
  %arrayidx3.i = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 30, i64 %idxprom2.i
  store i8 %conv.i, i8* %arrayidx3.i, align 1, !tbaa !12
  %756 = load i32, i32* %nInUse.i, align 8, !tbaa !175
  %inc.i = add nsw i32 %756, 1
  store i32 %inc.i, i32* %nInUse.i, align 8, !tbaa !175
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %757 = phi i32 [ %754, %for.body.i ], [ %inc.i, %if.then.i ]
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 28, i64 %indvars.iv.next.i
  %758 = load i8, i8* %arrayidx.i.1, align 1, !tbaa !12
  %tobool.i.1 = icmp eq i8 %758, 0
  br i1 %tobool.i.1, label %for.inc.i.1, label %if.then.i.1

makeMaps_d.exit:                                  ; preds = %for.inc.i.1
  %cmp1248 = icmp eq i32 %1965, 0
  br i1 %cmp1248, label %save_state_and_return, label %if.end1251

if.end1251:                                       ; preds = %makeMaps_d.exit
  %add1253 = add nsw i32 %1965, 2
  br label %sw.bb1254

sw.bb1254:                                        ; preds = %if.end1251, %if.end
  %759 = phi i32 [ %.pre5369, %if.end ], [ %653, %if.end1251 ]
  %760 = phi i32 [ %.pre5371, %if.end ], [ %655, %if.end1251 ]
  %761 = phi i32 [ %.pre5372, %if.end ], [ %656, %if.end1251 ]
  %762 = phi i32 [ %.pre5373, %if.end ], [ %657, %if.end1251 ]
  %763 = phi i32 [ %.pre5374, %if.end ], [ %658, %if.end1251 ]
  %764 = phi i32 [ %.pre5375, %if.end ], [ %659, %if.end1251 ]
  %765 = phi i32 [ %.pre5376, %if.end ], [ %660, %if.end1251 ]
  %766 = phi i32 [ %.pre5377, %if.end ], [ %661, %if.end1251 ]
  %767 = phi i32 [ %.pre5378, %if.end ], [ %662, %if.end1251 ]
  %768 = phi i32 [ %.pre5379, %if.end ], [ %663, %if.end1251 ]
  %769 = phi i32 [ %.pre5380, %if.end ], [ %664, %if.end1251 ]
  %770 = phi i32 [ %.pre5381, %if.end ], [ %665, %if.end1251 ]
  %771 = phi i32 [ %.pre5382, %if.end ], [ %666, %if.end1251 ]
  %772 = phi i32 [ %.pre5383, %if.end ], [ %667, %if.end1251 ]
  %773 = phi i32 [ %.pre5384, %if.end ], [ %668, %if.end1251 ]
  %774 = phi i32 [ %.pre5385, %if.end ], [ %669, %if.end1251 ]
  %775 = phi i32 [ %.pre5386, %if.end ], [ %670, %if.end1251 ]
  %776 = phi i32 [ %.pre5387, %if.end ], [ %671, %if.end1251 ]
  %777 = phi i32* [ %.pre5388, %if.end ], [ %672, %if.end1251 ]
  %778 = phi i32* [ %.pre5389, %if.end ], [ %673, %if.end1251 ]
  %779 = phi i32* [ %.pre5390, %if.end ], [ %674, %if.end1251 ]
  %save_j3.pre-phi6789 = phi i32* [ %save_j3.phi.trans.insert, %if.end ], [ %save_j3.pre-phi6793, %if.end1251 ]
  %save_t4.pre-phi6733 = phi i32* [ %save_t4.phi.trans.insert, %if.end ], [ %save_t4.pre-phi6737, %if.end1251 ]
  %save_alphaSize5.pre-phi6677 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end ], [ %save_alphaSize5.pre-phi6681, %if.end1251 ]
  %save_nGroups6.pre-phi6621 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end ], [ %save_nGroups6.pre-phi6625, %if.end1251 ]
  %save_nSelectors7.pre-phi6565 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end ], [ %save_nSelectors7.pre-phi6569, %if.end1251 ]
  %save_EOB8.pre-phi6509 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end ], [ %save_EOB8.pre-phi6513, %if.end1251 ]
  %save_groupNo9.pre-phi6453 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end ], [ %save_groupNo9.pre-phi6457, %if.end1251 ]
  %save_groupPos10.pre-phi6397 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end ], [ %save_groupPos10.pre-phi6401, %if.end1251 ]
  %save_nextSym11.pre-phi6341 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end ], [ %save_nextSym11.pre-phi6345, %if.end1251 ]
  %save_nblockMAX12.pre-phi6285 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end ], [ %save_nblockMAX12.pre-phi6289, %if.end1251 ]
  %save_nblock13.pre-phi6229 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end ], [ %save_nblock13.pre-phi6233, %if.end1251 ]
  %save_es14.pre-phi6173 = phi i32* [ %save_es14.phi.trans.insert, %if.end ], [ %save_es14.pre-phi6177, %if.end1251 ]
  %save_N15.pre-phi6117 = phi i32* [ %save_N15.phi.trans.insert, %if.end ], [ %save_N15.pre-phi6121, %if.end1251 ]
  %save_curr16.pre-phi6061 = phi i32* [ %save_curr16.phi.trans.insert, %if.end ], [ %save_curr16.pre-phi6065, %if.end1251 ]
  %save_zt17.pre-phi6005 = phi i32* [ %save_zt17.phi.trans.insert, %if.end ], [ %save_zt17.pre-phi6009, %if.end1251 ]
  %save_zn18.pre-phi5949 = phi i32* [ %save_zn18.phi.trans.insert, %if.end ], [ %save_zn18.pre-phi5953, %if.end1251 ]
  %save_zvec19.pre-phi5893 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end ], [ %save_zvec19.pre-phi5897, %if.end1251 ]
  %save_zj20.pre-phi5837 = phi i32* [ %save_zj20.phi.trans.insert, %if.end ], [ %save_zj20.pre-phi5841, %if.end1251 ]
  %save_gSel21.pre-phi5781 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end ], [ %save_gSel21.pre-phi5785, %if.end1251 ]
  %save_gMinlen22.pre-phi5725 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end ], [ %save_gMinlen22.pre-phi5729, %if.end1251 ]
  %save_gLimit23.pre-phi5669 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end ], [ %save_gLimit23.pre-phi5673, %if.end1251 ]
  %save_gBase24.pre-phi5613 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end ], [ %save_gBase24.pre-phi5617, %if.end1251 ]
  %save_gPerm25.pre-phi5557 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end ], [ %save_gPerm25.pre-phi5561, %if.end1251 ]
  %alphaSize.0 = phi i32 [ %.pre5370, %if.end ], [ %add1253, %if.end1251 ]
  %j.4 = phi i32 [ %.pre5368, %if.end ], [ %j.0, %if.end1251 ]
  %i.7 = phi i32 [ %.pre, %if.end ], [ %i.3, %if.end1251 ]
  store i32 30, i32* %state, align 8, !tbaa !105
  %bsLive1258 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %780 = load i32, i32* %bsLive1258, align 4, !tbaa !106
  %cmp12595132 = icmp sgt i32 %780, 2
  %bsBuff1263.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp12595132, label %sw.bb1254.if.then1261_crit_edge, label %if.end1270.lr.ph

sw.bb1254.if.then1261_crit_edge:                  ; preds = %sw.bb1254
  %.pre5458 = load i32, i32* %bsBuff1263.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1261

if.end1270.lr.ph:                                 ; preds = %sw.bb1254
  %.pre5456 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1272.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5456, i64 0, i32 1
  %.pre5457 = load i32, i32* %avail_in1272.phi.trans.insert, align 8, !tbaa !98
  %next_in1280 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5456, i64 0, i32 0
  %total_in_lo321293 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5456, i64 0, i32 2
  %total_in_hi321301 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5456, i64 0, i32 3
  br label %if.end1270

if.then1261:                                      ; preds = %if.end1303, %sw.bb1254.if.then1261_crit_edge
  %781 = phi i32 [ %.pre5458, %sw.bb1254.if.then1261_crit_edge ], [ %or1282, %if.end1303 ]
  %.lcssa4954 = phi i32 [ %780, %sw.bb1254.if.then1261_crit_edge ], [ %add1285, %if.end1303 ]
  %sub1265 = add nsw i32 %.lcssa4954, -3
  %shr1266 = lshr i32 %781, %sub1265
  %and1267 = and i32 %shr1266, 7
  store i32 %sub1265, i32* %bsLive1258, align 4, !tbaa !106
  %trunc = trunc i32 %shr1266 to i3
  switch i3 %trunc, label %sw.bb1312 [
    i3 -1, label %save_state_and_return
    i3 1, label %save_state_and_return
    i3 0, label %save_state_and_return
  ]

if.end1270:                                       ; preds = %if.end1303, %if.end1270.lr.ph
  %782 = phi i32 [ %.pre5457, %if.end1270.lr.ph ], [ %dec1291, %if.end1303 ]
  %783 = phi i32 [ %780, %if.end1270.lr.ph ], [ %add1285, %if.end1303 ]
  %cmp1273 = icmp eq i32 %782, 0
  br i1 %cmp1273, label %save_state_and_return, label %if.end1276

if.end1276:                                       ; preds = %if.end1270
  %784 = load i32, i32* %bsBuff1263.phi.trans.insert, align 8, !tbaa !107
  %shl1278 = shl i32 %784, 8
  %785 = load i8*, i8** %next_in1280, align 8, !tbaa !102
  %786 = load i8, i8* %785, align 1, !tbaa !12
  %conv1281 = zext i8 %786 to i32
  %or1282 = or i32 %shl1278, %conv1281
  store i32 %or1282, i32* %bsBuff1263.phi.trans.insert, align 8, !tbaa !107
  %add1285 = add nsw i32 %783, 8
  store i32 %add1285, i32* %bsLive1258, align 4, !tbaa !106
  %incdec.ptr1288 = getelementptr inbounds i8, i8* %785, i64 1
  store i8* %incdec.ptr1288, i8** %next_in1280, align 8, !tbaa !102
  %dec1291 = add i32 %782, -1
  store i32 %dec1291, i32* %avail_in1272.phi.trans.insert, align 8, !tbaa !98
  %787 = load i32, i32* %total_in_lo321293, align 4, !tbaa !88
  %inc1294 = add i32 %787, 1
  store i32 %inc1294, i32* %total_in_lo321293, align 4, !tbaa !88
  %cmp1297 = icmp eq i32 %inc1294, 0
  br i1 %cmp1297, label %if.then1299, label %if.end1303

if.then1299:                                      ; preds = %if.end1276
  %788 = load i32, i32* %total_in_hi321301, align 8, !tbaa !89
  %inc1302 = add i32 %788, 1
  store i32 %inc1302, i32* %total_in_hi321301, align 8, !tbaa !89
  br label %if.end1303

if.end1303:                                       ; preds = %if.then1299, %if.end1276
  %cmp1259 = icmp sgt i32 %783, -6
  br i1 %cmp1259, label %if.then1261, label %if.end1270

sw.bb1312:                                        ; preds = %if.then1261, %if.end.sw.bb1312_crit_edge
  %789 = phi i32 [ %.pre5369, %if.end.sw.bb1312_crit_edge ], [ %759, %if.then1261 ]
  %790 = phi i32 [ %.pre5372, %if.end.sw.bb1312_crit_edge ], [ %761, %if.then1261 ]
  %791 = phi i32 [ %.pre5373, %if.end.sw.bb1312_crit_edge ], [ %762, %if.then1261 ]
  %792 = phi i32 [ %.pre5374, %if.end.sw.bb1312_crit_edge ], [ %763, %if.then1261 ]
  %793 = phi i32 [ %.pre5375, %if.end.sw.bb1312_crit_edge ], [ %764, %if.then1261 ]
  %794 = phi i32 [ %.pre5376, %if.end.sw.bb1312_crit_edge ], [ %765, %if.then1261 ]
  %795 = phi i32 [ %.pre5377, %if.end.sw.bb1312_crit_edge ], [ %766, %if.then1261 ]
  %796 = phi i32 [ %.pre5378, %if.end.sw.bb1312_crit_edge ], [ %767, %if.then1261 ]
  %797 = phi i32 [ %.pre5379, %if.end.sw.bb1312_crit_edge ], [ %768, %if.then1261 ]
  %798 = phi i32 [ %.pre5380, %if.end.sw.bb1312_crit_edge ], [ %769, %if.then1261 ]
  %799 = phi i32 [ %.pre5381, %if.end.sw.bb1312_crit_edge ], [ %770, %if.then1261 ]
  %800 = phi i32 [ %.pre5382, %if.end.sw.bb1312_crit_edge ], [ %771, %if.then1261 ]
  %801 = phi i32 [ %.pre5383, %if.end.sw.bb1312_crit_edge ], [ %772, %if.then1261 ]
  %802 = phi i32 [ %.pre5384, %if.end.sw.bb1312_crit_edge ], [ %773, %if.then1261 ]
  %803 = phi i32 [ %.pre5385, %if.end.sw.bb1312_crit_edge ], [ %774, %if.then1261 ]
  %804 = phi i32 [ %.pre5386, %if.end.sw.bb1312_crit_edge ], [ %775, %if.then1261 ]
  %805 = phi i32 [ %.pre5387, %if.end.sw.bb1312_crit_edge ], [ %776, %if.then1261 ]
  %806 = phi i32* [ %.pre5388, %if.end.sw.bb1312_crit_edge ], [ %777, %if.then1261 ]
  %807 = phi i32* [ %.pre5389, %if.end.sw.bb1312_crit_edge ], [ %778, %if.then1261 ]
  %808 = phi i32* [ %.pre5390, %if.end.sw.bb1312_crit_edge ], [ %779, %if.then1261 ]
  %save_j3.pre-phi6788 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_j3.pre-phi6789, %if.then1261 ]
  %save_t4.pre-phi6732 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_t4.pre-phi6733, %if.then1261 ]
  %save_alphaSize5.pre-phi6676 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_alphaSize5.pre-phi6677, %if.then1261 ]
  %save_nGroups6.pre-phi6620 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_nGroups6.pre-phi6621, %if.then1261 ]
  %save_nSelectors7.pre-phi6564 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_nSelectors7.pre-phi6565, %if.then1261 ]
  %save_EOB8.pre-phi6508 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_EOB8.pre-phi6509, %if.then1261 ]
  %save_groupNo9.pre-phi6452 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_groupNo9.pre-phi6453, %if.then1261 ]
  %save_groupPos10.pre-phi6396 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_groupPos10.pre-phi6397, %if.then1261 ]
  %save_nextSym11.pre-phi6340 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_nextSym11.pre-phi6341, %if.then1261 ]
  %save_nblockMAX12.pre-phi6284 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_nblockMAX12.pre-phi6285, %if.then1261 ]
  %save_nblock13.pre-phi6228 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_nblock13.pre-phi6229, %if.then1261 ]
  %save_es14.pre-phi6172 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_es14.pre-phi6173, %if.then1261 ]
  %save_N15.pre-phi6116 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_N15.pre-phi6117, %if.then1261 ]
  %save_curr16.pre-phi6060 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_curr16.pre-phi6061, %if.then1261 ]
  %save_zt17.pre-phi6004 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_zt17.pre-phi6005, %if.then1261 ]
  %save_zn18.pre-phi5948 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_zn18.pre-phi5949, %if.then1261 ]
  %save_zvec19.pre-phi5892 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_zvec19.pre-phi5893, %if.then1261 ]
  %save_zj20.pre-phi5836 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_zj20.pre-phi5837, %if.then1261 ]
  %save_gSel21.pre-phi5780 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_gSel21.pre-phi5781, %if.then1261 ]
  %save_gMinlen22.pre-phi5724 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_gMinlen22.pre-phi5725, %if.then1261 ]
  %save_gLimit23.pre-phi5668 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_gLimit23.pre-phi5669, %if.then1261 ]
  %save_gBase24.pre-phi5612 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_gBase24.pre-phi5613, %if.then1261 ]
  %save_gPerm25.pre-phi5556 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %save_gPerm25.pre-phi5557, %if.then1261 ]
  %bsLive1316.pre-phi = phi i32* [ %bsLive1316.phi.trans.insert, %if.end.sw.bb1312_crit_edge ], [ %bsLive1258, %if.then1261 ]
  %809 = phi i32 [ %.pre5459, %if.end.sw.bb1312_crit_edge ], [ %sub1265, %if.then1261 ]
  %nGroups.0 = phi i32 [ %.pre5371, %if.end.sw.bb1312_crit_edge ], [ %and1267, %if.then1261 ]
  %alphaSize.1 = phi i32 [ %.pre5370, %if.end.sw.bb1312_crit_edge ], [ %alphaSize.0, %if.then1261 ]
  %j.5 = phi i32 [ %.pre5368, %if.end.sw.bb1312_crit_edge ], [ %j.4, %if.then1261 ]
  %i.8 = phi i32 [ %.pre, %if.end.sw.bb1312_crit_edge ], [ %i.7, %if.then1261 ]
  store i32 31, i32* %state, align 8, !tbaa !105
  %cmp13175129 = icmp sgt i32 %809, 14
  %bsBuff1321.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp13175129, label %sw.bb1312.if.then1319_crit_edge, label %if.end1328.lr.ph

sw.bb1312.if.then1319_crit_edge:                  ; preds = %sw.bb1312
  %.pre5462 = load i32, i32* %bsBuff1321.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1319

if.end1328.lr.ph:                                 ; preds = %sw.bb1312
  %.pre5460 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1330.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5460, i64 0, i32 1
  %.pre5461 = load i32, i32* %avail_in1330.phi.trans.insert, align 8, !tbaa !98
  %next_in1338 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5460, i64 0, i32 0
  %total_in_lo321351 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5460, i64 0, i32 2
  %total_in_hi321359 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5460, i64 0, i32 3
  br label %if.end1328

if.then1319:                                      ; preds = %if.end1361, %sw.bb1312.if.then1319_crit_edge
  %810 = phi i32 [ %.pre5462, %sw.bb1312.if.then1319_crit_edge ], [ %or1340, %if.end1361 ]
  %.lcssa4951 = phi i32 [ %809, %sw.bb1312.if.then1319_crit_edge ], [ %add1343, %if.end1361 ]
  %sub1323 = add nsw i32 %.lcssa4951, -15
  %shr1324 = lshr i32 %810, %sub1323
  %and1325 = and i32 %shr1324, 32767
  store i32 %sub1323, i32* %bsLive1316.pre-phi, align 4, !tbaa !106
  %cmp1363 = icmp eq i32 %and1325, 0
  br i1 %cmp1363, label %save_state_and_return, label %for.cond1367

if.end1328:                                       ; preds = %if.end1361, %if.end1328.lr.ph
  %811 = phi i32 [ %.pre5461, %if.end1328.lr.ph ], [ %dec1349, %if.end1361 ]
  %812 = phi i32 [ %809, %if.end1328.lr.ph ], [ %add1343, %if.end1361 ]
  %cmp1331 = icmp eq i32 %811, 0
  br i1 %cmp1331, label %save_state_and_return, label %if.end1334

if.end1334:                                       ; preds = %if.end1328
  %813 = load i32, i32* %bsBuff1321.phi.trans.insert, align 8, !tbaa !107
  %shl1336 = shl i32 %813, 8
  %814 = load i8*, i8** %next_in1338, align 8, !tbaa !102
  %815 = load i8, i8* %814, align 1, !tbaa !12
  %conv1339 = zext i8 %815 to i32
  %or1340 = or i32 %shl1336, %conv1339
  store i32 %or1340, i32* %bsBuff1321.phi.trans.insert, align 8, !tbaa !107
  %add1343 = add nsw i32 %812, 8
  store i32 %add1343, i32* %bsLive1316.pre-phi, align 4, !tbaa !106
  %incdec.ptr1346 = getelementptr inbounds i8, i8* %814, i64 1
  store i8* %incdec.ptr1346, i8** %next_in1338, align 8, !tbaa !102
  %dec1349 = add i32 %811, -1
  store i32 %dec1349, i32* %avail_in1330.phi.trans.insert, align 8, !tbaa !98
  %816 = load i32, i32* %total_in_lo321351, align 4, !tbaa !88
  %inc1352 = add i32 %816, 1
  store i32 %inc1352, i32* %total_in_lo321351, align 4, !tbaa !88
  %cmp1355 = icmp eq i32 %inc1352, 0
  br i1 %cmp1355, label %if.then1357, label %if.end1361

if.then1357:                                      ; preds = %if.end1334
  %817 = load i32, i32* %total_in_hi321359, align 8, !tbaa !89
  %inc1360 = add i32 %817, 1
  store i32 %inc1360, i32* %total_in_hi321359, align 8, !tbaa !89
  br label %if.end1361

if.end1361:                                       ; preds = %if.then1357, %if.end1334
  %cmp1317 = icmp sgt i32 %812, 6
  br i1 %cmp1317, label %if.then1319, label %if.end1328

for.cond1367:                                     ; preds = %while.end1435, %if.then1319
  %818 = phi i32 [ %.ph, %while.end1435 ], [ %789, %if.then1319 ]
  %819 = phi i32 [ %.ph7114, %while.end1435 ], [ %791, %if.then1319 ]
  %820 = phi i32 [ %.ph7115, %while.end1435 ], [ %792, %if.then1319 ]
  %821 = phi i32 [ %.ph7116, %while.end1435 ], [ %793, %if.then1319 ]
  %822 = phi i32 [ %.ph7117, %while.end1435 ], [ %794, %if.then1319 ]
  %823 = phi i32 [ %.ph7118, %while.end1435 ], [ %795, %if.then1319 ]
  %824 = phi i32 [ %.ph7119, %while.end1435 ], [ %796, %if.then1319 ]
  %825 = phi i32 [ %.ph7120, %while.end1435 ], [ %797, %if.then1319 ]
  %826 = phi i32 [ %.ph7121, %while.end1435 ], [ %798, %if.then1319 ]
  %827 = phi i32 [ %.ph7122, %while.end1435 ], [ %799, %if.then1319 ]
  %828 = phi i32 [ %.ph7123, %while.end1435 ], [ %800, %if.then1319 ]
  %829 = phi i32 [ %.ph7124, %while.end1435 ], [ %801, %if.then1319 ]
  %830 = phi i32 [ %.ph7125, %while.end1435 ], [ %802, %if.then1319 ]
  %831 = phi i32 [ %.ph7126, %while.end1435 ], [ %803, %if.then1319 ]
  %832 = phi i32 [ %.ph7127, %while.end1435 ], [ %804, %if.then1319 ]
  %833 = phi i32 [ %.ph7128, %while.end1435 ], [ %805, %if.then1319 ]
  %834 = phi i32* [ %.ph7129, %while.end1435 ], [ %806, %if.then1319 ]
  %835 = phi i32* [ %.ph7130, %while.end1435 ], [ %807, %if.then1319 ]
  %836 = phi i32* [ %.ph7131, %while.end1435 ], [ %808, %if.then1319 ]
  %save_j3.pre-phi6787 = phi i32* [ %save_j3.pre-phi6785.ph, %while.end1435 ], [ %save_j3.pre-phi6788, %if.then1319 ]
  %save_t4.pre-phi6731 = phi i32* [ %save_t4.pre-phi6729.ph, %while.end1435 ], [ %save_t4.pre-phi6732, %if.then1319 ]
  %save_alphaSize5.pre-phi6675 = phi i32* [ %save_alphaSize5.pre-phi6673.ph, %while.end1435 ], [ %save_alphaSize5.pre-phi6676, %if.then1319 ]
  %save_nGroups6.pre-phi6619 = phi i32* [ %save_nGroups6.pre-phi6617.ph, %while.end1435 ], [ %save_nGroups6.pre-phi6620, %if.then1319 ]
  %save_nSelectors7.pre-phi6563 = phi i32* [ %save_nSelectors7.pre-phi6561.ph, %while.end1435 ], [ %save_nSelectors7.pre-phi6564, %if.then1319 ]
  %save_EOB8.pre-phi6507 = phi i32* [ %save_EOB8.pre-phi6505.ph, %while.end1435 ], [ %save_EOB8.pre-phi6508, %if.then1319 ]
  %save_groupNo9.pre-phi6451 = phi i32* [ %save_groupNo9.pre-phi6449.ph, %while.end1435 ], [ %save_groupNo9.pre-phi6452, %if.then1319 ]
  %save_groupPos10.pre-phi6395 = phi i32* [ %save_groupPos10.pre-phi6393.ph, %while.end1435 ], [ %save_groupPos10.pre-phi6396, %if.then1319 ]
  %save_nextSym11.pre-phi6339 = phi i32* [ %save_nextSym11.pre-phi6337.ph, %while.end1435 ], [ %save_nextSym11.pre-phi6340, %if.then1319 ]
  %save_nblockMAX12.pre-phi6283 = phi i32* [ %save_nblockMAX12.pre-phi6281.ph, %while.end1435 ], [ %save_nblockMAX12.pre-phi6284, %if.then1319 ]
  %save_nblock13.pre-phi6227 = phi i32* [ %save_nblock13.pre-phi6225.ph, %while.end1435 ], [ %save_nblock13.pre-phi6228, %if.then1319 ]
  %save_es14.pre-phi6171 = phi i32* [ %save_es14.pre-phi6169.ph, %while.end1435 ], [ %save_es14.pre-phi6172, %if.then1319 ]
  %save_N15.pre-phi6115 = phi i32* [ %save_N15.pre-phi6113.ph, %while.end1435 ], [ %save_N15.pre-phi6116, %if.then1319 ]
  %save_curr16.pre-phi6059 = phi i32* [ %save_curr16.pre-phi6057.ph, %while.end1435 ], [ %save_curr16.pre-phi6060, %if.then1319 ]
  %save_zt17.pre-phi6003 = phi i32* [ %save_zt17.pre-phi6001.ph, %while.end1435 ], [ %save_zt17.pre-phi6004, %if.then1319 ]
  %save_zn18.pre-phi5947 = phi i32* [ %save_zn18.pre-phi5945.ph, %while.end1435 ], [ %save_zn18.pre-phi5948, %if.then1319 ]
  %save_zvec19.pre-phi5891 = phi i32* [ %save_zvec19.pre-phi5889.ph, %while.end1435 ], [ %save_zvec19.pre-phi5892, %if.then1319 ]
  %save_zj20.pre-phi5835 = phi i32* [ %save_zj20.pre-phi5833.ph, %while.end1435 ], [ %save_zj20.pre-phi5836, %if.then1319 ]
  %save_gSel21.pre-phi5779 = phi i32* [ %save_gSel21.pre-phi5777.ph, %while.end1435 ], [ %save_gSel21.pre-phi5780, %if.then1319 ]
  %save_gMinlen22.pre-phi5723 = phi i32* [ %save_gMinlen22.pre-phi5721.ph, %while.end1435 ], [ %save_gMinlen22.pre-phi5724, %if.then1319 ]
  %save_gLimit23.pre-phi5667 = phi i32** [ %save_gLimit23.pre-phi5665.ph, %while.end1435 ], [ %save_gLimit23.pre-phi5668, %if.then1319 ]
  %save_gBase24.pre-phi5611 = phi i32** [ %save_gBase24.pre-phi5609.ph, %while.end1435 ], [ %save_gBase24.pre-phi5612, %if.then1319 ]
  %save_gPerm25.pre-phi5555 = phi i32** [ %save_gPerm25.pre-phi5553.ph, %while.end1435 ], [ %save_gPerm25.pre-phi5556, %if.then1319 ]
  %nSelectors.0 = phi i32 [ %nSelectors.2.ph, %while.end1435 ], [ %and1325, %if.then1319 ]
  %nGroups.1 = phi i32 [ %nGroups.3.ph, %while.end1435 ], [ %nGroups.0, %if.then1319 ]
  %alphaSize.2 = phi i32 [ %alphaSize.4.ph, %while.end1435 ], [ %alphaSize.1, %if.then1319 ]
  %j.6 = phi i32 [ %j.8, %while.end1435 ], [ %j.5, %if.then1319 ]
  %i.9 = phi i32 [ %inc1440, %while.end1435 ], [ 0, %if.then1319 ]
  %cmp1368 = icmp slt i32 %i.9, %nSelectors.0
  br i1 %cmp1368, label %sw.bb1373.preheader, label %for.end1441

sw.bb1373.preheader:                              ; preds = %for.cond1367, %if.end
  %.ph = phi i32 [ %818, %for.cond1367 ], [ %.pre5369, %if.end ]
  %.ph7114 = phi i32 [ %819, %for.cond1367 ], [ %.pre5373, %if.end ]
  %.ph7115 = phi i32 [ %820, %for.cond1367 ], [ %.pre5374, %if.end ]
  %.ph7116 = phi i32 [ %821, %for.cond1367 ], [ %.pre5375, %if.end ]
  %.ph7117 = phi i32 [ %822, %for.cond1367 ], [ %.pre5376, %if.end ]
  %.ph7118 = phi i32 [ %823, %for.cond1367 ], [ %.pre5377, %if.end ]
  %.ph7119 = phi i32 [ %824, %for.cond1367 ], [ %.pre5378, %if.end ]
  %.ph7120 = phi i32 [ %825, %for.cond1367 ], [ %.pre5379, %if.end ]
  %.ph7121 = phi i32 [ %826, %for.cond1367 ], [ %.pre5380, %if.end ]
  %.ph7122 = phi i32 [ %827, %for.cond1367 ], [ %.pre5381, %if.end ]
  %.ph7123 = phi i32 [ %828, %for.cond1367 ], [ %.pre5382, %if.end ]
  %.ph7124 = phi i32 [ %829, %for.cond1367 ], [ %.pre5383, %if.end ]
  %.ph7125 = phi i32 [ %830, %for.cond1367 ], [ %.pre5384, %if.end ]
  %.ph7126 = phi i32 [ %831, %for.cond1367 ], [ %.pre5385, %if.end ]
  %.ph7127 = phi i32 [ %832, %for.cond1367 ], [ %.pre5386, %if.end ]
  %.ph7128 = phi i32 [ %833, %for.cond1367 ], [ %.pre5387, %if.end ]
  %.ph7129 = phi i32* [ %834, %for.cond1367 ], [ %.pre5388, %if.end ]
  %.ph7130 = phi i32* [ %835, %for.cond1367 ], [ %.pre5389, %if.end ]
  %.ph7131 = phi i32* [ %836, %for.cond1367 ], [ %.pre5390, %if.end ]
  %save_j3.pre-phi6785.ph = phi i32* [ %save_j3.pre-phi6787, %for.cond1367 ], [ %save_j3.phi.trans.insert, %if.end ]
  %save_t4.pre-phi6729.ph = phi i32* [ %save_t4.pre-phi6731, %for.cond1367 ], [ %save_t4.phi.trans.insert, %if.end ]
  %save_alphaSize5.pre-phi6673.ph = phi i32* [ %save_alphaSize5.pre-phi6675, %for.cond1367 ], [ %save_alphaSize5.phi.trans.insert, %if.end ]
  %save_nGroups6.pre-phi6617.ph = phi i32* [ %save_nGroups6.pre-phi6619, %for.cond1367 ], [ %save_nGroups6.phi.trans.insert, %if.end ]
  %save_nSelectors7.pre-phi6561.ph = phi i32* [ %save_nSelectors7.pre-phi6563, %for.cond1367 ], [ %save_nSelectors7.phi.trans.insert, %if.end ]
  %save_EOB8.pre-phi6505.ph = phi i32* [ %save_EOB8.pre-phi6507, %for.cond1367 ], [ %save_EOB8.phi.trans.insert, %if.end ]
  %save_groupNo9.pre-phi6449.ph = phi i32* [ %save_groupNo9.pre-phi6451, %for.cond1367 ], [ %save_groupNo9.phi.trans.insert, %if.end ]
  %save_groupPos10.pre-phi6393.ph = phi i32* [ %save_groupPos10.pre-phi6395, %for.cond1367 ], [ %save_groupPos10.phi.trans.insert, %if.end ]
  %save_nextSym11.pre-phi6337.ph = phi i32* [ %save_nextSym11.pre-phi6339, %for.cond1367 ], [ %save_nextSym11.phi.trans.insert, %if.end ]
  %save_nblockMAX12.pre-phi6281.ph = phi i32* [ %save_nblockMAX12.pre-phi6283, %for.cond1367 ], [ %save_nblockMAX12.phi.trans.insert, %if.end ]
  %save_nblock13.pre-phi6225.ph = phi i32* [ %save_nblock13.pre-phi6227, %for.cond1367 ], [ %save_nblock13.phi.trans.insert, %if.end ]
  %save_es14.pre-phi6169.ph = phi i32* [ %save_es14.pre-phi6171, %for.cond1367 ], [ %save_es14.phi.trans.insert, %if.end ]
  %save_N15.pre-phi6113.ph = phi i32* [ %save_N15.pre-phi6115, %for.cond1367 ], [ %save_N15.phi.trans.insert, %if.end ]
  %save_curr16.pre-phi6057.ph = phi i32* [ %save_curr16.pre-phi6059, %for.cond1367 ], [ %save_curr16.phi.trans.insert, %if.end ]
  %save_zt17.pre-phi6001.ph = phi i32* [ %save_zt17.pre-phi6003, %for.cond1367 ], [ %save_zt17.phi.trans.insert, %if.end ]
  %save_zn18.pre-phi5945.ph = phi i32* [ %save_zn18.pre-phi5947, %for.cond1367 ], [ %save_zn18.phi.trans.insert, %if.end ]
  %save_zvec19.pre-phi5889.ph = phi i32* [ %save_zvec19.pre-phi5891, %for.cond1367 ], [ %save_zvec19.phi.trans.insert, %if.end ]
  %save_zj20.pre-phi5833.ph = phi i32* [ %save_zj20.pre-phi5835, %for.cond1367 ], [ %save_zj20.phi.trans.insert, %if.end ]
  %save_gSel21.pre-phi5777.ph = phi i32* [ %save_gSel21.pre-phi5779, %for.cond1367 ], [ %save_gSel21.phi.trans.insert, %if.end ]
  %save_gMinlen22.pre-phi5721.ph = phi i32* [ %save_gMinlen22.pre-phi5723, %for.cond1367 ], [ %save_gMinlen22.phi.trans.insert, %if.end ]
  %save_gLimit23.pre-phi5665.ph = phi i32** [ %save_gLimit23.pre-phi5667, %for.cond1367 ], [ %save_gLimit23.phi.trans.insert, %if.end ]
  %save_gBase24.pre-phi5609.ph = phi i32** [ %save_gBase24.pre-phi5611, %for.cond1367 ], [ %save_gBase24.phi.trans.insert, %if.end ]
  %save_gPerm25.pre-phi5553.ph = phi i32** [ %save_gPerm25.pre-phi5555, %for.cond1367 ], [ %save_gPerm25.phi.trans.insert, %if.end ]
  %nSelectors.2.ph = phi i32 [ %nSelectors.0, %for.cond1367 ], [ %.pre5372, %if.end ]
  %nGroups.3.ph = phi i32 [ %nGroups.1, %for.cond1367 ], [ %.pre5371, %if.end ]
  %alphaSize.4.ph = phi i32 [ %alphaSize.2, %for.cond1367 ], [ %.pre5370, %if.end ]
  %j.8.ph = phi i32 [ 0, %for.cond1367 ], [ %.pre5368, %if.end ]
  %i.11.ph = phi i32 [ %i.9, %for.cond1367 ], [ %.pre, %if.end ]
  %bsLive1377 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %bsBuff1382.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br label %sw.bb1373

sw.bb1373:                                        ; preds = %if.end1429, %sw.bb1373.preheader
  %j.8 = phi i32 [ %inc1430, %if.end1429 ], [ %j.8.ph, %sw.bb1373.preheader ]
  store i32 32, i32* %state, align 8, !tbaa !105
  %837 = load i32, i32* %bsLive1377, align 4, !tbaa !106
  %cmp13785043 = icmp sgt i32 %837, 0
  br i1 %cmp13785043, label %sw.bb1373.if.then1380_crit_edge, label %if.end1390.preheader

if.end1390.preheader:                             ; preds = %sw.bb1373
  br label %if.end1390

sw.bb1373.if.then1380_crit_edge:                  ; preds = %sw.bb1373
  %.pre5486 = load i32, i32* %bsBuff1382.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1380

if.then1380:                                      ; preds = %if.end1423, %sw.bb1373.if.then1380_crit_edge
  %838 = phi i32 [ %.pre5486, %sw.bb1373.if.then1380_crit_edge ], [ %or1402, %if.end1423 ]
  %.lcssa4912 = phi i32 [ %837, %sw.bb1373.if.then1380_crit_edge ], [ %add1405, %if.end1423 ]
  %sub1384 = add nsw i32 %.lcssa4912, -1
  store i32 %sub1384, i32* %bsLive1377, align 4, !tbaa !106
  %839 = shl i32 1, %sub1384
  %840 = and i32 %838, %839
  %cmp1426 = icmp eq i32 %840, 0
  br i1 %cmp1426, label %while.end1435, label %if.end1429

if.end1390:                                       ; preds = %if.end1423, %if.end1390.preheader
  %841 = phi i32 [ %add1405, %if.end1423 ], [ %837, %if.end1390.preheader ]
  %842 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1392 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %842, i64 0, i32 1
  %843 = load i32, i32* %avail_in1392, align 8, !tbaa !98
  %cmp1393 = icmp eq i32 %843, 0
  br i1 %cmp1393, label %save_state_and_return, label %if.end1396

if.end1396:                                       ; preds = %if.end1390
  %844 = load i32, i32* %bsBuff1382.phi.trans.insert, align 8, !tbaa !107
  %shl1398 = shl i32 %844, 8
  %next_in1400 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %842, i64 0, i32 0
  %845 = load i8*, i8** %next_in1400, align 8, !tbaa !102
  %846 = load i8, i8* %845, align 1, !tbaa !12
  %conv1401 = zext i8 %846 to i32
  %or1402 = or i32 %shl1398, %conv1401
  store i32 %or1402, i32* %bsBuff1382.phi.trans.insert, align 8, !tbaa !107
  %add1405 = add nsw i32 %841, 8
  store i32 %add1405, i32* %bsLive1377, align 4, !tbaa !106
  %incdec.ptr1408 = getelementptr inbounds i8, i8* %845, i64 1
  store i8* %incdec.ptr1408, i8** %next_in1400, align 8, !tbaa !102
  %dec1411 = add i32 %843, -1
  store i32 %dec1411, i32* %avail_in1392, align 8, !tbaa !98
  %total_in_lo321413 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %842, i64 0, i32 2
  %847 = load i32, i32* %total_in_lo321413, align 4, !tbaa !88
  %inc1414 = add i32 %847, 1
  store i32 %inc1414, i32* %total_in_lo321413, align 4, !tbaa !88
  %cmp1417 = icmp eq i32 %inc1414, 0
  br i1 %cmp1417, label %if.then1419, label %if.end1423

if.then1419:                                      ; preds = %if.end1396
  %total_in_hi321421 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %842, i64 0, i32 3
  %848 = load i32, i32* %total_in_hi321421, align 8, !tbaa !89
  %inc1422 = add i32 %848, 1
  store i32 %inc1422, i32* %total_in_hi321421, align 8, !tbaa !89
  br label %if.end1423

if.end1423:                                       ; preds = %if.then1419, %if.end1396
  %cmp1378 = icmp sgt i32 %841, -8
  br i1 %cmp1378, label %if.then1380, label %if.end1390

if.end1429:                                       ; preds = %if.then1380
  %inc1430 = add nsw i32 %j.8, 1
  %cmp1431 = icmp slt i32 %inc1430, %nGroups.3.ph
  br i1 %cmp1431, label %sw.bb1373, label %save_state_and_return

while.end1435:                                    ; preds = %if.then1380
  %conv1436 = trunc i32 %j.8 to i8
  %idxprom1437 = sext i32 %i.11.ph to i64
  %arrayidx1438 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 34, i64 %idxprom1437
  store i8 %conv1436, i8* %arrayidx1438, align 1, !tbaa !12
  %inc1440 = add nsw i32 %i.11.ph, 1
  br label %for.cond1367

for.end1441:                                      ; preds = %for.cond1367
  %849 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %849) #2
  %cmp14455127 = icmp sgt i32 %nGroups.1, 0
  br i1 %cmp14455127, label %for.body1447.lr.ph, label %for.end1452

for.body1447.lr.ph:                               ; preds = %for.end1441
  %min.iters.check = icmp ult i32 %nGroups.1, 32
  br i1 %min.iters.check, label %for.body1447.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %for.body1447.lr.ph
  %850 = add i32 %nGroups.1, -1
  %851 = trunc i32 %850 to i8
  %852 = icmp eq i8 %851, -1
  %853 = icmp ugt i32 %850, 255
  %854 = or i1 %852, %853
  br i1 %854, label %for.body1447.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.scevcheck
  %n.vec = and i32 %nGroups.1, -32
  %cast.crd = trunc i32 %n.vec to i8
  %855 = add i32 %n.vec, -32
  %856 = lshr exact i32 %855, 5
  %857 = add nuw nsw i32 %856, 1
  %xtraiter7181 = and i32 %857, 3
  %858 = icmp ult i32 %855, 96
  br i1 %858, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nsw i32 %857, %xtraiter7181
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i32 [ 0, %vector.ph.new ], [ %index.next.3, %vector.body ]
  %vec.ind = phi <16 x i8> [ <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, %vector.ph.new ], [ %vec.ind.next.3, %vector.body ]
  %niter = phi i32 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.3, %vector.body ]
  %step.add = add <16 x i8> %vec.ind, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %.mask = and i32 %index, 128
  %859 = zext i32 %.mask to i64
  %860 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %859
  %861 = bitcast i8* %860 to <16 x i8>*
  store <16 x i8> %vec.ind, <16 x i8>* %861, align 1, !tbaa !12
  %862 = getelementptr i8, i8* %860, i64 16
  %863 = bitcast i8* %862 to <16 x i8>*
  store <16 x i8> %step.add, <16 x i8>* %863, align 1, !tbaa !12
  %vec.ind.next = add <16 x i8> %vec.ind, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %step.add.1 = add <16 x i8> %vec.ind, <i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48>
  %index.next = and i32 %index, 128
  %.mask.1 = or i32 %index.next, 32
  %864 = zext i32 %.mask.1 to i64
  %865 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %864
  %866 = bitcast i8* %865 to <16 x i8>*
  store <16 x i8> %vec.ind.next, <16 x i8>* %866, align 1, !tbaa !12
  %867 = getelementptr i8, i8* %865, i64 16
  %868 = bitcast i8* %867 to <16 x i8>*
  store <16 x i8> %step.add.1, <16 x i8>* %868, align 1, !tbaa !12
  %vec.ind.next.1 = add <16 x i8> %vec.ind, <i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64>
  %step.add.2 = add <16 x i8> %vec.ind, <i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80, i8 80>
  %index.next.1 = and i32 %index, 128
  %.mask.2 = or i32 %index.next.1, 64
  %869 = zext i32 %.mask.2 to i64
  %870 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %869
  %871 = bitcast i8* %870 to <16 x i8>*
  store <16 x i8> %vec.ind.next.1, <16 x i8>* %871, align 1, !tbaa !12
  %872 = getelementptr i8, i8* %870, i64 16
  %873 = bitcast i8* %872 to <16 x i8>*
  store <16 x i8> %step.add.2, <16 x i8>* %873, align 1, !tbaa !12
  %vec.ind.next.2 = add <16 x i8> %vec.ind, <i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96, i8 96>
  %step.add.3 = add <16 x i8> %vec.ind, <i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112, i8 112>
  %index.next.2 = and i32 %index, 128
  %.mask.3 = or i32 %index.next.2, 96
  %874 = zext i32 %.mask.3 to i64
  %875 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %874
  %876 = bitcast i8* %875 to <16 x i8>*
  store <16 x i8> %vec.ind.next.2, <16 x i8>* %876, align 1, !tbaa !12
  %877 = getelementptr i8, i8* %875, i64 16
  %878 = bitcast i8* %877 to <16 x i8>*
  store <16 x i8> %step.add.3, <16 x i8>* %878, align 1, !tbaa !12
  %index.next.3 = add i32 %index, 128
  %vec.ind.next.3 = xor <16 x i8> %vec.ind, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %niter.nsub.3 = add i32 %niter, -4
  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !176

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i32 [ 0, %vector.ph ], [ %index.next.3, %vector.body ]
  %vec.ind.unr = phi <16 x i8> [ <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, %vector.ph ], [ %vec.ind.next.3, %vector.body ]
  %lcmp.mod7182 = icmp eq i32 %xtraiter7181, 0
  br i1 %lcmp.mod7182, label %middle.block, label %vector.body.epil.preheader

vector.body.epil.preheader:                       ; preds = %middle.block.unr-lcssa
  br label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %vector.body.epil.preheader
  %index.epil = phi i32 [ %index.unr, %vector.body.epil.preheader ], [ %index.next.epil, %vector.body.epil ]
  %vec.ind.epil = phi <16 x i8> [ %vec.ind.unr, %vector.body.epil.preheader ], [ %vec.ind.next.epil, %vector.body.epil ]
  %epil.iter = phi i32 [ %xtraiter7181, %vector.body.epil.preheader ], [ %epil.iter.sub, %vector.body.epil ]
  %step.add.epil = add <16 x i8> %vec.ind.epil, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %.mask.epil = and i32 %index.epil, 224
  %879 = zext i32 %.mask.epil to i64
  %880 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %879
  %881 = bitcast i8* %880 to <16 x i8>*
  store <16 x i8> %vec.ind.epil, <16 x i8>* %881, align 1, !tbaa !12
  %882 = getelementptr i8, i8* %880, i64 16
  %883 = bitcast i8* %882 to <16 x i8>*
  store <16 x i8> %step.add.epil, <16 x i8>* %883, align 1, !tbaa !12
  %index.next.epil = add i32 %index.epil, 32
  %vec.ind.next.epil = add <16 x i8> %vec.ind.epil, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !177

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i32 %nGroups.1, %n.vec
  br i1 %cmp.n, label %for.end1452, label %for.body1447.preheader

for.body1447.preheader:                           ; preds = %middle.block, %vector.scevcheck, %for.body1447.lr.ph
  %v1442.05128.ph = phi i8 [ 0, %vector.scevcheck ], [ 0, %for.body1447.lr.ph ], [ %cast.crd, %middle.block ]
  br label %for.body1447

for.body1447:                                     ; preds = %for.body1447, %for.body1447.preheader
  %v1442.05128 = phi i8 [ %inc1451, %for.body1447 ], [ %v1442.05128.ph, %for.body1447.preheader ]
  %idxprom1448 = zext i8 %v1442.05128 to i64
  %arrayidx1449 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1448
  store i8 %v1442.05128, i8* %arrayidx1449, align 1, !tbaa !12
  %inc1451 = add i8 %v1442.05128, 1
  %conv1444 = zext i8 %inc1451 to i32
  %cmp1445 = icmp sgt i32 %nGroups.1, %conv1444
  br i1 %cmp1445, label %for.body1447, label %for.end1452, !llvm.loop !178

for.end1452:                                      ; preds = %for.body1447, %middle.block, %for.end1441
  %cmp14545124 = icmp sgt i32 %nSelectors.0, 0
  br i1 %cmp14545124, label %for.body1456.lr.ph, label %for.end1480

for.body1456.lr.ph:                               ; preds = %for.end1452
  %wide.trip.count5362 = zext i32 %nSelectors.0 to i64
  br label %for.body1456

for.body1456:                                     ; preds = %while.end1474, %for.body1456.lr.ph
  %indvars.iv5360 = phi i64 [ 0, %for.body1456.lr.ph ], [ %indvars.iv.next5361, %while.end1474 ]
  %arrayidx1459 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 34, i64 %indvars.iv5360
  %884 = load i8, i8* %arrayidx1459, align 1, !tbaa !12
  %idxprom1460 = zext i8 %884 to i64
  %arrayidx1461 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %idxprom1460
  %885 = load i8, i8* %arrayidx1461, align 1, !tbaa !12
  %cmp14645122 = icmp eq i8 %884, 0
  br i1 %cmp14645122, label %while.end1474, label %while.body1466.preheader

while.body1466.preheader:                         ; preds = %for.body1456
  %886 = add i8 %884, -1
  %xtraiter7178 = and i8 %884, 3
  %lcmp.mod7179 = icmp eq i8 %xtraiter7178, 0
  br i1 %lcmp.mod7179, label %while.body1466.prol.loopexit, label %while.body1466.prol.preheader

while.body1466.prol.preheader:                    ; preds = %while.body1466.preheader
  br label %while.body1466.prol

while.body1466.prol:                              ; preds = %while.body1466.prol, %while.body1466.prol.preheader
  %indvars.iv5357.prol = phi i64 [ %sub1468.prol, %while.body1466.prol ], [ %idxprom1460, %while.body1466.prol.preheader ]
  %prol.iter7180 = phi i8 [ %prol.iter7180.sub, %while.body1466.prol ], [ %xtraiter7178, %while.body1466.prol.preheader ]
  %sub1468.prol = add nsw i64 %indvars.iv5357.prol, -1
  %arrayidx1470.prol = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468.prol
  %887 = load i8, i8* %arrayidx1470.prol, align 1, !tbaa !12
  %arrayidx1472.prol = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %indvars.iv5357.prol
  store i8 %887, i8* %arrayidx1472.prol, align 1, !tbaa !12
  %prol.iter7180.sub = add i8 %prol.iter7180, -1
  %prol.iter7180.cmp = icmp eq i8 %prol.iter7180.sub, 0
  br i1 %prol.iter7180.cmp, label %while.body1466.prol.loopexit, label %while.body1466.prol, !llvm.loop !179

while.body1466.prol.loopexit:                     ; preds = %while.body1466.prol, %while.body1466.preheader
  %indvars.iv5357.unr = phi i64 [ %idxprom1460, %while.body1466.preheader ], [ %sub1468.prol, %while.body1466.prol ]
  %888 = icmp ult i8 %886, 3
  br i1 %888, label %while.end1474, label %while.body1466.preheader.new

while.body1466.preheader.new:                     ; preds = %while.body1466.prol.loopexit
  br label %while.body1466

while.body1466:                                   ; preds = %while.body1466, %while.body1466.preheader.new
  %indvars.iv5357 = phi i64 [ %indvars.iv5357.unr, %while.body1466.preheader.new ], [ %sub1468.3, %while.body1466 ]
  %sub1468 = add nsw i64 %indvars.iv5357, -1
  %arrayidx1470 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468
  %889 = load i8, i8* %arrayidx1470, align 1, !tbaa !12
  %arrayidx1472 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %indvars.iv5357
  store i8 %889, i8* %arrayidx1472, align 1, !tbaa !12
  %sub1468.1 = add nsw i64 %indvars.iv5357, -2
  %arrayidx1470.1 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468.1
  %890 = load i8, i8* %arrayidx1470.1, align 1, !tbaa !12
  %arrayidx1472.1 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468
  store i8 %890, i8* %arrayidx1472.1, align 1, !tbaa !12
  %sub1468.2 = add nsw i64 %indvars.iv5357, -3
  %arrayidx1470.2 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468.2
  %891 = load i8, i8* %arrayidx1470.2, align 1, !tbaa !12
  %arrayidx1472.2 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468.1
  store i8 %891, i8* %arrayidx1472.2, align 1, !tbaa !12
  %sub1468.3 = add nsw i64 %indvars.iv5357, -4
  %arrayidx1470.3 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468.3
  %892 = load i8, i8* %arrayidx1470.3, align 1, !tbaa !12
  %arrayidx1472.3 = getelementptr inbounds [6 x i8], [6 x i8]* %pos, i64 0, i64 %sub1468.2
  store i8 %892, i8* %arrayidx1472.3, align 1, !tbaa !12
  %893 = trunc i64 %sub1468.2 to i8
  %cmp1464.3 = icmp eq i8 %893, 1
  br i1 %cmp1464.3, label %while.end1474, label %while.body1466

while.end1474:                                    ; preds = %while.body1466, %while.body1466.prol.loopexit, %for.body1456
  store i8 %885, i8* %849, align 1, !tbaa !12
  %arrayidx1477 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 33, i64 %indvars.iv5360
  store i8 %885, i8* %arrayidx1477, align 1, !tbaa !12
  %indvars.iv.next5361 = add nuw nsw i64 %indvars.iv5360, 1
  %exitcond5363 = icmp eq i64 %indvars.iv.next5361, %wide.trip.count5362
  br i1 %exitcond5363, label %for.end1480, label %for.body1456

for.end1480:                                      ; preds = %while.end1474, %for.end1452
  %i.12.lcssa = phi i32 [ 0, %for.end1452 ], [ %nSelectors.0, %while.end1474 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %849) #2
  br label %for.cond1481

for.cond1481:                                     ; preds = %for.inc1675, %for.end1480
  %894 = phi i32 [ %937, %for.inc1675 ], [ %819, %for.end1480 ]
  %895 = phi i32 [ %938, %for.inc1675 ], [ %820, %for.end1480 ]
  %896 = phi i32 [ %939, %for.inc1675 ], [ %821, %for.end1480 ]
  %897 = phi i32 [ %940, %for.inc1675 ], [ %822, %for.end1480 ]
  %898 = phi i32 [ %941, %for.inc1675 ], [ %823, %for.end1480 ]
  %899 = phi i32 [ %942, %for.inc1675 ], [ %824, %for.end1480 ]
  %900 = phi i32 [ %943, %for.inc1675 ], [ %825, %for.end1480 ]
  %901 = phi i32 [ %944, %for.inc1675 ], [ %826, %for.end1480 ]
  %902 = phi i32 [ %945, %for.inc1675 ], [ %828, %for.end1480 ]
  %903 = phi i32 [ %946, %for.inc1675 ], [ %829, %for.end1480 ]
  %904 = phi i32 [ %947, %for.inc1675 ], [ %830, %for.end1480 ]
  %905 = phi i32 [ %948, %for.inc1675 ], [ %831, %for.end1480 ]
  %906 = phi i32 [ %949, %for.inc1675 ], [ %832, %for.end1480 ]
  %907 = phi i32 [ %950, %for.inc1675 ], [ %833, %for.end1480 ]
  %908 = phi i32* [ %951, %for.inc1675 ], [ %834, %for.end1480 ]
  %909 = phi i32* [ %952, %for.inc1675 ], [ %835, %for.end1480 ]
  %910 = phi i32* [ %953, %for.inc1675 ], [ %836, %for.end1480 ]
  %save_j3.pre-phi6784 = phi i32* [ %save_j3.pre-phi6782, %for.inc1675 ], [ %save_j3.pre-phi6787, %for.end1480 ]
  %save_t4.pre-phi6728 = phi i32* [ %save_t4.pre-phi6726, %for.inc1675 ], [ %save_t4.pre-phi6731, %for.end1480 ]
  %save_alphaSize5.pre-phi6672 = phi i32* [ %save_alphaSize5.pre-phi6670, %for.inc1675 ], [ %save_alphaSize5.pre-phi6675, %for.end1480 ]
  %save_nGroups6.pre-phi6616 = phi i32* [ %save_nGroups6.pre-phi6614, %for.inc1675 ], [ %save_nGroups6.pre-phi6619, %for.end1480 ]
  %save_nSelectors7.pre-phi6560 = phi i32* [ %save_nSelectors7.pre-phi6558, %for.inc1675 ], [ %save_nSelectors7.pre-phi6563, %for.end1480 ]
  %save_EOB8.pre-phi6504 = phi i32* [ %save_EOB8.pre-phi6502, %for.inc1675 ], [ %save_EOB8.pre-phi6507, %for.end1480 ]
  %save_groupNo9.pre-phi6448 = phi i32* [ %save_groupNo9.pre-phi6446, %for.inc1675 ], [ %save_groupNo9.pre-phi6451, %for.end1480 ]
  %save_groupPos10.pre-phi6392 = phi i32* [ %save_groupPos10.pre-phi6390, %for.inc1675 ], [ %save_groupPos10.pre-phi6395, %for.end1480 ]
  %save_nextSym11.pre-phi6336 = phi i32* [ %save_nextSym11.pre-phi6334, %for.inc1675 ], [ %save_nextSym11.pre-phi6339, %for.end1480 ]
  %save_nblockMAX12.pre-phi6280 = phi i32* [ %save_nblockMAX12.pre-phi6278, %for.inc1675 ], [ %save_nblockMAX12.pre-phi6283, %for.end1480 ]
  %save_nblock13.pre-phi6224 = phi i32* [ %save_nblock13.pre-phi6222, %for.inc1675 ], [ %save_nblock13.pre-phi6227, %for.end1480 ]
  %save_es14.pre-phi6168 = phi i32* [ %save_es14.pre-phi6166, %for.inc1675 ], [ %save_es14.pre-phi6171, %for.end1480 ]
  %save_N15.pre-phi6112 = phi i32* [ %save_N15.pre-phi6110, %for.inc1675 ], [ %save_N15.pre-phi6115, %for.end1480 ]
  %save_curr16.pre-phi6056 = phi i32* [ %save_curr16.pre-phi6054, %for.inc1675 ], [ %save_curr16.pre-phi6059, %for.end1480 ]
  %save_zt17.pre-phi6000 = phi i32* [ %save_zt17.pre-phi5998, %for.inc1675 ], [ %save_zt17.pre-phi6003, %for.end1480 ]
  %save_zn18.pre-phi5944 = phi i32* [ %save_zn18.pre-phi5942, %for.inc1675 ], [ %save_zn18.pre-phi5947, %for.end1480 ]
  %save_zvec19.pre-phi5888 = phi i32* [ %save_zvec19.pre-phi5886, %for.inc1675 ], [ %save_zvec19.pre-phi5891, %for.end1480 ]
  %save_zj20.pre-phi5832 = phi i32* [ %save_zj20.pre-phi5830, %for.inc1675 ], [ %save_zj20.pre-phi5835, %for.end1480 ]
  %save_gSel21.pre-phi5776 = phi i32* [ %save_gSel21.pre-phi5774, %for.inc1675 ], [ %save_gSel21.pre-phi5779, %for.end1480 ]
  %save_gMinlen22.pre-phi5720 = phi i32* [ %save_gMinlen22.pre-phi5718, %for.inc1675 ], [ %save_gMinlen22.pre-phi5723, %for.end1480 ]
  %save_gLimit23.pre-phi5664 = phi i32** [ %save_gLimit23.pre-phi5662, %for.inc1675 ], [ %save_gLimit23.pre-phi5667, %for.end1480 ]
  %save_gBase24.pre-phi5608 = phi i32** [ %save_gBase24.pre-phi5606, %for.inc1675 ], [ %save_gBase24.pre-phi5611, %for.end1480 ]
  %save_gPerm25.pre-phi5552 = phi i32** [ %save_gPerm25.pre-phi5550, %for.inc1675 ], [ %save_gPerm25.pre-phi5555, %for.end1480 ]
  %curr.0 = phi i32 [ %curr.2, %for.inc1675 ], [ %827, %for.end1480 ]
  %nSelectors.3 = phi i32 [ %nSelectors.5, %for.inc1675 ], [ %nSelectors.0, %for.end1480 ]
  %nGroups.4 = phi i32 [ %nGroups.6, %for.inc1675 ], [ %nGroups.1, %for.end1480 ]
  %alphaSize.5 = phi i32 [ %alphaSize.7, %for.inc1675 ], [ %alphaSize.2, %for.end1480 ]
  %t.0 = phi i32 [ %inc1676, %for.inc1675 ], [ 0, %for.end1480 ]
  %j.9 = phi i32 [ %j.11, %for.inc1675 ], [ %j.6, %for.end1480 ]
  %i.13 = phi i32 [ %i.15, %for.inc1675 ], [ %i.12.lcssa, %for.end1480 ]
  %cmp1482 = icmp slt i32 %t.0, %nGroups.4
  br i1 %cmp1482, label %sw.bb1485, label %for.end1677

sw.bb1485:                                        ; preds = %for.cond1481, %if.end
  %911 = phi i32 [ %894, %for.cond1481 ], [ %.pre5373, %if.end ]
  %912 = phi i32 [ %895, %for.cond1481 ], [ %.pre5374, %if.end ]
  %913 = phi i32 [ %896, %for.cond1481 ], [ %.pre5375, %if.end ]
  %914 = phi i32 [ %897, %for.cond1481 ], [ %.pre5376, %if.end ]
  %915 = phi i32 [ %898, %for.cond1481 ], [ %.pre5377, %if.end ]
  %916 = phi i32 [ %899, %for.cond1481 ], [ %.pre5378, %if.end ]
  %917 = phi i32 [ %900, %for.cond1481 ], [ %.pre5379, %if.end ]
  %918 = phi i32 [ %901, %for.cond1481 ], [ %.pre5380, %if.end ]
  %919 = phi i32 [ %902, %for.cond1481 ], [ %.pre5382, %if.end ]
  %920 = phi i32 [ %903, %for.cond1481 ], [ %.pre5383, %if.end ]
  %921 = phi i32 [ %904, %for.cond1481 ], [ %.pre5384, %if.end ]
  %922 = phi i32 [ %905, %for.cond1481 ], [ %.pre5385, %if.end ]
  %923 = phi i32 [ %906, %for.cond1481 ], [ %.pre5386, %if.end ]
  %924 = phi i32 [ %907, %for.cond1481 ], [ %.pre5387, %if.end ]
  %925 = phi i32* [ %908, %for.cond1481 ], [ %.pre5388, %if.end ]
  %926 = phi i32* [ %909, %for.cond1481 ], [ %.pre5389, %if.end ]
  %927 = phi i32* [ %910, %for.cond1481 ], [ %.pre5390, %if.end ]
  %save_j3.pre-phi6783 = phi i32* [ %save_j3.pre-phi6784, %for.cond1481 ], [ %save_j3.phi.trans.insert, %if.end ]
  %save_t4.pre-phi6727 = phi i32* [ %save_t4.pre-phi6728, %for.cond1481 ], [ %save_t4.phi.trans.insert, %if.end ]
  %save_alphaSize5.pre-phi6671 = phi i32* [ %save_alphaSize5.pre-phi6672, %for.cond1481 ], [ %save_alphaSize5.phi.trans.insert, %if.end ]
  %save_nGroups6.pre-phi6615 = phi i32* [ %save_nGroups6.pre-phi6616, %for.cond1481 ], [ %save_nGroups6.phi.trans.insert, %if.end ]
  %save_nSelectors7.pre-phi6559 = phi i32* [ %save_nSelectors7.pre-phi6560, %for.cond1481 ], [ %save_nSelectors7.phi.trans.insert, %if.end ]
  %save_EOB8.pre-phi6503 = phi i32* [ %save_EOB8.pre-phi6504, %for.cond1481 ], [ %save_EOB8.phi.trans.insert, %if.end ]
  %save_groupNo9.pre-phi6447 = phi i32* [ %save_groupNo9.pre-phi6448, %for.cond1481 ], [ %save_groupNo9.phi.trans.insert, %if.end ]
  %save_groupPos10.pre-phi6391 = phi i32* [ %save_groupPos10.pre-phi6392, %for.cond1481 ], [ %save_groupPos10.phi.trans.insert, %if.end ]
  %save_nextSym11.pre-phi6335 = phi i32* [ %save_nextSym11.pre-phi6336, %for.cond1481 ], [ %save_nextSym11.phi.trans.insert, %if.end ]
  %save_nblockMAX12.pre-phi6279 = phi i32* [ %save_nblockMAX12.pre-phi6280, %for.cond1481 ], [ %save_nblockMAX12.phi.trans.insert, %if.end ]
  %save_nblock13.pre-phi6223 = phi i32* [ %save_nblock13.pre-phi6224, %for.cond1481 ], [ %save_nblock13.phi.trans.insert, %if.end ]
  %save_es14.pre-phi6167 = phi i32* [ %save_es14.pre-phi6168, %for.cond1481 ], [ %save_es14.phi.trans.insert, %if.end ]
  %save_N15.pre-phi6111 = phi i32* [ %save_N15.pre-phi6112, %for.cond1481 ], [ %save_N15.phi.trans.insert, %if.end ]
  %save_curr16.pre-phi6055 = phi i32* [ %save_curr16.pre-phi6056, %for.cond1481 ], [ %save_curr16.phi.trans.insert, %if.end ]
  %save_zt17.pre-phi5999 = phi i32* [ %save_zt17.pre-phi6000, %for.cond1481 ], [ %save_zt17.phi.trans.insert, %if.end ]
  %save_zn18.pre-phi5943 = phi i32* [ %save_zn18.pre-phi5944, %for.cond1481 ], [ %save_zn18.phi.trans.insert, %if.end ]
  %save_zvec19.pre-phi5887 = phi i32* [ %save_zvec19.pre-phi5888, %for.cond1481 ], [ %save_zvec19.phi.trans.insert, %if.end ]
  %save_zj20.pre-phi5831 = phi i32* [ %save_zj20.pre-phi5832, %for.cond1481 ], [ %save_zj20.phi.trans.insert, %if.end ]
  %save_gSel21.pre-phi5775 = phi i32* [ %save_gSel21.pre-phi5776, %for.cond1481 ], [ %save_gSel21.phi.trans.insert, %if.end ]
  %save_gMinlen22.pre-phi5719 = phi i32* [ %save_gMinlen22.pre-phi5720, %for.cond1481 ], [ %save_gMinlen22.phi.trans.insert, %if.end ]
  %save_gLimit23.pre-phi5663 = phi i32** [ %save_gLimit23.pre-phi5664, %for.cond1481 ], [ %save_gLimit23.phi.trans.insert, %if.end ]
  %save_gBase24.pre-phi5607 = phi i32** [ %save_gBase24.pre-phi5608, %for.cond1481 ], [ %save_gBase24.phi.trans.insert, %if.end ]
  %save_gPerm25.pre-phi5551 = phi i32** [ %save_gPerm25.pre-phi5552, %for.cond1481 ], [ %save_gPerm25.phi.trans.insert, %if.end ]
  %curr.1 = phi i32 [ %curr.0, %for.cond1481 ], [ %.pre5381, %if.end ]
  %nSelectors.4 = phi i32 [ %nSelectors.3, %for.cond1481 ], [ %.pre5372, %if.end ]
  %nGroups.5 = phi i32 [ %nGroups.4, %for.cond1481 ], [ %.pre5371, %if.end ]
  %alphaSize.6 = phi i32 [ %alphaSize.5, %for.cond1481 ], [ %.pre5370, %if.end ]
  %t.1 = phi i32 [ %t.0, %for.cond1481 ], [ %.pre5369, %if.end ]
  %j.10 = phi i32 [ %j.9, %for.cond1481 ], [ %.pre5368, %if.end ]
  %i.14 = phi i32 [ %i.13, %for.cond1481 ], [ %.pre, %if.end ]
  store i32 33, i32* %state, align 8, !tbaa !105
  %bsLive1489 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %928 = load i32, i32* %bsLive1489, align 4, !tbaa !106
  %cmp14905052 = icmp sgt i32 %928, 4
  %bsBuff1494.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp14905052, label %sw.bb1485.if.then1492_crit_edge, label %if.end1501.lr.ph

sw.bb1485.if.then1492_crit_edge:                  ; preds = %sw.bb1485
  %.pre5482 = load i32, i32* %bsBuff1494.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1492

if.end1501.lr.ph:                                 ; preds = %sw.bb1485
  %.pre5480 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1503.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5480, i64 0, i32 1
  %.pre5481 = load i32, i32* %avail_in1503.phi.trans.insert, align 8, !tbaa !98
  %next_in1511 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5480, i64 0, i32 0
  %total_in_lo321524 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5480, i64 0, i32 2
  %total_in_hi321532 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5480, i64 0, i32 3
  br label %if.end1501

if.then1492:                                      ; preds = %if.end1534, %sw.bb1485.if.then1492_crit_edge
  %929 = phi i32 [ %.pre5482, %sw.bb1485.if.then1492_crit_edge ], [ %or1513, %if.end1534 ]
  %.lcssa4921 = phi i32 [ %928, %sw.bb1485.if.then1492_crit_edge ], [ %add1516, %if.end1534 ]
  %sub1496 = add nsw i32 %.lcssa4921, -5
  %shr1497 = lshr i32 %929, %sub1496
  %and1498 = and i32 %shr1497, 31
  store i32 %sub1496, i32* %bsLive1489, align 4, !tbaa !106
  br label %for.cond1536

if.end1501:                                       ; preds = %if.end1534, %if.end1501.lr.ph
  %930 = phi i32 [ %.pre5481, %if.end1501.lr.ph ], [ %dec1522, %if.end1534 ]
  %931 = phi i32 [ %928, %if.end1501.lr.ph ], [ %add1516, %if.end1534 ]
  %cmp1504 = icmp eq i32 %930, 0
  br i1 %cmp1504, label %save_state_and_return, label %if.end1507

if.end1507:                                       ; preds = %if.end1501
  %932 = load i32, i32* %bsBuff1494.phi.trans.insert, align 8, !tbaa !107
  %shl1509 = shl i32 %932, 8
  %933 = load i8*, i8** %next_in1511, align 8, !tbaa !102
  %934 = load i8, i8* %933, align 1, !tbaa !12
  %conv1512 = zext i8 %934 to i32
  %or1513 = or i32 %shl1509, %conv1512
  store i32 %or1513, i32* %bsBuff1494.phi.trans.insert, align 8, !tbaa !107
  %add1516 = add nsw i32 %931, 8
  store i32 %add1516, i32* %bsLive1489, align 4, !tbaa !106
  %incdec.ptr1519 = getelementptr inbounds i8, i8* %933, i64 1
  store i8* %incdec.ptr1519, i8** %next_in1511, align 8, !tbaa !102
  %dec1522 = add i32 %930, -1
  store i32 %dec1522, i32* %avail_in1503.phi.trans.insert, align 8, !tbaa !98
  %935 = load i32, i32* %total_in_lo321524, align 4, !tbaa !88
  %inc1525 = add i32 %935, 1
  store i32 %inc1525, i32* %total_in_lo321524, align 4, !tbaa !88
  %cmp1528 = icmp eq i32 %inc1525, 0
  br i1 %cmp1528, label %if.then1530, label %if.end1534

if.then1530:                                      ; preds = %if.end1507
  %936 = load i32, i32* %total_in_hi321532, align 8, !tbaa !89
  %inc1533 = add i32 %936, 1
  store i32 %inc1533, i32* %total_in_hi321532, align 8, !tbaa !89
  br label %if.end1534

if.end1534:                                       ; preds = %if.then1530, %if.end1507
  %cmp1490 = icmp sgt i32 %931, -4
  br i1 %cmp1490, label %if.then1492, label %if.end1501

for.cond1536:                                     ; preds = %while.end1666, %if.then1492
  %937 = phi i32 [ %972, %while.end1666 ], [ %911, %if.then1492 ]
  %938 = phi i32 [ %973, %while.end1666 ], [ %912, %if.then1492 ]
  %939 = phi i32 [ %974, %while.end1666 ], [ %913, %if.then1492 ]
  %940 = phi i32 [ %975, %while.end1666 ], [ %914, %if.then1492 ]
  %941 = phi i32 [ %976, %while.end1666 ], [ %915, %if.then1492 ]
  %942 = phi i32 [ %977, %while.end1666 ], [ %916, %if.then1492 ]
  %943 = phi i32 [ %978, %while.end1666 ], [ %917, %if.then1492 ]
  %944 = phi i32 [ %979, %while.end1666 ], [ %918, %if.then1492 ]
  %945 = phi i32 [ %980, %while.end1666 ], [ %919, %if.then1492 ]
  %946 = phi i32 [ %981, %while.end1666 ], [ %920, %if.then1492 ]
  %947 = phi i32 [ %982, %while.end1666 ], [ %921, %if.then1492 ]
  %948 = phi i32 [ %983, %while.end1666 ], [ %922, %if.then1492 ]
  %949 = phi i32 [ %984, %while.end1666 ], [ %923, %if.then1492 ]
  %950 = phi i32 [ %985, %while.end1666 ], [ %924, %if.then1492 ]
  %951 = phi i32* [ %986, %while.end1666 ], [ %925, %if.then1492 ]
  %952 = phi i32* [ %987, %while.end1666 ], [ %926, %if.then1492 ]
  %953 = phi i32* [ %988, %while.end1666 ], [ %927, %if.then1492 ]
  %save_j3.pre-phi6782 = phi i32* [ %save_j3.pre-phi6780, %while.end1666 ], [ %save_j3.pre-phi6783, %if.then1492 ]
  %save_t4.pre-phi6726 = phi i32* [ %save_t4.pre-phi6724, %while.end1666 ], [ %save_t4.pre-phi6727, %if.then1492 ]
  %save_alphaSize5.pre-phi6670 = phi i32* [ %save_alphaSize5.pre-phi6668, %while.end1666 ], [ %save_alphaSize5.pre-phi6671, %if.then1492 ]
  %save_nGroups6.pre-phi6614 = phi i32* [ %save_nGroups6.pre-phi6612, %while.end1666 ], [ %save_nGroups6.pre-phi6615, %if.then1492 ]
  %save_nSelectors7.pre-phi6558 = phi i32* [ %save_nSelectors7.pre-phi6556, %while.end1666 ], [ %save_nSelectors7.pre-phi6559, %if.then1492 ]
  %save_EOB8.pre-phi6502 = phi i32* [ %save_EOB8.pre-phi6500, %while.end1666 ], [ %save_EOB8.pre-phi6503, %if.then1492 ]
  %save_groupNo9.pre-phi6446 = phi i32* [ %save_groupNo9.pre-phi6444, %while.end1666 ], [ %save_groupNo9.pre-phi6447, %if.then1492 ]
  %save_groupPos10.pre-phi6390 = phi i32* [ %save_groupPos10.pre-phi6388, %while.end1666 ], [ %save_groupPos10.pre-phi6391, %if.then1492 ]
  %save_nextSym11.pre-phi6334 = phi i32* [ %save_nextSym11.pre-phi6332, %while.end1666 ], [ %save_nextSym11.pre-phi6335, %if.then1492 ]
  %save_nblockMAX12.pre-phi6278 = phi i32* [ %save_nblockMAX12.pre-phi6276, %while.end1666 ], [ %save_nblockMAX12.pre-phi6279, %if.then1492 ]
  %save_nblock13.pre-phi6222 = phi i32* [ %save_nblock13.pre-phi6220, %while.end1666 ], [ %save_nblock13.pre-phi6223, %if.then1492 ]
  %save_es14.pre-phi6166 = phi i32* [ %save_es14.pre-phi6164, %while.end1666 ], [ %save_es14.pre-phi6167, %if.then1492 ]
  %save_N15.pre-phi6110 = phi i32* [ %save_N15.pre-phi6108, %while.end1666 ], [ %save_N15.pre-phi6111, %if.then1492 ]
  %save_curr16.pre-phi6054 = phi i32* [ %save_curr16.pre-phi6052, %while.end1666 ], [ %save_curr16.pre-phi6055, %if.then1492 ]
  %save_zt17.pre-phi5998 = phi i32* [ %save_zt17.pre-phi5996, %while.end1666 ], [ %save_zt17.pre-phi5999, %if.then1492 ]
  %save_zn18.pre-phi5942 = phi i32* [ %save_zn18.pre-phi5940, %while.end1666 ], [ %save_zn18.pre-phi5943, %if.then1492 ]
  %save_zvec19.pre-phi5886 = phi i32* [ %save_zvec19.pre-phi5884, %while.end1666 ], [ %save_zvec19.pre-phi5887, %if.then1492 ]
  %save_zj20.pre-phi5830 = phi i32* [ %save_zj20.pre-phi5828, %while.end1666 ], [ %save_zj20.pre-phi5831, %if.then1492 ]
  %save_gSel21.pre-phi5774 = phi i32* [ %save_gSel21.pre-phi5772, %while.end1666 ], [ %save_gSel21.pre-phi5775, %if.then1492 ]
  %save_gMinlen22.pre-phi5718 = phi i32* [ %save_gMinlen22.pre-phi5716, %while.end1666 ], [ %save_gMinlen22.pre-phi5719, %if.then1492 ]
  %save_gLimit23.pre-phi5662 = phi i32** [ %save_gLimit23.pre-phi5660, %while.end1666 ], [ %save_gLimit23.pre-phi5663, %if.then1492 ]
  %save_gBase24.pre-phi5606 = phi i32** [ %save_gBase24.pre-phi5604, %while.end1666 ], [ %save_gBase24.pre-phi5607, %if.then1492 ]
  %save_gPerm25.pre-phi5550 = phi i32** [ %save_gPerm25.pre-phi5548, %while.end1666 ], [ %save_gPerm25.pre-phi5551, %if.then1492 ]
  %curr.2 = phi i32 [ %curr.4, %while.end1666 ], [ %and1498, %if.then1492 ]
  %nSelectors.5 = phi i32 [ %nSelectors.7, %while.end1666 ], [ %nSelectors.4, %if.then1492 ]
  %nGroups.6 = phi i32 [ %nGroups.8, %while.end1666 ], [ %nGroups.5, %if.then1492 ]
  %alphaSize.7 = phi i32 [ %alphaSize.9, %while.end1666 ], [ %alphaSize.6, %if.then1492 ]
  %t.2 = phi i32 [ %t.4, %while.end1666 ], [ %t.1, %if.then1492 ]
  %j.11 = phi i32 [ %j.13, %while.end1666 ], [ %j.10, %if.then1492 ]
  %i.15 = phi i32 [ %inc1673, %while.end1666 ], [ 0, %if.then1492 ]
  %cmp1537 = icmp slt i32 %i.15, %alphaSize.7
  br i1 %cmp1537, label %while.cond1540, label %for.inc1675

while.cond1540:                                   ; preds = %if.then1613, %for.cond1536
  %954 = phi i32 [ %1001, %if.then1613 ], [ %937, %for.cond1536 ]
  %955 = phi i32 [ %1002, %if.then1613 ], [ %938, %for.cond1536 ]
  %956 = phi i32 [ %1003, %if.then1613 ], [ %939, %for.cond1536 ]
  %957 = phi i32 [ %1004, %if.then1613 ], [ %940, %for.cond1536 ]
  %958 = phi i32 [ %1005, %if.then1613 ], [ %941, %for.cond1536 ]
  %959 = phi i32 [ %1006, %if.then1613 ], [ %942, %for.cond1536 ]
  %960 = phi i32 [ %1007, %if.then1613 ], [ %943, %for.cond1536 ]
  %961 = phi i32 [ %1008, %if.then1613 ], [ %944, %for.cond1536 ]
  %962 = phi i32 [ %1009, %if.then1613 ], [ %945, %for.cond1536 ]
  %963 = phi i32 [ %1010, %if.then1613 ], [ %946, %for.cond1536 ]
  %964 = phi i32 [ %1011, %if.then1613 ], [ %947, %for.cond1536 ]
  %965 = phi i32 [ %1012, %if.then1613 ], [ %948, %for.cond1536 ]
  %966 = phi i32 [ %1013, %if.then1613 ], [ %949, %for.cond1536 ]
  %967 = phi i32 [ %1014, %if.then1613 ], [ %950, %for.cond1536 ]
  %968 = phi i32* [ %1015, %if.then1613 ], [ %951, %for.cond1536 ]
  %969 = phi i32* [ %1016, %if.then1613 ], [ %952, %for.cond1536 ]
  %970 = phi i32* [ %1017, %if.then1613 ], [ %953, %for.cond1536 ]
  %save_j3.pre-phi6781 = phi i32* [ %save_j3.pre-phi6779, %if.then1613 ], [ %save_j3.pre-phi6782, %for.cond1536 ]
  %save_t4.pre-phi6725 = phi i32* [ %save_t4.pre-phi6723, %if.then1613 ], [ %save_t4.pre-phi6726, %for.cond1536 ]
  %save_alphaSize5.pre-phi6669 = phi i32* [ %save_alphaSize5.pre-phi6667, %if.then1613 ], [ %save_alphaSize5.pre-phi6670, %for.cond1536 ]
  %save_nGroups6.pre-phi6613 = phi i32* [ %save_nGroups6.pre-phi6611, %if.then1613 ], [ %save_nGroups6.pre-phi6614, %for.cond1536 ]
  %save_nSelectors7.pre-phi6557 = phi i32* [ %save_nSelectors7.pre-phi6555, %if.then1613 ], [ %save_nSelectors7.pre-phi6558, %for.cond1536 ]
  %save_EOB8.pre-phi6501 = phi i32* [ %save_EOB8.pre-phi6499, %if.then1613 ], [ %save_EOB8.pre-phi6502, %for.cond1536 ]
  %save_groupNo9.pre-phi6445 = phi i32* [ %save_groupNo9.pre-phi6443, %if.then1613 ], [ %save_groupNo9.pre-phi6446, %for.cond1536 ]
  %save_groupPos10.pre-phi6389 = phi i32* [ %save_groupPos10.pre-phi6387, %if.then1613 ], [ %save_groupPos10.pre-phi6390, %for.cond1536 ]
  %save_nextSym11.pre-phi6333 = phi i32* [ %save_nextSym11.pre-phi6331, %if.then1613 ], [ %save_nextSym11.pre-phi6334, %for.cond1536 ]
  %save_nblockMAX12.pre-phi6277 = phi i32* [ %save_nblockMAX12.pre-phi6275, %if.then1613 ], [ %save_nblockMAX12.pre-phi6278, %for.cond1536 ]
  %save_nblock13.pre-phi6221 = phi i32* [ %save_nblock13.pre-phi6219, %if.then1613 ], [ %save_nblock13.pre-phi6222, %for.cond1536 ]
  %save_es14.pre-phi6165 = phi i32* [ %save_es14.pre-phi6163, %if.then1613 ], [ %save_es14.pre-phi6166, %for.cond1536 ]
  %save_N15.pre-phi6109 = phi i32* [ %save_N15.pre-phi6107, %if.then1613 ], [ %save_N15.pre-phi6110, %for.cond1536 ]
  %save_curr16.pre-phi6053 = phi i32* [ %save_curr16.pre-phi6051, %if.then1613 ], [ %save_curr16.pre-phi6054, %for.cond1536 ]
  %save_zt17.pre-phi5997 = phi i32* [ %save_zt17.pre-phi5995, %if.then1613 ], [ %save_zt17.pre-phi5998, %for.cond1536 ]
  %save_zn18.pre-phi5941 = phi i32* [ %save_zn18.pre-phi5939, %if.then1613 ], [ %save_zn18.pre-phi5942, %for.cond1536 ]
  %save_zvec19.pre-phi5885 = phi i32* [ %save_zvec19.pre-phi5883, %if.then1613 ], [ %save_zvec19.pre-phi5886, %for.cond1536 ]
  %save_zj20.pre-phi5829 = phi i32* [ %save_zj20.pre-phi5827, %if.then1613 ], [ %save_zj20.pre-phi5830, %for.cond1536 ]
  %save_gSel21.pre-phi5773 = phi i32* [ %save_gSel21.pre-phi5771, %if.then1613 ], [ %save_gSel21.pre-phi5774, %for.cond1536 ]
  %save_gMinlen22.pre-phi5717 = phi i32* [ %save_gMinlen22.pre-phi5715, %if.then1613 ], [ %save_gMinlen22.pre-phi5718, %for.cond1536 ]
  %save_gLimit23.pre-phi5661 = phi i32** [ %save_gLimit23.pre-phi5659, %if.then1613 ], [ %save_gLimit23.pre-phi5662, %for.cond1536 ]
  %save_gBase24.pre-phi5605 = phi i32** [ %save_gBase24.pre-phi5603, %if.then1613 ], [ %save_gBase24.pre-phi5606, %for.cond1536 ]
  %save_gPerm25.pre-phi5549 = phi i32** [ %save_gPerm25.pre-phi5547, %if.then1613 ], [ %save_gPerm25.pre-phi5550, %for.cond1536 ]
  %curr.3 = phi i32 [ %curr.6, %if.then1613 ], [ %curr.2, %for.cond1536 ]
  %nSelectors.6 = phi i32 [ %nSelectors.8, %if.then1613 ], [ %nSelectors.5, %for.cond1536 ]
  %nGroups.7 = phi i32 [ %nGroups.9, %if.then1613 ], [ %nGroups.6, %for.cond1536 ]
  %alphaSize.8 = phi i32 [ %alphaSize.10, %if.then1613 ], [ %alphaSize.7, %for.cond1536 ]
  %t.3 = phi i32 [ %t.5, %if.then1613 ], [ %t.2, %for.cond1536 ]
  %j.12 = phi i32 [ %j.14, %if.then1613 ], [ %j.11, %for.cond1536 ]
  %i.16 = phi i32 [ %i.18, %if.then1613 ], [ %i.15, %for.cond1536 ]
  %curr.3.off = add i32 %curr.3, -1
  %971 = icmp ugt i32 %curr.3.off, 19
  br i1 %971, label %save_state_and_return, label %sw.bb1549

sw.bb1549:                                        ; preds = %while.cond1540, %if.end
  %972 = phi i32 [ %954, %while.cond1540 ], [ %.pre5373, %if.end ]
  %973 = phi i32 [ %955, %while.cond1540 ], [ %.pre5374, %if.end ]
  %974 = phi i32 [ %956, %while.cond1540 ], [ %.pre5375, %if.end ]
  %975 = phi i32 [ %957, %while.cond1540 ], [ %.pre5376, %if.end ]
  %976 = phi i32 [ %958, %while.cond1540 ], [ %.pre5377, %if.end ]
  %977 = phi i32 [ %959, %while.cond1540 ], [ %.pre5378, %if.end ]
  %978 = phi i32 [ %960, %while.cond1540 ], [ %.pre5379, %if.end ]
  %979 = phi i32 [ %961, %while.cond1540 ], [ %.pre5380, %if.end ]
  %980 = phi i32 [ %962, %while.cond1540 ], [ %.pre5382, %if.end ]
  %981 = phi i32 [ %963, %while.cond1540 ], [ %.pre5383, %if.end ]
  %982 = phi i32 [ %964, %while.cond1540 ], [ %.pre5384, %if.end ]
  %983 = phi i32 [ %965, %while.cond1540 ], [ %.pre5385, %if.end ]
  %984 = phi i32 [ %966, %while.cond1540 ], [ %.pre5386, %if.end ]
  %985 = phi i32 [ %967, %while.cond1540 ], [ %.pre5387, %if.end ]
  %986 = phi i32* [ %968, %while.cond1540 ], [ %.pre5388, %if.end ]
  %987 = phi i32* [ %969, %while.cond1540 ], [ %.pre5389, %if.end ]
  %988 = phi i32* [ %970, %while.cond1540 ], [ %.pre5390, %if.end ]
  %save_j3.pre-phi6780 = phi i32* [ %save_j3.pre-phi6781, %while.cond1540 ], [ %save_j3.phi.trans.insert, %if.end ]
  %save_t4.pre-phi6724 = phi i32* [ %save_t4.pre-phi6725, %while.cond1540 ], [ %save_t4.phi.trans.insert, %if.end ]
  %save_alphaSize5.pre-phi6668 = phi i32* [ %save_alphaSize5.pre-phi6669, %while.cond1540 ], [ %save_alphaSize5.phi.trans.insert, %if.end ]
  %save_nGroups6.pre-phi6612 = phi i32* [ %save_nGroups6.pre-phi6613, %while.cond1540 ], [ %save_nGroups6.phi.trans.insert, %if.end ]
  %save_nSelectors7.pre-phi6556 = phi i32* [ %save_nSelectors7.pre-phi6557, %while.cond1540 ], [ %save_nSelectors7.phi.trans.insert, %if.end ]
  %save_EOB8.pre-phi6500 = phi i32* [ %save_EOB8.pre-phi6501, %while.cond1540 ], [ %save_EOB8.phi.trans.insert, %if.end ]
  %save_groupNo9.pre-phi6444 = phi i32* [ %save_groupNo9.pre-phi6445, %while.cond1540 ], [ %save_groupNo9.phi.trans.insert, %if.end ]
  %save_groupPos10.pre-phi6388 = phi i32* [ %save_groupPos10.pre-phi6389, %while.cond1540 ], [ %save_groupPos10.phi.trans.insert, %if.end ]
  %save_nextSym11.pre-phi6332 = phi i32* [ %save_nextSym11.pre-phi6333, %while.cond1540 ], [ %save_nextSym11.phi.trans.insert, %if.end ]
  %save_nblockMAX12.pre-phi6276 = phi i32* [ %save_nblockMAX12.pre-phi6277, %while.cond1540 ], [ %save_nblockMAX12.phi.trans.insert, %if.end ]
  %save_nblock13.pre-phi6220 = phi i32* [ %save_nblock13.pre-phi6221, %while.cond1540 ], [ %save_nblock13.phi.trans.insert, %if.end ]
  %save_es14.pre-phi6164 = phi i32* [ %save_es14.pre-phi6165, %while.cond1540 ], [ %save_es14.phi.trans.insert, %if.end ]
  %save_N15.pre-phi6108 = phi i32* [ %save_N15.pre-phi6109, %while.cond1540 ], [ %save_N15.phi.trans.insert, %if.end ]
  %save_curr16.pre-phi6052 = phi i32* [ %save_curr16.pre-phi6053, %while.cond1540 ], [ %save_curr16.phi.trans.insert, %if.end ]
  %save_zt17.pre-phi5996 = phi i32* [ %save_zt17.pre-phi5997, %while.cond1540 ], [ %save_zt17.phi.trans.insert, %if.end ]
  %save_zn18.pre-phi5940 = phi i32* [ %save_zn18.pre-phi5941, %while.cond1540 ], [ %save_zn18.phi.trans.insert, %if.end ]
  %save_zvec19.pre-phi5884 = phi i32* [ %save_zvec19.pre-phi5885, %while.cond1540 ], [ %save_zvec19.phi.trans.insert, %if.end ]
  %save_zj20.pre-phi5828 = phi i32* [ %save_zj20.pre-phi5829, %while.cond1540 ], [ %save_zj20.phi.trans.insert, %if.end ]
  %save_gSel21.pre-phi5772 = phi i32* [ %save_gSel21.pre-phi5773, %while.cond1540 ], [ %save_gSel21.phi.trans.insert, %if.end ]
  %save_gMinlen22.pre-phi5716 = phi i32* [ %save_gMinlen22.pre-phi5717, %while.cond1540 ], [ %save_gMinlen22.phi.trans.insert, %if.end ]
  %save_gLimit23.pre-phi5660 = phi i32** [ %save_gLimit23.pre-phi5661, %while.cond1540 ], [ %save_gLimit23.phi.trans.insert, %if.end ]
  %save_gBase24.pre-phi5604 = phi i32** [ %save_gBase24.pre-phi5605, %while.cond1540 ], [ %save_gBase24.phi.trans.insert, %if.end ]
  %save_gPerm25.pre-phi5548 = phi i32** [ %save_gPerm25.pre-phi5549, %while.cond1540 ], [ %save_gPerm25.phi.trans.insert, %if.end ]
  %curr.4 = phi i32 [ %curr.3, %while.cond1540 ], [ %.pre5381, %if.end ]
  %nSelectors.7 = phi i32 [ %nSelectors.6, %while.cond1540 ], [ %.pre5372, %if.end ]
  %nGroups.8 = phi i32 [ %nGroups.7, %while.cond1540 ], [ %.pre5371, %if.end ]
  %alphaSize.9 = phi i32 [ %alphaSize.8, %while.cond1540 ], [ %.pre5370, %if.end ]
  %t.4 = phi i32 [ %t.3, %while.cond1540 ], [ %.pre5369, %if.end ]
  %j.13 = phi i32 [ %j.12, %while.cond1540 ], [ %.pre5368, %if.end ]
  %i.17 = phi i32 [ %i.16, %while.cond1540 ], [ %.pre, %if.end ]
  store i32 34, i32* %state, align 8, !tbaa !105
  %bsLive1553 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %989 = load i32, i32* %bsLive1553, align 4, !tbaa !106
  %cmp15545049 = icmp sgt i32 %989, 0
  %bsBuff1558.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp15545049, label %sw.bb1549.if.then1556_crit_edge, label %if.end1566.preheader

if.end1566.preheader:                             ; preds = %sw.bb1549
  br label %if.end1566

sw.bb1549.if.then1556_crit_edge:                  ; preds = %sw.bb1549
  %.pre5483 = load i32, i32* %bsBuff1558.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1556

if.then1556:                                      ; preds = %if.end1599, %sw.bb1549.if.then1556_crit_edge
  %990 = phi i32 [ %.pre5483, %sw.bb1549.if.then1556_crit_edge ], [ %or1578, %if.end1599 ]
  %.lcssa4918 = phi i32 [ %989, %sw.bb1549.if.then1556_crit_edge ], [ %add1581, %if.end1599 ]
  %sub1560 = add nsw i32 %.lcssa4918, -1
  store i32 %sub1560, i32* %bsLive1553, align 4, !tbaa !106
  %991 = shl i32 1, %sub1560
  %992 = and i32 %990, %991
  %cmp1602 = icmp eq i32 %992, 0
  br i1 %cmp1602, label %while.end1666, label %sw.bb1606

if.end1566:                                       ; preds = %if.end1599, %if.end1566.preheader
  %993 = phi i32 [ %add1581, %if.end1599 ], [ %989, %if.end1566.preheader ]
  %994 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1568 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %994, i64 0, i32 1
  %995 = load i32, i32* %avail_in1568, align 8, !tbaa !98
  %cmp1569 = icmp eq i32 %995, 0
  br i1 %cmp1569, label %save_state_and_return, label %if.end1572

if.end1572:                                       ; preds = %if.end1566
  %996 = load i32, i32* %bsBuff1558.phi.trans.insert, align 8, !tbaa !107
  %shl1574 = shl i32 %996, 8
  %next_in1576 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %994, i64 0, i32 0
  %997 = load i8*, i8** %next_in1576, align 8, !tbaa !102
  %998 = load i8, i8* %997, align 1, !tbaa !12
  %conv1577 = zext i8 %998 to i32
  %or1578 = or i32 %shl1574, %conv1577
  store i32 %or1578, i32* %bsBuff1558.phi.trans.insert, align 8, !tbaa !107
  %add1581 = add nsw i32 %993, 8
  store i32 %add1581, i32* %bsLive1553, align 4, !tbaa !106
  %incdec.ptr1584 = getelementptr inbounds i8, i8* %997, i64 1
  store i8* %incdec.ptr1584, i8** %next_in1576, align 8, !tbaa !102
  %dec1587 = add i32 %995, -1
  store i32 %dec1587, i32* %avail_in1568, align 8, !tbaa !98
  %total_in_lo321589 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %994, i64 0, i32 2
  %999 = load i32, i32* %total_in_lo321589, align 4, !tbaa !88
  %inc1590 = add i32 %999, 1
  store i32 %inc1590, i32* %total_in_lo321589, align 4, !tbaa !88
  %cmp1593 = icmp eq i32 %inc1590, 0
  br i1 %cmp1593, label %if.then1595, label %if.end1599

if.then1595:                                      ; preds = %if.end1572
  %total_in_hi321597 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %994, i64 0, i32 3
  %1000 = load i32, i32* %total_in_hi321597, align 8, !tbaa !89
  %inc1598 = add i32 %1000, 1
  store i32 %inc1598, i32* %total_in_hi321597, align 8, !tbaa !89
  br label %if.end1599

if.end1599:                                       ; preds = %if.then1595, %if.end1572
  %cmp1554 = icmp sgt i32 %993, -8
  br i1 %cmp1554, label %if.then1556, label %if.end1566

sw.bb1606:                                        ; preds = %if.then1556, %if.end.sw.bb1606_crit_edge
  %1001 = phi i32 [ %.pre5373, %if.end.sw.bb1606_crit_edge ], [ %972, %if.then1556 ]
  %1002 = phi i32 [ %.pre5374, %if.end.sw.bb1606_crit_edge ], [ %973, %if.then1556 ]
  %1003 = phi i32 [ %.pre5375, %if.end.sw.bb1606_crit_edge ], [ %974, %if.then1556 ]
  %1004 = phi i32 [ %.pre5376, %if.end.sw.bb1606_crit_edge ], [ %975, %if.then1556 ]
  %1005 = phi i32 [ %.pre5377, %if.end.sw.bb1606_crit_edge ], [ %976, %if.then1556 ]
  %1006 = phi i32 [ %.pre5378, %if.end.sw.bb1606_crit_edge ], [ %977, %if.then1556 ]
  %1007 = phi i32 [ %.pre5379, %if.end.sw.bb1606_crit_edge ], [ %978, %if.then1556 ]
  %1008 = phi i32 [ %.pre5380, %if.end.sw.bb1606_crit_edge ], [ %979, %if.then1556 ]
  %1009 = phi i32 [ %.pre5382, %if.end.sw.bb1606_crit_edge ], [ %980, %if.then1556 ]
  %1010 = phi i32 [ %.pre5383, %if.end.sw.bb1606_crit_edge ], [ %981, %if.then1556 ]
  %1011 = phi i32 [ %.pre5384, %if.end.sw.bb1606_crit_edge ], [ %982, %if.then1556 ]
  %1012 = phi i32 [ %.pre5385, %if.end.sw.bb1606_crit_edge ], [ %983, %if.then1556 ]
  %1013 = phi i32 [ %.pre5386, %if.end.sw.bb1606_crit_edge ], [ %984, %if.then1556 ]
  %1014 = phi i32 [ %.pre5387, %if.end.sw.bb1606_crit_edge ], [ %985, %if.then1556 ]
  %1015 = phi i32* [ %.pre5388, %if.end.sw.bb1606_crit_edge ], [ %986, %if.then1556 ]
  %1016 = phi i32* [ %.pre5389, %if.end.sw.bb1606_crit_edge ], [ %987, %if.then1556 ]
  %1017 = phi i32* [ %.pre5390, %if.end.sw.bb1606_crit_edge ], [ %988, %if.then1556 ]
  %save_j3.pre-phi6779 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_j3.pre-phi6780, %if.then1556 ]
  %save_t4.pre-phi6723 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_t4.pre-phi6724, %if.then1556 ]
  %save_alphaSize5.pre-phi6667 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_alphaSize5.pre-phi6668, %if.then1556 ]
  %save_nGroups6.pre-phi6611 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_nGroups6.pre-phi6612, %if.then1556 ]
  %save_nSelectors7.pre-phi6555 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_nSelectors7.pre-phi6556, %if.then1556 ]
  %save_EOB8.pre-phi6499 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_EOB8.pre-phi6500, %if.then1556 ]
  %save_groupNo9.pre-phi6443 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_groupNo9.pre-phi6444, %if.then1556 ]
  %save_groupPos10.pre-phi6387 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_groupPos10.pre-phi6388, %if.then1556 ]
  %save_nextSym11.pre-phi6331 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_nextSym11.pre-phi6332, %if.then1556 ]
  %save_nblockMAX12.pre-phi6275 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_nblockMAX12.pre-phi6276, %if.then1556 ]
  %save_nblock13.pre-phi6219 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_nblock13.pre-phi6220, %if.then1556 ]
  %save_es14.pre-phi6163 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_es14.pre-phi6164, %if.then1556 ]
  %save_N15.pre-phi6107 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_N15.pre-phi6108, %if.then1556 ]
  %save_curr16.pre-phi6051 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_curr16.pre-phi6052, %if.then1556 ]
  %save_zt17.pre-phi5995 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_zt17.pre-phi5996, %if.then1556 ]
  %save_zn18.pre-phi5939 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_zn18.pre-phi5940, %if.then1556 ]
  %save_zvec19.pre-phi5883 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_zvec19.pre-phi5884, %if.then1556 ]
  %save_zj20.pre-phi5827 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_zj20.pre-phi5828, %if.then1556 ]
  %save_gSel21.pre-phi5771 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_gSel21.pre-phi5772, %if.then1556 ]
  %save_gMinlen22.pre-phi5715 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_gMinlen22.pre-phi5716, %if.then1556 ]
  %save_gLimit23.pre-phi5659 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_gLimit23.pre-phi5660, %if.then1556 ]
  %save_gBase24.pre-phi5603 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_gBase24.pre-phi5604, %if.then1556 ]
  %save_gPerm25.pre-phi5547 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %save_gPerm25.pre-phi5548, %if.then1556 ]
  %bsLive1610.pre-phi = phi i32* [ %bsLive1610.phi.trans.insert, %if.end.sw.bb1606_crit_edge ], [ %bsLive1553, %if.then1556 ]
  %1018 = phi i32 [ %.pre5484, %if.end.sw.bb1606_crit_edge ], [ %sub1560, %if.then1556 ]
  %curr.5 = phi i32 [ %.pre5381, %if.end.sw.bb1606_crit_edge ], [ %curr.4, %if.then1556 ]
  %nSelectors.8 = phi i32 [ %.pre5372, %if.end.sw.bb1606_crit_edge ], [ %nSelectors.7, %if.then1556 ]
  %nGroups.9 = phi i32 [ %.pre5371, %if.end.sw.bb1606_crit_edge ], [ %nGroups.8, %if.then1556 ]
  %alphaSize.10 = phi i32 [ %.pre5370, %if.end.sw.bb1606_crit_edge ], [ %alphaSize.9, %if.then1556 ]
  %t.5 = phi i32 [ %.pre5369, %if.end.sw.bb1606_crit_edge ], [ %t.4, %if.then1556 ]
  %j.14 = phi i32 [ %.pre5368, %if.end.sw.bb1606_crit_edge ], [ %j.13, %if.then1556 ]
  %i.18 = phi i32 [ %.pre, %if.end.sw.bb1606_crit_edge ], [ %i.17, %if.then1556 ]
  store i32 35, i32* %state, align 8, !tbaa !105
  %cmp16115046 = icmp sgt i32 %1018, 0
  %bsBuff1615.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp16115046, label %sw.bb1606.if.then1613_crit_edge, label %if.end1623.preheader

if.end1623.preheader:                             ; preds = %sw.bb1606
  br label %if.end1623

sw.bb1606.if.then1613_crit_edge:                  ; preds = %sw.bb1606
  %.pre5485 = load i32, i32* %bsBuff1615.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1613

if.then1613:                                      ; preds = %if.end1656, %sw.bb1606.if.then1613_crit_edge
  %1019 = phi i32 [ %.pre5485, %sw.bb1606.if.then1613_crit_edge ], [ %or1635, %if.end1656 ]
  %.lcssa4915 = phi i32 [ %1018, %sw.bb1606.if.then1613_crit_edge ], [ %add1638, %if.end1656 ]
  %sub1617 = add nsw i32 %.lcssa4915, -1
  store i32 %sub1617, i32* %bsLive1610.pre-phi, align 4, !tbaa !106
  %1020 = shl i32 1, %sub1617
  %1021 = and i32 %1019, %1020
  %cmp1659 = icmp eq i32 %1021, 0
  %curr.6.v = select i1 %cmp1659, i32 1, i32 -1
  %curr.6 = add i32 %curr.6.v, %curr.5
  br label %while.cond1540

if.end1623:                                       ; preds = %if.end1656, %if.end1623.preheader
  %1022 = phi i32 [ %add1638, %if.end1656 ], [ %1018, %if.end1623.preheader ]
  %1023 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1625 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1023, i64 0, i32 1
  %1024 = load i32, i32* %avail_in1625, align 8, !tbaa !98
  %cmp1626 = icmp eq i32 %1024, 0
  br i1 %cmp1626, label %save_state_and_return, label %if.end1629

if.end1629:                                       ; preds = %if.end1623
  %1025 = load i32, i32* %bsBuff1615.phi.trans.insert, align 8, !tbaa !107
  %shl1631 = shl i32 %1025, 8
  %next_in1633 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1023, i64 0, i32 0
  %1026 = load i8*, i8** %next_in1633, align 8, !tbaa !102
  %1027 = load i8, i8* %1026, align 1, !tbaa !12
  %conv1634 = zext i8 %1027 to i32
  %or1635 = or i32 %shl1631, %conv1634
  store i32 %or1635, i32* %bsBuff1615.phi.trans.insert, align 8, !tbaa !107
  %add1638 = add nsw i32 %1022, 8
  store i32 %add1638, i32* %bsLive1610.pre-phi, align 4, !tbaa !106
  %incdec.ptr1641 = getelementptr inbounds i8, i8* %1026, i64 1
  store i8* %incdec.ptr1641, i8** %next_in1633, align 8, !tbaa !102
  %dec1644 = add i32 %1024, -1
  store i32 %dec1644, i32* %avail_in1625, align 8, !tbaa !98
  %total_in_lo321646 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1023, i64 0, i32 2
  %1028 = load i32, i32* %total_in_lo321646, align 4, !tbaa !88
  %inc1647 = add i32 %1028, 1
  store i32 %inc1647, i32* %total_in_lo321646, align 4, !tbaa !88
  %cmp1650 = icmp eq i32 %inc1647, 0
  br i1 %cmp1650, label %if.then1652, label %if.end1656

if.then1652:                                      ; preds = %if.end1629
  %total_in_hi321654 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1023, i64 0, i32 3
  %1029 = load i32, i32* %total_in_hi321654, align 8, !tbaa !89
  %inc1655 = add i32 %1029, 1
  store i32 %inc1655, i32* %total_in_hi321654, align 8, !tbaa !89
  br label %if.end1656

if.end1656:                                       ; preds = %if.then1652, %if.end1629
  %cmp1611 = icmp sgt i32 %1022, -8
  br i1 %cmp1611, label %if.then1613, label %if.end1623

while.end1666:                                    ; preds = %if.then1556
  %conv1667 = trunc i32 %curr.4 to i8
  %idxprom1668 = sext i32 %t.4 to i64
  %idxprom1670 = sext i32 %i.17 to i64
  %arrayidx1671 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 35, i64 %idxprom1668, i64 %idxprom1670
  store i8 %conv1667, i8* %arrayidx1671, align 1, !tbaa !12
  %inc1673 = add nsw i32 %i.17, 1
  br label %for.cond1536

for.inc1675:                                      ; preds = %for.cond1536
  %inc1676 = add nsw i32 %t.2, 1
  br label %for.cond1481

for.end1677:                                      ; preds = %for.cond1481
  %cmp16795119 = icmp sgt i32 %nGroups.4, 0
  br i1 %cmp16795119, label %for.body1681.lr.ph, label %for.end1738

for.body1681.lr.ph:                               ; preds = %for.end1677
  %cmp16835112 = icmp sgt i32 %alphaSize.5, 0
  br i1 %cmp16835112, label %for.body1681.lr.ph.split.us, label %for.body1681.lr.ph.split

for.body1681.lr.ph.split.us:                      ; preds = %for.body1681.lr.ph
  %wide.trip.count5347 = zext i32 %alphaSize.5 to i64
  %wide.trip.count5351 = zext i32 %nGroups.4 to i64
  %min.iters.check6999 = icmp ult i32 %alphaSize.5, 8
  %n.vec7002 = and i64 %wide.trip.count5347, 4294967288
  %cmp.n7006 = icmp eq i64 %n.vec7002, %wide.trip.count5347
  br label %for.body1681.us

for.body1681.us:                                  ; preds = %for.cond1682.for.end1720_crit_edge.us, %for.body1681.lr.ph.split.us
  %indvars.iv5349 = phi i64 [ %indvars.iv.next5350, %for.cond1682.for.end1720_crit_edge.us ], [ 0, %for.body1681.lr.ph.split.us ]
  br i1 %min.iters.check6999, label %for.body1685.us.preheader, label %vector.ph7000

vector.ph7000:                                    ; preds = %for.body1681.us
  br label %vector.body6996

vector.body6996:                                  ; preds = %vector.body6996, %vector.ph7000
  %index7003 = phi i64 [ 0, %vector.ph7000 ], [ %index.next7004, %vector.body6996 ]
  %vec.phi = phi <4 x i32> [ <i32 32, i32 32, i32 32, i32 32>, %vector.ph7000 ], [ %1042, %vector.body6996 ]
  %vec.phi7008 = phi <4 x i32> [ <i32 32, i32 32, i32 32, i32 32>, %vector.ph7000 ], [ %1043, %vector.body6996 ]
  %vec.phi7009 = phi <4 x i32> [ zeroinitializer, %vector.ph7000 ], [ %1038, %vector.body6996 ]
  %vec.phi7010 = phi <4 x i32> [ zeroinitializer, %vector.ph7000 ], [ %1039, %vector.body6996 ]
  %1030 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 35, i64 %indvars.iv5349, i64 %index7003
  %1031 = bitcast i8* %1030 to <4 x i8>*
  %wide.load = load <4 x i8>, <4 x i8>* %1031, align 1, !tbaa !12
  %1032 = getelementptr i8, i8* %1030, i64 4
  %1033 = bitcast i8* %1032 to <4 x i8>*
  %wide.load7011 = load <4 x i8>, <4 x i8>* %1033, align 1, !tbaa !12
  %1034 = zext <4 x i8> %wide.load to <4 x i32>
  %1035 = zext <4 x i8> %wide.load7011 to <4 x i32>
  %1036 = icmp slt <4 x i32> %vec.phi7009, %1034
  %1037 = icmp slt <4 x i32> %vec.phi7010, %1035
  %1038 = select <4 x i1> %1036, <4 x i32> %1034, <4 x i32> %vec.phi7009
  %1039 = select <4 x i1> %1037, <4 x i32> %1035, <4 x i32> %vec.phi7010
  %1040 = icmp sgt <4 x i32> %vec.phi, %1034
  %1041 = icmp sgt <4 x i32> %vec.phi7008, %1035
  %1042 = select <4 x i1> %1040, <4 x i32> %1034, <4 x i32> %vec.phi
  %1043 = select <4 x i1> %1041, <4 x i32> %1035, <4 x i32> %vec.phi7008
  %index.next7004 = add i64 %index7003, 8
  %1044 = icmp eq i64 %index.next7004, %n.vec7002
  br i1 %1044, label %middle.block6997, label %vector.body6996, !llvm.loop !180

middle.block6997:                                 ; preds = %vector.body6996
  %rdx.minmax.cmp7017 = icmp sgt <4 x i32> %1038, %1039
  %rdx.minmax.select7018 = select <4 x i1> %rdx.minmax.cmp7017, <4 x i32> %1038, <4 x i32> %1039
  %rdx.shuf7019 = shufflevector <4 x i32> %rdx.minmax.select7018, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp7020 = icmp sgt <4 x i32> %rdx.minmax.select7018, %rdx.shuf7019
  %rdx.minmax.select7021 = select <4 x i1> %rdx.minmax.cmp7020, <4 x i32> %rdx.minmax.select7018, <4 x i32> %rdx.shuf7019
  %rdx.shuf7022 = shufflevector <4 x i32> %rdx.minmax.select7021, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp7023 = icmp sgt <4 x i32> %rdx.minmax.select7021, %rdx.shuf7022
  %rdx.minmax.select7024 = select <4 x i1> %rdx.minmax.cmp7023, <4 x i32> %rdx.minmax.select7021, <4 x i32> %rdx.shuf7022
  %1045 = extractelement <4 x i32> %rdx.minmax.select7024, i32 0
  %rdx.minmax.cmp = icmp slt <4 x i32> %1042, %1043
  %rdx.minmax.select = select <4 x i1> %rdx.minmax.cmp, <4 x i32> %1042, <4 x i32> %1043
  %rdx.shuf = shufflevector <4 x i32> %rdx.minmax.select, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %rdx.minmax.cmp7012 = icmp slt <4 x i32> %rdx.minmax.select, %rdx.shuf
  %rdx.minmax.select7013 = select <4 x i1> %rdx.minmax.cmp7012, <4 x i32> %rdx.minmax.select, <4 x i32> %rdx.shuf
  %rdx.shuf7014 = shufflevector <4 x i32> %rdx.minmax.select7013, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %rdx.minmax.cmp7015 = icmp slt <4 x i32> %rdx.minmax.select7013, %rdx.shuf7014
  %rdx.minmax.select7016 = select <4 x i1> %rdx.minmax.cmp7015, <4 x i32> %rdx.minmax.select7013, <4 x i32> %rdx.shuf7014
  %1046 = extractelement <4 x i32> %rdx.minmax.select7016, i32 0
  br i1 %cmp.n7006, label %for.cond1682.for.end1720_crit_edge.us, label %for.body1685.us.preheader

for.body1685.us.preheader:                        ; preds = %middle.block6997, %for.body1681.us
  %indvars.iv5345.ph = phi i64 [ 0, %for.body1681.us ], [ %n.vec7002, %middle.block6997 ]
  %minLen.05115.us.ph = phi i32 [ 32, %for.body1681.us ], [ %1046, %middle.block6997 ]
  %maxLen.05114.us.ph = phi i32 [ 0, %for.body1681.us ], [ %1045, %middle.block6997 ]
  br label %for.body1685.us

for.body1685.us:                                  ; preds = %for.body1685.us, %for.body1685.us.preheader
  %indvars.iv5345 = phi i64 [ %indvars.iv.next5346, %for.body1685.us ], [ %indvars.iv5345.ph, %for.body1685.us.preheader ]
  %minLen.05115.us = phi i32 [ %minLen.1.us, %for.body1685.us ], [ %minLen.05115.us.ph, %for.body1685.us.preheader ]
  %maxLen.05114.us = phi i32 [ %spec.select.us, %for.body1685.us ], [ %maxLen.05114.us.ph, %for.body1685.us.preheader ]
  %arrayidx1690.us = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 35, i64 %indvars.iv5349, i64 %indvars.iv5345
  %1047 = load i8, i8* %arrayidx1690.us, align 1, !tbaa !12
  %conv1691.us = zext i8 %1047 to i32
  %cmp1692.us = icmp slt i32 %maxLen.05114.us, %conv1691.us
  %spec.select.us = select i1 %cmp1692.us, i32 %conv1691.us, i32 %maxLen.05114.us
  %cmp1708.us = icmp sgt i32 %minLen.05115.us, %conv1691.us
  %minLen.1.us = select i1 %cmp1708.us, i32 %conv1691.us, i32 %minLen.05115.us
  %indvars.iv.next5346 = add nuw nsw i64 %indvars.iv5345, 1
  %exitcond5348 = icmp eq i64 %indvars.iv.next5346, %wide.trip.count5347
  br i1 %exitcond5348, label %for.cond1682.for.end1720_crit_edge.us, label %for.body1685.us, !llvm.loop !181

for.cond1682.for.end1720_crit_edge.us:            ; preds = %for.body1685.us, %middle.block6997
  %spec.select.us.lcssa = phi i32 [ %1045, %middle.block6997 ], [ %spec.select.us, %for.body1685.us ]
  %minLen.1.us.lcssa = phi i32 [ %1046, %middle.block6997 ], [ %minLen.1.us, %for.body1685.us ]
  %arrayidx1723.us = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 36, i64 %indvars.iv5349, i64 0
  %arrayidx1726.us = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 37, i64 %indvars.iv5349, i64 0
  %arrayidx1729.us = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 38, i64 %indvars.iv5349, i64 0
  %arrayidx1733.us = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 35, i64 %indvars.iv5349, i64 0
  tail call void @BZ2_hbCreateDecodeTables(i32* nonnull %arrayidx1723.us, i32* nonnull %arrayidx1726.us, i32* nonnull %arrayidx1729.us, i8* nonnull %arrayidx1733.us, i32 %minLen.1.us.lcssa, i32 %spec.select.us.lcssa, i32 %alphaSize.5) #2
  %arrayidx1735.us = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 39, i64 %indvars.iv5349
  store i32 %minLen.1.us.lcssa, i32* %arrayidx1735.us, align 4, !tbaa !6
  %indvars.iv.next5350 = add nuw nsw i64 %indvars.iv5349, 1
  %exitcond5352 = icmp eq i64 %indvars.iv.next5350, %wide.trip.count5351
  br i1 %exitcond5352, label %for.end1738, label %for.body1681.us

for.body1681.lr.ph.split:                         ; preds = %for.body1681.lr.ph
  %wide.trip.count5355 = zext i32 %nGroups.4 to i64
  br label %for.body1681

for.body1681:                                     ; preds = %for.body1681, %for.body1681.lr.ph.split
  %indvars.iv5353 = phi i64 [ 0, %for.body1681.lr.ph.split ], [ %indvars.iv.next5354, %for.body1681 ]
  %arrayidx1723 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 36, i64 %indvars.iv5353, i64 0
  %arrayidx1726 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 37, i64 %indvars.iv5353, i64 0
  %arrayidx1729 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 38, i64 %indvars.iv5353, i64 0
  %arrayidx1733 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 35, i64 %indvars.iv5353, i64 0
  tail call void @BZ2_hbCreateDecodeTables(i32* nonnull %arrayidx1723, i32* nonnull %arrayidx1726, i32* nonnull %arrayidx1729, i8* nonnull %arrayidx1733, i32 32, i32 0, i32 %alphaSize.5) #2
  %arrayidx1735 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 39, i64 %indvars.iv5353
  store i32 32, i32* %arrayidx1735, align 4, !tbaa !6
  %indvars.iv.next5354 = add nuw nsw i64 %indvars.iv5353, 1
  %exitcond5356 = icmp eq i64 %indvars.iv.next5354, %wide.trip.count5355
  br i1 %exitcond5356, label %for.end1738, label %for.body1681

for.end1738:                                      ; preds = %for.body1681, %for.cond1682.for.end1720_crit_edge.us, %for.end1677
  %t.6.lcssa = phi i32 [ 0, %for.end1677 ], [ %nGroups.4, %for.cond1682.for.end1720_crit_edge.us ], [ %nGroups.4, %for.body1681 ]
  %nInUse1739 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 27
  %1048 = load i32, i32* %nInUse1739, align 8, !tbaa !175
  %blockSize100k1741 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 9
  %1049 = load i32, i32* %blockSize100k1741, align 8, !tbaa !173
  %scevgep = getelementptr %struct.DState, %struct.DState* %s, i64 0, i32 16, i64 0
  %scevgep5344 = bitcast i32* %scevgep to i8*
  call void @llvm.memset.p0i8.i64(i8* %scevgep5344, i8 0, i64 1024, i32 4, i1 false)
  %add1740 = add nsw i32 %1048, 1
  %mul1742 = mul nsw i32 %1049, 100000
  br label %for.body1755

for.body1755:                                     ; preds = %for.body1755, %for.end1738
  %indvars.iv5323 = phi i64 [ 15, %for.end1738 ], [ %indvars.iv.next5324, %for.body1755 ]
  %indvars.iv5321 = phi i64 [ 4095, %for.end1738 ], [ %indvars.iv.next5322, %for.body1755 ]
  %ii.05109 = phi i32 [ 15, %for.end1738 ], [ %dec1773, %for.body1755 ]
  %mul1760 = shl i32 %ii.05109, 4
  %1050 = trunc i32 %mul1760 to i8
  %conv1762 = or i8 %1050, 15
  %arrayidx1764 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv5321
  store i8 %conv1762, i8* %arrayidx1764, align 1, !tbaa !12
  %indvars.iv.next5320 = add nsw i64 %indvars.iv5321, -1
  %1051 = trunc i32 %mul1760 to i8
  %conv1762.1 = or i8 %1051, 14
  %arrayidx1764.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320
  store i8 %conv1762.1, i8* %arrayidx1764.1, align 1, !tbaa !12
  %indvars.iv.next5320.1 = add nsw i64 %indvars.iv5321, -2
  %1052 = trunc i32 %mul1760 to i8
  %conv1762.2 = or i8 %1052, 13
  %arrayidx1764.2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.1
  store i8 %conv1762.2, i8* %arrayidx1764.2, align 1, !tbaa !12
  %indvars.iv.next5320.2 = add nsw i64 %indvars.iv5321, -3
  %1053 = trunc i32 %mul1760 to i8
  %conv1762.3 = or i8 %1053, 12
  %arrayidx1764.3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.2
  store i8 %conv1762.3, i8* %arrayidx1764.3, align 1, !tbaa !12
  %indvars.iv.next5320.3 = add nsw i64 %indvars.iv5321, -4
  %1054 = trunc i32 %mul1760 to i8
  %conv1762.4 = or i8 %1054, 11
  %arrayidx1764.4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.3
  store i8 %conv1762.4, i8* %arrayidx1764.4, align 1, !tbaa !12
  %indvars.iv.next5320.4 = add nsw i64 %indvars.iv5321, -5
  %1055 = trunc i32 %mul1760 to i8
  %conv1762.5 = or i8 %1055, 10
  %arrayidx1764.5 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.4
  store i8 %conv1762.5, i8* %arrayidx1764.5, align 1, !tbaa !12
  %indvars.iv.next5320.5 = add nsw i64 %indvars.iv5321, -6
  %1056 = trunc i32 %mul1760 to i8
  %conv1762.6 = or i8 %1056, 9
  %arrayidx1764.6 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.5
  store i8 %conv1762.6, i8* %arrayidx1764.6, align 1, !tbaa !12
  %indvars.iv.next5320.6 = add nsw i64 %indvars.iv5321, -7
  %1057 = trunc i32 %mul1760 to i8
  %conv1762.7 = or i8 %1057, 8
  %arrayidx1764.7 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.6
  store i8 %conv1762.7, i8* %arrayidx1764.7, align 1, !tbaa !12
  %indvars.iv.next5320.7 = add nsw i64 %indvars.iv5321, -8
  %1058 = trunc i32 %mul1760 to i8
  %conv1762.8 = or i8 %1058, 7
  %arrayidx1764.8 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.7
  store i8 %conv1762.8, i8* %arrayidx1764.8, align 1, !tbaa !12
  %indvars.iv.next5320.8 = add nsw i64 %indvars.iv5321, -9
  %1059 = trunc i32 %mul1760 to i8
  %conv1762.9 = or i8 %1059, 6
  %arrayidx1764.9 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.8
  store i8 %conv1762.9, i8* %arrayidx1764.9, align 1, !tbaa !12
  %indvars.iv.next5320.9 = add nsw i64 %indvars.iv5321, -10
  %1060 = trunc i32 %mul1760 to i8
  %conv1762.10 = or i8 %1060, 5
  %arrayidx1764.10 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.9
  store i8 %conv1762.10, i8* %arrayidx1764.10, align 1, !tbaa !12
  %indvars.iv.next5320.10 = add nsw i64 %indvars.iv5321, -11
  %1061 = trunc i32 %mul1760 to i8
  %conv1762.11 = or i8 %1061, 4
  %arrayidx1764.11 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.10
  store i8 %conv1762.11, i8* %arrayidx1764.11, align 1, !tbaa !12
  %indvars.iv.next5320.11 = add nsw i64 %indvars.iv5321, -12
  %1062 = trunc i32 %mul1760 to i8
  %conv1762.12 = or i8 %1062, 3
  %arrayidx1764.12 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.11
  store i8 %conv1762.12, i8* %arrayidx1764.12, align 1, !tbaa !12
  %indvars.iv.next5320.12 = add nsw i64 %indvars.iv5321, -13
  %1063 = trunc i32 %mul1760 to i8
  %conv1762.13 = or i8 %1063, 2
  %arrayidx1764.13 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.12
  store i8 %conv1762.13, i8* %arrayidx1764.13, align 1, !tbaa !12
  %indvars.iv.next5320.13 = add nsw i64 %indvars.iv5321, -14
  %1064 = trunc i32 %mul1760 to i8
  %conv1762.14 = or i8 %1064, 1
  %arrayidx1764.14 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.13
  store i8 %conv1762.14, i8* %arrayidx1764.14, align 1, !tbaa !12
  %indvars.iv.next5320.14 = add nsw i64 %indvars.iv5321, -15
  %conv1762.15 = trunc i32 %mul1760 to i8
  %arrayidx1764.15 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5320.14
  store i8 %conv1762.15, i8* %arrayidx1764.15, align 1, !tbaa !12
  %1065 = trunc i64 %indvars.iv5321 to i32
  %1066 = add i32 %1065, -15
  %arrayidx1771 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 %indvars.iv5323
  store i32 %1066, i32* %arrayidx1771, align 4, !tbaa !6
  %indvars.iv.next5324 = add nsw i64 %indvars.iv5323, -1
  %dec1773 = add nsw i32 %ii.05109, -1
  %cmp1753 = icmp eq i64 %indvars.iv5323, 0
  %indvars.iv.next5322 = add nsw i64 %indvars.iv5321, -16
  br i1 %cmp1753, label %if.then1777, label %for.body1755

if.then1777:                                      ; preds = %for.body1755
  %cmp1779 = icmp slt i32 %nSelectors.3, 1
  br i1 %cmp1779, label %save_state_and_return, label %if.end1782

if.end1782:                                       ; preds = %if.then1777
  %arrayidx1785 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 33, i64 0
  %1067 = load i8, i8* %arrayidx1785, align 1, !tbaa !12
  %idxprom1788 = zext i8 %1067 to i64
  %arrayidx1789 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 39, i64 %idxprom1788
  %1068 = load i32, i32* %arrayidx1789, align 4, !tbaa !6
  %arrayidx1801 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 37, i64 %idxprom1788, i64 0
  %arrayidx1797 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 38, i64 %idxprom1788, i64 0
  %arrayidx1793 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 36, i64 %idxprom1788, i64 0
  %conv1786 = zext i8 %1067 to i32
  br label %sw.bb1804

sw.bb1804:                                        ; preds = %if.end1782, %if.end
  %1069 = phi i32 [ %.pre5376, %if.end ], [ %897, %if.end1782 ]
  %1070 = phi i32 [ %.pre5379, %if.end ], [ %900, %if.end1782 ]
  %1071 = phi i32 [ %.pre5380, %if.end ], [ %901, %if.end1782 ]
  %1072 = phi i32 [ %.pre5382, %if.end ], [ %902, %if.end1782 ]
  %1073 = phi i32 [ %.pre5384, %if.end ], [ %904, %if.end1782 ]
  %1074 = phi i32 [ %.pre5385, %if.end ], [ %905, %if.end1782 ]
  %save_j3.pre-phi6778 = phi i32* [ %save_j3.phi.trans.insert, %if.end ], [ %save_j3.pre-phi6784, %if.end1782 ]
  %save_t4.pre-phi6722 = phi i32* [ %save_t4.phi.trans.insert, %if.end ], [ %save_t4.pre-phi6728, %if.end1782 ]
  %save_alphaSize5.pre-phi6666 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end ], [ %save_alphaSize5.pre-phi6672, %if.end1782 ]
  %save_nGroups6.pre-phi6610 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end ], [ %save_nGroups6.pre-phi6616, %if.end1782 ]
  %save_nSelectors7.pre-phi6554 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end ], [ %save_nSelectors7.pre-phi6560, %if.end1782 ]
  %save_EOB8.pre-phi6498 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end ], [ %save_EOB8.pre-phi6504, %if.end1782 ]
  %save_groupNo9.pre-phi6442 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end ], [ %save_groupNo9.pre-phi6448, %if.end1782 ]
  %save_groupPos10.pre-phi6386 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end ], [ %save_groupPos10.pre-phi6392, %if.end1782 ]
  %save_nextSym11.pre-phi6330 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end ], [ %save_nextSym11.pre-phi6336, %if.end1782 ]
  %save_nblockMAX12.pre-phi6274 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end ], [ %save_nblockMAX12.pre-phi6280, %if.end1782 ]
  %save_nblock13.pre-phi6218 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end ], [ %save_nblock13.pre-phi6224, %if.end1782 ]
  %save_es14.pre-phi6162 = phi i32* [ %save_es14.phi.trans.insert, %if.end ], [ %save_es14.pre-phi6168, %if.end1782 ]
  %save_N15.pre-phi6106 = phi i32* [ %save_N15.phi.trans.insert, %if.end ], [ %save_N15.pre-phi6112, %if.end1782 ]
  %save_curr16.pre-phi6050 = phi i32* [ %save_curr16.phi.trans.insert, %if.end ], [ %save_curr16.pre-phi6056, %if.end1782 ]
  %save_zt17.pre-phi5994 = phi i32* [ %save_zt17.phi.trans.insert, %if.end ], [ %save_zt17.pre-phi6000, %if.end1782 ]
  %save_zn18.pre-phi5938 = phi i32* [ %save_zn18.phi.trans.insert, %if.end ], [ %save_zn18.pre-phi5944, %if.end1782 ]
  %save_zvec19.pre-phi5882 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end ], [ %save_zvec19.pre-phi5888, %if.end1782 ]
  %save_zj20.pre-phi5826 = phi i32* [ %save_zj20.phi.trans.insert, %if.end ], [ %save_zj20.pre-phi5832, %if.end1782 ]
  %save_gSel21.pre-phi5770 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end ], [ %save_gSel21.pre-phi5776, %if.end1782 ]
  %save_gMinlen22.pre-phi5714 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end ], [ %save_gMinlen22.pre-phi5720, %if.end1782 ]
  %save_gLimit23.pre-phi5658 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end ], [ %save_gLimit23.pre-phi5664, %if.end1782 ]
  %save_gBase24.pre-phi5602 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end ], [ %save_gBase24.pre-phi5608, %if.end1782 ]
  %save_gPerm25.pre-phi5546 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end ], [ %save_gPerm25.pre-phi5552, %if.end1782 ]
  %gPerm.1 = phi i32* [ %.pre5390, %if.end ], [ %arrayidx1797, %if.end1782 ]
  %gBase.1 = phi i32* [ %.pre5389, %if.end ], [ %arrayidx1801, %if.end1782 ]
  %gLimit.1 = phi i32* [ %.pre5388, %if.end ], [ %arrayidx1793, %if.end1782 ]
  %gMinlen.1 = phi i32 [ %.pre5387, %if.end ], [ %1068, %if.end1782 ]
  %gSel.1 = phi i32 [ %.pre5386, %if.end ], [ %conv1786, %if.end1782 ]
  %zn.0 = phi i32 [ %.pre5383, %if.end ], [ %1068, %if.end1782 ]
  %curr.7 = phi i32 [ %.pre5381, %if.end ], [ %curr.0, %if.end1782 ]
  %nblock.0 = phi i32 [ %.pre5378, %if.end ], [ 0, %if.end1782 ]
  %nblockMAX.0 = phi i32 [ %.pre5377, %if.end ], [ %mul1742, %if.end1782 ]
  %groupPos.1 = phi i32 [ %.pre5375, %if.end ], [ 49, %if.end1782 ]
  %groupNo.1 = phi i32 [ %.pre5374, %if.end ], [ 0, %if.end1782 ]
  %EOB.0 = phi i32 [ %.pre5373, %if.end ], [ %add1740, %if.end1782 ]
  %nSelectors.9 = phi i32 [ %.pre5372, %if.end ], [ %nSelectors.3, %if.end1782 ]
  %nGroups.10 = phi i32 [ %.pre5371, %if.end ], [ %nGroups.4, %if.end1782 ]
  %alphaSize.11 = phi i32 [ %.pre5370, %if.end ], [ %alphaSize.5, %if.end1782 ]
  %t.7 = phi i32 [ %.pre5369, %if.end ], [ %t.6.lcssa, %if.end1782 ]
  %j.15 = phi i32 [ %.pre5368, %if.end ], [ %j.9, %if.end1782 ]
  %i.21 = phi i32 [ %.pre, %if.end ], [ 256, %if.end1782 ]
  store i32 36, i32* %state, align 8, !tbaa !105
  %bsLive1808 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %1075 = load i32, i32* %bsLive1808, align 4, !tbaa !106
  %cmp18095104 = icmp slt i32 %1075, %zn.0
  %bsBuff1829 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp18095104, label %if.end1822.lr.ph, label %sw.bb1804.if.then1811_crit_edge

sw.bb1804.if.then1811_crit_edge:                  ; preds = %sw.bb1804
  %.pre5465 = load i32, i32* %bsBuff1829, align 8, !tbaa !107
  br label %if.then1811

if.end1822.lr.ph:                                 ; preds = %sw.bb1804
  %.pre5463 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1824.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5463, i64 0, i32 1
  %.pre5464 = load i32, i32* %avail_in1824.phi.trans.insert, align 8, !tbaa !98
  %next_in1832 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5463, i64 0, i32 0
  %total_in_lo321845 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5463, i64 0, i32 2
  %total_in_hi321853 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5463, i64 0, i32 3
  br label %if.end1822

if.then1811:                                      ; preds = %if.end1855, %sw.bb1804.if.then1811_crit_edge
  %1076 = phi i32 [ %.pre5465, %sw.bb1804.if.then1811_crit_edge ], [ %or1834, %if.end1855 ]
  %.lcssa4947 = phi i32 [ %1075, %sw.bb1804.if.then1811_crit_edge ], [ %add1837, %if.end1855 ]
  %sub1815 = sub nsw i32 %.lcssa4947, %zn.0
  %shr1816 = lshr i32 %1076, %sub1815
  %shl1817 = shl i32 1, %zn.0
  %sub1818 = add nsw i32 %shl1817, -1
  %and1819 = and i32 %shr1816, %sub1818
  store i32 %sub1815, i32* %bsLive1808, align 4, !tbaa !106
  br label %while.cond1857

if.end1822:                                       ; preds = %if.end1855, %if.end1822.lr.ph
  %1077 = phi i32 [ %.pre5464, %if.end1822.lr.ph ], [ %dec1843, %if.end1855 ]
  %1078 = phi i32 [ %1075, %if.end1822.lr.ph ], [ %add1837, %if.end1855 ]
  %cmp1825 = icmp eq i32 %1077, 0
  br i1 %cmp1825, label %save_state_and_return, label %if.end1828

if.end1828:                                       ; preds = %if.end1822
  %1079 = load i32, i32* %bsBuff1829, align 8, !tbaa !107
  %shl1830 = shl i32 %1079, 8
  %1080 = load i8*, i8** %next_in1832, align 8, !tbaa !102
  %1081 = load i8, i8* %1080, align 1, !tbaa !12
  %conv1833 = zext i8 %1081 to i32
  %or1834 = or i32 %shl1830, %conv1833
  store i32 %or1834, i32* %bsBuff1829, align 8, !tbaa !107
  %add1837 = add nsw i32 %1078, 8
  store i32 %add1837, i32* %bsLive1808, align 4, !tbaa !106
  %incdec.ptr1840 = getelementptr inbounds i8, i8* %1080, i64 1
  store i8* %incdec.ptr1840, i8** %next_in1832, align 8, !tbaa !102
  %dec1843 = add i32 %1077, -1
  store i32 %dec1843, i32* %avail_in1824.phi.trans.insert, align 8, !tbaa !98
  %1082 = load i32, i32* %total_in_lo321845, align 4, !tbaa !88
  %inc1846 = add i32 %1082, 1
  store i32 %inc1846, i32* %total_in_lo321845, align 4, !tbaa !88
  %cmp1849 = icmp eq i32 %inc1846, 0
  br i1 %cmp1849, label %if.then1851, label %if.end1855

if.then1851:                                      ; preds = %if.end1828
  %1083 = load i32, i32* %total_in_hi321853, align 8, !tbaa !89
  %inc1854 = add i32 %1083, 1
  store i32 %inc1854, i32* %total_in_hi321853, align 8, !tbaa !89
  br label %if.end1855

if.end1855:                                       ; preds = %if.then1851, %if.end1828
  %cmp1809 = icmp slt i32 %add1837, %zn.0
  br i1 %cmp1809, label %if.end1822, label %if.then1811

while.cond1857:                                   ; preds = %if.then1877, %if.then1811
  %1084 = phi i32 [ %1090, %if.then1877 ], [ %1069, %if.then1811 ]
  %1085 = phi i32 [ %1091, %if.then1877 ], [ %1070, %if.then1811 ]
  %1086 = phi i32 [ %1092, %if.then1877 ], [ %1071, %if.then1811 ]
  %1087 = phi i32 [ %1093, %if.then1877 ], [ %1072, %if.then1811 ]
  %save_j3.pre-phi6777 = phi i32* [ %save_j3.pre-phi6776, %if.then1877 ], [ %save_j3.pre-phi6778, %if.then1811 ]
  %save_t4.pre-phi6721 = phi i32* [ %save_t4.pre-phi6720, %if.then1877 ], [ %save_t4.pre-phi6722, %if.then1811 ]
  %save_alphaSize5.pre-phi6665 = phi i32* [ %save_alphaSize5.pre-phi6664, %if.then1877 ], [ %save_alphaSize5.pre-phi6666, %if.then1811 ]
  %save_nGroups6.pre-phi6609 = phi i32* [ %save_nGroups6.pre-phi6608, %if.then1877 ], [ %save_nGroups6.pre-phi6610, %if.then1811 ]
  %save_nSelectors7.pre-phi6553 = phi i32* [ %save_nSelectors7.pre-phi6552, %if.then1877 ], [ %save_nSelectors7.pre-phi6554, %if.then1811 ]
  %save_EOB8.pre-phi6497 = phi i32* [ %save_EOB8.pre-phi6496, %if.then1877 ], [ %save_EOB8.pre-phi6498, %if.then1811 ]
  %save_groupNo9.pre-phi6441 = phi i32* [ %save_groupNo9.pre-phi6440, %if.then1877 ], [ %save_groupNo9.pre-phi6442, %if.then1811 ]
  %save_groupPos10.pre-phi6385 = phi i32* [ %save_groupPos10.pre-phi6384, %if.then1877 ], [ %save_groupPos10.pre-phi6386, %if.then1811 ]
  %save_nextSym11.pre-phi6329 = phi i32* [ %save_nextSym11.pre-phi6328, %if.then1877 ], [ %save_nextSym11.pre-phi6330, %if.then1811 ]
  %save_nblockMAX12.pre-phi6273 = phi i32* [ %save_nblockMAX12.pre-phi6272, %if.then1877 ], [ %save_nblockMAX12.pre-phi6274, %if.then1811 ]
  %save_nblock13.pre-phi6217 = phi i32* [ %save_nblock13.pre-phi6216, %if.then1877 ], [ %save_nblock13.pre-phi6218, %if.then1811 ]
  %save_es14.pre-phi6161 = phi i32* [ %save_es14.pre-phi6160, %if.then1877 ], [ %save_es14.pre-phi6162, %if.then1811 ]
  %save_N15.pre-phi6105 = phi i32* [ %save_N15.pre-phi6104, %if.then1877 ], [ %save_N15.pre-phi6106, %if.then1811 ]
  %save_curr16.pre-phi6049 = phi i32* [ %save_curr16.pre-phi6048, %if.then1877 ], [ %save_curr16.pre-phi6050, %if.then1811 ]
  %save_zt17.pre-phi5993 = phi i32* [ %save_zt17.pre-phi5992, %if.then1877 ], [ %save_zt17.pre-phi5994, %if.then1811 ]
  %save_zn18.pre-phi5937 = phi i32* [ %save_zn18.pre-phi5936, %if.then1877 ], [ %save_zn18.pre-phi5938, %if.then1811 ]
  %save_zvec19.pre-phi5881 = phi i32* [ %save_zvec19.pre-phi5880, %if.then1877 ], [ %save_zvec19.pre-phi5882, %if.then1811 ]
  %save_zj20.pre-phi5825 = phi i32* [ %save_zj20.pre-phi5824, %if.then1877 ], [ %save_zj20.pre-phi5826, %if.then1811 ]
  %save_gSel21.pre-phi5769 = phi i32* [ %save_gSel21.pre-phi5768, %if.then1877 ], [ %save_gSel21.pre-phi5770, %if.then1811 ]
  %save_gMinlen22.pre-phi5713 = phi i32* [ %save_gMinlen22.pre-phi5712, %if.then1877 ], [ %save_gMinlen22.pre-phi5714, %if.then1811 ]
  %save_gLimit23.pre-phi5657 = phi i32** [ %save_gLimit23.pre-phi5656, %if.then1877 ], [ %save_gLimit23.pre-phi5658, %if.then1811 ]
  %save_gBase24.pre-phi5601 = phi i32** [ %save_gBase24.pre-phi5600, %if.then1877 ], [ %save_gBase24.pre-phi5602, %if.then1811 ]
  %save_gPerm25.pre-phi5545 = phi i32** [ %save_gPerm25.pre-phi5544, %if.then1877 ], [ %save_gPerm25.pre-phi5546, %if.then1811 ]
  %1088 = phi i32 [ %sub1881, %if.then1877 ], [ %sub1815, %if.then1811 ]
  %gPerm.2 = phi i32* [ %gPerm.3, %if.then1877 ], [ %gPerm.1, %if.then1811 ]
  %gBase.2 = phi i32* [ %gBase.3, %if.then1877 ], [ %gBase.1, %if.then1811 ]
  %gLimit.2 = phi i32* [ %gLimit.3, %if.then1877 ], [ %gLimit.1, %if.then1811 ]
  %gMinlen.2 = phi i32 [ %gMinlen.3, %if.then1877 ], [ %gMinlen.1, %if.then1811 ]
  %gSel.2 = phi i32 [ %gSel.3, %if.then1877 ], [ %gSel.1, %if.then1811 ]
  %zj.0 = phi i32 [ %and1883, %if.then1877 ], [ %1074, %if.then1811 ]
  %zvec.0 = phi i32 [ %or1922, %if.then1877 ], [ %and1819, %if.then1811 ]
  %zn.1 = phi i32 [ %zn.2, %if.then1877 ], [ %zn.0, %if.then1811 ]
  %curr.8 = phi i32 [ %curr.9, %if.then1877 ], [ %curr.7, %if.then1811 ]
  %nblock.1 = phi i32 [ %nblock.2, %if.then1877 ], [ %nblock.0, %if.then1811 ]
  %nblockMAX.1 = phi i32 [ %nblockMAX.2, %if.then1877 ], [ %nblockMAX.0, %if.then1811 ]
  %groupPos.2 = phi i32 [ %groupPos.3, %if.then1877 ], [ %groupPos.1, %if.then1811 ]
  %groupNo.2 = phi i32 [ %groupNo.3, %if.then1877 ], [ %groupNo.1, %if.then1811 ]
  %EOB.1 = phi i32 [ %EOB.2, %if.then1877 ], [ %EOB.0, %if.then1811 ]
  %nSelectors.10 = phi i32 [ %nSelectors.11, %if.then1877 ], [ %nSelectors.9, %if.then1811 ]
  %nGroups.11 = phi i32 [ %nGroups.12, %if.then1877 ], [ %nGroups.10, %if.then1811 ]
  %alphaSize.12 = phi i32 [ %alphaSize.13, %if.then1877 ], [ %alphaSize.11, %if.then1811 ]
  %t.8 = phi i32 [ %t.9, %if.then1877 ], [ %t.7, %if.then1811 ]
  %j.16 = phi i32 [ %j.17, %if.then1877 ], [ %j.15, %if.then1811 ]
  %i.22 = phi i32 [ %i.23, %if.then1877 ], [ %i.21, %if.then1811 ]
  %cmp1859 = icmp sgt i32 %zn.1, 20
  br i1 %cmp1859, label %save_state_and_return, label %if.end1862

if.end1862:                                       ; preds = %while.cond1857
  %idxprom1863 = sext i32 %zn.1 to i64
  %arrayidx1864 = getelementptr inbounds i32, i32* %gLimit.2, i64 %idxprom1863
  %1089 = load i32, i32* %arrayidx1864, align 4, !tbaa !6
  %cmp1865 = icmp sgt i32 %zvec.0, %1089
  br i1 %cmp1865, label %if.end1868, label %while.end1923

if.end1868:                                       ; preds = %if.end1862
  %inc1869 = add nsw i32 %zn.1, 1
  %.pre5527 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  br label %sw.bb1870

sw.bb1870:                                        ; preds = %if.end1868, %if.end.sw.bb1870_crit_edge
  %1090 = phi i32 [ %.pre5376, %if.end.sw.bb1870_crit_edge ], [ %1084, %if.end1868 ]
  %1091 = phi i32 [ %.pre5379, %if.end.sw.bb1870_crit_edge ], [ %1085, %if.end1868 ]
  %1092 = phi i32 [ %.pre5380, %if.end.sw.bb1870_crit_edge ], [ %1086, %if.end1868 ]
  %1093 = phi i32 [ %.pre5382, %if.end.sw.bb1870_crit_edge ], [ %1087, %if.end1868 ]
  %save_j3.pre-phi6776 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_j3.pre-phi6777, %if.end1868 ]
  %save_t4.pre-phi6720 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_t4.pre-phi6721, %if.end1868 ]
  %save_alphaSize5.pre-phi6664 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_alphaSize5.pre-phi6665, %if.end1868 ]
  %save_nGroups6.pre-phi6608 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_nGroups6.pre-phi6609, %if.end1868 ]
  %save_nSelectors7.pre-phi6552 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_nSelectors7.pre-phi6553, %if.end1868 ]
  %save_EOB8.pre-phi6496 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_EOB8.pre-phi6497, %if.end1868 ]
  %save_groupNo9.pre-phi6440 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_groupNo9.pre-phi6441, %if.end1868 ]
  %save_groupPos10.pre-phi6384 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_groupPos10.pre-phi6385, %if.end1868 ]
  %save_nextSym11.pre-phi6328 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_nextSym11.pre-phi6329, %if.end1868 ]
  %save_nblockMAX12.pre-phi6272 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_nblockMAX12.pre-phi6273, %if.end1868 ]
  %save_nblock13.pre-phi6216 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_nblock13.pre-phi6217, %if.end1868 ]
  %save_es14.pre-phi6160 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_es14.pre-phi6161, %if.end1868 ]
  %save_N15.pre-phi6104 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_N15.pre-phi6105, %if.end1868 ]
  %save_curr16.pre-phi6048 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_curr16.pre-phi6049, %if.end1868 ]
  %save_zt17.pre-phi5992 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_zt17.pre-phi5993, %if.end1868 ]
  %save_zn18.pre-phi5936 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_zn18.pre-phi5937, %if.end1868 ]
  %save_zvec19.pre-phi5880 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_zvec19.pre-phi5881, %if.end1868 ]
  %save_zj20.pre-phi5824 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_zj20.pre-phi5825, %if.end1868 ]
  %save_gSel21.pre-phi5768 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_gSel21.pre-phi5769, %if.end1868 ]
  %save_gMinlen22.pre-phi5712 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_gMinlen22.pre-phi5713, %if.end1868 ]
  %save_gLimit23.pre-phi5656 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_gLimit23.pre-phi5657, %if.end1868 ]
  %save_gBase24.pre-phi5600 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_gBase24.pre-phi5601, %if.end1868 ]
  %save_gPerm25.pre-phi5544 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %save_gPerm25.pre-phi5545, %if.end1868 ]
  %bsLive1874.pre-phi = phi i32* [ %bsLive1874.phi.trans.insert, %if.end.sw.bb1870_crit_edge ], [ %.pre5527, %if.end1868 ]
  %1094 = phi i32 [ %.pre5478, %if.end.sw.bb1870_crit_edge ], [ %1088, %if.end1868 ]
  %gPerm.3 = phi i32* [ %.pre5390, %if.end.sw.bb1870_crit_edge ], [ %gPerm.2, %if.end1868 ]
  %gBase.3 = phi i32* [ %.pre5389, %if.end.sw.bb1870_crit_edge ], [ %gBase.2, %if.end1868 ]
  %gLimit.3 = phi i32* [ %.pre5388, %if.end.sw.bb1870_crit_edge ], [ %gLimit.2, %if.end1868 ]
  %gMinlen.3 = phi i32 [ %.pre5387, %if.end.sw.bb1870_crit_edge ], [ %gMinlen.2, %if.end1868 ]
  %gSel.3 = phi i32 [ %.pre5386, %if.end.sw.bb1870_crit_edge ], [ %gSel.2, %if.end1868 ]
  %zj.1 = phi i32 [ %.pre5385, %if.end.sw.bb1870_crit_edge ], [ %zj.0, %if.end1868 ]
  %zvec.1 = phi i32 [ %.pre5384, %if.end.sw.bb1870_crit_edge ], [ %zvec.0, %if.end1868 ]
  %zn.2 = phi i32 [ %.pre5383, %if.end.sw.bb1870_crit_edge ], [ %inc1869, %if.end1868 ]
  %curr.9 = phi i32 [ %.pre5381, %if.end.sw.bb1870_crit_edge ], [ %curr.8, %if.end1868 ]
  %nblock.2 = phi i32 [ %.pre5378, %if.end.sw.bb1870_crit_edge ], [ %nblock.1, %if.end1868 ]
  %nblockMAX.2 = phi i32 [ %.pre5377, %if.end.sw.bb1870_crit_edge ], [ %nblockMAX.1, %if.end1868 ]
  %groupPos.3 = phi i32 [ %.pre5375, %if.end.sw.bb1870_crit_edge ], [ %groupPos.2, %if.end1868 ]
  %groupNo.3 = phi i32 [ %.pre5374, %if.end.sw.bb1870_crit_edge ], [ %groupNo.2, %if.end1868 ]
  %EOB.2 = phi i32 [ %.pre5373, %if.end.sw.bb1870_crit_edge ], [ %EOB.1, %if.end1868 ]
  %nSelectors.11 = phi i32 [ %.pre5372, %if.end.sw.bb1870_crit_edge ], [ %nSelectors.10, %if.end1868 ]
  %nGroups.12 = phi i32 [ %.pre5371, %if.end.sw.bb1870_crit_edge ], [ %nGroups.11, %if.end1868 ]
  %alphaSize.13 = phi i32 [ %.pre5370, %if.end.sw.bb1870_crit_edge ], [ %alphaSize.12, %if.end1868 ]
  %t.9 = phi i32 [ %.pre5369, %if.end.sw.bb1870_crit_edge ], [ %t.8, %if.end1868 ]
  %j.17 = phi i32 [ %.pre5368, %if.end.sw.bb1870_crit_edge ], [ %j.16, %if.end1868 ]
  %i.23 = phi i32 [ %.pre, %if.end.sw.bb1870_crit_edge ], [ %i.22, %if.end1868 ]
  store i32 37, i32* %state, align 8, !tbaa !105
  %cmp18755055 = icmp sgt i32 %1094, 0
  %bsBuff1879.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp18755055, label %sw.bb1870.if.then1877_crit_edge, label %if.end1886.preheader

if.end1886.preheader:                             ; preds = %sw.bb1870
  br label %if.end1886

sw.bb1870.if.then1877_crit_edge:                  ; preds = %sw.bb1870
  %.pre5479 = load i32, i32* %bsBuff1879.phi.trans.insert, align 8, !tbaa !107
  br label %if.then1877

if.then1877:                                      ; preds = %if.end1919, %sw.bb1870.if.then1877_crit_edge
  %1095 = phi i32 [ %.pre5479, %sw.bb1870.if.then1877_crit_edge ], [ %or1898, %if.end1919 ]
  %.lcssa4924 = phi i32 [ %1094, %sw.bb1870.if.then1877_crit_edge ], [ %add1901, %if.end1919 ]
  %sub1881 = add nsw i32 %.lcssa4924, -1
  %shr1882 = lshr i32 %1095, %sub1881
  %and1883 = and i32 %shr1882, 1
  store i32 %sub1881, i32* %bsLive1874.pre-phi, align 4, !tbaa !106
  %shl1921 = shl i32 %zvec.1, 1
  %or1922 = or i32 %and1883, %shl1921
  br label %while.cond1857

if.end1886:                                       ; preds = %if.end1919, %if.end1886.preheader
  %1096 = phi i32 [ %add1901, %if.end1919 ], [ %1094, %if.end1886.preheader ]
  %1097 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in1888 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1097, i64 0, i32 1
  %1098 = load i32, i32* %avail_in1888, align 8, !tbaa !98
  %cmp1889 = icmp eq i32 %1098, 0
  br i1 %cmp1889, label %save_state_and_return, label %if.end1892

if.end1892:                                       ; preds = %if.end1886
  %1099 = load i32, i32* %bsBuff1879.phi.trans.insert, align 8, !tbaa !107
  %shl1894 = shl i32 %1099, 8
  %next_in1896 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1097, i64 0, i32 0
  %1100 = load i8*, i8** %next_in1896, align 8, !tbaa !102
  %1101 = load i8, i8* %1100, align 1, !tbaa !12
  %conv1897 = zext i8 %1101 to i32
  %or1898 = or i32 %shl1894, %conv1897
  store i32 %or1898, i32* %bsBuff1879.phi.trans.insert, align 8, !tbaa !107
  %add1901 = add nsw i32 %1096, 8
  store i32 %add1901, i32* %bsLive1874.pre-phi, align 4, !tbaa !106
  %incdec.ptr1904 = getelementptr inbounds i8, i8* %1100, i64 1
  store i8* %incdec.ptr1904, i8** %next_in1896, align 8, !tbaa !102
  %dec1907 = add i32 %1098, -1
  store i32 %dec1907, i32* %avail_in1888, align 8, !tbaa !98
  %total_in_lo321909 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1097, i64 0, i32 2
  %1102 = load i32, i32* %total_in_lo321909, align 4, !tbaa !88
  %inc1910 = add i32 %1102, 1
  store i32 %inc1910, i32* %total_in_lo321909, align 4, !tbaa !88
  %cmp1913 = icmp eq i32 %inc1910, 0
  br i1 %cmp1913, label %if.then1915, label %if.end1919

if.then1915:                                      ; preds = %if.end1892
  %total_in_hi321917 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1097, i64 0, i32 3
  %1103 = load i32, i32* %total_in_hi321917, align 8, !tbaa !89
  %inc1918 = add i32 %1103, 1
  store i32 %inc1918, i32* %total_in_hi321917, align 8, !tbaa !89
  br label %if.end1919

if.end1919:                                       ; preds = %if.then1915, %if.end1892
  %cmp1875 = icmp sgt i32 %1096, -8
  br i1 %cmp1875, label %if.then1877, label %if.end1886

while.end1923:                                    ; preds = %if.end1862
  %arrayidx1925 = getelementptr inbounds i32, i32* %gBase.2, i64 %idxprom1863
  %1104 = load i32, i32* %arrayidx1925, align 4, !tbaa !6
  %sub1926 = sub nsw i32 %zvec.0, %1104
  %1105 = icmp ugt i32 %sub1926, 257
  br i1 %1105, label %save_state_and_return, label %if.end1936

if.end1936:                                       ; preds = %while.end1923
  %idxprom1940 = sext i32 %sub1926 to i64
  %arrayidx1941 = getelementptr inbounds i32, i32* %gPerm.2, i64 %idxprom1940
  %1106 = load i32, i32* %arrayidx1941, align 4, !tbaa !6
  br label %while.cond1942

while.cond1942:                                   ; preds = %if.end2545, %if.end2185.loopexit5209, %if.end2185.loopexit, %if.else2169, %if.then2153, %if.end1936
  %1107 = phi i32 [ %1294, %if.end2545 ], [ %1087, %if.end1936 ], [ %1123, %if.end2185.loopexit5209 ], [ %1123, %if.end2185.loopexit ], [ %1123, %if.then2153 ], [ %1123, %if.else2169 ]
  %save_j3.pre-phi6775 = phi i32* [ %save_j3.pre-phi6769, %if.end2545 ], [ %save_j3.pre-phi6777, %if.end1936 ], [ %save_j3.pre-phi6772, %if.end2185.loopexit5209 ], [ %save_j3.pre-phi6772, %if.end2185.loopexit ], [ %save_j3.pre-phi6772, %if.then2153 ], [ %save_j3.pre-phi6772, %if.else2169 ]
  %save_t4.pre-phi6719 = phi i32* [ %save_t4.pre-phi6713, %if.end2545 ], [ %save_t4.pre-phi6721, %if.end1936 ], [ %save_t4.pre-phi6716, %if.end2185.loopexit5209 ], [ %save_t4.pre-phi6716, %if.end2185.loopexit ], [ %save_t4.pre-phi6716, %if.then2153 ], [ %save_t4.pre-phi6716, %if.else2169 ]
  %save_alphaSize5.pre-phi6663 = phi i32* [ %save_alphaSize5.pre-phi6657, %if.end2545 ], [ %save_alphaSize5.pre-phi6665, %if.end1936 ], [ %save_alphaSize5.pre-phi6660, %if.end2185.loopexit5209 ], [ %save_alphaSize5.pre-phi6660, %if.end2185.loopexit ], [ %save_alphaSize5.pre-phi6660, %if.then2153 ], [ %save_alphaSize5.pre-phi6660, %if.else2169 ]
  %save_nGroups6.pre-phi6607 = phi i32* [ %save_nGroups6.pre-phi6601, %if.end2545 ], [ %save_nGroups6.pre-phi6609, %if.end1936 ], [ %save_nGroups6.pre-phi6604, %if.end2185.loopexit5209 ], [ %save_nGroups6.pre-phi6604, %if.end2185.loopexit ], [ %save_nGroups6.pre-phi6604, %if.then2153 ], [ %save_nGroups6.pre-phi6604, %if.else2169 ]
  %save_nSelectors7.pre-phi6551 = phi i32* [ %save_nSelectors7.pre-phi6545, %if.end2545 ], [ %save_nSelectors7.pre-phi6553, %if.end1936 ], [ %save_nSelectors7.pre-phi6548, %if.end2185.loopexit5209 ], [ %save_nSelectors7.pre-phi6548, %if.end2185.loopexit ], [ %save_nSelectors7.pre-phi6548, %if.then2153 ], [ %save_nSelectors7.pre-phi6548, %if.else2169 ]
  %save_EOB8.pre-phi6495 = phi i32* [ %save_EOB8.pre-phi6489, %if.end2545 ], [ %save_EOB8.pre-phi6497, %if.end1936 ], [ %save_EOB8.pre-phi6492, %if.end2185.loopexit5209 ], [ %save_EOB8.pre-phi6492, %if.end2185.loopexit ], [ %save_EOB8.pre-phi6492, %if.then2153 ], [ %save_EOB8.pre-phi6492, %if.else2169 ]
  %save_groupNo9.pre-phi6439 = phi i32* [ %save_groupNo9.pre-phi6433, %if.end2545 ], [ %save_groupNo9.pre-phi6441, %if.end1936 ], [ %save_groupNo9.pre-phi6436, %if.end2185.loopexit5209 ], [ %save_groupNo9.pre-phi6436, %if.end2185.loopexit ], [ %save_groupNo9.pre-phi6436, %if.then2153 ], [ %save_groupNo9.pre-phi6436, %if.else2169 ]
  %save_groupPos10.pre-phi6383 = phi i32* [ %save_groupPos10.pre-phi6377, %if.end2545 ], [ %save_groupPos10.pre-phi6385, %if.end1936 ], [ %save_groupPos10.pre-phi6380, %if.end2185.loopexit5209 ], [ %save_groupPos10.pre-phi6380, %if.end2185.loopexit ], [ %save_groupPos10.pre-phi6380, %if.then2153 ], [ %save_groupPos10.pre-phi6380, %if.else2169 ]
  %save_nextSym11.pre-phi6327 = phi i32* [ %save_nextSym11.pre-phi6321, %if.end2545 ], [ %save_nextSym11.pre-phi6329, %if.end1936 ], [ %save_nextSym11.pre-phi6324, %if.end2185.loopexit5209 ], [ %save_nextSym11.pre-phi6324, %if.end2185.loopexit ], [ %save_nextSym11.pre-phi6324, %if.then2153 ], [ %save_nextSym11.pre-phi6324, %if.else2169 ]
  %save_nblockMAX12.pre-phi6271 = phi i32* [ %save_nblockMAX12.pre-phi6265, %if.end2545 ], [ %save_nblockMAX12.pre-phi6273, %if.end1936 ], [ %save_nblockMAX12.pre-phi6268, %if.end2185.loopexit5209 ], [ %save_nblockMAX12.pre-phi6268, %if.end2185.loopexit ], [ %save_nblockMAX12.pre-phi6268, %if.then2153 ], [ %save_nblockMAX12.pre-phi6268, %if.else2169 ]
  %save_nblock13.pre-phi6215 = phi i32* [ %save_nblock13.pre-phi6209, %if.end2545 ], [ %save_nblock13.pre-phi6217, %if.end1936 ], [ %save_nblock13.pre-phi6212, %if.end2185.loopexit5209 ], [ %save_nblock13.pre-phi6212, %if.end2185.loopexit ], [ %save_nblock13.pre-phi6212, %if.then2153 ], [ %save_nblock13.pre-phi6212, %if.else2169 ]
  %save_es14.pre-phi6159 = phi i32* [ %save_es14.pre-phi6153, %if.end2545 ], [ %save_es14.pre-phi6161, %if.end1936 ], [ %save_es14.pre-phi6156, %if.end2185.loopexit5209 ], [ %save_es14.pre-phi6156, %if.end2185.loopexit ], [ %save_es14.pre-phi6156, %if.then2153 ], [ %save_es14.pre-phi6156, %if.else2169 ]
  %save_N15.pre-phi6103 = phi i32* [ %save_N15.pre-phi6097, %if.end2545 ], [ %save_N15.pre-phi6105, %if.end1936 ], [ %save_N15.pre-phi6100, %if.end2185.loopexit5209 ], [ %save_N15.pre-phi6100, %if.end2185.loopexit ], [ %save_N15.pre-phi6100, %if.then2153 ], [ %save_N15.pre-phi6100, %if.else2169 ]
  %save_curr16.pre-phi6047 = phi i32* [ %save_curr16.pre-phi6041, %if.end2545 ], [ %save_curr16.pre-phi6049, %if.end1936 ], [ %save_curr16.pre-phi6044, %if.end2185.loopexit5209 ], [ %save_curr16.pre-phi6044, %if.end2185.loopexit ], [ %save_curr16.pre-phi6044, %if.then2153 ], [ %save_curr16.pre-phi6044, %if.else2169 ]
  %save_zt17.pre-phi5991 = phi i32* [ %save_zt17.pre-phi5985, %if.end2545 ], [ %save_zt17.pre-phi5993, %if.end1936 ], [ %save_zt17.pre-phi5988, %if.end2185.loopexit5209 ], [ %save_zt17.pre-phi5988, %if.end2185.loopexit ], [ %save_zt17.pre-phi5988, %if.then2153 ], [ %save_zt17.pre-phi5988, %if.else2169 ]
  %save_zn18.pre-phi5935 = phi i32* [ %save_zn18.pre-phi5929, %if.end2545 ], [ %save_zn18.pre-phi5937, %if.end1936 ], [ %save_zn18.pre-phi5932, %if.end2185.loopexit5209 ], [ %save_zn18.pre-phi5932, %if.end2185.loopexit ], [ %save_zn18.pre-phi5932, %if.then2153 ], [ %save_zn18.pre-phi5932, %if.else2169 ]
  %save_zvec19.pre-phi5879 = phi i32* [ %save_zvec19.pre-phi5873, %if.end2545 ], [ %save_zvec19.pre-phi5881, %if.end1936 ], [ %save_zvec19.pre-phi5876, %if.end2185.loopexit5209 ], [ %save_zvec19.pre-phi5876, %if.end2185.loopexit ], [ %save_zvec19.pre-phi5876, %if.then2153 ], [ %save_zvec19.pre-phi5876, %if.else2169 ]
  %save_zj20.pre-phi5823 = phi i32* [ %save_zj20.pre-phi5817, %if.end2545 ], [ %save_zj20.pre-phi5825, %if.end1936 ], [ %save_zj20.pre-phi5820, %if.end2185.loopexit5209 ], [ %save_zj20.pre-phi5820, %if.end2185.loopexit ], [ %save_zj20.pre-phi5820, %if.then2153 ], [ %save_zj20.pre-phi5820, %if.else2169 ]
  %save_gSel21.pre-phi5767 = phi i32* [ %save_gSel21.pre-phi5761, %if.end2545 ], [ %save_gSel21.pre-phi5769, %if.end1936 ], [ %save_gSel21.pre-phi5764, %if.end2185.loopexit5209 ], [ %save_gSel21.pre-phi5764, %if.end2185.loopexit ], [ %save_gSel21.pre-phi5764, %if.then2153 ], [ %save_gSel21.pre-phi5764, %if.else2169 ]
  %save_gMinlen22.pre-phi5711 = phi i32* [ %save_gMinlen22.pre-phi5705, %if.end2545 ], [ %save_gMinlen22.pre-phi5713, %if.end1936 ], [ %save_gMinlen22.pre-phi5708, %if.end2185.loopexit5209 ], [ %save_gMinlen22.pre-phi5708, %if.end2185.loopexit ], [ %save_gMinlen22.pre-phi5708, %if.then2153 ], [ %save_gMinlen22.pre-phi5708, %if.else2169 ]
  %save_gLimit23.pre-phi5655 = phi i32** [ %save_gLimit23.pre-phi5649, %if.end2545 ], [ %save_gLimit23.pre-phi5657, %if.end1936 ], [ %save_gLimit23.pre-phi5652, %if.end2185.loopexit5209 ], [ %save_gLimit23.pre-phi5652, %if.end2185.loopexit ], [ %save_gLimit23.pre-phi5652, %if.then2153 ], [ %save_gLimit23.pre-phi5652, %if.else2169 ]
  %save_gBase24.pre-phi5599 = phi i32** [ %save_gBase24.pre-phi5593, %if.end2545 ], [ %save_gBase24.pre-phi5601, %if.end1936 ], [ %save_gBase24.pre-phi5596, %if.end2185.loopexit5209 ], [ %save_gBase24.pre-phi5596, %if.end2185.loopexit ], [ %save_gBase24.pre-phi5596, %if.then2153 ], [ %save_gBase24.pre-phi5596, %if.else2169 ]
  %save_gPerm25.pre-phi5543 = phi i32** [ %save_gPerm25.pre-phi5537, %if.end2545 ], [ %save_gPerm25.pre-phi5545, %if.end1936 ], [ %save_gPerm25.pre-phi5540, %if.end2185.loopexit5209 ], [ %save_gPerm25.pre-phi5540, %if.end2185.loopexit ], [ %save_gPerm25.pre-phi5540, %if.then2153 ], [ %save_gPerm25.pre-phi5540, %if.else2169 ]
  %gPerm.4 = phi i32* [ %gPerm.12, %if.end2545 ], [ %gPerm.2, %if.end1936 ], [ %gPerm.8, %if.end2185.loopexit5209 ], [ %gPerm.8, %if.end2185.loopexit ], [ %gPerm.8, %if.then2153 ], [ %gPerm.8, %if.else2169 ]
  %gBase.4 = phi i32* [ %gBase.12, %if.end2545 ], [ %gBase.2, %if.end1936 ], [ %gBase.8, %if.end2185.loopexit5209 ], [ %gBase.8, %if.end2185.loopexit ], [ %gBase.8, %if.then2153 ], [ %gBase.8, %if.else2169 ]
  %gLimit.4 = phi i32* [ %gLimit.12, %if.end2545 ], [ %gLimit.2, %if.end1936 ], [ %gLimit.8, %if.end2185.loopexit5209 ], [ %gLimit.8, %if.end2185.loopexit ], [ %gLimit.8, %if.then2153 ], [ %gLimit.8, %if.else2169 ]
  %gMinlen.4 = phi i32 [ %gMinlen.12, %if.end2545 ], [ %gMinlen.2, %if.end1936 ], [ %gMinlen.8, %if.end2185.loopexit5209 ], [ %gMinlen.8, %if.end2185.loopexit ], [ %gMinlen.8, %if.then2153 ], [ %gMinlen.8, %if.else2169 ]
  %gSel.4 = phi i32 [ %gSel.12, %if.end2545 ], [ %gSel.2, %if.end1936 ], [ %gSel.8, %if.end2185.loopexit5209 ], [ %gSel.8, %if.end2185.loopexit ], [ %gSel.8, %if.then2153 ], [ %gSel.8, %if.else2169 ]
  %zj.2 = phi i32 [ %zj.8, %if.end2545 ], [ %zj.0, %if.end1936 ], [ %zj.5, %if.end2185.loopexit5209 ], [ %zj.5, %if.end2185.loopexit ], [ %zj.5, %if.then2153 ], [ %zj.5, %if.else2169 ]
  %zvec.2 = phi i32 [ %zvec.8, %if.end2545 ], [ %zvec.0, %if.end1936 ], [ %zvec.5, %if.end2185.loopexit5209 ], [ %zvec.5, %if.end2185.loopexit ], [ %zvec.5, %if.then2153 ], [ %zvec.5, %if.else2169 ]
  %zn.3 = phi i32 [ %zn.9, %if.end2545 ], [ %zn.1, %if.end1936 ], [ %zn.6, %if.end2185.loopexit5209 ], [ %zn.6, %if.end2185.loopexit ], [ %zn.6, %if.then2153 ], [ %zn.6, %if.else2169 ]
  %curr.10 = phi i32 [ %curr.16, %if.end2545 ], [ %curr.8, %if.end1936 ], [ %curr.13, %if.end2185.loopexit5209 ], [ %curr.13, %if.end2185.loopexit ], [ %curr.13, %if.then2153 ], [ %curr.13, %if.else2169 ]
  %N.0 = phi i32 [ %N.6, %if.end2545 ], [ %1086, %if.end1936 ], [ %N.3, %if.end2185.loopexit5209 ], [ %N.3, %if.end2185.loopexit ], [ %N.3, %if.then2153 ], [ %N.3, %if.else2169 ]
  %es.0 = phi i32 [ %es.10, %if.end2545 ], [ %1085, %if.end1936 ], [ %dec2167, %if.end2185.loopexit5209 ], [ %dec2183, %if.end2185.loopexit ], [ %inc2139, %if.then2153 ], [ %inc2139, %if.else2169 ]
  %nblock.3 = phi i32 [ %nblock.12, %if.end2545 ], [ %nblock.1, %if.end1936 ], [ %1153, %if.end2185.loopexit5209 ], [ %1152, %if.end2185.loopexit ], [ %nblock.6, %if.then2153 ], [ %nblock.6, %if.else2169 ]
  %nblockMAX.3 = phi i32 [ %nblockMAX.9, %if.end2545 ], [ %nblockMAX.1, %if.end1936 ], [ %nblockMAX.6, %if.end2185.loopexit5209 ], [ %nblockMAX.6, %if.end2185.loopexit ], [ %nblockMAX.6, %if.then2153 ], [ %nblockMAX.6, %if.else2169 ]
  %nextSym.0 = phi i32 [ %1310, %if.end2545 ], [ %1106, %if.end1936 ], [ %1139, %if.end2185.loopexit5209 ], [ %1139, %if.end2185.loopexit ], [ %1139, %if.then2153 ], [ %1139, %if.else2169 ]
  %groupPos.4 = phi i32 [ %groupPos.12, %if.end2545 ], [ %groupPos.2, %if.end1936 ], [ %groupPos.8, %if.end2185.loopexit5209 ], [ %groupPos.8, %if.end2185.loopexit ], [ %groupPos.8, %if.then2153 ], [ %groupPos.8, %if.else2169 ]
  %groupNo.4 = phi i32 [ %groupNo.12, %if.end2545 ], [ %groupNo.2, %if.end1936 ], [ %groupNo.8, %if.end2185.loopexit5209 ], [ %groupNo.8, %if.end2185.loopexit ], [ %groupNo.8, %if.then2153 ], [ %groupNo.8, %if.else2169 ]
  %EOB.3 = phi i32 [ %EOB.9, %if.end2545 ], [ %EOB.1, %if.end1936 ], [ %EOB.6, %if.end2185.loopexit5209 ], [ %EOB.6, %if.end2185.loopexit ], [ %EOB.6, %if.then2153 ], [ %EOB.6, %if.else2169 ]
  %nSelectors.12 = phi i32 [ %nSelectors.18, %if.end2545 ], [ %nSelectors.10, %if.end1936 ], [ %nSelectors.15, %if.end2185.loopexit5209 ], [ %nSelectors.15, %if.end2185.loopexit ], [ %nSelectors.15, %if.then2153 ], [ %nSelectors.15, %if.else2169 ]
  %nGroups.13 = phi i32 [ %nGroups.19, %if.end2545 ], [ %nGroups.11, %if.end1936 ], [ %nGroups.16, %if.end2185.loopexit5209 ], [ %nGroups.16, %if.end2185.loopexit ], [ %nGroups.16, %if.then2153 ], [ %nGroups.16, %if.else2169 ]
  %alphaSize.14 = phi i32 [ %alphaSize.20, %if.end2545 ], [ %alphaSize.12, %if.end1936 ], [ %alphaSize.17, %if.end2185.loopexit5209 ], [ %alphaSize.17, %if.end2185.loopexit ], [ %alphaSize.17, %if.then2153 ], [ %alphaSize.17, %if.else2169 ]
  %t.10 = phi i32 [ %t.16, %if.end2545 ], [ %t.8, %if.end1936 ], [ %t.13, %if.end2185.loopexit5209 ], [ %t.13, %if.end2185.loopexit ], [ %t.13, %if.then2153 ], [ %t.13, %if.else2169 ]
  %j.18 = phi i32 [ %j.24, %if.end2545 ], [ %j.16, %if.end1936 ], [ %j.21, %if.end2185.loopexit5209 ], [ %j.21, %if.end2185.loopexit ], [ %j.21, %if.then2153 ], [ %j.21, %if.else2169 ]
  %i.24 = phi i32 [ %i.30, %if.end2545 ], [ %i.22, %if.end1936 ], [ %i.27, %if.end2185.loopexit5209 ], [ %i.27, %if.end2185.loopexit ], [ %i.27, %if.then2153 ], [ %i.27, %if.else2169 ]
  %cmp1944 = icmp eq i32 %nextSym.0, %EOB.3
  br i1 %cmp1944, label %while.end2551, label %if.end1947

if.end1947:                                       ; preds = %while.cond1942
  %1108 = icmp ult i32 %nextSym.0, 2
  br i1 %1108, label %do.body, label %if.else2186

do.body:                                          ; preds = %if.end2129, %if.end1947
  %1109 = phi i32 [ %1123, %if.end2129 ], [ %1107, %if.end1947 ]
  %save_j3.pre-phi6774 = phi i32* [ %save_j3.pre-phi6772, %if.end2129 ], [ %save_j3.pre-phi6775, %if.end1947 ]
  %save_t4.pre-phi6718 = phi i32* [ %save_t4.pre-phi6716, %if.end2129 ], [ %save_t4.pre-phi6719, %if.end1947 ]
  %save_alphaSize5.pre-phi6662 = phi i32* [ %save_alphaSize5.pre-phi6660, %if.end2129 ], [ %save_alphaSize5.pre-phi6663, %if.end1947 ]
  %save_nGroups6.pre-phi6606 = phi i32* [ %save_nGroups6.pre-phi6604, %if.end2129 ], [ %save_nGroups6.pre-phi6607, %if.end1947 ]
  %save_nSelectors7.pre-phi6550 = phi i32* [ %save_nSelectors7.pre-phi6548, %if.end2129 ], [ %save_nSelectors7.pre-phi6551, %if.end1947 ]
  %save_EOB8.pre-phi6494 = phi i32* [ %save_EOB8.pre-phi6492, %if.end2129 ], [ %save_EOB8.pre-phi6495, %if.end1947 ]
  %save_groupNo9.pre-phi6438 = phi i32* [ %save_groupNo9.pre-phi6436, %if.end2129 ], [ %save_groupNo9.pre-phi6439, %if.end1947 ]
  %save_groupPos10.pre-phi6382 = phi i32* [ %save_groupPos10.pre-phi6380, %if.end2129 ], [ %save_groupPos10.pre-phi6383, %if.end1947 ]
  %save_nextSym11.pre-phi6326 = phi i32* [ %save_nextSym11.pre-phi6324, %if.end2129 ], [ %save_nextSym11.pre-phi6327, %if.end1947 ]
  %save_nblockMAX12.pre-phi6270 = phi i32* [ %save_nblockMAX12.pre-phi6268, %if.end2129 ], [ %save_nblockMAX12.pre-phi6271, %if.end1947 ]
  %save_nblock13.pre-phi6214 = phi i32* [ %save_nblock13.pre-phi6212, %if.end2129 ], [ %save_nblock13.pre-phi6215, %if.end1947 ]
  %save_es14.pre-phi6158 = phi i32* [ %save_es14.pre-phi6156, %if.end2129 ], [ %save_es14.pre-phi6159, %if.end1947 ]
  %save_N15.pre-phi6102 = phi i32* [ %save_N15.pre-phi6100, %if.end2129 ], [ %save_N15.pre-phi6103, %if.end1947 ]
  %save_curr16.pre-phi6046 = phi i32* [ %save_curr16.pre-phi6044, %if.end2129 ], [ %save_curr16.pre-phi6047, %if.end1947 ]
  %save_zt17.pre-phi5990 = phi i32* [ %save_zt17.pre-phi5988, %if.end2129 ], [ %save_zt17.pre-phi5991, %if.end1947 ]
  %save_zn18.pre-phi5934 = phi i32* [ %save_zn18.pre-phi5932, %if.end2129 ], [ %save_zn18.pre-phi5935, %if.end1947 ]
  %save_zvec19.pre-phi5878 = phi i32* [ %save_zvec19.pre-phi5876, %if.end2129 ], [ %save_zvec19.pre-phi5879, %if.end1947 ]
  %save_zj20.pre-phi5822 = phi i32* [ %save_zj20.pre-phi5820, %if.end2129 ], [ %save_zj20.pre-phi5823, %if.end1947 ]
  %save_gSel21.pre-phi5766 = phi i32* [ %save_gSel21.pre-phi5764, %if.end2129 ], [ %save_gSel21.pre-phi5767, %if.end1947 ]
  %save_gMinlen22.pre-phi5710 = phi i32* [ %save_gMinlen22.pre-phi5708, %if.end2129 ], [ %save_gMinlen22.pre-phi5711, %if.end1947 ]
  %save_gLimit23.pre-phi5654 = phi i32** [ %save_gLimit23.pre-phi5652, %if.end2129 ], [ %save_gLimit23.pre-phi5655, %if.end1947 ]
  %save_gBase24.pre-phi5598 = phi i32** [ %save_gBase24.pre-phi5596, %if.end2129 ], [ %save_gBase24.pre-phi5599, %if.end1947 ]
  %save_gPerm25.pre-phi5542 = phi i32** [ %save_gPerm25.pre-phi5540, %if.end2129 ], [ %save_gPerm25.pre-phi5543, %if.end1947 ]
  %gPerm.5 = phi i32* [ %gPerm.8, %if.end2129 ], [ %gPerm.4, %if.end1947 ]
  %gBase.5 = phi i32* [ %gBase.8, %if.end2129 ], [ %gBase.4, %if.end1947 ]
  %gLimit.5 = phi i32* [ %gLimit.8, %if.end2129 ], [ %gLimit.4, %if.end1947 ]
  %gMinlen.5 = phi i32 [ %gMinlen.8, %if.end2129 ], [ %gMinlen.4, %if.end1947 ]
  %gSel.5 = phi i32 [ %gSel.8, %if.end2129 ], [ %gSel.4, %if.end1947 ]
  %zj.3 = phi i32 [ %zj.5, %if.end2129 ], [ %zj.2, %if.end1947 ]
  %zvec.3 = phi i32 [ %zvec.5, %if.end2129 ], [ %zvec.2, %if.end1947 ]
  %zn.4 = phi i32 [ %zn.6, %if.end2129 ], [ %zn.3, %if.end1947 ]
  %curr.11 = phi i32 [ %curr.13, %if.end2129 ], [ %curr.10, %if.end1947 ]
  %N.1 = phi i32 [ %N.3, %if.end2129 ], [ 1, %if.end1947 ]
  %es.1 = phi i32 [ %es.4, %if.end2129 ], [ -1, %if.end1947 ]
  %nblock.4 = phi i32 [ %nblock.6, %if.end2129 ], [ %nblock.3, %if.end1947 ]
  %nblockMAX.4 = phi i32 [ %nblockMAX.6, %if.end2129 ], [ %nblockMAX.3, %if.end1947 ]
  %nextSym.1 = phi i32 [ %1139, %if.end2129 ], [ %nextSym.0, %if.end1947 ]
  %groupPos.5 = phi i32 [ %groupPos.8, %if.end2129 ], [ %groupPos.4, %if.end1947 ]
  %groupNo.5 = phi i32 [ %groupNo.8, %if.end2129 ], [ %groupNo.4, %if.end1947 ]
  %EOB.4 = phi i32 [ %EOB.6, %if.end2129 ], [ %EOB.3, %if.end1947 ]
  %nSelectors.13 = phi i32 [ %nSelectors.15, %if.end2129 ], [ %nSelectors.12, %if.end1947 ]
  %nGroups.14 = phi i32 [ %nGroups.16, %if.end2129 ], [ %nGroups.13, %if.end1947 ]
  %alphaSize.15 = phi i32 [ %alphaSize.17, %if.end2129 ], [ %alphaSize.14, %if.end1947 ]
  %t.11 = phi i32 [ %t.13, %if.end2129 ], [ %t.10, %if.end1947 ]
  %j.19 = phi i32 [ %j.21, %if.end2129 ], [ %j.18, %if.end1947 ]
  %i.25 = phi i32 [ %i.27, %if.end2129 ], [ %i.24, %if.end1947 ]
  switch i32 %nextSym.1, label %if.end1966 [
    i32 0, label %if.then1956
    i32 1, label %if.then1962
  ]

if.then1956:                                      ; preds = %do.body
  %add1958 = add nsw i32 %es.1, %N.1
  br label %if.end1966

if.then1962:                                      ; preds = %do.body
  %mul1963 = shl i32 %N.1, 1
  %add1964 = add nsw i32 %es.1, %mul1963
  br label %if.end1966

if.end1966:                                       ; preds = %if.then1962, %if.then1956, %do.body
  %es.2 = phi i32 [ %add1958, %if.then1956 ], [ %add1964, %if.then1962 ], [ %es.1, %do.body ]
  %mul1967 = shl nsw i32 %N.1, 1
  %cmp1968 = icmp eq i32 %groupPos.5, 0
  br i1 %cmp1968, label %if.then1970, label %if.end1995

if.then1970:                                      ; preds = %if.end1966
  %inc1971 = add nsw i32 %groupNo.5, 1
  %cmp1972 = icmp slt i32 %inc1971, %nSelectors.13
  br i1 %cmp1972, label %if.end1975, label %save_state_and_return

if.end1975:                                       ; preds = %if.then1970
  %idxprom1977 = sext i32 %inc1971 to i64
  %arrayidx1978 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 33, i64 %idxprom1977
  %1110 = load i8, i8* %arrayidx1978, align 1, !tbaa !12
  %conv1979 = zext i8 %1110 to i32
  %idxprom1981 = zext i8 %1110 to i64
  %arrayidx1982 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 39, i64 %idxprom1981
  %1111 = load i32, i32* %arrayidx1982, align 4, !tbaa !6
  %arrayidx1986 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 36, i64 %idxprom1981, i64 0
  %arrayidx1990 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 38, i64 %idxprom1981, i64 0
  %arrayidx1994 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 37, i64 %idxprom1981, i64 0
  br label %if.end1995

if.end1995:                                       ; preds = %if.end1975, %if.end1966
  %gPerm.6 = phi i32* [ %arrayidx1990, %if.end1975 ], [ %gPerm.5, %if.end1966 ]
  %gBase.6 = phi i32* [ %arrayidx1994, %if.end1975 ], [ %gBase.5, %if.end1966 ]
  %gLimit.6 = phi i32* [ %arrayidx1986, %if.end1975 ], [ %gLimit.5, %if.end1966 ]
  %gMinlen.6 = phi i32 [ %1111, %if.end1975 ], [ %gMinlen.5, %if.end1966 ]
  %gSel.6 = phi i32 [ %conv1979, %if.end1975 ], [ %gSel.5, %if.end1966 ]
  %groupPos.6 = phi i32 [ 50, %if.end1975 ], [ %groupPos.5, %if.end1966 ]
  %groupNo.6 = phi i32 [ %inc1971, %if.end1975 ], [ %groupNo.5, %if.end1966 ]
  %dec1996 = add nsw i32 %groupPos.6, -1
  br label %sw.bb1997

sw.bb1997:                                        ; preds = %if.end1995, %if.end
  %1112 = phi i32 [ %1109, %if.end1995 ], [ %.pre5382, %if.end ]
  %save_j3.pre-phi6773 = phi i32* [ %save_j3.pre-phi6774, %if.end1995 ], [ %save_j3.phi.trans.insert, %if.end ]
  %save_t4.pre-phi6717 = phi i32* [ %save_t4.pre-phi6718, %if.end1995 ], [ %save_t4.phi.trans.insert, %if.end ]
  %save_alphaSize5.pre-phi6661 = phi i32* [ %save_alphaSize5.pre-phi6662, %if.end1995 ], [ %save_alphaSize5.phi.trans.insert, %if.end ]
  %save_nGroups6.pre-phi6605 = phi i32* [ %save_nGroups6.pre-phi6606, %if.end1995 ], [ %save_nGroups6.phi.trans.insert, %if.end ]
  %save_nSelectors7.pre-phi6549 = phi i32* [ %save_nSelectors7.pre-phi6550, %if.end1995 ], [ %save_nSelectors7.phi.trans.insert, %if.end ]
  %save_EOB8.pre-phi6493 = phi i32* [ %save_EOB8.pre-phi6494, %if.end1995 ], [ %save_EOB8.phi.trans.insert, %if.end ]
  %save_groupNo9.pre-phi6437 = phi i32* [ %save_groupNo9.pre-phi6438, %if.end1995 ], [ %save_groupNo9.phi.trans.insert, %if.end ]
  %save_groupPos10.pre-phi6381 = phi i32* [ %save_groupPos10.pre-phi6382, %if.end1995 ], [ %save_groupPos10.phi.trans.insert, %if.end ]
  %save_nextSym11.pre-phi6325 = phi i32* [ %save_nextSym11.pre-phi6326, %if.end1995 ], [ %save_nextSym11.phi.trans.insert, %if.end ]
  %save_nblockMAX12.pre-phi6269 = phi i32* [ %save_nblockMAX12.pre-phi6270, %if.end1995 ], [ %save_nblockMAX12.phi.trans.insert, %if.end ]
  %save_nblock13.pre-phi6213 = phi i32* [ %save_nblock13.pre-phi6214, %if.end1995 ], [ %save_nblock13.phi.trans.insert, %if.end ]
  %save_es14.pre-phi6157 = phi i32* [ %save_es14.pre-phi6158, %if.end1995 ], [ %save_es14.phi.trans.insert, %if.end ]
  %save_N15.pre-phi6101 = phi i32* [ %save_N15.pre-phi6102, %if.end1995 ], [ %save_N15.phi.trans.insert, %if.end ]
  %save_curr16.pre-phi6045 = phi i32* [ %save_curr16.pre-phi6046, %if.end1995 ], [ %save_curr16.phi.trans.insert, %if.end ]
  %save_zt17.pre-phi5989 = phi i32* [ %save_zt17.pre-phi5990, %if.end1995 ], [ %save_zt17.phi.trans.insert, %if.end ]
  %save_zn18.pre-phi5933 = phi i32* [ %save_zn18.pre-phi5934, %if.end1995 ], [ %save_zn18.phi.trans.insert, %if.end ]
  %save_zvec19.pre-phi5877 = phi i32* [ %save_zvec19.pre-phi5878, %if.end1995 ], [ %save_zvec19.phi.trans.insert, %if.end ]
  %save_zj20.pre-phi5821 = phi i32* [ %save_zj20.pre-phi5822, %if.end1995 ], [ %save_zj20.phi.trans.insert, %if.end ]
  %save_gSel21.pre-phi5765 = phi i32* [ %save_gSel21.pre-phi5766, %if.end1995 ], [ %save_gSel21.phi.trans.insert, %if.end ]
  %save_gMinlen22.pre-phi5709 = phi i32* [ %save_gMinlen22.pre-phi5710, %if.end1995 ], [ %save_gMinlen22.phi.trans.insert, %if.end ]
  %save_gLimit23.pre-phi5653 = phi i32** [ %save_gLimit23.pre-phi5654, %if.end1995 ], [ %save_gLimit23.phi.trans.insert, %if.end ]
  %save_gBase24.pre-phi5597 = phi i32** [ %save_gBase24.pre-phi5598, %if.end1995 ], [ %save_gBase24.phi.trans.insert, %if.end ]
  %save_gPerm25.pre-phi5541 = phi i32** [ %save_gPerm25.pre-phi5542, %if.end1995 ], [ %save_gPerm25.phi.trans.insert, %if.end ]
  %gPerm.7 = phi i32* [ %gPerm.6, %if.end1995 ], [ %.pre5390, %if.end ]
  %gBase.7 = phi i32* [ %gBase.6, %if.end1995 ], [ %.pre5389, %if.end ]
  %gLimit.7 = phi i32* [ %gLimit.6, %if.end1995 ], [ %.pre5388, %if.end ]
  %gMinlen.7 = phi i32 [ %gMinlen.6, %if.end1995 ], [ %.pre5387, %if.end ]
  %gSel.7 = phi i32 [ %gSel.6, %if.end1995 ], [ %.pre5386, %if.end ]
  %zj.4 = phi i32 [ %zj.3, %if.end1995 ], [ %.pre5385, %if.end ]
  %zvec.4 = phi i32 [ %zvec.3, %if.end1995 ], [ %.pre5384, %if.end ]
  %zn.5 = phi i32 [ %gMinlen.6, %if.end1995 ], [ %.pre5383, %if.end ]
  %curr.12 = phi i32 [ %curr.11, %if.end1995 ], [ %.pre5381, %if.end ]
  %N.2 = phi i32 [ %mul1967, %if.end1995 ], [ %.pre5380, %if.end ]
  %es.3 = phi i32 [ %es.2, %if.end1995 ], [ %.pre5379, %if.end ]
  %nblock.5 = phi i32 [ %nblock.4, %if.end1995 ], [ %.pre5378, %if.end ]
  %nblockMAX.5 = phi i32 [ %nblockMAX.4, %if.end1995 ], [ %.pre5377, %if.end ]
  %nextSym.2 = phi i32 [ %nextSym.1, %if.end1995 ], [ %.pre5376, %if.end ]
  %groupPos.7 = phi i32 [ %dec1996, %if.end1995 ], [ %.pre5375, %if.end ]
  %groupNo.7 = phi i32 [ %groupNo.6, %if.end1995 ], [ %.pre5374, %if.end ]
  %EOB.5 = phi i32 [ %EOB.4, %if.end1995 ], [ %.pre5373, %if.end ]
  %nSelectors.14 = phi i32 [ %nSelectors.13, %if.end1995 ], [ %.pre5372, %if.end ]
  %nGroups.15 = phi i32 [ %nGroups.14, %if.end1995 ], [ %.pre5371, %if.end ]
  %alphaSize.16 = phi i32 [ %alphaSize.15, %if.end1995 ], [ %.pre5370, %if.end ]
  %t.12 = phi i32 [ %t.11, %if.end1995 ], [ %.pre5369, %if.end ]
  %j.20 = phi i32 [ %j.19, %if.end1995 ], [ %.pre5368, %if.end ]
  %i.26 = phi i32 [ %i.25, %if.end1995 ], [ %.pre, %if.end ]
  store i32 38, i32* %state, align 8, !tbaa !105
  %bsLive2001 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %1113 = load i32, i32* %bsLive2001, align 4, !tbaa !106
  %cmp20025081 = icmp slt i32 %1113, %zn.5
  %bsBuff2022 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp20025081, label %if.end2015.preheader, label %sw.bb1997.if.then2004_crit_edge

if.end2015.preheader:                             ; preds = %sw.bb1997
  br label %if.end2015

sw.bb1997.if.then2004_crit_edge:                  ; preds = %sw.bb1997
  %.pre5472 = load i32, i32* %bsBuff2022, align 8, !tbaa !107
  br label %if.then2004

if.then2004:                                      ; preds = %if.end2048, %sw.bb1997.if.then2004_crit_edge
  %1114 = phi i32 [ %.pre5472, %sw.bb1997.if.then2004_crit_edge ], [ %or2027, %if.end2048 ]
  %.lcssa4937 = phi i32 [ %1113, %sw.bb1997.if.then2004_crit_edge ], [ %add2030, %if.end2048 ]
  %sub2008 = sub nsw i32 %.lcssa4937, %zn.5
  %shr2009 = lshr i32 %1114, %sub2008
  %shl2010 = shl i32 1, %zn.5
  %sub2011 = add nsw i32 %shl2010, -1
  %and2012 = and i32 %shr2009, %sub2011
  store i32 %sub2008, i32* %bsLive2001, align 4, !tbaa !106
  br label %while.cond2050

if.end2015:                                       ; preds = %if.end2048, %if.end2015.preheader
  %1115 = phi i32 [ %add2030, %if.end2048 ], [ %1113, %if.end2015.preheader ]
  %1116 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in2017 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1116, i64 0, i32 1
  %1117 = load i32, i32* %avail_in2017, align 8, !tbaa !98
  %cmp2018 = icmp eq i32 %1117, 0
  br i1 %cmp2018, label %save_state_and_return, label %if.end2021

if.end2021:                                       ; preds = %if.end2015
  %1118 = load i32, i32* %bsBuff2022, align 8, !tbaa !107
  %shl2023 = shl i32 %1118, 8
  %next_in2025 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1116, i64 0, i32 0
  %1119 = load i8*, i8** %next_in2025, align 8, !tbaa !102
  %1120 = load i8, i8* %1119, align 1, !tbaa !12
  %conv2026 = zext i8 %1120 to i32
  %or2027 = or i32 %shl2023, %conv2026
  store i32 %or2027, i32* %bsBuff2022, align 8, !tbaa !107
  %add2030 = add nsw i32 %1115, 8
  store i32 %add2030, i32* %bsLive2001, align 4, !tbaa !106
  %incdec.ptr2033 = getelementptr inbounds i8, i8* %1119, i64 1
  store i8* %incdec.ptr2033, i8** %next_in2025, align 8, !tbaa !102
  %dec2036 = add i32 %1117, -1
  store i32 %dec2036, i32* %avail_in2017, align 8, !tbaa !98
  %total_in_lo322038 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1116, i64 0, i32 2
  %1121 = load i32, i32* %total_in_lo322038, align 4, !tbaa !88
  %inc2039 = add i32 %1121, 1
  store i32 %inc2039, i32* %total_in_lo322038, align 4, !tbaa !88
  %cmp2042 = icmp eq i32 %inc2039, 0
  br i1 %cmp2042, label %if.then2044, label %if.end2048

if.then2044:                                      ; preds = %if.end2021
  %total_in_hi322046 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1116, i64 0, i32 3
  %1122 = load i32, i32* %total_in_hi322046, align 8, !tbaa !89
  %inc2047 = add i32 %1122, 1
  store i32 %inc2047, i32* %total_in_hi322046, align 8, !tbaa !89
  br label %if.end2048

if.end2048:                                       ; preds = %if.then2044, %if.end2021
  %cmp2002 = icmp slt i32 %add2030, %zn.5
  br i1 %cmp2002, label %if.end2015, label %if.then2004

while.cond2050:                                   ; preds = %if.then2070, %if.then2004
  %1123 = phi i32 [ %1112, %if.then2004 ], [ %1126, %if.then2070 ]
  %save_j3.pre-phi6772 = phi i32* [ %save_j3.pre-phi6773, %if.then2004 ], [ %save_j3.pre-phi6771, %if.then2070 ]
  %save_t4.pre-phi6716 = phi i32* [ %save_t4.pre-phi6717, %if.then2004 ], [ %save_t4.pre-phi6715, %if.then2070 ]
  %save_alphaSize5.pre-phi6660 = phi i32* [ %save_alphaSize5.pre-phi6661, %if.then2004 ], [ %save_alphaSize5.pre-phi6659, %if.then2070 ]
  %save_nGroups6.pre-phi6604 = phi i32* [ %save_nGroups6.pre-phi6605, %if.then2004 ], [ %save_nGroups6.pre-phi6603, %if.then2070 ]
  %save_nSelectors7.pre-phi6548 = phi i32* [ %save_nSelectors7.pre-phi6549, %if.then2004 ], [ %save_nSelectors7.pre-phi6547, %if.then2070 ]
  %save_EOB8.pre-phi6492 = phi i32* [ %save_EOB8.pre-phi6493, %if.then2004 ], [ %save_EOB8.pre-phi6491, %if.then2070 ]
  %save_groupNo9.pre-phi6436 = phi i32* [ %save_groupNo9.pre-phi6437, %if.then2004 ], [ %save_groupNo9.pre-phi6435, %if.then2070 ]
  %save_groupPos10.pre-phi6380 = phi i32* [ %save_groupPos10.pre-phi6381, %if.then2004 ], [ %save_groupPos10.pre-phi6379, %if.then2070 ]
  %save_nextSym11.pre-phi6324 = phi i32* [ %save_nextSym11.pre-phi6325, %if.then2004 ], [ %save_nextSym11.pre-phi6323, %if.then2070 ]
  %save_nblockMAX12.pre-phi6268 = phi i32* [ %save_nblockMAX12.pre-phi6269, %if.then2004 ], [ %save_nblockMAX12.pre-phi6267, %if.then2070 ]
  %save_nblock13.pre-phi6212 = phi i32* [ %save_nblock13.pre-phi6213, %if.then2004 ], [ %save_nblock13.pre-phi6211, %if.then2070 ]
  %save_es14.pre-phi6156 = phi i32* [ %save_es14.pre-phi6157, %if.then2004 ], [ %save_es14.pre-phi6155, %if.then2070 ]
  %save_N15.pre-phi6100 = phi i32* [ %save_N15.pre-phi6101, %if.then2004 ], [ %save_N15.pre-phi6099, %if.then2070 ]
  %save_curr16.pre-phi6044 = phi i32* [ %save_curr16.pre-phi6045, %if.then2004 ], [ %save_curr16.pre-phi6043, %if.then2070 ]
  %save_zt17.pre-phi5988 = phi i32* [ %save_zt17.pre-phi5989, %if.then2004 ], [ %save_zt17.pre-phi5987, %if.then2070 ]
  %save_zn18.pre-phi5932 = phi i32* [ %save_zn18.pre-phi5933, %if.then2004 ], [ %save_zn18.pre-phi5931, %if.then2070 ]
  %save_zvec19.pre-phi5876 = phi i32* [ %save_zvec19.pre-phi5877, %if.then2004 ], [ %save_zvec19.pre-phi5875, %if.then2070 ]
  %save_zj20.pre-phi5820 = phi i32* [ %save_zj20.pre-phi5821, %if.then2004 ], [ %save_zj20.pre-phi5819, %if.then2070 ]
  %save_gSel21.pre-phi5764 = phi i32* [ %save_gSel21.pre-phi5765, %if.then2004 ], [ %save_gSel21.pre-phi5763, %if.then2070 ]
  %save_gMinlen22.pre-phi5708 = phi i32* [ %save_gMinlen22.pre-phi5709, %if.then2004 ], [ %save_gMinlen22.pre-phi5707, %if.then2070 ]
  %save_gLimit23.pre-phi5652 = phi i32** [ %save_gLimit23.pre-phi5653, %if.then2004 ], [ %save_gLimit23.pre-phi5651, %if.then2070 ]
  %save_gBase24.pre-phi5596 = phi i32** [ %save_gBase24.pre-phi5597, %if.then2004 ], [ %save_gBase24.pre-phi5595, %if.then2070 ]
  %save_gPerm25.pre-phi5540 = phi i32** [ %save_gPerm25.pre-phi5541, %if.then2004 ], [ %save_gPerm25.pre-phi5539, %if.then2070 ]
  %1124 = phi i32 [ %sub2008, %if.then2004 ], [ %sub2074, %if.then2070 ]
  %gPerm.8 = phi i32* [ %gPerm.7, %if.then2004 ], [ %gPerm.9, %if.then2070 ]
  %gBase.8 = phi i32* [ %gBase.7, %if.then2004 ], [ %gBase.9, %if.then2070 ]
  %gLimit.8 = phi i32* [ %gLimit.7, %if.then2004 ], [ %gLimit.9, %if.then2070 ]
  %gMinlen.8 = phi i32 [ %gMinlen.7, %if.then2004 ], [ %gMinlen.9, %if.then2070 ]
  %gSel.8 = phi i32 [ %gSel.7, %if.then2004 ], [ %gSel.9, %if.then2070 ]
  %zj.5 = phi i32 [ %zj.4, %if.then2004 ], [ %and2076, %if.then2070 ]
  %zvec.5 = phi i32 [ %and2012, %if.then2004 ], [ %or2115, %if.then2070 ]
  %zn.6 = phi i32 [ %zn.5, %if.then2004 ], [ %zn.7, %if.then2070 ]
  %curr.13 = phi i32 [ %curr.12, %if.then2004 ], [ %curr.14, %if.then2070 ]
  %N.3 = phi i32 [ %N.2, %if.then2004 ], [ %N.4, %if.then2070 ]
  %es.4 = phi i32 [ %es.3, %if.then2004 ], [ %es.5, %if.then2070 ]
  %nblock.6 = phi i32 [ %nblock.5, %if.then2004 ], [ %nblock.7, %if.then2070 ]
  %nblockMAX.6 = phi i32 [ %nblockMAX.5, %if.then2004 ], [ %nblockMAX.7, %if.then2070 ]
  %nextSym.3 = phi i32 [ %nextSym.2, %if.then2004 ], [ %nextSym.4, %if.then2070 ]
  %groupPos.8 = phi i32 [ %groupPos.7, %if.then2004 ], [ %groupPos.9, %if.then2070 ]
  %groupNo.8 = phi i32 [ %groupNo.7, %if.then2004 ], [ %groupNo.9, %if.then2070 ]
  %EOB.6 = phi i32 [ %EOB.5, %if.then2004 ], [ %EOB.7, %if.then2070 ]
  %nSelectors.15 = phi i32 [ %nSelectors.14, %if.then2004 ], [ %nSelectors.16, %if.then2070 ]
  %nGroups.16 = phi i32 [ %nGroups.15, %if.then2004 ], [ %nGroups.17, %if.then2070 ]
  %alphaSize.17 = phi i32 [ %alphaSize.16, %if.then2004 ], [ %alphaSize.18, %if.then2070 ]
  %t.13 = phi i32 [ %t.12, %if.then2004 ], [ %t.14, %if.then2070 ]
  %j.21 = phi i32 [ %j.20, %if.then2004 ], [ %j.22, %if.then2070 ]
  %i.27 = phi i32 [ %i.26, %if.then2004 ], [ %i.28, %if.then2070 ]
  %cmp2052 = icmp sgt i32 %zn.6, 20
  br i1 %cmp2052, label %save_state_and_return, label %if.end2055

if.end2055:                                       ; preds = %while.cond2050
  %idxprom2056 = sext i32 %zn.6 to i64
  %arrayidx2057 = getelementptr inbounds i32, i32* %gLimit.8, i64 %idxprom2056
  %1125 = load i32, i32* %arrayidx2057, align 4, !tbaa !6
  %cmp2058 = icmp sgt i32 %zvec.5, %1125
  br i1 %cmp2058, label %if.end2061, label %while.end2116

if.end2061:                                       ; preds = %if.end2055
  %inc2062 = add nsw i32 %zn.6, 1
  %.pre5528 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  br label %sw.bb2063

sw.bb2063:                                        ; preds = %if.end2061, %if.end.sw.bb2063_crit_edge
  %1126 = phi i32 [ %.pre5382, %if.end.sw.bb2063_crit_edge ], [ %1123, %if.end2061 ]
  %save_j3.pre-phi6771 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_j3.pre-phi6772, %if.end2061 ]
  %save_t4.pre-phi6715 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_t4.pre-phi6716, %if.end2061 ]
  %save_alphaSize5.pre-phi6659 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_alphaSize5.pre-phi6660, %if.end2061 ]
  %save_nGroups6.pre-phi6603 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_nGroups6.pre-phi6604, %if.end2061 ]
  %save_nSelectors7.pre-phi6547 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_nSelectors7.pre-phi6548, %if.end2061 ]
  %save_EOB8.pre-phi6491 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_EOB8.pre-phi6492, %if.end2061 ]
  %save_groupNo9.pre-phi6435 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_groupNo9.pre-phi6436, %if.end2061 ]
  %save_groupPos10.pre-phi6379 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_groupPos10.pre-phi6380, %if.end2061 ]
  %save_nextSym11.pre-phi6323 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_nextSym11.pre-phi6324, %if.end2061 ]
  %save_nblockMAX12.pre-phi6267 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_nblockMAX12.pre-phi6268, %if.end2061 ]
  %save_nblock13.pre-phi6211 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_nblock13.pre-phi6212, %if.end2061 ]
  %save_es14.pre-phi6155 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_es14.pre-phi6156, %if.end2061 ]
  %save_N15.pre-phi6099 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_N15.pre-phi6100, %if.end2061 ]
  %save_curr16.pre-phi6043 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_curr16.pre-phi6044, %if.end2061 ]
  %save_zt17.pre-phi5987 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_zt17.pre-phi5988, %if.end2061 ]
  %save_zn18.pre-phi5931 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_zn18.pre-phi5932, %if.end2061 ]
  %save_zvec19.pre-phi5875 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_zvec19.pre-phi5876, %if.end2061 ]
  %save_zj20.pre-phi5819 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_zj20.pre-phi5820, %if.end2061 ]
  %save_gSel21.pre-phi5763 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_gSel21.pre-phi5764, %if.end2061 ]
  %save_gMinlen22.pre-phi5707 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_gMinlen22.pre-phi5708, %if.end2061 ]
  %save_gLimit23.pre-phi5651 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_gLimit23.pre-phi5652, %if.end2061 ]
  %save_gBase24.pre-phi5595 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_gBase24.pre-phi5596, %if.end2061 ]
  %save_gPerm25.pre-phi5539 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %save_gPerm25.pre-phi5540, %if.end2061 ]
  %bsLive2067.pre-phi = phi i32* [ %bsLive2067.phi.trans.insert, %if.end.sw.bb2063_crit_edge ], [ %.pre5528, %if.end2061 ]
  %1127 = phi i32 [ %.pre5473, %if.end.sw.bb2063_crit_edge ], [ %1124, %if.end2061 ]
  %gPerm.9 = phi i32* [ %.pre5390, %if.end.sw.bb2063_crit_edge ], [ %gPerm.8, %if.end2061 ]
  %gBase.9 = phi i32* [ %.pre5389, %if.end.sw.bb2063_crit_edge ], [ %gBase.8, %if.end2061 ]
  %gLimit.9 = phi i32* [ %.pre5388, %if.end.sw.bb2063_crit_edge ], [ %gLimit.8, %if.end2061 ]
  %gMinlen.9 = phi i32 [ %.pre5387, %if.end.sw.bb2063_crit_edge ], [ %gMinlen.8, %if.end2061 ]
  %gSel.9 = phi i32 [ %.pre5386, %if.end.sw.bb2063_crit_edge ], [ %gSel.8, %if.end2061 ]
  %zj.6 = phi i32 [ %.pre5385, %if.end.sw.bb2063_crit_edge ], [ %zj.5, %if.end2061 ]
  %zvec.6 = phi i32 [ %.pre5384, %if.end.sw.bb2063_crit_edge ], [ %zvec.5, %if.end2061 ]
  %zn.7 = phi i32 [ %.pre5383, %if.end.sw.bb2063_crit_edge ], [ %inc2062, %if.end2061 ]
  %curr.14 = phi i32 [ %.pre5381, %if.end.sw.bb2063_crit_edge ], [ %curr.13, %if.end2061 ]
  %N.4 = phi i32 [ %.pre5380, %if.end.sw.bb2063_crit_edge ], [ %N.3, %if.end2061 ]
  %es.5 = phi i32 [ %.pre5379, %if.end.sw.bb2063_crit_edge ], [ %es.4, %if.end2061 ]
  %nblock.7 = phi i32 [ %.pre5378, %if.end.sw.bb2063_crit_edge ], [ %nblock.6, %if.end2061 ]
  %nblockMAX.7 = phi i32 [ %.pre5377, %if.end.sw.bb2063_crit_edge ], [ %nblockMAX.6, %if.end2061 ]
  %nextSym.4 = phi i32 [ %.pre5376, %if.end.sw.bb2063_crit_edge ], [ %nextSym.3, %if.end2061 ]
  %groupPos.9 = phi i32 [ %.pre5375, %if.end.sw.bb2063_crit_edge ], [ %groupPos.8, %if.end2061 ]
  %groupNo.9 = phi i32 [ %.pre5374, %if.end.sw.bb2063_crit_edge ], [ %groupNo.8, %if.end2061 ]
  %EOB.7 = phi i32 [ %.pre5373, %if.end.sw.bb2063_crit_edge ], [ %EOB.6, %if.end2061 ]
  %nSelectors.16 = phi i32 [ %.pre5372, %if.end.sw.bb2063_crit_edge ], [ %nSelectors.15, %if.end2061 ]
  %nGroups.17 = phi i32 [ %.pre5371, %if.end.sw.bb2063_crit_edge ], [ %nGroups.16, %if.end2061 ]
  %alphaSize.18 = phi i32 [ %.pre5370, %if.end.sw.bb2063_crit_edge ], [ %alphaSize.17, %if.end2061 ]
  %t.14 = phi i32 [ %.pre5369, %if.end.sw.bb2063_crit_edge ], [ %t.13, %if.end2061 ]
  %j.22 = phi i32 [ %.pre5368, %if.end.sw.bb2063_crit_edge ], [ %j.21, %if.end2061 ]
  %i.28 = phi i32 [ %.pre, %if.end.sw.bb2063_crit_edge ], [ %i.27, %if.end2061 ]
  store i32 39, i32* %state, align 8, !tbaa !105
  %cmp20685068 = icmp sgt i32 %1127, 0
  %bsBuff2072.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp20685068, label %sw.bb2063.if.then2070_crit_edge, label %if.end2079.preheader

if.end2079.preheader:                             ; preds = %sw.bb2063
  br label %if.end2079

sw.bb2063.if.then2070_crit_edge:                  ; preds = %sw.bb2063
  %.pre5474 = load i32, i32* %bsBuff2072.phi.trans.insert, align 8, !tbaa !107
  br label %if.then2070

if.then2070:                                      ; preds = %if.end2112, %sw.bb2063.if.then2070_crit_edge
  %1128 = phi i32 [ %.pre5474, %sw.bb2063.if.then2070_crit_edge ], [ %or2091, %if.end2112 ]
  %.lcssa4930 = phi i32 [ %1127, %sw.bb2063.if.then2070_crit_edge ], [ %add2094, %if.end2112 ]
  %sub2074 = add nsw i32 %.lcssa4930, -1
  %shr2075 = lshr i32 %1128, %sub2074
  %and2076 = and i32 %shr2075, 1
  store i32 %sub2074, i32* %bsLive2067.pre-phi, align 4, !tbaa !106
  %shl2114 = shl i32 %zvec.6, 1
  %or2115 = or i32 %and2076, %shl2114
  br label %while.cond2050

if.end2079:                                       ; preds = %if.end2112, %if.end2079.preheader
  %1129 = phi i32 [ %add2094, %if.end2112 ], [ %1127, %if.end2079.preheader ]
  %1130 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in2081 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1130, i64 0, i32 1
  %1131 = load i32, i32* %avail_in2081, align 8, !tbaa !98
  %cmp2082 = icmp eq i32 %1131, 0
  br i1 %cmp2082, label %save_state_and_return, label %if.end2085

if.end2085:                                       ; preds = %if.end2079
  %1132 = load i32, i32* %bsBuff2072.phi.trans.insert, align 8, !tbaa !107
  %shl2087 = shl i32 %1132, 8
  %next_in2089 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1130, i64 0, i32 0
  %1133 = load i8*, i8** %next_in2089, align 8, !tbaa !102
  %1134 = load i8, i8* %1133, align 1, !tbaa !12
  %conv2090 = zext i8 %1134 to i32
  %or2091 = or i32 %shl2087, %conv2090
  store i32 %or2091, i32* %bsBuff2072.phi.trans.insert, align 8, !tbaa !107
  %add2094 = add nsw i32 %1129, 8
  store i32 %add2094, i32* %bsLive2067.pre-phi, align 4, !tbaa !106
  %incdec.ptr2097 = getelementptr inbounds i8, i8* %1133, i64 1
  store i8* %incdec.ptr2097, i8** %next_in2089, align 8, !tbaa !102
  %dec2100 = add i32 %1131, -1
  store i32 %dec2100, i32* %avail_in2081, align 8, !tbaa !98
  %total_in_lo322102 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1130, i64 0, i32 2
  %1135 = load i32, i32* %total_in_lo322102, align 4, !tbaa !88
  %inc2103 = add i32 %1135, 1
  store i32 %inc2103, i32* %total_in_lo322102, align 4, !tbaa !88
  %cmp2106 = icmp eq i32 %inc2103, 0
  br i1 %cmp2106, label %if.then2108, label %if.end2112

if.then2108:                                      ; preds = %if.end2085
  %total_in_hi322110 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1130, i64 0, i32 3
  %1136 = load i32, i32* %total_in_hi322110, align 8, !tbaa !89
  %inc2111 = add i32 %1136, 1
  store i32 %inc2111, i32* %total_in_hi322110, align 8, !tbaa !89
  br label %if.end2112

if.end2112:                                       ; preds = %if.then2108, %if.end2085
  %cmp2068 = icmp sgt i32 %1129, -8
  br i1 %cmp2068, label %if.then2070, label %if.end2079

while.end2116:                                    ; preds = %if.end2055
  %arrayidx2118 = getelementptr inbounds i32, i32* %gBase.8, i64 %idxprom2056
  %1137 = load i32, i32* %arrayidx2118, align 4, !tbaa !6
  %sub2119 = sub nsw i32 %zvec.5, %1137
  %1138 = icmp ugt i32 %sub2119, 257
  br i1 %1138, label %save_state_and_return, label %if.end2129

if.end2129:                                       ; preds = %while.end2116
  %idxprom2133 = sext i32 %sub2119 to i64
  %arrayidx2134 = getelementptr inbounds i32, i32* %gPerm.8, i64 %idxprom2133
  %1139 = load i32, i32* %arrayidx2134, align 4, !tbaa !6
  %1140 = icmp ult i32 %1139, 2
  br i1 %1140, label %do.body, label %do.end

do.end:                                           ; preds = %if.end2129
  %inc2139 = add nsw i32 %es.4, 1
  %arrayidx2142 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 0
  %1141 = load i32, i32* %arrayidx2142, align 4, !tbaa !6
  %idxprom2143 = sext i32 %1141 to i64
  %arrayidx2144 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2143
  %1142 = load i8, i8* %arrayidx2144, align 1, !tbaa !12
  %idxprom2145 = zext i8 %1142 to i64
  %arrayidx2146 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 30, i64 %idxprom2145
  %1143 = load i8, i8* %arrayidx2146, align 1, !tbaa !12
  %idxprom2148 = zext i8 %1143 to i64
  %arrayidx2149 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 16, i64 %idxprom2148
  %1144 = load i32, i32* %arrayidx2149, align 4, !tbaa !6
  %add2150 = add nsw i32 %1144, %inc2139
  store i32 %add2150, i32* %arrayidx2149, align 4, !tbaa !6
  %smallDecompress2151 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 10
  %1145 = load i8, i8* %smallDecompress2151, align 4, !tbaa !109
  %tobool2152 = icmp eq i8 %1145, 0
  %cmp21715071 = icmp sgt i32 %es.4, -1
  br i1 %tobool2152, label %if.else2169, label %if.then2153

if.then2153:                                      ; preds = %do.end
  br i1 %cmp21715071, label %while.body2157.lr.ph, label %while.cond1942

while.body2157.lr.ph:                             ; preds = %if.then2153
  %conv2162 = zext i8 %1143 to i16
  %ll162163 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 21
  %1146 = sext i32 %nblock.6 to i64
  %1147 = sext i32 %nblockMAX.6 to i64
  br label %while.body2157

while.body2157:                                   ; preds = %if.end2161, %while.body2157.lr.ph
  %indvars.iv5305 = phi i64 [ %1146, %while.body2157.lr.ph ], [ %indvars.iv.next5306, %if.end2161 ]
  %es.65077 = phi i32 [ %inc2139, %while.body2157.lr.ph ], [ %dec2167, %if.end2161 ]
  %cmp2158 = icmp slt i64 %indvars.iv5305, %1147
  br i1 %cmp2158, label %if.end2161, label %save_state_and_return.loopexit5208

if.end2161:                                       ; preds = %while.body2157
  %1148 = load i16*, i16** %ll162163, align 8, !tbaa !120
  %arrayidx2165 = getelementptr inbounds i16, i16* %1148, i64 %indvars.iv5305
  store i16 %conv2162, i16* %arrayidx2165, align 2, !tbaa !33
  %indvars.iv.next5306 = add nsw i64 %indvars.iv5305, 1
  %dec2167 = add nsw i32 %es.65077, -1
  %cmp2155 = icmp sgt i32 %es.65077, 1
  br i1 %cmp2155, label %while.body2157, label %if.end2185.loopexit5209

if.else2169:                                      ; preds = %do.end
  br i1 %cmp21715071, label %while.body2173.lr.ph, label %while.cond1942

while.body2173.lr.ph:                             ; preds = %if.else2169
  %conv2178 = zext i8 %1143 to i32
  %tt2179 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 20
  %1149 = sext i32 %nblock.6 to i64
  %1150 = sext i32 %nblockMAX.6 to i64
  br label %while.body2173

while.body2173:                                   ; preds = %if.end2177, %while.body2173.lr.ph
  %indvars.iv5303 = phi i64 [ %1149, %while.body2173.lr.ph ], [ %indvars.iv.next5304, %if.end2177 ]
  %es.75072 = phi i32 [ %inc2139, %while.body2173.lr.ph ], [ %dec2183, %if.end2177 ]
  %cmp2174 = icmp slt i64 %indvars.iv5303, %1150
  br i1 %cmp2174, label %if.end2177, label %save_state_and_return.loopexit5207

if.end2177:                                       ; preds = %while.body2173
  %1151 = load i32*, i32** %tt2179, align 8, !tbaa !124
  %arrayidx2181 = getelementptr inbounds i32, i32* %1151, i64 %indvars.iv5303
  store i32 %conv2178, i32* %arrayidx2181, align 4, !tbaa !6
  %indvars.iv.next5304 = add nsw i64 %indvars.iv5303, 1
  %dec2183 = add nsw i32 %es.75072, -1
  %cmp2171 = icmp sgt i32 %es.75072, 1
  br i1 %cmp2171, label %while.body2173, label %if.end2185.loopexit

if.end2185.loopexit:                              ; preds = %if.end2177
  %1152 = trunc i64 %indvars.iv.next5304 to i32
  br label %while.cond1942

if.end2185.loopexit5209:                          ; preds = %if.end2161
  %1153 = trunc i64 %indvars.iv.next5306 to i32
  br label %while.cond1942

if.else2186:                                      ; preds = %if.end1947
  %cmp2187 = icmp slt i32 %nblock.3, %nblockMAX.3
  br i1 %cmp2187, label %if.end2190, label %save_state_and_return

if.end2190:                                       ; preds = %if.else2186
  %sub2194 = add nsw i32 %nextSym.0, -1
  %cmp2195 = icmp ult i32 %sub2194, 16
  br i1 %cmp2195, label %if.then2197, label %if.else2260

if.then2197:                                      ; preds = %if.end2190
  %arrayidx2199 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 0
  %1154 = load i32, i32* %arrayidx2199, align 4, !tbaa !6
  %add2201 = add i32 %1154, %sub2194
  %idxprom2202 = zext i32 %add2201 to i64
  %arrayidx2203 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2202
  %1155 = load i8, i8* %arrayidx2203, align 1, !tbaa !12
  %cmp22055092 = icmp ugt i32 %sub2194, 3
  br i1 %cmp22055092, label %while.body2207.lr.ph, label %while.body2245.lr.ph

while.body2207.lr.ph:                             ; preds = %if.then2197
  %1156 = add i32 %nextSym.0, 3
  br label %while.body2207

while.body2207:                                   ; preds = %while.body2207, %while.body2207.lr.ph
  %nn.05093 = phi i32 [ %sub2194, %while.body2207.lr.ph ], [ %sub2240, %while.body2207 ]
  %add2208 = add i32 %nn.05093, %1154
  %sub2210 = add nsw i32 %add2208, -1
  %idxprom2211 = sext i32 %sub2210 to i64
  %arrayidx2212 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2211
  %1157 = load i8, i8* %arrayidx2212, align 1, !tbaa !12
  %idxprom2214 = sext i32 %add2208 to i64
  %arrayidx2215 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2214
  store i8 %1157, i8* %arrayidx2215, align 1, !tbaa !12
  %sub2217 = add nsw i32 %add2208, -2
  %idxprom2218 = sext i32 %sub2217 to i64
  %arrayidx2219 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2218
  %1158 = load i8, i8* %arrayidx2219, align 1, !tbaa !12
  store i8 %1158, i8* %arrayidx2212, align 1, !tbaa !12
  %sub2225 = add nsw i32 %add2208, -3
  %idxprom2226 = sext i32 %sub2225 to i64
  %arrayidx2227 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2226
  %1159 = load i8, i8* %arrayidx2227, align 1, !tbaa !12
  store i8 %1159, i8* %arrayidx2219, align 1, !tbaa !12
  %sub2233 = add nsw i32 %add2208, -4
  %idxprom2234 = sext i32 %sub2233 to i64
  %arrayidx2235 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2234
  %1160 = load i8, i8* %arrayidx2235, align 1, !tbaa !12
  store i8 %1160, i8* %arrayidx2227, align 1, !tbaa !12
  %sub2240 = add i32 %nn.05093, -4
  %cmp2205 = icmp ugt i32 %sub2240, 3
  br i1 %cmp2205, label %while.body2207, label %while.end2241

while.end2241:                                    ; preds = %while.body2207
  %1161 = and i32 %1156, 3
  %cmp22435090 = icmp eq i32 %1161, 0
  br i1 %cmp22435090, label %while.end2256, label %while.body2245.lr.ph

while.body2245.lr.ph:                             ; preds = %while.end2241, %if.then2197
  %nn.0.lcssa6880 = phi i32 [ %1161, %while.end2241 ], [ %sub2194, %if.then2197 ]
  %1162 = zext i32 %nn.0.lcssa6880 to i64
  %1163 = add i32 %nn.0.lcssa6880, -1
  %1164 = zext i32 %1163 to i64
  %1165 = add nuw nsw i64 %1164, 1
  %min.iters.check7029 = icmp ult i64 %1165, 16
  br i1 %min.iters.check7029, label %while.body2245.preheader, label %vector.scevcheck7047

vector.scevcheck7047:                             ; preds = %while.body2245.lr.ph
  %1166 = add i32 %nn.0.lcssa6880, -1
  %1167 = add i32 %nn.0.lcssa6880, %1154
  %1168 = sub i32 %1167, %1166
  %1169 = icmp ugt i32 %1168, %1167
  %1170 = add i32 %nn.0.lcssa6880, %1154
  %1171 = add i32 %1170, -1
  %1172 = icmp ugt i32 %1154, %1171
  %1173 = or i1 %1169, %1172
  %1174 = zext i32 %1167 to i64
  %1175 = add nuw nsw i64 %1174, 3724
  %uglygep = getelementptr i8, i8* %s7037, i64 %1175
  %uglygep7038 = ptrtoint i8* %uglygep to i64
  %1176 = zext i32 %1166 to i64
  %1177 = sub i64 %uglygep7038, %1176
  %1178 = icmp ugt i64 %1177, %uglygep7038
  %1179 = or i1 %1173, %1178
  %1180 = zext i32 %1171 to i64
  %1181 = add nuw nsw i64 %1180, 3724
  %uglygep7042 = getelementptr i8, i8* %s7037, i64 %1181
  %uglygep70427043 = ptrtoint i8* %uglygep7042 to i64
  %1182 = zext i32 %1166 to i64
  %1183 = sub i64 %uglygep70427043, %1182
  %1184 = icmp ugt i64 %1183, %uglygep70427043
  %1185 = or i1 %1179, %1184
  br i1 %1185, label %while.body2245.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck7047
  %1186 = add i32 %nn.0.lcssa6880, %1154
  %1187 = zext i32 %1186 to i64
  %1188 = add nuw nsw i64 %1187, 3724
  %1189 = add i32 %nn.0.lcssa6880, -1
  %1190 = zext i32 %1189 to i64
  %1191 = sub nsw i64 %1188, %1190
  %uglygep7049 = getelementptr i8, i8* %s7037, i64 %1191
  %1192 = add nuw nsw i64 %1187, 3725
  %uglygep7050 = getelementptr i8, i8* %s7037, i64 %1192
  %1193 = add i32 %nn.0.lcssa6880, %1154
  %1194 = add i32 %1193, -1
  %1195 = zext i32 %1194 to i64
  %1196 = add nuw nsw i64 %1195, 3724
  %1197 = sub nsw i64 %1196, %1190
  %uglygep7051 = getelementptr i8, i8* %s7037, i64 %1197
  %1198 = add nuw nsw i64 %1195, 3725
  %uglygep7052 = getelementptr i8, i8* %s7037, i64 %1198
  %bound0 = icmp ult i8* %uglygep7049, %uglygep7052
  %bound1 = icmp ult i8* %uglygep7051, %uglygep7050
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %while.body2245.preheader, label %vector.ph7053

vector.ph7053:                                    ; preds = %vector.memcheck
  %1199 = and i32 %nn.0.lcssa6880, 15
  %n.mod.vf7054 = zext i32 %1199 to i64
  %n.vec7055 = sub nsw i64 %1165, %n.mod.vf7054
  %ind.end7059 = sub nsw i64 %1162, %n.vec7055
  br label %vector.body7026

vector.body7026:                                  ; preds = %vector.body7026, %vector.ph7053
  %index7056 = phi i64 [ 0, %vector.ph7053 ], [ %index.next7057, %vector.body7026 ]
  %1200 = trunc i64 %index7056 to i32
  %1201 = sub i32 %nn.0.lcssa6880, %1200
  %1202 = add i32 %1154, %1201
  %1203 = add i32 %1202, -1
  %1204 = zext i32 %1203 to i64
  %1205 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %1204
  %1206 = getelementptr i8, i8* %1205, i64 -15
  %1207 = bitcast i8* %1206 to <2 x i64>*
  %1208 = load <2 x i64>, <2 x i64>* %1207, align 1, !tbaa !12, !alias.scope !182
  %1209 = zext i32 %1202 to i64
  %1210 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %1209
  %1211 = getelementptr i8, i8* %1210, i64 -15
  %1212 = bitcast i8* %1211 to <2 x i64>*
  store <2 x i64> %1208, <2 x i64>* %1212, align 1, !tbaa !12, !alias.scope !185, !noalias !182
  %index.next7057 = add i64 %index7056, 16
  %1213 = icmp eq i64 %index.next7057, %n.vec7055
  br i1 %1213, label %middle.block7027, label %vector.body7026, !llvm.loop !187

middle.block7027:                                 ; preds = %vector.body7026
  %cmp.n7060 = icmp eq i32 %1199, 0
  br i1 %cmp.n7060, label %while.end2256, label %while.body2245.preheader

while.body2245.preheader:                         ; preds = %middle.block7027, %vector.memcheck, %vector.scevcheck7047, %while.body2245.lr.ph
  %indvars.iv5307.ph = phi i64 [ %1162, %vector.memcheck ], [ %1162, %vector.scevcheck7047 ], [ %1162, %while.body2245.lr.ph ], [ %ind.end7059, %middle.block7027 ]
  %1214 = trunc i64 %indvars.iv5307.ph to i32
  %1215 = add i32 %1214, -1
  %xtraiter = and i32 %1214, 3
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod, label %while.body2245.prol.loopexit, label %while.body2245.prol.preheader

while.body2245.prol.preheader:                    ; preds = %while.body2245.preheader
  br label %while.body2245.prol

while.body2245.prol:                              ; preds = %while.body2245.prol, %while.body2245.prol.preheader
  %indvars.iv5307.prol = phi i64 [ %indvars.iv.next5308.prol, %while.body2245.prol ], [ %indvars.iv5307.ph, %while.body2245.prol.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %while.body2245.prol ], [ %xtraiter, %while.body2245.prol.preheader ]
  %1216 = trunc i64 %indvars.iv5307.prol to i32
  %add2247.prol = add i32 %1154, %1216
  %sub2248.prol = add i32 %add2247.prol, -1
  %idxprom2249.prol = zext i32 %sub2248.prol to i64
  %arrayidx2250.prol = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2249.prol
  %1217 = load i8, i8* %arrayidx2250.prol, align 1, !tbaa !12
  %idxprom2253.prol = zext i32 %add2247.prol to i64
  %arrayidx2254.prol = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2253.prol
  store i8 %1217, i8* %arrayidx2254.prol, align 1, !tbaa !12
  %indvars.iv.next5308.prol = add nsw i64 %indvars.iv5307.prol, -1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %while.body2245.prol.loopexit, label %while.body2245.prol, !llvm.loop !188

while.body2245.prol.loopexit:                     ; preds = %while.body2245.prol, %while.body2245.preheader
  %indvars.iv5307.unr = phi i64 [ %indvars.iv5307.ph, %while.body2245.preheader ], [ %indvars.iv.next5308.prol, %while.body2245.prol ]
  %1218 = icmp ult i32 %1215, 3
  br i1 %1218, label %while.end2256, label %while.body2245.preheader.new

while.body2245.preheader.new:                     ; preds = %while.body2245.prol.loopexit
  br label %while.body2245

while.body2245:                                   ; preds = %while.body2245, %while.body2245.preheader.new
  %indvars.iv5307 = phi i64 [ %indvars.iv5307.unr, %while.body2245.preheader.new ], [ %indvars.iv.next5308.3, %while.body2245 ]
  %1219 = trunc i64 %indvars.iv5307 to i32
  %add2247 = add i32 %1154, %1219
  %sub2248 = add i32 %add2247, -1
  %idxprom2249 = zext i32 %sub2248 to i64
  %arrayidx2250 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2249
  %1220 = load i8, i8* %arrayidx2250, align 1, !tbaa !12
  %idxprom2253 = zext i32 %add2247 to i64
  %arrayidx2254 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2253
  store i8 %1220, i8* %arrayidx2254, align 1, !tbaa !12
  %1221 = trunc i64 %indvars.iv5307 to i32
  %1222 = add i32 %1221, -1
  %add2247.1 = add i32 %1154, %1222
  %sub2248.1 = add i32 %add2247.1, -1
  %idxprom2249.1 = zext i32 %sub2248.1 to i64
  %arrayidx2250.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2249.1
  %1223 = load i8, i8* %arrayidx2250.1, align 1, !tbaa !12
  %idxprom2253.1 = zext i32 %add2247.1 to i64
  %arrayidx2254.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2253.1
  store i8 %1223, i8* %arrayidx2254.1, align 1, !tbaa !12
  %1224 = trunc i64 %indvars.iv5307 to i32
  %1225 = add i32 %1224, -2
  %add2247.2 = add i32 %1154, %1225
  %sub2248.2 = add i32 %add2247.2, -1
  %idxprom2249.2 = zext i32 %sub2248.2 to i64
  %arrayidx2250.2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2249.2
  %1226 = load i8, i8* %arrayidx2250.2, align 1, !tbaa !12
  %idxprom2253.2 = zext i32 %add2247.2 to i64
  %arrayidx2254.2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2253.2
  store i8 %1226, i8* %arrayidx2254.2, align 1, !tbaa !12
  %1227 = trunc i64 %indvars.iv5307 to i32
  %1228 = add i32 %1227, -3
  %add2247.3 = add i32 %1154, %1228
  %sub2248.3 = add i32 %add2247.3, -1
  %idxprom2249.3 = zext i32 %sub2248.3 to i64
  %arrayidx2250.3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2249.3
  %1229 = load i8, i8* %arrayidx2250.3, align 1, !tbaa !12
  %idxprom2253.3 = zext i32 %add2247.3 to i64
  %arrayidx2254.3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2253.3
  store i8 %1229, i8* %arrayidx2254.3, align 1, !tbaa !12
  %cmp2243.3 = icmp eq i32 %1228, 1
  %indvars.iv.next5308.3 = add nsw i64 %indvars.iv5307, -4
  br i1 %cmp2243.3, label %while.end2256, label %while.body2245, !llvm.loop !189

while.end2256:                                    ; preds = %while.body2245, %while.body2245.prol.loopexit, %middle.block7027, %while.end2241
  %idxprom2258 = sext i32 %1154 to i64
  %arrayidx2259 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2258
  store i8 %1155, i8* %arrayidx2259, align 1, !tbaa !12
  br label %if.end2356

if.else2260:                                      ; preds = %if.end2190
  %div = lshr i32 %sub2194, 4
  %rem = and i32 %sub2194, 15
  %1230 = zext i32 %div to i64
  %arrayidx2263 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 %1230
  %1231 = load i32, i32* %arrayidx2263, align 4, !tbaa !6
  %add2264 = add nsw i32 %1231, %rem
  %idxprom2266 = sext i32 %add2264 to i64
  %arrayidx2267 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2266
  %1232 = load i8, i8* %arrayidx2267, align 1, !tbaa !12
  %cmp22725101 = icmp eq i32 %rem, 0
  br i1 %cmp22725101, label %while.end2283.thread, label %while.body2274.preheader

while.body2274.preheader:                         ; preds = %if.else2260
  br label %while.body2274

while.end2283.thread:                             ; preds = %if.else2260
  %inc22876881 = add nsw i32 %1231, 1
  store i32 %inc22876881, i32* %arrayidx2263, align 4, !tbaa !6
  br label %while.body2291.lr.ph

while.body2274:                                   ; preds = %while.body2274, %while.body2274.preheader
  %indvars.iv5317 = phi i64 [ %indvars.iv.next5318, %while.body2274 ], [ %idxprom2266, %while.body2274.preheader ]
  %indvars.iv.next5318 = add i64 %indvars.iv5317, -1
  %arrayidx2278 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5318
  %1233 = load i8, i8* %arrayidx2278, align 1, !tbaa !12
  %arrayidx2281 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv5317
  store i8 %1233, i8* %arrayidx2281, align 1, !tbaa !12
  %1234 = load i32, i32* %arrayidx2263, align 4, !tbaa !6
  %1235 = sext i32 %1234 to i64
  %cmp2272 = icmp sgt i64 %indvars.iv.next5318, %1235
  br i1 %cmp2272, label %while.body2274, label %while.end2283

while.end2283:                                    ; preds = %while.body2274
  %inc2287 = add nsw i32 %1234, 1
  store i32 %inc2287, i32* %arrayidx2263, align 4, !tbaa !6
  %cmp22895099 = icmp eq i32 %div, 0
  br i1 %cmp22895099, label %while.end2312, label %while.body2291.lr.ph

while.body2291.lr.ph:                             ; preds = %while.end2283, %while.end2283.thread
  %inc22876883 = phi i32 [ %inc22876881, %while.end2283.thread ], [ %inc2287, %while.end2283 ]
  %arrayidx22946980 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 %1230
  %dec22956981 = add nsw i32 %inc22876883, -1
  store i32 %dec22956981, i32* %arrayidx22946980, align 4, !tbaa !6
  %indvars.iv.next53166982 = add nsw i64 %1230, -1
  %arrayidx23006983 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 %indvars.iv.next53166982
  %1236 = load i32, i32* %arrayidx23006983, align 4, !tbaa !6
  %sub23026984 = add nsw i32 %1236, 15
  %idxprom23036985 = sext i32 %sub23026984 to i64
  %arrayidx23046986 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom23036985
  %1237 = load i8, i8* %arrayidx23046986, align 1, !tbaa !12
  %idxprom23096987 = sext i32 %dec22956981 to i64
  %arrayidx23106988 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom23096987
  store i8 %1237, i8* %arrayidx23106988, align 1, !tbaa !12
  %cmp22896989 = icmp ugt i32 %sub2194, 31
  br i1 %cmp22896989, label %while.body2291.while.body2291_crit_edge.preheader, label %while.end2312

while.body2291.while.body2291_crit_edge.preheader: ; preds = %while.body2291.lr.ph
  br label %while.body2291.while.body2291_crit_edge

while.body2291.while.body2291_crit_edge:          ; preds = %while.body2291.while.body2291_crit_edge, %while.body2291.while.body2291_crit_edge.preheader
  %arrayidx23006991 = phi i32* [ %arrayidx2300, %while.body2291.while.body2291_crit_edge ], [ %arrayidx23006983, %while.body2291.while.body2291_crit_edge.preheader ]
  %indvars.iv.next53166990 = phi i64 [ %indvars.iv.next5316, %while.body2291.while.body2291_crit_edge ], [ %indvars.iv.next53166982, %while.body2291.while.body2291_crit_edge.preheader ]
  %.pre5466 = load i32, i32* %arrayidx23006991, align 4, !tbaa !6
  %arrayidx2294 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 %indvars.iv.next53166990
  %dec2295 = add nsw i32 %.pre5466, -1
  store i32 %dec2295, i32* %arrayidx2294, align 4, !tbaa !6
  %indvars.iv.next5316 = add nsw i64 %indvars.iv.next53166990, -1
  %arrayidx2300 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 %indvars.iv.next5316
  %1238 = load i32, i32* %arrayidx2300, align 4, !tbaa !6
  %sub2302 = add nsw i32 %1238, 15
  %idxprom2303 = sext i32 %sub2302 to i64
  %arrayidx2304 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2303
  %1239 = load i8, i8* %arrayidx2304, align 1, !tbaa !12
  %idxprom2309 = sext i32 %dec2295 to i64
  %arrayidx2310 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2309
  store i8 %1239, i8* %arrayidx2310, align 1, !tbaa !12
  %cmp2289 = icmp sgt i64 %indvars.iv.next53166990, 1
  br i1 %cmp2289, label %while.body2291.while.body2291_crit_edge, label %while.end2312

while.end2312:                                    ; preds = %while.body2291.while.body2291_crit_edge, %while.body2291.lr.ph, %while.end2283
  %arrayidx2314 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 0
  %1240 = load i32, i32* %arrayidx2314, align 4, !tbaa !6
  %dec2315 = add nsw i32 %1240, -1
  store i32 %dec2315, i32* %arrayidx2314, align 4, !tbaa !6
  %idxprom2319 = sext i32 %dec2315 to i64
  %arrayidx2320 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2319
  store i8 %1232, i8* %arrayidx2320, align 1, !tbaa !12
  %1241 = load i32, i32* %arrayidx2314, align 4, !tbaa !6
  %cmp2323 = icmp eq i32 %1241, 0
  br i1 %cmp2323, label %for.body2329.preheader, label %if.end2356

for.body2329.preheader:                           ; preds = %while.end2312
  br label %for.body2329

for.body2329:                                     ; preds = %for.body2329, %for.body2329.preheader
  %indvars.iv5313 = phi i64 [ %indvars.iv.next5314, %for.body2329 ], [ 15, %for.body2329.preheader ]
  %indvars.iv5311 = phi i64 [ %indvars.iv.next5312, %for.body2329 ], [ 4095, %for.body2329.preheader ]
  %arrayidx2337 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 32, i64 %indvars.iv5313
  %1242 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338 = add nsw i32 %1242, 15
  %idxprom2339 = sext i32 %add2338 to i64
  %arrayidx2340 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339
  %1243 = load i8, i8* %arrayidx2340, align 1, !tbaa !12
  %arrayidx2343 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv5311
  store i8 %1243, i8* %arrayidx2343, align 1, !tbaa !12
  %indvars.iv.next5310 = add nsw i64 %indvars.iv5311, -1
  %1244 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.1 = add nsw i32 %1244, 14
  %idxprom2339.1 = sext i32 %add2338.1 to i64
  %arrayidx2340.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.1
  %1245 = load i8, i8* %arrayidx2340.1, align 1, !tbaa !12
  %arrayidx2343.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310
  store i8 %1245, i8* %arrayidx2343.1, align 1, !tbaa !12
  %indvars.iv.next5310.1 = add nsw i64 %indvars.iv5311, -2
  %1246 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.2 = add nsw i32 %1246, 13
  %idxprom2339.2 = sext i32 %add2338.2 to i64
  %arrayidx2340.2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.2
  %1247 = load i8, i8* %arrayidx2340.2, align 1, !tbaa !12
  %arrayidx2343.2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.1
  store i8 %1247, i8* %arrayidx2343.2, align 1, !tbaa !12
  %indvars.iv.next5310.2 = add nsw i64 %indvars.iv5311, -3
  %1248 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.3 = add nsw i32 %1248, 12
  %idxprom2339.3 = sext i32 %add2338.3 to i64
  %arrayidx2340.3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.3
  %1249 = load i8, i8* %arrayidx2340.3, align 1, !tbaa !12
  %arrayidx2343.3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.2
  store i8 %1249, i8* %arrayidx2343.3, align 1, !tbaa !12
  %indvars.iv.next5310.3 = add nsw i64 %indvars.iv5311, -4
  %1250 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.4 = add nsw i32 %1250, 11
  %idxprom2339.4 = sext i32 %add2338.4 to i64
  %arrayidx2340.4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.4
  %1251 = load i8, i8* %arrayidx2340.4, align 1, !tbaa !12
  %arrayidx2343.4 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.3
  store i8 %1251, i8* %arrayidx2343.4, align 1, !tbaa !12
  %indvars.iv.next5310.4 = add nsw i64 %indvars.iv5311, -5
  %1252 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.5 = add nsw i32 %1252, 10
  %idxprom2339.5 = sext i32 %add2338.5 to i64
  %arrayidx2340.5 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.5
  %1253 = load i8, i8* %arrayidx2340.5, align 1, !tbaa !12
  %arrayidx2343.5 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.4
  store i8 %1253, i8* %arrayidx2343.5, align 1, !tbaa !12
  %indvars.iv.next5310.5 = add nsw i64 %indvars.iv5311, -6
  %1254 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.6 = add nsw i32 %1254, 9
  %idxprom2339.6 = sext i32 %add2338.6 to i64
  %arrayidx2340.6 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.6
  %1255 = load i8, i8* %arrayidx2340.6, align 1, !tbaa !12
  %arrayidx2343.6 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.5
  store i8 %1255, i8* %arrayidx2343.6, align 1, !tbaa !12
  %indvars.iv.next5310.6 = add nsw i64 %indvars.iv5311, -7
  %1256 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.7 = add nsw i32 %1256, 8
  %idxprom2339.7 = sext i32 %add2338.7 to i64
  %arrayidx2340.7 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.7
  %1257 = load i8, i8* %arrayidx2340.7, align 1, !tbaa !12
  %arrayidx2343.7 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.6
  store i8 %1257, i8* %arrayidx2343.7, align 1, !tbaa !12
  %indvars.iv.next5310.7 = add nsw i64 %indvars.iv5311, -8
  %1258 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.8 = add nsw i32 %1258, 7
  %idxprom2339.8 = sext i32 %add2338.8 to i64
  %arrayidx2340.8 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.8
  %1259 = load i8, i8* %arrayidx2340.8, align 1, !tbaa !12
  %arrayidx2343.8 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.7
  store i8 %1259, i8* %arrayidx2343.8, align 1, !tbaa !12
  %indvars.iv.next5310.8 = add nsw i64 %indvars.iv5311, -9
  %1260 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.9 = add nsw i32 %1260, 6
  %idxprom2339.9 = sext i32 %add2338.9 to i64
  %arrayidx2340.9 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.9
  %1261 = load i8, i8* %arrayidx2340.9, align 1, !tbaa !12
  %arrayidx2343.9 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.8
  store i8 %1261, i8* %arrayidx2343.9, align 1, !tbaa !12
  %indvars.iv.next5310.9 = add nsw i64 %indvars.iv5311, -10
  %1262 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.10 = add nsw i32 %1262, 5
  %idxprom2339.10 = sext i32 %add2338.10 to i64
  %arrayidx2340.10 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.10
  %1263 = load i8, i8* %arrayidx2340.10, align 1, !tbaa !12
  %arrayidx2343.10 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.9
  store i8 %1263, i8* %arrayidx2343.10, align 1, !tbaa !12
  %indvars.iv.next5310.10 = add nsw i64 %indvars.iv5311, -11
  %1264 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.11 = add nsw i32 %1264, 4
  %idxprom2339.11 = sext i32 %add2338.11 to i64
  %arrayidx2340.11 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.11
  %1265 = load i8, i8* %arrayidx2340.11, align 1, !tbaa !12
  %arrayidx2343.11 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.10
  store i8 %1265, i8* %arrayidx2343.11, align 1, !tbaa !12
  %indvars.iv.next5310.11 = add nsw i64 %indvars.iv5311, -12
  %1266 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.12 = add nsw i32 %1266, 3
  %idxprom2339.12 = sext i32 %add2338.12 to i64
  %arrayidx2340.12 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.12
  %1267 = load i8, i8* %arrayidx2340.12, align 1, !tbaa !12
  %arrayidx2343.12 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.11
  store i8 %1267, i8* %arrayidx2343.12, align 1, !tbaa !12
  %indvars.iv.next5310.12 = add nsw i64 %indvars.iv5311, -13
  %1268 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.13 = add nsw i32 %1268, 2
  %idxprom2339.13 = sext i32 %add2338.13 to i64
  %arrayidx2340.13 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.13
  %1269 = load i8, i8* %arrayidx2340.13, align 1, !tbaa !12
  %arrayidx2343.13 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.12
  store i8 %1269, i8* %arrayidx2343.13, align 1, !tbaa !12
  %indvars.iv.next5310.13 = add nsw i64 %indvars.iv5311, -14
  %1270 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %add2338.14 = add nsw i32 %1270, 1
  %idxprom2339.14 = sext i32 %add2338.14 to i64
  %arrayidx2340.14 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.14
  %1271 = load i8, i8* %arrayidx2340.14, align 1, !tbaa !12
  %arrayidx2343.14 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.13
  store i8 %1271, i8* %arrayidx2343.14, align 1, !tbaa !12
  %indvars.iv.next5310.14 = add nsw i64 %indvars.iv5311, -15
  %1272 = load i32, i32* %arrayidx2337, align 4, !tbaa !6
  %idxprom2339.15 = sext i32 %1272 to i64
  %arrayidx2340.15 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %idxprom2339.15
  %1273 = load i8, i8* %arrayidx2340.15, align 1, !tbaa !12
  %arrayidx2343.15 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 31, i64 %indvars.iv.next5310.14
  store i8 %1273, i8* %arrayidx2343.15, align 1, !tbaa !12
  %1274 = trunc i64 %indvars.iv5311 to i32
  %1275 = add i32 %1274, -15
  store i32 %1275, i32* %arrayidx2337, align 4, !tbaa !6
  %indvars.iv.next5314 = add nsw i64 %indvars.iv5313, -1
  %cmp2327 = icmp eq i64 %indvars.iv5313, 0
  %indvars.iv.next5312 = add nsw i64 %indvars.iv5311, -16
  br i1 %cmp2327, label %if.end2356, label %for.body2329

if.end2356:                                       ; preds = %for.body2329, %while.end2312, %while.end2256
  %uc.0 = phi i8 [ %1155, %while.end2256 ], [ %1232, %while.end2312 ], [ %1232, %for.body2329 ]
  %idxprom2359 = zext i8 %uc.0 to i64
  %arrayidx2360 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 30, i64 %idxprom2359
  %1276 = load i8, i8* %arrayidx2360, align 1, !tbaa !12
  %idxprom2361 = zext i8 %1276 to i64
  %arrayidx2362 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 16, i64 %idxprom2361
  %1277 = load i32, i32* %arrayidx2362, align 4, !tbaa !6
  %inc2363 = add nsw i32 %1277, 1
  store i32 %inc2363, i32* %arrayidx2362, align 4, !tbaa !6
  %smallDecompress2364 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 10
  %1278 = load i8, i8* %smallDecompress2364, align 4, !tbaa !109
  %tobool2365 = icmp eq i8 %1278, 0
  %1279 = load i8, i8* %arrayidx2360, align 1, !tbaa !12
  br i1 %tobool2365, label %if.else2374, label %if.then2366

if.then2366:                                      ; preds = %if.end2356
  %conv2370 = zext i8 %1279 to i16
  %ll162371 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 21
  %1280 = load i16*, i16** %ll162371, align 8, !tbaa !120
  %idxprom2372 = sext i32 %nblock.3 to i64
  %arrayidx2373 = getelementptr inbounds i16, i16* %1280, i64 %idxprom2372
  store i16 %conv2370, i16* %arrayidx2373, align 2, !tbaa !33
  br label %if.end2382

if.else2374:                                      ; preds = %if.end2356
  %conv2378 = zext i8 %1279 to i32
  %tt2379 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 20
  %1281 = load i32*, i32** %tt2379, align 8, !tbaa !124
  %idxprom2380 = sext i32 %nblock.3 to i64
  %arrayidx2381 = getelementptr inbounds i32, i32* %1281, i64 %idxprom2380
  store i32 %conv2378, i32* %arrayidx2381, align 4, !tbaa !6
  br label %if.end2382

if.end2382:                                       ; preds = %if.else2374, %if.then2366
  %inc2383 = add nsw i32 %nblock.3, 1
  %cmp2384 = icmp eq i32 %groupPos.4, 0
  br i1 %cmp2384, label %if.then2386, label %if.end2411

if.then2386:                                      ; preds = %if.end2382
  %inc2387 = add nsw i32 %groupNo.4, 1
  %cmp2388 = icmp slt i32 %inc2387, %nSelectors.12
  br i1 %cmp2388, label %if.end2391, label %save_state_and_return

if.end2391:                                       ; preds = %if.then2386
  %idxprom2393 = sext i32 %inc2387 to i64
  %arrayidx2394 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 33, i64 %idxprom2393
  %1282 = load i8, i8* %arrayidx2394, align 1, !tbaa !12
  %conv2395 = zext i8 %1282 to i32
  %idxprom2397 = zext i8 %1282 to i64
  %arrayidx2398 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 39, i64 %idxprom2397
  %1283 = load i32, i32* %arrayidx2398, align 4, !tbaa !6
  %arrayidx2402 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 36, i64 %idxprom2397, i64 0
  %arrayidx2406 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 38, i64 %idxprom2397, i64 0
  %arrayidx2410 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 37, i64 %idxprom2397, i64 0
  br label %if.end2411

if.end2411:                                       ; preds = %if.end2391, %if.end2382
  %gPerm.10 = phi i32* [ %arrayidx2406, %if.end2391 ], [ %gPerm.4, %if.end2382 ]
  %gBase.10 = phi i32* [ %arrayidx2410, %if.end2391 ], [ %gBase.4, %if.end2382 ]
  %gLimit.10 = phi i32* [ %arrayidx2402, %if.end2391 ], [ %gLimit.4, %if.end2382 ]
  %gMinlen.10 = phi i32 [ %1283, %if.end2391 ], [ %gMinlen.4, %if.end2382 ]
  %gSel.10 = phi i32 [ %conv2395, %if.end2391 ], [ %gSel.4, %if.end2382 ]
  %groupPos.10 = phi i32 [ 50, %if.end2391 ], [ %groupPos.4, %if.end2382 ]
  %groupNo.10 = phi i32 [ %inc2387, %if.end2391 ], [ %groupNo.4, %if.end2382 ]
  %dec2412 = add nsw i32 %groupPos.10, -1
  br label %sw.bb2413

sw.bb2413:                                        ; preds = %if.end2411, %if.end
  %1284 = phi i32 [ %1107, %if.end2411 ], [ %.pre5382, %if.end ]
  %save_j3.pre-phi6770 = phi i32* [ %save_j3.pre-phi6775, %if.end2411 ], [ %save_j3.phi.trans.insert, %if.end ]
  %save_t4.pre-phi6714 = phi i32* [ %save_t4.pre-phi6719, %if.end2411 ], [ %save_t4.phi.trans.insert, %if.end ]
  %save_alphaSize5.pre-phi6658 = phi i32* [ %save_alphaSize5.pre-phi6663, %if.end2411 ], [ %save_alphaSize5.phi.trans.insert, %if.end ]
  %save_nGroups6.pre-phi6602 = phi i32* [ %save_nGroups6.pre-phi6607, %if.end2411 ], [ %save_nGroups6.phi.trans.insert, %if.end ]
  %save_nSelectors7.pre-phi6546 = phi i32* [ %save_nSelectors7.pre-phi6551, %if.end2411 ], [ %save_nSelectors7.phi.trans.insert, %if.end ]
  %save_EOB8.pre-phi6490 = phi i32* [ %save_EOB8.pre-phi6495, %if.end2411 ], [ %save_EOB8.phi.trans.insert, %if.end ]
  %save_groupNo9.pre-phi6434 = phi i32* [ %save_groupNo9.pre-phi6439, %if.end2411 ], [ %save_groupNo9.phi.trans.insert, %if.end ]
  %save_groupPos10.pre-phi6378 = phi i32* [ %save_groupPos10.pre-phi6383, %if.end2411 ], [ %save_groupPos10.phi.trans.insert, %if.end ]
  %save_nextSym11.pre-phi6322 = phi i32* [ %save_nextSym11.pre-phi6327, %if.end2411 ], [ %save_nextSym11.phi.trans.insert, %if.end ]
  %save_nblockMAX12.pre-phi6266 = phi i32* [ %save_nblockMAX12.pre-phi6271, %if.end2411 ], [ %save_nblockMAX12.phi.trans.insert, %if.end ]
  %save_nblock13.pre-phi6210 = phi i32* [ %save_nblock13.pre-phi6215, %if.end2411 ], [ %save_nblock13.phi.trans.insert, %if.end ]
  %save_es14.pre-phi6154 = phi i32* [ %save_es14.pre-phi6159, %if.end2411 ], [ %save_es14.phi.trans.insert, %if.end ]
  %save_N15.pre-phi6098 = phi i32* [ %save_N15.pre-phi6103, %if.end2411 ], [ %save_N15.phi.trans.insert, %if.end ]
  %save_curr16.pre-phi6042 = phi i32* [ %save_curr16.pre-phi6047, %if.end2411 ], [ %save_curr16.phi.trans.insert, %if.end ]
  %save_zt17.pre-phi5986 = phi i32* [ %save_zt17.pre-phi5991, %if.end2411 ], [ %save_zt17.phi.trans.insert, %if.end ]
  %save_zn18.pre-phi5930 = phi i32* [ %save_zn18.pre-phi5935, %if.end2411 ], [ %save_zn18.phi.trans.insert, %if.end ]
  %save_zvec19.pre-phi5874 = phi i32* [ %save_zvec19.pre-phi5879, %if.end2411 ], [ %save_zvec19.phi.trans.insert, %if.end ]
  %save_zj20.pre-phi5818 = phi i32* [ %save_zj20.pre-phi5823, %if.end2411 ], [ %save_zj20.phi.trans.insert, %if.end ]
  %save_gSel21.pre-phi5762 = phi i32* [ %save_gSel21.pre-phi5767, %if.end2411 ], [ %save_gSel21.phi.trans.insert, %if.end ]
  %save_gMinlen22.pre-phi5706 = phi i32* [ %save_gMinlen22.pre-phi5711, %if.end2411 ], [ %save_gMinlen22.phi.trans.insert, %if.end ]
  %save_gLimit23.pre-phi5650 = phi i32** [ %save_gLimit23.pre-phi5655, %if.end2411 ], [ %save_gLimit23.phi.trans.insert, %if.end ]
  %save_gBase24.pre-phi5594 = phi i32** [ %save_gBase24.pre-phi5599, %if.end2411 ], [ %save_gBase24.phi.trans.insert, %if.end ]
  %save_gPerm25.pre-phi5538 = phi i32** [ %save_gPerm25.pre-phi5543, %if.end2411 ], [ %save_gPerm25.phi.trans.insert, %if.end ]
  %gPerm.11 = phi i32* [ %gPerm.10, %if.end2411 ], [ %.pre5390, %if.end ]
  %gBase.11 = phi i32* [ %gBase.10, %if.end2411 ], [ %.pre5389, %if.end ]
  %gLimit.11 = phi i32* [ %gLimit.10, %if.end2411 ], [ %.pre5388, %if.end ]
  %gMinlen.11 = phi i32 [ %gMinlen.10, %if.end2411 ], [ %.pre5387, %if.end ]
  %gSel.11 = phi i32 [ %gSel.10, %if.end2411 ], [ %.pre5386, %if.end ]
  %zj.7 = phi i32 [ %zj.2, %if.end2411 ], [ %.pre5385, %if.end ]
  %zvec.7 = phi i32 [ %zvec.2, %if.end2411 ], [ %.pre5384, %if.end ]
  %zn.8 = phi i32 [ %gMinlen.10, %if.end2411 ], [ %.pre5383, %if.end ]
  %curr.15 = phi i32 [ %curr.10, %if.end2411 ], [ %.pre5381, %if.end ]
  %N.5 = phi i32 [ %N.0, %if.end2411 ], [ %.pre5380, %if.end ]
  %es.9 = phi i32 [ %es.0, %if.end2411 ], [ %.pre5379, %if.end ]
  %nblock.11 = phi i32 [ %inc2383, %if.end2411 ], [ %.pre5378, %if.end ]
  %nblockMAX.8 = phi i32 [ %nblockMAX.3, %if.end2411 ], [ %.pre5377, %if.end ]
  %nextSym.5 = phi i32 [ %nextSym.0, %if.end2411 ], [ %.pre5376, %if.end ]
  %groupPos.11 = phi i32 [ %dec2412, %if.end2411 ], [ %.pre5375, %if.end ]
  %groupNo.11 = phi i32 [ %groupNo.10, %if.end2411 ], [ %.pre5374, %if.end ]
  %EOB.8 = phi i32 [ %EOB.3, %if.end2411 ], [ %.pre5373, %if.end ]
  %nSelectors.17 = phi i32 [ %nSelectors.12, %if.end2411 ], [ %.pre5372, %if.end ]
  %nGroups.18 = phi i32 [ %nGroups.13, %if.end2411 ], [ %.pre5371, %if.end ]
  %alphaSize.19 = phi i32 [ %alphaSize.14, %if.end2411 ], [ %.pre5370, %if.end ]
  %t.15 = phi i32 [ %t.10, %if.end2411 ], [ %.pre5369, %if.end ]
  %j.23 = phi i32 [ %j.18, %if.end2411 ], [ %.pre5368, %if.end ]
  %i.29 = phi i32 [ %i.24, %if.end2411 ], [ %.pre, %if.end ]
  store i32 40, i32* %state, align 8, !tbaa !105
  %bsLive2417 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  %1285 = load i32, i32* %bsLive2417, align 4, !tbaa !106
  %cmp24185087 = icmp slt i32 %1285, %zn.8
  %bsBuff2438 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp24185087, label %if.end2431.lr.ph, label %sw.bb2413.if.then2420_crit_edge

sw.bb2413.if.then2420_crit_edge:                  ; preds = %sw.bb2413
  %.pre5469 = load i32, i32* %bsBuff2438, align 8, !tbaa !107
  br label %if.then2420

if.end2431.lr.ph:                                 ; preds = %sw.bb2413
  %.pre5467 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in2433.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5467, i64 0, i32 1
  %.pre5468 = load i32, i32* %avail_in2433.phi.trans.insert, align 8, !tbaa !98
  %next_in2441 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5467, i64 0, i32 0
  %total_in_lo322454 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5467, i64 0, i32 2
  %total_in_hi322462 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5467, i64 0, i32 3
  br label %if.end2431

if.then2420:                                      ; preds = %if.end2464, %sw.bb2413.if.then2420_crit_edge
  %1286 = phi i32 [ %.pre5469, %sw.bb2413.if.then2420_crit_edge ], [ %or2443, %if.end2464 ]
  %.lcssa4943 = phi i32 [ %1285, %sw.bb2413.if.then2420_crit_edge ], [ %add2446, %if.end2464 ]
  %sub2424 = sub nsw i32 %.lcssa4943, %zn.8
  %shr2425 = lshr i32 %1286, %sub2424
  %shl2426 = shl i32 1, %zn.8
  %sub2427 = add nsw i32 %shl2426, -1
  %and2428 = and i32 %shr2425, %sub2427
  store i32 %sub2424, i32* %bsLive2417, align 4, !tbaa !106
  br label %while.cond2466

if.end2431:                                       ; preds = %if.end2464, %if.end2431.lr.ph
  %1287 = phi i32 [ %.pre5468, %if.end2431.lr.ph ], [ %dec2452, %if.end2464 ]
  %1288 = phi i32 [ %1285, %if.end2431.lr.ph ], [ %add2446, %if.end2464 ]
  %cmp2434 = icmp eq i32 %1287, 0
  br i1 %cmp2434, label %save_state_and_return, label %if.end2437

if.end2437:                                       ; preds = %if.end2431
  %1289 = load i32, i32* %bsBuff2438, align 8, !tbaa !107
  %shl2439 = shl i32 %1289, 8
  %1290 = load i8*, i8** %next_in2441, align 8, !tbaa !102
  %1291 = load i8, i8* %1290, align 1, !tbaa !12
  %conv2442 = zext i8 %1291 to i32
  %or2443 = or i32 %shl2439, %conv2442
  store i32 %or2443, i32* %bsBuff2438, align 8, !tbaa !107
  %add2446 = add nsw i32 %1288, 8
  store i32 %add2446, i32* %bsLive2417, align 4, !tbaa !106
  %incdec.ptr2449 = getelementptr inbounds i8, i8* %1290, i64 1
  store i8* %incdec.ptr2449, i8** %next_in2441, align 8, !tbaa !102
  %dec2452 = add i32 %1287, -1
  store i32 %dec2452, i32* %avail_in2433.phi.trans.insert, align 8, !tbaa !98
  %1292 = load i32, i32* %total_in_lo322454, align 4, !tbaa !88
  %inc2455 = add i32 %1292, 1
  store i32 %inc2455, i32* %total_in_lo322454, align 4, !tbaa !88
  %cmp2458 = icmp eq i32 %inc2455, 0
  br i1 %cmp2458, label %if.then2460, label %if.end2464

if.then2460:                                      ; preds = %if.end2437
  %1293 = load i32, i32* %total_in_hi322462, align 8, !tbaa !89
  %inc2463 = add i32 %1293, 1
  store i32 %inc2463, i32* %total_in_hi322462, align 8, !tbaa !89
  br label %if.end2464

if.end2464:                                       ; preds = %if.then2460, %if.end2437
  %cmp2418 = icmp slt i32 %add2446, %zn.8
  br i1 %cmp2418, label %if.end2431, label %if.then2420

while.cond2466:                                   ; preds = %if.then2486, %if.then2420
  %1294 = phi i32 [ %1297, %if.then2486 ], [ %1284, %if.then2420 ]
  %save_j3.pre-phi6769 = phi i32* [ %save_j3.pre-phi6768, %if.then2486 ], [ %save_j3.pre-phi6770, %if.then2420 ]
  %save_t4.pre-phi6713 = phi i32* [ %save_t4.pre-phi6712, %if.then2486 ], [ %save_t4.pre-phi6714, %if.then2420 ]
  %save_alphaSize5.pre-phi6657 = phi i32* [ %save_alphaSize5.pre-phi6656, %if.then2486 ], [ %save_alphaSize5.pre-phi6658, %if.then2420 ]
  %save_nGroups6.pre-phi6601 = phi i32* [ %save_nGroups6.pre-phi6600, %if.then2486 ], [ %save_nGroups6.pre-phi6602, %if.then2420 ]
  %save_nSelectors7.pre-phi6545 = phi i32* [ %save_nSelectors7.pre-phi6544, %if.then2486 ], [ %save_nSelectors7.pre-phi6546, %if.then2420 ]
  %save_EOB8.pre-phi6489 = phi i32* [ %save_EOB8.pre-phi6488, %if.then2486 ], [ %save_EOB8.pre-phi6490, %if.then2420 ]
  %save_groupNo9.pre-phi6433 = phi i32* [ %save_groupNo9.pre-phi6432, %if.then2486 ], [ %save_groupNo9.pre-phi6434, %if.then2420 ]
  %save_groupPos10.pre-phi6377 = phi i32* [ %save_groupPos10.pre-phi6376, %if.then2486 ], [ %save_groupPos10.pre-phi6378, %if.then2420 ]
  %save_nextSym11.pre-phi6321 = phi i32* [ %save_nextSym11.pre-phi6320, %if.then2486 ], [ %save_nextSym11.pre-phi6322, %if.then2420 ]
  %save_nblockMAX12.pre-phi6265 = phi i32* [ %save_nblockMAX12.pre-phi6264, %if.then2486 ], [ %save_nblockMAX12.pre-phi6266, %if.then2420 ]
  %save_nblock13.pre-phi6209 = phi i32* [ %save_nblock13.pre-phi6208, %if.then2486 ], [ %save_nblock13.pre-phi6210, %if.then2420 ]
  %save_es14.pre-phi6153 = phi i32* [ %save_es14.pre-phi6152, %if.then2486 ], [ %save_es14.pre-phi6154, %if.then2420 ]
  %save_N15.pre-phi6097 = phi i32* [ %save_N15.pre-phi6096, %if.then2486 ], [ %save_N15.pre-phi6098, %if.then2420 ]
  %save_curr16.pre-phi6041 = phi i32* [ %save_curr16.pre-phi6040, %if.then2486 ], [ %save_curr16.pre-phi6042, %if.then2420 ]
  %save_zt17.pre-phi5985 = phi i32* [ %save_zt17.pre-phi5984, %if.then2486 ], [ %save_zt17.pre-phi5986, %if.then2420 ]
  %save_zn18.pre-phi5929 = phi i32* [ %save_zn18.pre-phi5928, %if.then2486 ], [ %save_zn18.pre-phi5930, %if.then2420 ]
  %save_zvec19.pre-phi5873 = phi i32* [ %save_zvec19.pre-phi5872, %if.then2486 ], [ %save_zvec19.pre-phi5874, %if.then2420 ]
  %save_zj20.pre-phi5817 = phi i32* [ %save_zj20.pre-phi5816, %if.then2486 ], [ %save_zj20.pre-phi5818, %if.then2420 ]
  %save_gSel21.pre-phi5761 = phi i32* [ %save_gSel21.pre-phi5760, %if.then2486 ], [ %save_gSel21.pre-phi5762, %if.then2420 ]
  %save_gMinlen22.pre-phi5705 = phi i32* [ %save_gMinlen22.pre-phi5704, %if.then2486 ], [ %save_gMinlen22.pre-phi5706, %if.then2420 ]
  %save_gLimit23.pre-phi5649 = phi i32** [ %save_gLimit23.pre-phi5648, %if.then2486 ], [ %save_gLimit23.pre-phi5650, %if.then2420 ]
  %save_gBase24.pre-phi5593 = phi i32** [ %save_gBase24.pre-phi5592, %if.then2486 ], [ %save_gBase24.pre-phi5594, %if.then2420 ]
  %save_gPerm25.pre-phi5537 = phi i32** [ %save_gPerm25.pre-phi5536, %if.then2486 ], [ %save_gPerm25.pre-phi5538, %if.then2420 ]
  %1295 = phi i32 [ %sub2490, %if.then2486 ], [ %sub2424, %if.then2420 ]
  %gPerm.12 = phi i32* [ %gPerm.13, %if.then2486 ], [ %gPerm.11, %if.then2420 ]
  %gBase.12 = phi i32* [ %gBase.13, %if.then2486 ], [ %gBase.11, %if.then2420 ]
  %gLimit.12 = phi i32* [ %gLimit.13, %if.then2486 ], [ %gLimit.11, %if.then2420 ]
  %gMinlen.12 = phi i32 [ %gMinlen.13, %if.then2486 ], [ %gMinlen.11, %if.then2420 ]
  %gSel.12 = phi i32 [ %gSel.13, %if.then2486 ], [ %gSel.11, %if.then2420 ]
  %zj.8 = phi i32 [ %and2492, %if.then2486 ], [ %zj.7, %if.then2420 ]
  %zvec.8 = phi i32 [ %or2531, %if.then2486 ], [ %and2428, %if.then2420 ]
  %zn.9 = phi i32 [ %zn.10, %if.then2486 ], [ %zn.8, %if.then2420 ]
  %curr.16 = phi i32 [ %curr.17, %if.then2486 ], [ %curr.15, %if.then2420 ]
  %N.6 = phi i32 [ %N.7, %if.then2486 ], [ %N.5, %if.then2420 ]
  %es.10 = phi i32 [ %es.11, %if.then2486 ], [ %es.9, %if.then2420 ]
  %nblock.12 = phi i32 [ %nblock.13, %if.then2486 ], [ %nblock.11, %if.then2420 ]
  %nblockMAX.9 = phi i32 [ %nblockMAX.10, %if.then2486 ], [ %nblockMAX.8, %if.then2420 ]
  %nextSym.6 = phi i32 [ %nextSym.7, %if.then2486 ], [ %nextSym.5, %if.then2420 ]
  %groupPos.12 = phi i32 [ %groupPos.13, %if.then2486 ], [ %groupPos.11, %if.then2420 ]
  %groupNo.12 = phi i32 [ %groupNo.13, %if.then2486 ], [ %groupNo.11, %if.then2420 ]
  %EOB.9 = phi i32 [ %EOB.10, %if.then2486 ], [ %EOB.8, %if.then2420 ]
  %nSelectors.18 = phi i32 [ %nSelectors.19, %if.then2486 ], [ %nSelectors.17, %if.then2420 ]
  %nGroups.19 = phi i32 [ %nGroups.20, %if.then2486 ], [ %nGroups.18, %if.then2420 ]
  %alphaSize.20 = phi i32 [ %alphaSize.21, %if.then2486 ], [ %alphaSize.19, %if.then2420 ]
  %t.16 = phi i32 [ %t.17, %if.then2486 ], [ %t.15, %if.then2420 ]
  %j.24 = phi i32 [ %j.25, %if.then2486 ], [ %j.23, %if.then2420 ]
  %i.30 = phi i32 [ %i.31, %if.then2486 ], [ %i.29, %if.then2420 ]
  %cmp2468 = icmp sgt i32 %zn.9, 20
  br i1 %cmp2468, label %save_state_and_return, label %if.end2471

if.end2471:                                       ; preds = %while.cond2466
  %idxprom2472 = sext i32 %zn.9 to i64
  %arrayidx2473 = getelementptr inbounds i32, i32* %gLimit.12, i64 %idxprom2472
  %1296 = load i32, i32* %arrayidx2473, align 4, !tbaa !6
  %cmp2474 = icmp sgt i32 %zvec.8, %1296
  br i1 %cmp2474, label %if.end2477, label %while.end2532

if.end2477:                                       ; preds = %if.end2471
  %inc2478 = add nsw i32 %zn.9, 1
  %.pre5529 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 8
  br label %sw.bb2479

sw.bb2479:                                        ; preds = %if.end2477, %if.end.sw.bb2479_crit_edge
  %1297 = phi i32 [ %.pre5382, %if.end.sw.bb2479_crit_edge ], [ %1294, %if.end2477 ]
  %save_j3.pre-phi6768 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_j3.pre-phi6769, %if.end2477 ]
  %save_t4.pre-phi6712 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_t4.pre-phi6713, %if.end2477 ]
  %save_alphaSize5.pre-phi6656 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_alphaSize5.pre-phi6657, %if.end2477 ]
  %save_nGroups6.pre-phi6600 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_nGroups6.pre-phi6601, %if.end2477 ]
  %save_nSelectors7.pre-phi6544 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_nSelectors7.pre-phi6545, %if.end2477 ]
  %save_EOB8.pre-phi6488 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_EOB8.pre-phi6489, %if.end2477 ]
  %save_groupNo9.pre-phi6432 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_groupNo9.pre-phi6433, %if.end2477 ]
  %save_groupPos10.pre-phi6376 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_groupPos10.pre-phi6377, %if.end2477 ]
  %save_nextSym11.pre-phi6320 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_nextSym11.pre-phi6321, %if.end2477 ]
  %save_nblockMAX12.pre-phi6264 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_nblockMAX12.pre-phi6265, %if.end2477 ]
  %save_nblock13.pre-phi6208 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_nblock13.pre-phi6209, %if.end2477 ]
  %save_es14.pre-phi6152 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_es14.pre-phi6153, %if.end2477 ]
  %save_N15.pre-phi6096 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_N15.pre-phi6097, %if.end2477 ]
  %save_curr16.pre-phi6040 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_curr16.pre-phi6041, %if.end2477 ]
  %save_zt17.pre-phi5984 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_zt17.pre-phi5985, %if.end2477 ]
  %save_zn18.pre-phi5928 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_zn18.pre-phi5929, %if.end2477 ]
  %save_zvec19.pre-phi5872 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_zvec19.pre-phi5873, %if.end2477 ]
  %save_zj20.pre-phi5816 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_zj20.pre-phi5817, %if.end2477 ]
  %save_gSel21.pre-phi5760 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_gSel21.pre-phi5761, %if.end2477 ]
  %save_gMinlen22.pre-phi5704 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_gMinlen22.pre-phi5705, %if.end2477 ]
  %save_gLimit23.pre-phi5648 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_gLimit23.pre-phi5649, %if.end2477 ]
  %save_gBase24.pre-phi5592 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_gBase24.pre-phi5593, %if.end2477 ]
  %save_gPerm25.pre-phi5536 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %save_gPerm25.pre-phi5537, %if.end2477 ]
  %bsLive2483.pre-phi = phi i32* [ %bsLive2483.phi.trans.insert, %if.end.sw.bb2479_crit_edge ], [ %.pre5529, %if.end2477 ]
  %1298 = phi i32 [ %.pre5470, %if.end.sw.bb2479_crit_edge ], [ %1295, %if.end2477 ]
  %gPerm.13 = phi i32* [ %.pre5390, %if.end.sw.bb2479_crit_edge ], [ %gPerm.12, %if.end2477 ]
  %gBase.13 = phi i32* [ %.pre5389, %if.end.sw.bb2479_crit_edge ], [ %gBase.12, %if.end2477 ]
  %gLimit.13 = phi i32* [ %.pre5388, %if.end.sw.bb2479_crit_edge ], [ %gLimit.12, %if.end2477 ]
  %gMinlen.13 = phi i32 [ %.pre5387, %if.end.sw.bb2479_crit_edge ], [ %gMinlen.12, %if.end2477 ]
  %gSel.13 = phi i32 [ %.pre5386, %if.end.sw.bb2479_crit_edge ], [ %gSel.12, %if.end2477 ]
  %zj.9 = phi i32 [ %.pre5385, %if.end.sw.bb2479_crit_edge ], [ %zj.8, %if.end2477 ]
  %zvec.9 = phi i32 [ %.pre5384, %if.end.sw.bb2479_crit_edge ], [ %zvec.8, %if.end2477 ]
  %zn.10 = phi i32 [ %.pre5383, %if.end.sw.bb2479_crit_edge ], [ %inc2478, %if.end2477 ]
  %curr.17 = phi i32 [ %.pre5381, %if.end.sw.bb2479_crit_edge ], [ %curr.16, %if.end2477 ]
  %N.7 = phi i32 [ %.pre5380, %if.end.sw.bb2479_crit_edge ], [ %N.6, %if.end2477 ]
  %es.11 = phi i32 [ %.pre5379, %if.end.sw.bb2479_crit_edge ], [ %es.10, %if.end2477 ]
  %nblock.13 = phi i32 [ %.pre5378, %if.end.sw.bb2479_crit_edge ], [ %nblock.12, %if.end2477 ]
  %nblockMAX.10 = phi i32 [ %.pre5377, %if.end.sw.bb2479_crit_edge ], [ %nblockMAX.9, %if.end2477 ]
  %nextSym.7 = phi i32 [ %.pre5376, %if.end.sw.bb2479_crit_edge ], [ %nextSym.6, %if.end2477 ]
  %groupPos.13 = phi i32 [ %.pre5375, %if.end.sw.bb2479_crit_edge ], [ %groupPos.12, %if.end2477 ]
  %groupNo.13 = phi i32 [ %.pre5374, %if.end.sw.bb2479_crit_edge ], [ %groupNo.12, %if.end2477 ]
  %EOB.10 = phi i32 [ %.pre5373, %if.end.sw.bb2479_crit_edge ], [ %EOB.9, %if.end2477 ]
  %nSelectors.19 = phi i32 [ %.pre5372, %if.end.sw.bb2479_crit_edge ], [ %nSelectors.18, %if.end2477 ]
  %nGroups.20 = phi i32 [ %.pre5371, %if.end.sw.bb2479_crit_edge ], [ %nGroups.19, %if.end2477 ]
  %alphaSize.21 = phi i32 [ %.pre5370, %if.end.sw.bb2479_crit_edge ], [ %alphaSize.20, %if.end2477 ]
  %t.17 = phi i32 [ %.pre5369, %if.end.sw.bb2479_crit_edge ], [ %t.16, %if.end2477 ]
  %j.25 = phi i32 [ %.pre5368, %if.end.sw.bb2479_crit_edge ], [ %j.24, %if.end2477 ]
  %i.31 = phi i32 [ %.pre, %if.end.sw.bb2479_crit_edge ], [ %i.30, %if.end2477 ]
  store i32 41, i32* %state, align 8, !tbaa !105
  %cmp24845084 = icmp sgt i32 %1298, 0
  %bsBuff2488.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp24845084, label %sw.bb2479.if.then2486_crit_edge, label %if.end2495.preheader

if.end2495.preheader:                             ; preds = %sw.bb2479
  br label %if.end2495

sw.bb2479.if.then2486_crit_edge:                  ; preds = %sw.bb2479
  %.pre5471 = load i32, i32* %bsBuff2488.phi.trans.insert, align 8, !tbaa !107
  br label %if.then2486

if.then2486:                                      ; preds = %if.end2528, %sw.bb2479.if.then2486_crit_edge
  %1299 = phi i32 [ %.pre5471, %sw.bb2479.if.then2486_crit_edge ], [ %or2507, %if.end2528 ]
  %.lcssa4940 = phi i32 [ %1298, %sw.bb2479.if.then2486_crit_edge ], [ %add2510, %if.end2528 ]
  %sub2490 = add nsw i32 %.lcssa4940, -1
  %shr2491 = lshr i32 %1299, %sub2490
  %and2492 = and i32 %shr2491, 1
  store i32 %sub2490, i32* %bsLive2483.pre-phi, align 4, !tbaa !106
  %shl2530 = shl i32 %zvec.9, 1
  %or2531 = or i32 %and2492, %shl2530
  br label %while.cond2466

if.end2495:                                       ; preds = %if.end2528, %if.end2495.preheader
  %1300 = phi i32 [ %add2510, %if.end2528 ], [ %1298, %if.end2495.preheader ]
  %1301 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in2497 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1301, i64 0, i32 1
  %1302 = load i32, i32* %avail_in2497, align 8, !tbaa !98
  %cmp2498 = icmp eq i32 %1302, 0
  br i1 %cmp2498, label %save_state_and_return, label %if.end2501

if.end2501:                                       ; preds = %if.end2495
  %1303 = load i32, i32* %bsBuff2488.phi.trans.insert, align 8, !tbaa !107
  %shl2503 = shl i32 %1303, 8
  %next_in2505 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1301, i64 0, i32 0
  %1304 = load i8*, i8** %next_in2505, align 8, !tbaa !102
  %1305 = load i8, i8* %1304, align 1, !tbaa !12
  %conv2506 = zext i8 %1305 to i32
  %or2507 = or i32 %shl2503, %conv2506
  store i32 %or2507, i32* %bsBuff2488.phi.trans.insert, align 8, !tbaa !107
  %add2510 = add nsw i32 %1300, 8
  store i32 %add2510, i32* %bsLive2483.pre-phi, align 4, !tbaa !106
  %incdec.ptr2513 = getelementptr inbounds i8, i8* %1304, i64 1
  store i8* %incdec.ptr2513, i8** %next_in2505, align 8, !tbaa !102
  %dec2516 = add i32 %1302, -1
  store i32 %dec2516, i32* %avail_in2497, align 8, !tbaa !98
  %total_in_lo322518 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1301, i64 0, i32 2
  %1306 = load i32, i32* %total_in_lo322518, align 4, !tbaa !88
  %inc2519 = add i32 %1306, 1
  store i32 %inc2519, i32* %total_in_lo322518, align 4, !tbaa !88
  %cmp2522 = icmp eq i32 %inc2519, 0
  br i1 %cmp2522, label %if.then2524, label %if.end2528

if.then2524:                                      ; preds = %if.end2501
  %total_in_hi322526 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1301, i64 0, i32 3
  %1307 = load i32, i32* %total_in_hi322526, align 8, !tbaa !89
  %inc2527 = add i32 %1307, 1
  store i32 %inc2527, i32* %total_in_hi322526, align 8, !tbaa !89
  br label %if.end2528

if.end2528:                                       ; preds = %if.then2524, %if.end2501
  %cmp2484 = icmp sgt i32 %1300, -8
  br i1 %cmp2484, label %if.then2486, label %if.end2495

while.end2532:                                    ; preds = %if.end2471
  %arrayidx2534 = getelementptr inbounds i32, i32* %gBase.12, i64 %idxprom2472
  %1308 = load i32, i32* %arrayidx2534, align 4, !tbaa !6
  %sub2535 = sub nsw i32 %zvec.8, %1308
  %1309 = icmp ugt i32 %sub2535, 257
  br i1 %1309, label %save_state_and_return, label %if.end2545

if.end2545:                                       ; preds = %while.end2532
  %idxprom2549 = sext i32 %sub2535 to i64
  %arrayidx2550 = getelementptr inbounds i32, i32* %gPerm.12, i64 %idxprom2549
  %1310 = load i32, i32* %arrayidx2550, align 4, !tbaa !6
  br label %while.cond1942

while.end2551:                                    ; preds = %while.cond1942
  %origPtr2552 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 13
  %1311 = load i32, i32* %origPtr2552, align 8, !tbaa !174
  %cmp2553 = icmp sgt i32 %1311, -1
  %cmp2557 = icmp slt i32 %1311, %nblock.3
  %or.cond4832 = and i1 %cmp2553, %cmp2557
  br i1 %or.cond4832, label %if.end2560, label %save_state_and_return

if.end2560:                                       ; preds = %while.end2551
  %arrayidx2561 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 0
  store i32 0, i32* %arrayidx2561, align 8, !tbaa !6
  br label %vector.body7076

vector.body7076:                                  ; preds = %vector.body7076, %if.end2560
  %index7080 = phi i64 [ 0, %if.end2560 ], [ %index.next7081.3, %vector.body7076 ]
  %offset.idx7084 = or i64 %index7080, 1
  %1312 = add nsw i64 %offset.idx7084, -1
  %1313 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 16, i64 %1312
  %1314 = bitcast i32* %1313 to <4 x i32>*
  %wide.load7088 = load <4 x i32>, <4 x i32>* %1314, align 4, !tbaa !6
  %1315 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %offset.idx7084
  %1316 = bitcast i32* %1315 to <4 x i32>*
  store <4 x i32> %wide.load7088, <4 x i32>* %1316, align 4, !tbaa !6
  %offset.idx7084.1 = or i64 %index7080, 5
  %1317 = add nsw i64 %offset.idx7084.1, -1
  %1318 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 16, i64 %1317
  %1319 = bitcast i32* %1318 to <4 x i32>*
  %wide.load7088.1 = load <4 x i32>, <4 x i32>* %1319, align 4, !tbaa !6
  %1320 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %offset.idx7084.1
  %1321 = bitcast i32* %1320 to <4 x i32>*
  store <4 x i32> %wide.load7088.1, <4 x i32>* %1321, align 4, !tbaa !6
  %offset.idx7084.2 = or i64 %index7080, 9
  %1322 = add nsw i64 %offset.idx7084.2, -1
  %1323 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 16, i64 %1322
  %1324 = bitcast i32* %1323 to <4 x i32>*
  %wide.load7088.2 = load <4 x i32>, <4 x i32>* %1324, align 4, !tbaa !6
  %1325 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %offset.idx7084.2
  %1326 = bitcast i32* %1325 to <4 x i32>*
  store <4 x i32> %wide.load7088.2, <4 x i32>* %1326, align 4, !tbaa !6
  %offset.idx7084.3 = or i64 %index7080, 13
  %1327 = add nsw i64 %offset.idx7084.3, -1
  %1328 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 16, i64 %1327
  %1329 = bitcast i32* %1328 to <4 x i32>*
  %wide.load7088.3 = load <4 x i32>, <4 x i32>* %1329, align 4, !tbaa !6
  %1330 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %offset.idx7084.3
  %1331 = bitcast i32* %1330 to <4 x i32>*
  store <4 x i32> %wide.load7088.3, <4 x i32>* %1331, align 4, !tbaa !6
  %index.next7081.3 = add nuw nsw i64 %index7080, 16
  %1332 = icmp eq i64 %index.next7081.3, 256
  br i1 %1332, label %for.end2575, label %vector.body7076, !llvm.loop !190

for.end2575:                                      ; preds = %vector.body7076
  %.pre5475 = load i32, i32* %arrayidx2561, align 4, !tbaa !6
  br label %for.body2579

for.body2579:                                     ; preds = %for.body2579, %for.end2575
  %1333 = phi i32 [ %.pre5475, %for.end2575 ], [ %add2587.3, %for.body2579 ]
  %indvars.iv5294 = phi i64 [ 1, %for.end2575 ], [ %indvars.iv.next5295.3, %for.body2579 ]
  %arrayidx2586 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv5294
  %1334 = load i32, i32* %arrayidx2586, align 4, !tbaa !6
  %add2587 = add nsw i32 %1334, %1333
  store i32 %add2587, i32* %arrayidx2586, align 4, !tbaa !6
  %indvars.iv.next5295 = add nuw nsw i64 %indvars.iv5294, 1
  %arrayidx2586.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv.next5295
  %1335 = load i32, i32* %arrayidx2586.1, align 4, !tbaa !6
  %add2587.1 = add nsw i32 %1335, %add2587
  store i32 %add2587.1, i32* %arrayidx2586.1, align 4, !tbaa !6
  %indvars.iv.next5295.1 = add nuw nsw i64 %indvars.iv5294, 2
  %arrayidx2586.2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv.next5295.1
  %1336 = load i32, i32* %arrayidx2586.2, align 4, !tbaa !6
  %add2587.2 = add nsw i32 %1336, %add2587.1
  store i32 %add2587.2, i32* %arrayidx2586.2, align 4, !tbaa !6
  %indvars.iv.next5295.2 = add nuw nsw i64 %indvars.iv5294, 3
  %arrayidx2586.3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv.next5295.2
  %1337 = load i32, i32* %arrayidx2586.3, align 4, !tbaa !6
  %add2587.3 = add nsw i32 %1337, %add2587.2
  store i32 %add2587.3, i32* %arrayidx2586.3, align 4, !tbaa !6
  %indvars.iv.next5295.3 = add nuw nsw i64 %indvars.iv5294, 4
  %exitcond5297.3 = icmp eq i64 %indvars.iv.next5295.3, 257
  br i1 %exitcond5297.3, label %for.body2594.preheader, label %for.body2579

for.body2594.preheader:                           ; preds = %for.body2579
  br label %for.body2594

for.body2594:                                     ; preds = %for.inc2608.3, %for.body2594.preheader
  %indvars.iv5292 = phi i64 [ 0, %for.body2594.preheader ], [ %indvars.iv.next5293.3, %for.inc2608.3 ]
  %arrayidx2597 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv5292
  %1338 = load i32, i32* %arrayidx2597, align 4, !tbaa !6
  %cmp2598 = icmp slt i32 %1338, 0
  %cmp2604 = icmp sgt i32 %1338, %nblock.3
  %or.cond4833 = or i1 %cmp2598, %cmp2604
  br i1 %or.cond4833, label %save_state_and_return.loopexit5205, label %for.inc2608

for.inc2608:                                      ; preds = %for.body2594
  %indvars.iv.next5293 = or i64 %indvars.iv5292, 1
  %cmp2592 = icmp ult i64 %indvars.iv.next5293, 257
  br i1 %cmp2592, label %for.body2594.1, label %for.end2610

for.end2610:                                      ; preds = %for.inc2608
  %state_out_len = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 3
  store i32 0, i32* %state_out_len, align 8, !tbaa !113
  %state_out_ch = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 2
  store i8 0, i8* %state_out_ch, align 4, !tbaa !114
  %calculatedBlockCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 25
  store i32 -1, i32* %calculatedBlockCRC, align 8, !tbaa !115
  store i32 2, i32* %state, align 8, !tbaa !105
  %verbosity2612 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 12
  %1339 = load i32, i32* %verbosity2612, align 4, !tbaa !111
  %cmp2613 = icmp sgt i32 %1339, 1
  br i1 %cmp2613, label %if.then2615, label %if.end2617

if.then2615:                                      ; preds = %for.end2610
  %1340 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !tbaa !18
  %1341 = getelementptr [7 x i8], [7 x i8]* @.str.1.81, i64 0, i64 0
  %1342 = tail call i64 @fwrite(i8* %1341, i64 6, i64 1, %struct._IO_FILE* %1340) #15
  br label %if.end2617

if.end2617:                                       ; preds = %if.then2615, %for.end2610
  %smallDecompress2618 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 10
  %1343 = load i8, i8* %smallDecompress2618, align 4, !tbaa !109
  %tobool2619 = icmp eq i8 %1343, 0
  br i1 %tobool2619, label %if.else2850, label %vector.body7089

vector.body7089:                                  ; preds = %if.end2617
  %1344 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 0
  %1345 = bitcast i32* %1344 to <4 x i32>*
  %wide.load7100 = load <4 x i32>, <4 x i32>* %1345, align 4, !tbaa !6
  %1346 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 0
  %1347 = bitcast i32* %1346 to <4 x i32>*
  store <4 x i32> %wide.load7100, <4 x i32>* %1347, align 4, !tbaa !6
  %1348 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 4
  %1349 = bitcast i32* %1348 to <4 x i32>*
  %wide.load7100.1 = load <4 x i32>, <4 x i32>* %1349, align 4, !tbaa !6
  %1350 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 4
  %1351 = bitcast i32* %1350 to <4 x i32>*
  store <4 x i32> %wide.load7100.1, <4 x i32>* %1351, align 4, !tbaa !6
  %1352 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 8
  %1353 = bitcast i32* %1352 to <4 x i32>*
  %wide.load7100.2 = load <4 x i32>, <4 x i32>* %1353, align 4, !tbaa !6
  %1354 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 8
  %1355 = bitcast i32* %1354 to <4 x i32>*
  store <4 x i32> %wide.load7100.2, <4 x i32>* %1355, align 4, !tbaa !6
  %1356 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 12
  %1357 = bitcast i32* %1356 to <4 x i32>*
  %wide.load7100.3 = load <4 x i32>, <4 x i32>* %1357, align 4, !tbaa !6
  %1358 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 12
  %1359 = bitcast i32* %1358 to <4 x i32>*
  store <4 x i32> %wide.load7100.3, <4 x i32>* %1359, align 4, !tbaa !6
  %1360 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 16
  %1361 = bitcast i32* %1360 to <4 x i32>*
  %wide.load7100.4 = load <4 x i32>, <4 x i32>* %1361, align 4, !tbaa !6
  %1362 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 16
  %1363 = bitcast i32* %1362 to <4 x i32>*
  store <4 x i32> %wide.load7100.4, <4 x i32>* %1363, align 4, !tbaa !6
  %1364 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 20
  %1365 = bitcast i32* %1364 to <4 x i32>*
  %wide.load7100.5 = load <4 x i32>, <4 x i32>* %1365, align 4, !tbaa !6
  %1366 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 20
  %1367 = bitcast i32* %1366 to <4 x i32>*
  store <4 x i32> %wide.load7100.5, <4 x i32>* %1367, align 4, !tbaa !6
  %1368 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 24
  %1369 = bitcast i32* %1368 to <4 x i32>*
  %wide.load7100.6 = load <4 x i32>, <4 x i32>* %1369, align 4, !tbaa !6
  %1370 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 24
  %1371 = bitcast i32* %1370 to <4 x i32>*
  store <4 x i32> %wide.load7100.6, <4 x i32>* %1371, align 4, !tbaa !6
  %1372 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 28
  %1373 = bitcast i32* %1372 to <4 x i32>*
  %wide.load7100.7 = load <4 x i32>, <4 x i32>* %1373, align 4, !tbaa !6
  %1374 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 28
  %1375 = bitcast i32* %1374 to <4 x i32>*
  store <4 x i32> %wide.load7100.7, <4 x i32>* %1375, align 4, !tbaa !6
  %1376 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 32
  %1377 = bitcast i32* %1376 to <4 x i32>*
  %wide.load7100.8 = load <4 x i32>, <4 x i32>* %1377, align 4, !tbaa !6
  %1378 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 32
  %1379 = bitcast i32* %1378 to <4 x i32>*
  store <4 x i32> %wide.load7100.8, <4 x i32>* %1379, align 4, !tbaa !6
  %1380 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 36
  %1381 = bitcast i32* %1380 to <4 x i32>*
  %wide.load7100.9 = load <4 x i32>, <4 x i32>* %1381, align 4, !tbaa !6
  %1382 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 36
  %1383 = bitcast i32* %1382 to <4 x i32>*
  store <4 x i32> %wide.load7100.9, <4 x i32>* %1383, align 4, !tbaa !6
  %1384 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 40
  %1385 = bitcast i32* %1384 to <4 x i32>*
  %wide.load7100.10 = load <4 x i32>, <4 x i32>* %1385, align 4, !tbaa !6
  %1386 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 40
  %1387 = bitcast i32* %1386 to <4 x i32>*
  store <4 x i32> %wide.load7100.10, <4 x i32>* %1387, align 4, !tbaa !6
  %1388 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 44
  %1389 = bitcast i32* %1388 to <4 x i32>*
  %wide.load7100.11 = load <4 x i32>, <4 x i32>* %1389, align 4, !tbaa !6
  %1390 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 44
  %1391 = bitcast i32* %1390 to <4 x i32>*
  store <4 x i32> %wide.load7100.11, <4 x i32>* %1391, align 4, !tbaa !6
  %1392 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 48
  %1393 = bitcast i32* %1392 to <4 x i32>*
  %wide.load7100.12 = load <4 x i32>, <4 x i32>* %1393, align 4, !tbaa !6
  %1394 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 48
  %1395 = bitcast i32* %1394 to <4 x i32>*
  store <4 x i32> %wide.load7100.12, <4 x i32>* %1395, align 4, !tbaa !6
  %1396 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 52
  %1397 = bitcast i32* %1396 to <4 x i32>*
  %wide.load7100.13 = load <4 x i32>, <4 x i32>* %1397, align 4, !tbaa !6
  %1398 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 52
  %1399 = bitcast i32* %1398 to <4 x i32>*
  store <4 x i32> %wide.load7100.13, <4 x i32>* %1399, align 4, !tbaa !6
  %1400 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 56
  %1401 = bitcast i32* %1400 to <4 x i32>*
  %wide.load7100.14 = load <4 x i32>, <4 x i32>* %1401, align 4, !tbaa !6
  %1402 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 56
  %1403 = bitcast i32* %1402 to <4 x i32>*
  store <4 x i32> %wide.load7100.14, <4 x i32>* %1403, align 4, !tbaa !6
  %1404 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 60
  %1405 = bitcast i32* %1404 to <4 x i32>*
  %wide.load7100.15 = load <4 x i32>, <4 x i32>* %1405, align 4, !tbaa !6
  %1406 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 60
  %1407 = bitcast i32* %1406 to <4 x i32>*
  store <4 x i32> %wide.load7100.15, <4 x i32>* %1407, align 4, !tbaa !6
  %1408 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 64
  %1409 = bitcast i32* %1408 to <4 x i32>*
  %wide.load7100.16 = load <4 x i32>, <4 x i32>* %1409, align 4, !tbaa !6
  %1410 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 64
  %1411 = bitcast i32* %1410 to <4 x i32>*
  store <4 x i32> %wide.load7100.16, <4 x i32>* %1411, align 4, !tbaa !6
  %1412 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 68
  %1413 = bitcast i32* %1412 to <4 x i32>*
  %wide.load7100.17 = load <4 x i32>, <4 x i32>* %1413, align 4, !tbaa !6
  %1414 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 68
  %1415 = bitcast i32* %1414 to <4 x i32>*
  store <4 x i32> %wide.load7100.17, <4 x i32>* %1415, align 4, !tbaa !6
  %1416 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 72
  %1417 = bitcast i32* %1416 to <4 x i32>*
  %wide.load7100.18 = load <4 x i32>, <4 x i32>* %1417, align 4, !tbaa !6
  %1418 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 72
  %1419 = bitcast i32* %1418 to <4 x i32>*
  store <4 x i32> %wide.load7100.18, <4 x i32>* %1419, align 4, !tbaa !6
  %1420 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 76
  %1421 = bitcast i32* %1420 to <4 x i32>*
  %wide.load7100.19 = load <4 x i32>, <4 x i32>* %1421, align 4, !tbaa !6
  %1422 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 76
  %1423 = bitcast i32* %1422 to <4 x i32>*
  store <4 x i32> %wide.load7100.19, <4 x i32>* %1423, align 4, !tbaa !6
  %1424 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 80
  %1425 = bitcast i32* %1424 to <4 x i32>*
  %wide.load7100.20 = load <4 x i32>, <4 x i32>* %1425, align 4, !tbaa !6
  %1426 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 80
  %1427 = bitcast i32* %1426 to <4 x i32>*
  store <4 x i32> %wide.load7100.20, <4 x i32>* %1427, align 4, !tbaa !6
  %1428 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 84
  %1429 = bitcast i32* %1428 to <4 x i32>*
  %wide.load7100.21 = load <4 x i32>, <4 x i32>* %1429, align 4, !tbaa !6
  %1430 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 84
  %1431 = bitcast i32* %1430 to <4 x i32>*
  store <4 x i32> %wide.load7100.21, <4 x i32>* %1431, align 4, !tbaa !6
  %1432 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 88
  %1433 = bitcast i32* %1432 to <4 x i32>*
  %wide.load7100.22 = load <4 x i32>, <4 x i32>* %1433, align 4, !tbaa !6
  %1434 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 88
  %1435 = bitcast i32* %1434 to <4 x i32>*
  store <4 x i32> %wide.load7100.22, <4 x i32>* %1435, align 4, !tbaa !6
  %1436 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 92
  %1437 = bitcast i32* %1436 to <4 x i32>*
  %wide.load7100.23 = load <4 x i32>, <4 x i32>* %1437, align 4, !tbaa !6
  %1438 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 92
  %1439 = bitcast i32* %1438 to <4 x i32>*
  store <4 x i32> %wide.load7100.23, <4 x i32>* %1439, align 4, !tbaa !6
  %1440 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 96
  %1441 = bitcast i32* %1440 to <4 x i32>*
  %wide.load7100.24 = load <4 x i32>, <4 x i32>* %1441, align 4, !tbaa !6
  %1442 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 96
  %1443 = bitcast i32* %1442 to <4 x i32>*
  store <4 x i32> %wide.load7100.24, <4 x i32>* %1443, align 4, !tbaa !6
  %1444 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 100
  %1445 = bitcast i32* %1444 to <4 x i32>*
  %wide.load7100.25 = load <4 x i32>, <4 x i32>* %1445, align 4, !tbaa !6
  %1446 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 100
  %1447 = bitcast i32* %1446 to <4 x i32>*
  store <4 x i32> %wide.load7100.25, <4 x i32>* %1447, align 4, !tbaa !6
  %1448 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 104
  %1449 = bitcast i32* %1448 to <4 x i32>*
  %wide.load7100.26 = load <4 x i32>, <4 x i32>* %1449, align 4, !tbaa !6
  %1450 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 104
  %1451 = bitcast i32* %1450 to <4 x i32>*
  store <4 x i32> %wide.load7100.26, <4 x i32>* %1451, align 4, !tbaa !6
  %1452 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 108
  %1453 = bitcast i32* %1452 to <4 x i32>*
  %wide.load7100.27 = load <4 x i32>, <4 x i32>* %1453, align 4, !tbaa !6
  %1454 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 108
  %1455 = bitcast i32* %1454 to <4 x i32>*
  store <4 x i32> %wide.load7100.27, <4 x i32>* %1455, align 4, !tbaa !6
  %1456 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 112
  %1457 = bitcast i32* %1456 to <4 x i32>*
  %wide.load7100.28 = load <4 x i32>, <4 x i32>* %1457, align 4, !tbaa !6
  %1458 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 112
  %1459 = bitcast i32* %1458 to <4 x i32>*
  store <4 x i32> %wide.load7100.28, <4 x i32>* %1459, align 4, !tbaa !6
  %1460 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 116
  %1461 = bitcast i32* %1460 to <4 x i32>*
  %wide.load7100.29 = load <4 x i32>, <4 x i32>* %1461, align 4, !tbaa !6
  %1462 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 116
  %1463 = bitcast i32* %1462 to <4 x i32>*
  store <4 x i32> %wide.load7100.29, <4 x i32>* %1463, align 4, !tbaa !6
  %1464 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 120
  %1465 = bitcast i32* %1464 to <4 x i32>*
  %wide.load7100.30 = load <4 x i32>, <4 x i32>* %1465, align 4, !tbaa !6
  %1466 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 120
  %1467 = bitcast i32* %1466 to <4 x i32>*
  store <4 x i32> %wide.load7100.30, <4 x i32>* %1467, align 4, !tbaa !6
  %1468 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 124
  %1469 = bitcast i32* %1468 to <4 x i32>*
  %wide.load7100.31 = load <4 x i32>, <4 x i32>* %1469, align 4, !tbaa !6
  %1470 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 124
  %1471 = bitcast i32* %1470 to <4 x i32>*
  store <4 x i32> %wide.load7100.31, <4 x i32>* %1471, align 4, !tbaa !6
  %1472 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 128
  %1473 = bitcast i32* %1472 to <4 x i32>*
  %wide.load7100.32 = load <4 x i32>, <4 x i32>* %1473, align 4, !tbaa !6
  %1474 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 128
  %1475 = bitcast i32* %1474 to <4 x i32>*
  store <4 x i32> %wide.load7100.32, <4 x i32>* %1475, align 4, !tbaa !6
  %1476 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 132
  %1477 = bitcast i32* %1476 to <4 x i32>*
  %wide.load7100.33 = load <4 x i32>, <4 x i32>* %1477, align 4, !tbaa !6
  %1478 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 132
  %1479 = bitcast i32* %1478 to <4 x i32>*
  store <4 x i32> %wide.load7100.33, <4 x i32>* %1479, align 4, !tbaa !6
  %1480 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 136
  %1481 = bitcast i32* %1480 to <4 x i32>*
  %wide.load7100.34 = load <4 x i32>, <4 x i32>* %1481, align 4, !tbaa !6
  %1482 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 136
  %1483 = bitcast i32* %1482 to <4 x i32>*
  store <4 x i32> %wide.load7100.34, <4 x i32>* %1483, align 4, !tbaa !6
  %1484 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 140
  %1485 = bitcast i32* %1484 to <4 x i32>*
  %wide.load7100.35 = load <4 x i32>, <4 x i32>* %1485, align 4, !tbaa !6
  %1486 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 140
  %1487 = bitcast i32* %1486 to <4 x i32>*
  store <4 x i32> %wide.load7100.35, <4 x i32>* %1487, align 4, !tbaa !6
  %1488 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 144
  %1489 = bitcast i32* %1488 to <4 x i32>*
  %wide.load7100.36 = load <4 x i32>, <4 x i32>* %1489, align 4, !tbaa !6
  %1490 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 144
  %1491 = bitcast i32* %1490 to <4 x i32>*
  store <4 x i32> %wide.load7100.36, <4 x i32>* %1491, align 4, !tbaa !6
  %1492 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 148
  %1493 = bitcast i32* %1492 to <4 x i32>*
  %wide.load7100.37 = load <4 x i32>, <4 x i32>* %1493, align 4, !tbaa !6
  %1494 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 148
  %1495 = bitcast i32* %1494 to <4 x i32>*
  store <4 x i32> %wide.load7100.37, <4 x i32>* %1495, align 4, !tbaa !6
  %1496 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 152
  %1497 = bitcast i32* %1496 to <4 x i32>*
  %wide.load7100.38 = load <4 x i32>, <4 x i32>* %1497, align 4, !tbaa !6
  %1498 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 152
  %1499 = bitcast i32* %1498 to <4 x i32>*
  store <4 x i32> %wide.load7100.38, <4 x i32>* %1499, align 4, !tbaa !6
  %1500 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 156
  %1501 = bitcast i32* %1500 to <4 x i32>*
  %wide.load7100.39 = load <4 x i32>, <4 x i32>* %1501, align 4, !tbaa !6
  %1502 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 156
  %1503 = bitcast i32* %1502 to <4 x i32>*
  store <4 x i32> %wide.load7100.39, <4 x i32>* %1503, align 4, !tbaa !6
  %1504 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 160
  %1505 = bitcast i32* %1504 to <4 x i32>*
  %wide.load7100.40 = load <4 x i32>, <4 x i32>* %1505, align 4, !tbaa !6
  %1506 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 160
  %1507 = bitcast i32* %1506 to <4 x i32>*
  store <4 x i32> %wide.load7100.40, <4 x i32>* %1507, align 4, !tbaa !6
  %1508 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 164
  %1509 = bitcast i32* %1508 to <4 x i32>*
  %wide.load7100.41 = load <4 x i32>, <4 x i32>* %1509, align 4, !tbaa !6
  %1510 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 164
  %1511 = bitcast i32* %1510 to <4 x i32>*
  store <4 x i32> %wide.load7100.41, <4 x i32>* %1511, align 4, !tbaa !6
  %1512 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 168
  %1513 = bitcast i32* %1512 to <4 x i32>*
  %wide.load7100.42 = load <4 x i32>, <4 x i32>* %1513, align 4, !tbaa !6
  %1514 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 168
  %1515 = bitcast i32* %1514 to <4 x i32>*
  store <4 x i32> %wide.load7100.42, <4 x i32>* %1515, align 4, !tbaa !6
  %1516 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 172
  %1517 = bitcast i32* %1516 to <4 x i32>*
  %wide.load7100.43 = load <4 x i32>, <4 x i32>* %1517, align 4, !tbaa !6
  %1518 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 172
  %1519 = bitcast i32* %1518 to <4 x i32>*
  store <4 x i32> %wide.load7100.43, <4 x i32>* %1519, align 4, !tbaa !6
  %1520 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 176
  %1521 = bitcast i32* %1520 to <4 x i32>*
  %wide.load7100.44 = load <4 x i32>, <4 x i32>* %1521, align 4, !tbaa !6
  %1522 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 176
  %1523 = bitcast i32* %1522 to <4 x i32>*
  store <4 x i32> %wide.load7100.44, <4 x i32>* %1523, align 4, !tbaa !6
  %1524 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 180
  %1525 = bitcast i32* %1524 to <4 x i32>*
  %wide.load7100.45 = load <4 x i32>, <4 x i32>* %1525, align 4, !tbaa !6
  %1526 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 180
  %1527 = bitcast i32* %1526 to <4 x i32>*
  store <4 x i32> %wide.load7100.45, <4 x i32>* %1527, align 4, !tbaa !6
  %1528 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 184
  %1529 = bitcast i32* %1528 to <4 x i32>*
  %wide.load7100.46 = load <4 x i32>, <4 x i32>* %1529, align 4, !tbaa !6
  %1530 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 184
  %1531 = bitcast i32* %1530 to <4 x i32>*
  store <4 x i32> %wide.load7100.46, <4 x i32>* %1531, align 4, !tbaa !6
  %1532 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 188
  %1533 = bitcast i32* %1532 to <4 x i32>*
  %wide.load7100.47 = load <4 x i32>, <4 x i32>* %1533, align 4, !tbaa !6
  %1534 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 188
  %1535 = bitcast i32* %1534 to <4 x i32>*
  store <4 x i32> %wide.load7100.47, <4 x i32>* %1535, align 4, !tbaa !6
  %1536 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 192
  %1537 = bitcast i32* %1536 to <4 x i32>*
  %wide.load7100.48 = load <4 x i32>, <4 x i32>* %1537, align 4, !tbaa !6
  %1538 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 192
  %1539 = bitcast i32* %1538 to <4 x i32>*
  store <4 x i32> %wide.load7100.48, <4 x i32>* %1539, align 4, !tbaa !6
  %1540 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 196
  %1541 = bitcast i32* %1540 to <4 x i32>*
  %wide.load7100.49 = load <4 x i32>, <4 x i32>* %1541, align 4, !tbaa !6
  %1542 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 196
  %1543 = bitcast i32* %1542 to <4 x i32>*
  store <4 x i32> %wide.load7100.49, <4 x i32>* %1543, align 4, !tbaa !6
  %1544 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 200
  %1545 = bitcast i32* %1544 to <4 x i32>*
  %wide.load7100.50 = load <4 x i32>, <4 x i32>* %1545, align 4, !tbaa !6
  %1546 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 200
  %1547 = bitcast i32* %1546 to <4 x i32>*
  store <4 x i32> %wide.load7100.50, <4 x i32>* %1547, align 4, !tbaa !6
  %1548 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 204
  %1549 = bitcast i32* %1548 to <4 x i32>*
  %wide.load7100.51 = load <4 x i32>, <4 x i32>* %1549, align 4, !tbaa !6
  %1550 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 204
  %1551 = bitcast i32* %1550 to <4 x i32>*
  store <4 x i32> %wide.load7100.51, <4 x i32>* %1551, align 4, !tbaa !6
  %1552 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 208
  %1553 = bitcast i32* %1552 to <4 x i32>*
  %wide.load7100.52 = load <4 x i32>, <4 x i32>* %1553, align 4, !tbaa !6
  %1554 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 208
  %1555 = bitcast i32* %1554 to <4 x i32>*
  store <4 x i32> %wide.load7100.52, <4 x i32>* %1555, align 4, !tbaa !6
  %1556 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 212
  %1557 = bitcast i32* %1556 to <4 x i32>*
  %wide.load7100.53 = load <4 x i32>, <4 x i32>* %1557, align 4, !tbaa !6
  %1558 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 212
  %1559 = bitcast i32* %1558 to <4 x i32>*
  store <4 x i32> %wide.load7100.53, <4 x i32>* %1559, align 4, !tbaa !6
  %1560 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 216
  %1561 = bitcast i32* %1560 to <4 x i32>*
  %wide.load7100.54 = load <4 x i32>, <4 x i32>* %1561, align 4, !tbaa !6
  %1562 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 216
  %1563 = bitcast i32* %1562 to <4 x i32>*
  store <4 x i32> %wide.load7100.54, <4 x i32>* %1563, align 4, !tbaa !6
  %1564 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 220
  %1565 = bitcast i32* %1564 to <4 x i32>*
  %wide.load7100.55 = load <4 x i32>, <4 x i32>* %1565, align 4, !tbaa !6
  %1566 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 220
  %1567 = bitcast i32* %1566 to <4 x i32>*
  store <4 x i32> %wide.load7100.55, <4 x i32>* %1567, align 4, !tbaa !6
  %1568 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 224
  %1569 = bitcast i32* %1568 to <4 x i32>*
  %wide.load7100.56 = load <4 x i32>, <4 x i32>* %1569, align 4, !tbaa !6
  %1570 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 224
  %1571 = bitcast i32* %1570 to <4 x i32>*
  store <4 x i32> %wide.load7100.56, <4 x i32>* %1571, align 4, !tbaa !6
  %1572 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 228
  %1573 = bitcast i32* %1572 to <4 x i32>*
  %wide.load7100.57 = load <4 x i32>, <4 x i32>* %1573, align 4, !tbaa !6
  %1574 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 228
  %1575 = bitcast i32* %1574 to <4 x i32>*
  store <4 x i32> %wide.load7100.57, <4 x i32>* %1575, align 4, !tbaa !6
  %1576 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 232
  %1577 = bitcast i32* %1576 to <4 x i32>*
  %wide.load7100.58 = load <4 x i32>, <4 x i32>* %1577, align 4, !tbaa !6
  %1578 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 232
  %1579 = bitcast i32* %1578 to <4 x i32>*
  store <4 x i32> %wide.load7100.58, <4 x i32>* %1579, align 4, !tbaa !6
  %1580 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 236
  %1581 = bitcast i32* %1580 to <4 x i32>*
  %wide.load7100.59 = load <4 x i32>, <4 x i32>* %1581, align 4, !tbaa !6
  %1582 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 236
  %1583 = bitcast i32* %1582 to <4 x i32>*
  store <4 x i32> %wide.load7100.59, <4 x i32>* %1583, align 4, !tbaa !6
  %1584 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 240
  %1585 = bitcast i32* %1584 to <4 x i32>*
  %wide.load7100.60 = load <4 x i32>, <4 x i32>* %1585, align 4, !tbaa !6
  %1586 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 240
  %1587 = bitcast i32* %1586 to <4 x i32>*
  store <4 x i32> %wide.load7100.60, <4 x i32>* %1587, align 4, !tbaa !6
  %1588 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 244
  %1589 = bitcast i32* %1588 to <4 x i32>*
  %wide.load7100.61 = load <4 x i32>, <4 x i32>* %1589, align 4, !tbaa !6
  %1590 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 244
  %1591 = bitcast i32* %1590 to <4 x i32>*
  store <4 x i32> %wide.load7100.61, <4 x i32>* %1591, align 4, !tbaa !6
  %1592 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 248
  %1593 = bitcast i32* %1592 to <4 x i32>*
  %wide.load7100.62 = load <4 x i32>, <4 x i32>* %1593, align 4, !tbaa !6
  %1594 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 248
  %1595 = bitcast i32* %1594 to <4 x i32>*
  store <4 x i32> %wide.load7100.62, <4 x i32>* %1595, align 4, !tbaa !6
  %1596 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 252
  %1597 = bitcast i32* %1596 to <4 x i32>*
  %wide.load7100.63 = load <4 x i32>, <4 x i32>* %1597, align 4, !tbaa !6
  %1598 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 252
  %1599 = bitcast i32* %1598 to <4 x i32>*
  store <4 x i32> %wide.load7100.63, <4 x i32>* %1599, align 4, !tbaa !6
  %arrayidx2627 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 256
  %1600 = load i32, i32* %arrayidx2627, align 4, !tbaa !6
  %arrayidx2629 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 256
  store i32 %1600, i32* %arrayidx2629, align 4, !tbaa !6
  %cmp26345062 = icmp sgt i32 %nblock.3, 0
  %ll162637 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 21
  %ll42653 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 22
  br i1 %cmp26345062, label %for.body2636.lr.ph, label %for.end2694

for.body2636.lr.ph:                               ; preds = %vector.body7089
  %wide.trip.count5286 = zext i32 %nblock.3 to i64
  br label %for.body2636

for.body2636:                                     ; preds = %if.end2687, %for.body2636.lr.ph
  %indvars.iv5284 = phi i64 [ 0, %for.body2636.lr.ph ], [ %indvars.iv.next5285, %if.end2687 ]
  %1601 = load i16*, i16** %ll162637, align 8, !tbaa !120
  %arrayidx2639 = getelementptr inbounds i16, i16* %1601, i64 %indvars.iv5284
  %1602 = load i16, i16* %arrayidx2639, align 2, !tbaa !33
  %1603 = and i16 %1602, 255
  %idxprom2642 = zext i16 %1603 to i64
  %arrayidx2643 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 19, i64 %idxprom2642
  %1604 = load i32, i32* %arrayidx2643, align 4, !tbaa !6
  %conv2645 = trunc i32 %1604 to i16
  store i16 %conv2645, i16* %arrayidx2639, align 2, !tbaa !33
  %and26495534 = and i64 %indvars.iv5284, 1
  %cmp2650 = icmp eq i64 %and26495534, 0
  %1605 = load i8*, i8** %ll42653, align 8, !tbaa !121
  %1606 = lshr i64 %indvars.iv5284, 1
  %1607 = and i64 %1606, 2147483647
  %arrayidx2656 = getelementptr inbounds i8, i8* %1605, i64 %1607
  %1608 = load i8, i8* %arrayidx2656, align 1, !tbaa !12
  %conv2657 = zext i8 %1608 to i32
  br i1 %cmp2650, label %if.then2652, label %if.else2669

if.then2652:                                      ; preds = %for.body2636
  %and2658 = and i32 %conv2657, 240
  %shr2662 = ashr i32 %1604, 16
  %or2663 = or i32 %and2658, %shr2662
  br label %if.end2687

if.else2669:                                      ; preds = %for.body2636
  %and2675 = and i32 %conv2657, 15
  %shr2679 = ashr i32 %1604, 16
  %shl2680 = shl nsw i32 %shr2679, 4
  %or2681 = or i32 %and2675, %shl2680
  br label %if.end2687

if.end2687:                                       ; preds = %if.else2669, %if.then2652
  %storemerge4826.in = phi i32 [ %or2681, %if.else2669 ], [ %or2663, %if.then2652 ]
  %storemerge4826 = trunc i32 %storemerge4826.in to i8
  store i8 %storemerge4826, i8* %arrayidx2656, align 1, !tbaa !12
  %1609 = load i32, i32* %arrayidx2643, align 4, !tbaa !6
  %inc2691 = add nsw i32 %1609, 1
  store i32 %inc2691, i32* %arrayidx2643, align 4, !tbaa !6
  %indvars.iv.next5285 = add nuw nsw i64 %indvars.iv5284, 1
  %exitcond5287 = icmp eq i64 %indvars.iv.next5285, %wide.trip.count5286
  br i1 %exitcond5287, label %for.end2694, label %for.body2636

for.end2694:                                      ; preds = %if.end2687, %vector.body7089
  %1610 = load i32, i32* %origPtr2552, align 8, !tbaa !174
  %1611 = load i16*, i16** %ll162637, align 8, !tbaa !120
  %idxprom2697 = sext i32 %1610 to i64
  %arrayidx2698 = getelementptr inbounds i16, i16* %1611, i64 %idxprom2697
  %1612 = load i16, i16* %arrayidx2698, align 2, !tbaa !33
  %conv2699 = zext i16 %1612 to i32
  %1613 = load i8*, i8** %ll42653, align 8, !tbaa !121
  %shr2701 = ashr i32 %1610, 1
  %idxprom2702 = sext i32 %shr2701 to i64
  %arrayidx2703 = getelementptr inbounds i8, i8* %1613, i64 %idxprom2702
  %1614 = load i8, i8* %arrayidx2703, align 1, !tbaa !12
  %conv2704 = zext i8 %1614 to i32
  %shl2705 = shl i32 %1610, 2
  %and2706 = and i32 %shl2705, 4
  %shr2707 = lshr i32 %conv2704, %and2706
  %and2708 = shl nuw nsw i32 %shr2707, 16
  %shl2709 = and i32 %and2708, 983040
  %or2710 = or i32 %shl2709, %conv2699
  br label %do.body2711

do.body2711:                                      ; preds = %if.end2765.do.body2711_crit_edge, %for.end2694
  %1615 = phi i8* [ %1613, %for.end2694 ], [ %.pre5477, %if.end2765.do.body2711_crit_edge ]
  %1616 = phi i16* [ %1611, %for.end2694 ], [ %.pre5476, %if.end2765.do.body2711_crit_edge ]
  %j.26 = phi i32 [ %or2710, %for.end2694 ], [ %or2727, %if.end2765.do.body2711_crit_edge ]
  %i.37 = phi i32 [ %1610, %for.end2694 ], [ %j.26, %if.end2765.do.body2711_crit_edge ]
  %idxprom2714 = sext i32 %j.26 to i64
  %arrayidx2715 = getelementptr inbounds i16, i16* %1616, i64 %idxprom2714
  %1617 = load i16, i16* %arrayidx2715, align 2, !tbaa !33
  %conv2716 = zext i16 %1617 to i32
  %shr2718 = ashr i32 %j.26, 1
  %idxprom2719 = sext i32 %shr2718 to i64
  %arrayidx2720 = getelementptr inbounds i8, i8* %1615, i64 %idxprom2719
  %1618 = load i8, i8* %arrayidx2720, align 1, !tbaa !12
  %conv2721 = zext i8 %1618 to i32
  %shl2722 = shl nsw i32 %j.26, 2
  %and2723 = and i32 %shl2722, 4
  %shr2724 = lshr i32 %conv2721, %and2723
  %and2725 = shl nuw nsw i32 %shr2724, 16
  %shl2726 = and i32 %and2725, 983040
  %or2727 = or i32 %shl2726, %conv2716
  %conv2729 = trunc i32 %i.37 to i16
  store i16 %conv2729, i16* %arrayidx2715, align 2, !tbaa !33
  %and2733 = and i32 %j.26, 1
  %cmp2734 = icmp eq i32 %and2733, 0
  %1619 = load i8, i8* %arrayidx2720, align 1, !tbaa !12
  %conv2741 = zext i8 %1619 to i32
  br i1 %cmp2734, label %if.then2736, label %if.else2750

if.then2736:                                      ; preds = %do.body2711
  %and2742 = and i32 %conv2741, 240
  %shr2743 = ashr i32 %i.37, 16
  %or2744 = or i32 %and2742, %shr2743
  br label %if.end2765

if.else2750:                                      ; preds = %do.body2711
  %and2756 = and i32 %conv2741, 15
  %shr2757 = ashr i32 %i.37, 16
  %shl2758 = shl nsw i32 %shr2757, 4
  %or2759 = or i32 %and2756, %shl2758
  br label %if.end2765

if.end2765:                                       ; preds = %if.else2750, %if.then2736
  %storemerge.in = phi i32 [ %or2759, %if.else2750 ], [ %or2744, %if.then2736 ]
  %storemerge = trunc i32 %storemerge.in to i8
  store i8 %storemerge, i8* %arrayidx2720, align 1, !tbaa !12
  %1620 = load i32, i32* %origPtr2552, align 8, !tbaa !174
  %cmp2768 = icmp eq i32 %j.26, %1620
  br i1 %cmp2768, label %do.end2770, label %if.end2765.do.body2711_crit_edge

if.end2765.do.body2711_crit_edge:                 ; preds = %if.end2765
  %.pre5476 = load i16*, i16** %ll162637, align 8, !tbaa !120
  %.pre5477 = load i8*, i8** %ll42653, align 8, !tbaa !121
  br label %do.body2711

do.end2770:                                       ; preds = %if.end2765
  %tPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 14
  store i32 %j.26, i32* %tPos, align 4, !tbaa !119
  %nblock_used = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 17
  store i32 0, i32* %nblock_used, align 4, !tbaa !116
  %blockRandomised2772 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 4
  %1621 = load i8, i8* %blockRandomised2772, align 4, !tbaa !112
  %tobool2773 = icmp eq i8 %1621, 0
  br i1 %tobool2773, label %if.else2822, label %if.then2774

if.then2774:                                      ; preds = %do.end2770
  %rNToGo = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 5
  store i32 0, i32* %rNToGo, align 8, !tbaa !122
  %rTPos = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 6
  store i32 0, i32* %rTPos, align 4, !tbaa !123
  %call2777 = tail call i32 @BZ2_indexIntoF(i32 %j.26, i32* nonnull %arrayidx2561) #2
  %k0 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 15
  store i32 %call2777, i32* %k0, align 8, !tbaa !118
  %1622 = load i16*, i16** %ll162637, align 8, !tbaa !120
  %1623 = load i32, i32* %tPos, align 4, !tbaa !119
  %idxprom2780 = zext i32 %1623 to i64
  %arrayidx2781 = getelementptr inbounds i16, i16* %1622, i64 %idxprom2780
  %1624 = load i16, i16* %arrayidx2781, align 2, !tbaa !33
  %conv2782 = zext i16 %1624 to i32
  %1625 = load i8*, i8** %ll42653, align 8, !tbaa !121
  %shr2785 = lshr i32 %1623, 1
  %idxprom2786 = zext i32 %shr2785 to i64
  %arrayidx2787 = getelementptr inbounds i8, i8* %1625, i64 %idxprom2786
  %1626 = load i8, i8* %arrayidx2787, align 1, !tbaa !12
  %conv2788 = zext i8 %1626 to i32
  %shl2790 = shl i32 %1623, 2
  %and2791 = and i32 %shl2790, 4
  %shr2792 = lshr i32 %conv2788, %and2791
  %and2793 = shl nuw nsw i32 %shr2792, 16
  %shl2794 = and i32 %and2793, 983040
  %or2795 = or i32 %shl2794, %conv2782
  store i32 %or2795, i32* %tPos, align 4, !tbaa !119
  %1627 = load i32, i32* %nblock_used, align 4, !tbaa !116
  %inc2798 = add nsw i32 %1627, 1
  store i32 %inc2798, i32* %nblock_used, align 4, !tbaa !116
  %1628 = load i32, i32* %rNToGo, align 8, !tbaa !122
  %cmp2800 = icmp eq i32 %1628, 0
  br i1 %cmp2800, label %if.then2802, label %if.end2815

if.then2802:                                      ; preds = %if.then2774
  %1629 = load i32, i32* %rTPos, align 4, !tbaa !123
  %idxprom2804 = sext i32 %1629 to i64
  %arrayidx2805 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %idxprom2804
  %1630 = load i32, i32* %arrayidx2805, align 4, !tbaa !6
  store i32 %1630, i32* %rNToGo, align 8, !tbaa !122
  %inc2808 = add nsw i32 %1629, 1
  %cmp2810 = icmp eq i32 %inc2808, 512
  %spec.store.select = select i1 %cmp2810, i32 0, i32 %inc2808
  store i32 %spec.store.select, i32* %rTPos, align 4
  br label %if.end2815

if.end2815:                                       ; preds = %if.then2802, %if.then2774
  %1631 = phi i32 [ %1630, %if.then2802 ], [ %1628, %if.then2774 ]
  %dec2817 = add nsw i32 %1631, -1
  store i32 %dec2817, i32* %rNToGo, align 8, !tbaa !122
  %cmp2819 = icmp eq i32 %dec2817, 1
  %cond = zext i1 %cmp2819 to i32
  %xor = xor i32 %call2777, %cond
  store i32 %xor, i32* %k0, align 8, !tbaa !118
  br label %save_state_and_return

if.else2822:                                      ; preds = %do.end2770
  %call2826 = tail call i32 @BZ2_indexIntoF(i32 %j.26, i32* nonnull %arrayidx2561) #2
  %k02827 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 15
  store i32 %call2826, i32* %k02827, align 8, !tbaa !118
  %1632 = load i16*, i16** %ll162637, align 8, !tbaa !120
  %1633 = load i32, i32* %tPos, align 4, !tbaa !119
  %idxprom2830 = zext i32 %1633 to i64
  %arrayidx2831 = getelementptr inbounds i16, i16* %1632, i64 %idxprom2830
  %1634 = load i16, i16* %arrayidx2831, align 2, !tbaa !33
  %conv2832 = zext i16 %1634 to i32
  %1635 = load i8*, i8** %ll42653, align 8, !tbaa !121
  %shr2835 = lshr i32 %1633, 1
  %idxprom2836 = zext i32 %shr2835 to i64
  %arrayidx2837 = getelementptr inbounds i8, i8* %1635, i64 %idxprom2836
  %1636 = load i8, i8* %arrayidx2837, align 1, !tbaa !12
  %conv2838 = zext i8 %1636 to i32
  %shl2840 = shl i32 %1633, 2
  %and2841 = and i32 %shl2840, 4
  %shr2842 = lshr i32 %conv2838, %and2841
  %and2843 = shl nuw nsw i32 %shr2842, 16
  %shl2844 = and i32 %and2843, 983040
  %or2845 = or i32 %shl2844, %conv2832
  store i32 %or2845, i32* %tPos, align 4, !tbaa !119
  %1637 = load i32, i32* %nblock_used, align 4, !tbaa !116
  %inc2848 = add nsw i32 %1637, 1
  store i32 %inc2848, i32* %nblock_used, align 4, !tbaa !116
  br label %save_state_and_return

if.else2850:                                      ; preds = %if.end2617
  %cmp28525058 = icmp sgt i32 %nblock.3, 0
  %tt2855 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 20
  %1638 = load i32*, i32** %tt2855, align 8, !tbaa !124
  br i1 %cmp28525058, label %for.body2854.lr.ph, label %for.end2874

for.body2854.lr.ph:                               ; preds = %if.else2850
  %1639 = load i32, i32* %1638, align 4, !tbaa !6
  %1640 = and i32 %1639, 255
  %idxprom2863.peel = zext i32 %1640 to i64
  %arrayidx2864.peel = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %idxprom2863.peel
  %1641 = load i32, i32* %arrayidx2864.peel, align 4, !tbaa !6
  %inc2871.peel = add nsw i32 %1641, 1
  store i32 %inc2871.peel, i32* %arrayidx2864.peel, align 4, !tbaa !6
  %wide.trip.count.peel = zext i32 %nblock.3 to i64
  %exitcond.peel = icmp eq i32 %nblock.3, 1
  br i1 %exitcond.peel, label %for.end2874, label %for.body2854.preheader

for.body2854.preheader:                           ; preds = %for.body2854.lr.ph
  br label %for.body2854

for.body2854:                                     ; preds = %for.body2854, %for.body2854.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body2854 ], [ 1, %for.body2854.preheader ]
  %arrayidx2857 = getelementptr inbounds i32, i32* %1638, i64 %indvars.iv
  %1642 = load i32, i32* %arrayidx2857, align 4, !tbaa !6
  %1643 = trunc i64 %indvars.iv to i32
  %shl2860 = shl i32 %1643, 8
  %1644 = and i32 %1642, 255
  %idxprom2863 = zext i32 %1644 to i64
  %arrayidx2864 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %idxprom2863
  %1645 = load i32, i32* %arrayidx2864, align 4, !tbaa !6
  %idxprom2865 = sext i32 %1645 to i64
  %arrayidx2866 = getelementptr inbounds i32, i32* %1638, i64 %idxprom2865
  %1646 = load i32, i32* %arrayidx2866, align 4, !tbaa !6
  %or2867 = or i32 %1646, %shl2860
  store i32 %or2867, i32* %arrayidx2866, align 4, !tbaa !6
  %1647 = load i32, i32* %arrayidx2864, align 4, !tbaa !6
  %inc2871 = add nsw i32 %1647, 1
  store i32 %inc2871, i32* %arrayidx2864, align 4, !tbaa !6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count.peel
  br i1 %exitcond, label %for.end2874, label %for.body2854, !llvm.loop !191

for.end2874:                                      ; preds = %for.body2854, %for.body2854.lr.ph, %if.else2850
  %i.38.lcssa = phi i32 [ 0, %if.else2850 ], [ 1, %for.body2854.lr.ph ], [ %nblock.3, %for.body2854 ]
  %1648 = load i32, i32* %origPtr2552, align 8, !tbaa !174
  %idxprom2877 = sext i32 %1648 to i64
  %arrayidx2878 = getelementptr inbounds i32, i32* %1638, i64 %idxprom2877
  %1649 = load i32, i32* %arrayidx2878, align 4, !tbaa !6
  %shr2879 = lshr i32 %1649, 8
  %tPos2880 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 14
  store i32 %shr2879, i32* %tPos2880, align 4, !tbaa !119
  %nblock_used2881 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 17
  store i32 0, i32* %nblock_used2881, align 4, !tbaa !116
  %blockRandomised2882 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 4
  %1650 = load i8, i8* %blockRandomised2882, align 4, !tbaa !112
  %tobool2883 = icmp eq i8 %1650, 0
  br i1 %tobool2883, label %if.else2926, label %if.end2917

if.end2917:                                       ; preds = %for.end2874
  %rNToGo2885 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 5
  store i32 0, i32* %rNToGo2885, align 8, !tbaa !122
  %rTPos2886 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 6
  store i32 0, i32* %rTPos2886, align 4, !tbaa !123
  %idxprom2889 = zext i32 %shr2879 to i64
  %arrayidx2890 = getelementptr inbounds i32, i32* %1638, i64 %idxprom2889
  %1651 = load i32, i32* %arrayidx2890, align 4, !tbaa !6
  %conv2895 = and i32 %1651, 255
  %k02896 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 15
  %shr2898 = lshr i32 %1651, 8
  store i32 %shr2898, i32* %tPos2880, align 4, !tbaa !119
  store i32 1, i32* %nblock_used2881, align 4, !tbaa !116
  %1652 = getelementptr [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 0
  %1653 = load i32, i32* %1652, align 16, !tbaa !6
  store i32 1, i32* %rTPos2886, align 4
  %dec2919 = add nsw i32 %1653, -1
  store i32 %dec2919, i32* %rNToGo2885, align 8, !tbaa !122
  %cmp2921 = icmp eq i32 %dec2919, 1
  %cond2923 = zext i1 %cmp2921 to i32
  %xor2925 = xor i32 %conv2895, %cond2923
  store i32 %xor2925, i32* %k02896, align 8, !tbaa !118
  br label %save_state_and_return

if.else2926:                                      ; preds = %for.end2874
  %idxprom2929 = zext i32 %shr2879 to i64
  %arrayidx2930 = getelementptr inbounds i32, i32* %1638, i64 %idxprom2929
  %1654 = load i32, i32* %arrayidx2930, align 4, !tbaa !6
  %conv2935 = and i32 %1654, 255
  %k02936 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 15
  store i32 %conv2935, i32* %k02936, align 8, !tbaa !118
  %shr2938 = lshr i32 %1654, 8
  store i32 %shr2938, i32* %tPos2880, align 4, !tbaa !119
  store i32 1, i32* %nblock_used2881, align 4, !tbaa !116
  br label %save_state_and_return

sw.bb2943:                                        ; preds = %if.then282, %if.end.sw.bb2943_crit_edge
  %1655 = phi i32 [ %.pre, %if.end.sw.bb2943_crit_edge ], [ %121, %if.then282 ]
  %1656 = phi i32 [ %.pre5368, %if.end.sw.bb2943_crit_edge ], [ %122, %if.then282 ]
  %1657 = phi i32 [ %.pre5369, %if.end.sw.bb2943_crit_edge ], [ %123, %if.then282 ]
  %1658 = phi i32 [ %.pre5370, %if.end.sw.bb2943_crit_edge ], [ %124, %if.then282 ]
  %1659 = phi i32 [ %.pre5371, %if.end.sw.bb2943_crit_edge ], [ %125, %if.then282 ]
  %1660 = phi i32 [ %.pre5372, %if.end.sw.bb2943_crit_edge ], [ %126, %if.then282 ]
  %1661 = phi i32 [ %.pre5373, %if.end.sw.bb2943_crit_edge ], [ %127, %if.then282 ]
  %1662 = phi i32 [ %.pre5374, %if.end.sw.bb2943_crit_edge ], [ %128, %if.then282 ]
  %1663 = phi i32 [ %.pre5375, %if.end.sw.bb2943_crit_edge ], [ %129, %if.then282 ]
  %1664 = phi i32 [ %.pre5376, %if.end.sw.bb2943_crit_edge ], [ %130, %if.then282 ]
  %1665 = phi i32 [ %.pre5377, %if.end.sw.bb2943_crit_edge ], [ %131, %if.then282 ]
  %1666 = phi i32 [ %.pre5378, %if.end.sw.bb2943_crit_edge ], [ %132, %if.then282 ]
  %1667 = phi i32 [ %.pre5379, %if.end.sw.bb2943_crit_edge ], [ %133, %if.then282 ]
  %1668 = phi i32 [ %.pre5380, %if.end.sw.bb2943_crit_edge ], [ %134, %if.then282 ]
  %1669 = phi i32 [ %.pre5381, %if.end.sw.bb2943_crit_edge ], [ %135, %if.then282 ]
  %1670 = phi i32 [ %.pre5382, %if.end.sw.bb2943_crit_edge ], [ %136, %if.then282 ]
  %1671 = phi i32 [ %.pre5383, %if.end.sw.bb2943_crit_edge ], [ %137, %if.then282 ]
  %1672 = phi i32 [ %.pre5384, %if.end.sw.bb2943_crit_edge ], [ %138, %if.then282 ]
  %1673 = phi i32 [ %.pre5385, %if.end.sw.bb2943_crit_edge ], [ %139, %if.then282 ]
  %1674 = phi i32 [ %.pre5386, %if.end.sw.bb2943_crit_edge ], [ %140, %if.then282 ]
  %1675 = phi i32 [ %.pre5387, %if.end.sw.bb2943_crit_edge ], [ %141, %if.then282 ]
  %1676 = phi i32* [ %.pre5388, %if.end.sw.bb2943_crit_edge ], [ %142, %if.then282 ]
  %1677 = phi i32* [ %.pre5389, %if.end.sw.bb2943_crit_edge ], [ %143, %if.then282 ]
  %1678 = phi i32* [ %.pre5390, %if.end.sw.bb2943_crit_edge ], [ %144, %if.then282 ]
  %save_j3.pre-phi6817 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_j3.pre-phi6818, %if.then282 ]
  %save_t4.pre-phi6761 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_t4.pre-phi6762, %if.then282 ]
  %save_alphaSize5.pre-phi6705 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_alphaSize5.pre-phi6706, %if.then282 ]
  %save_nGroups6.pre-phi6649 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_nGroups6.pre-phi6650, %if.then282 ]
  %save_nSelectors7.pre-phi6593 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_nSelectors7.pre-phi6594, %if.then282 ]
  %save_EOB8.pre-phi6537 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_EOB8.pre-phi6538, %if.then282 ]
  %save_groupNo9.pre-phi6481 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_groupNo9.pre-phi6482, %if.then282 ]
  %save_groupPos10.pre-phi6425 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_groupPos10.pre-phi6426, %if.then282 ]
  %save_nextSym11.pre-phi6369 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_nextSym11.pre-phi6370, %if.then282 ]
  %save_nblockMAX12.pre-phi6313 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_nblockMAX12.pre-phi6314, %if.then282 ]
  %save_nblock13.pre-phi6257 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_nblock13.pre-phi6258, %if.then282 ]
  %save_es14.pre-phi6201 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_es14.pre-phi6202, %if.then282 ]
  %save_N15.pre-phi6145 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_N15.pre-phi6146, %if.then282 ]
  %save_curr16.pre-phi6089 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_curr16.pre-phi6090, %if.then282 ]
  %save_zt17.pre-phi6033 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_zt17.pre-phi6034, %if.then282 ]
  %save_zn18.pre-phi5977 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_zn18.pre-phi5978, %if.then282 ]
  %save_zvec19.pre-phi5921 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_zvec19.pre-phi5922, %if.then282 ]
  %save_zj20.pre-phi5865 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_zj20.pre-phi5866, %if.then282 ]
  %save_gSel21.pre-phi5809 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_gSel21.pre-phi5810, %if.then282 ]
  %save_gMinlen22.pre-phi5753 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_gMinlen22.pre-phi5754, %if.then282 ]
  %save_gLimit23.pre-phi5697 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_gLimit23.pre-phi5698, %if.then282 ]
  %save_gBase24.pre-phi5641 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_gBase24.pre-phi5642, %if.then282 ]
  %save_gPerm25.pre-phi5585 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %save_gPerm25.pre-phi5586, %if.then282 ]
  %bsLive2947.pre-phi = phi i32* [ %bsLive2947.phi.trans.insert, %if.end.sw.bb2943_crit_edge ], [ %bsLive279.pre-phi, %if.then282 ]
  %1679 = phi i32 [ %.pre5491, %if.end.sw.bb2943_crit_edge ], [ %sub286, %if.then282 ]
  store i32 42, i32* %state, align 8, !tbaa !105
  %cmp29485034 = icmp sgt i32 %1679, 7
  %bsBuff2952.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp29485034, label %sw.bb2943.if.then2950_crit_edge, label %if.end2960.lr.ph

sw.bb2943.if.then2950_crit_edge:                  ; preds = %sw.bb2943
  %.pre5494 = load i32, i32* %bsBuff2952.phi.trans.insert, align 8, !tbaa !107
  br label %if.then2950

if.end2960.lr.ph:                                 ; preds = %sw.bb2943
  %.pre5492 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in2962.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5492, i64 0, i32 1
  %.pre5493 = load i32, i32* %avail_in2962.phi.trans.insert, align 8, !tbaa !98
  %next_in2970 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5492, i64 0, i32 0
  %total_in_lo322983 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5492, i64 0, i32 2
  %total_in_hi322991 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5492, i64 0, i32 3
  br label %if.end2960

if.then2950:                                      ; preds = %if.end2993, %sw.bb2943.if.then2950_crit_edge
  %1680 = phi i32 [ %.pre5494, %sw.bb2943.if.then2950_crit_edge ], [ %or2972, %if.end2993 ]
  %.lcssa4903 = phi i32 [ %1679, %sw.bb2943.if.then2950_crit_edge ], [ %add2975, %if.end2993 ]
  %sub2954 = add nsw i32 %.lcssa4903, -8
  %shr2955 = lshr i32 %1680, %sub2954
  store i32 %sub2954, i32* %bsLive2947.pre-phi, align 4, !tbaa !106
  %conv2995 = and i32 %shr2955, 255
  %cmp2996 = icmp eq i32 %conv2995, 114
  br i1 %cmp2996, label %sw.bb3000, label %save_state_and_return

if.end2960:                                       ; preds = %if.end2993, %if.end2960.lr.ph
  %1681 = phi i32 [ %.pre5493, %if.end2960.lr.ph ], [ %dec2981, %if.end2993 ]
  %1682 = phi i32 [ %1679, %if.end2960.lr.ph ], [ %add2975, %if.end2993 ]
  %cmp2963 = icmp eq i32 %1681, 0
  br i1 %cmp2963, label %save_state_and_return, label %if.end2966

if.end2966:                                       ; preds = %if.end2960
  %1683 = load i32, i32* %bsBuff2952.phi.trans.insert, align 8, !tbaa !107
  %shl2968 = shl i32 %1683, 8
  %1684 = load i8*, i8** %next_in2970, align 8, !tbaa !102
  %1685 = load i8, i8* %1684, align 1, !tbaa !12
  %conv2971 = zext i8 %1685 to i32
  %or2972 = or i32 %shl2968, %conv2971
  store i32 %or2972, i32* %bsBuff2952.phi.trans.insert, align 8, !tbaa !107
  %add2975 = add nsw i32 %1682, 8
  store i32 %add2975, i32* %bsLive2947.pre-phi, align 4, !tbaa !106
  %incdec.ptr2978 = getelementptr inbounds i8, i8* %1684, i64 1
  store i8* %incdec.ptr2978, i8** %next_in2970, align 8, !tbaa !102
  %dec2981 = add i32 %1681, -1
  store i32 %dec2981, i32* %avail_in2962.phi.trans.insert, align 8, !tbaa !98
  %1686 = load i32, i32* %total_in_lo322983, align 4, !tbaa !88
  %inc2984 = add i32 %1686, 1
  store i32 %inc2984, i32* %total_in_lo322983, align 4, !tbaa !88
  %cmp2987 = icmp eq i32 %inc2984, 0
  br i1 %cmp2987, label %if.then2989, label %if.end2993

if.then2989:                                      ; preds = %if.end2966
  %1687 = load i32, i32* %total_in_hi322991, align 8, !tbaa !89
  %inc2992 = add i32 %1687, 1
  store i32 %inc2992, i32* %total_in_hi322991, align 8, !tbaa !89
  br label %if.end2993

if.end2993:                                       ; preds = %if.then2989, %if.end2966
  %cmp2948 = icmp sgt i32 %1682, -1
  br i1 %cmp2948, label %if.then2950, label %if.end2960

sw.bb3000:                                        ; preds = %if.then2950, %if.end.sw.bb3000_crit_edge
  %1688 = phi i32 [ %.pre, %if.end.sw.bb3000_crit_edge ], [ %1655, %if.then2950 ]
  %1689 = phi i32 [ %.pre5368, %if.end.sw.bb3000_crit_edge ], [ %1656, %if.then2950 ]
  %1690 = phi i32 [ %.pre5369, %if.end.sw.bb3000_crit_edge ], [ %1657, %if.then2950 ]
  %1691 = phi i32 [ %.pre5370, %if.end.sw.bb3000_crit_edge ], [ %1658, %if.then2950 ]
  %1692 = phi i32 [ %.pre5371, %if.end.sw.bb3000_crit_edge ], [ %1659, %if.then2950 ]
  %1693 = phi i32 [ %.pre5372, %if.end.sw.bb3000_crit_edge ], [ %1660, %if.then2950 ]
  %1694 = phi i32 [ %.pre5373, %if.end.sw.bb3000_crit_edge ], [ %1661, %if.then2950 ]
  %1695 = phi i32 [ %.pre5374, %if.end.sw.bb3000_crit_edge ], [ %1662, %if.then2950 ]
  %1696 = phi i32 [ %.pre5375, %if.end.sw.bb3000_crit_edge ], [ %1663, %if.then2950 ]
  %1697 = phi i32 [ %.pre5376, %if.end.sw.bb3000_crit_edge ], [ %1664, %if.then2950 ]
  %1698 = phi i32 [ %.pre5377, %if.end.sw.bb3000_crit_edge ], [ %1665, %if.then2950 ]
  %1699 = phi i32 [ %.pre5378, %if.end.sw.bb3000_crit_edge ], [ %1666, %if.then2950 ]
  %1700 = phi i32 [ %.pre5379, %if.end.sw.bb3000_crit_edge ], [ %1667, %if.then2950 ]
  %1701 = phi i32 [ %.pre5380, %if.end.sw.bb3000_crit_edge ], [ %1668, %if.then2950 ]
  %1702 = phi i32 [ %.pre5381, %if.end.sw.bb3000_crit_edge ], [ %1669, %if.then2950 ]
  %1703 = phi i32 [ %.pre5382, %if.end.sw.bb3000_crit_edge ], [ %1670, %if.then2950 ]
  %1704 = phi i32 [ %.pre5383, %if.end.sw.bb3000_crit_edge ], [ %1671, %if.then2950 ]
  %1705 = phi i32 [ %.pre5384, %if.end.sw.bb3000_crit_edge ], [ %1672, %if.then2950 ]
  %1706 = phi i32 [ %.pre5385, %if.end.sw.bb3000_crit_edge ], [ %1673, %if.then2950 ]
  %1707 = phi i32 [ %.pre5386, %if.end.sw.bb3000_crit_edge ], [ %1674, %if.then2950 ]
  %1708 = phi i32 [ %.pre5387, %if.end.sw.bb3000_crit_edge ], [ %1675, %if.then2950 ]
  %1709 = phi i32* [ %.pre5388, %if.end.sw.bb3000_crit_edge ], [ %1676, %if.then2950 ]
  %1710 = phi i32* [ %.pre5389, %if.end.sw.bb3000_crit_edge ], [ %1677, %if.then2950 ]
  %1711 = phi i32* [ %.pre5390, %if.end.sw.bb3000_crit_edge ], [ %1678, %if.then2950 ]
  %save_j3.pre-phi6816 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_j3.pre-phi6817, %if.then2950 ]
  %save_t4.pre-phi6760 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_t4.pre-phi6761, %if.then2950 ]
  %save_alphaSize5.pre-phi6704 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_alphaSize5.pre-phi6705, %if.then2950 ]
  %save_nGroups6.pre-phi6648 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_nGroups6.pre-phi6649, %if.then2950 ]
  %save_nSelectors7.pre-phi6592 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_nSelectors7.pre-phi6593, %if.then2950 ]
  %save_EOB8.pre-phi6536 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_EOB8.pre-phi6537, %if.then2950 ]
  %save_groupNo9.pre-phi6480 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_groupNo9.pre-phi6481, %if.then2950 ]
  %save_groupPos10.pre-phi6424 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_groupPos10.pre-phi6425, %if.then2950 ]
  %save_nextSym11.pre-phi6368 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_nextSym11.pre-phi6369, %if.then2950 ]
  %save_nblockMAX12.pre-phi6312 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_nblockMAX12.pre-phi6313, %if.then2950 ]
  %save_nblock13.pre-phi6256 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_nblock13.pre-phi6257, %if.then2950 ]
  %save_es14.pre-phi6200 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_es14.pre-phi6201, %if.then2950 ]
  %save_N15.pre-phi6144 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_N15.pre-phi6145, %if.then2950 ]
  %save_curr16.pre-phi6088 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_curr16.pre-phi6089, %if.then2950 ]
  %save_zt17.pre-phi6032 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_zt17.pre-phi6033, %if.then2950 ]
  %save_zn18.pre-phi5976 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_zn18.pre-phi5977, %if.then2950 ]
  %save_zvec19.pre-phi5920 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_zvec19.pre-phi5921, %if.then2950 ]
  %save_zj20.pre-phi5864 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_zj20.pre-phi5865, %if.then2950 ]
  %save_gSel21.pre-phi5808 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_gSel21.pre-phi5809, %if.then2950 ]
  %save_gMinlen22.pre-phi5752 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_gMinlen22.pre-phi5753, %if.then2950 ]
  %save_gLimit23.pre-phi5696 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_gLimit23.pre-phi5697, %if.then2950 ]
  %save_gBase24.pre-phi5640 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_gBase24.pre-phi5641, %if.then2950 ]
  %save_gPerm25.pre-phi5584 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %save_gPerm25.pre-phi5585, %if.then2950 ]
  %bsLive3004.pre-phi = phi i32* [ %bsLive3004.phi.trans.insert, %if.end.sw.bb3000_crit_edge ], [ %bsLive2947.pre-phi, %if.then2950 ]
  %1712 = phi i32 [ %.pre5495, %if.end.sw.bb3000_crit_edge ], [ %sub2954, %if.then2950 ]
  store i32 43, i32* %state, align 8, !tbaa !105
  %cmp30055031 = icmp sgt i32 %1712, 7
  %bsBuff3009.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp30055031, label %sw.bb3000.if.then3007_crit_edge, label %if.end3017.lr.ph

sw.bb3000.if.then3007_crit_edge:                  ; preds = %sw.bb3000
  %.pre5498 = load i32, i32* %bsBuff3009.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3007

if.end3017.lr.ph:                                 ; preds = %sw.bb3000
  %.pre5496 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3019.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5496, i64 0, i32 1
  %.pre5497 = load i32, i32* %avail_in3019.phi.trans.insert, align 8, !tbaa !98
  %next_in3027 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5496, i64 0, i32 0
  %total_in_lo323040 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5496, i64 0, i32 2
  %total_in_hi323048 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5496, i64 0, i32 3
  br label %if.end3017

if.then3007:                                      ; preds = %if.end3050, %sw.bb3000.if.then3007_crit_edge
  %1713 = phi i32 [ %.pre5498, %sw.bb3000.if.then3007_crit_edge ], [ %or3029, %if.end3050 ]
  %.lcssa4900 = phi i32 [ %1712, %sw.bb3000.if.then3007_crit_edge ], [ %add3032, %if.end3050 ]
  %sub3011 = add nsw i32 %.lcssa4900, -8
  %shr3012 = lshr i32 %1713, %sub3011
  store i32 %sub3011, i32* %bsLive3004.pre-phi, align 4, !tbaa !106
  %conv3052 = and i32 %shr3012, 255
  %cmp3053 = icmp eq i32 %conv3052, 69
  br i1 %cmp3053, label %sw.bb3057, label %save_state_and_return

if.end3017:                                       ; preds = %if.end3050, %if.end3017.lr.ph
  %1714 = phi i32 [ %.pre5497, %if.end3017.lr.ph ], [ %dec3038, %if.end3050 ]
  %1715 = phi i32 [ %1712, %if.end3017.lr.ph ], [ %add3032, %if.end3050 ]
  %cmp3020 = icmp eq i32 %1714, 0
  br i1 %cmp3020, label %save_state_and_return, label %if.end3023

if.end3023:                                       ; preds = %if.end3017
  %1716 = load i32, i32* %bsBuff3009.phi.trans.insert, align 8, !tbaa !107
  %shl3025 = shl i32 %1716, 8
  %1717 = load i8*, i8** %next_in3027, align 8, !tbaa !102
  %1718 = load i8, i8* %1717, align 1, !tbaa !12
  %conv3028 = zext i8 %1718 to i32
  %or3029 = or i32 %shl3025, %conv3028
  store i32 %or3029, i32* %bsBuff3009.phi.trans.insert, align 8, !tbaa !107
  %add3032 = add nsw i32 %1715, 8
  store i32 %add3032, i32* %bsLive3004.pre-phi, align 4, !tbaa !106
  %incdec.ptr3035 = getelementptr inbounds i8, i8* %1717, i64 1
  store i8* %incdec.ptr3035, i8** %next_in3027, align 8, !tbaa !102
  %dec3038 = add i32 %1714, -1
  store i32 %dec3038, i32* %avail_in3019.phi.trans.insert, align 8, !tbaa !98
  %1719 = load i32, i32* %total_in_lo323040, align 4, !tbaa !88
  %inc3041 = add i32 %1719, 1
  store i32 %inc3041, i32* %total_in_lo323040, align 4, !tbaa !88
  %cmp3044 = icmp eq i32 %inc3041, 0
  br i1 %cmp3044, label %if.then3046, label %if.end3050

if.then3046:                                      ; preds = %if.end3023
  %1720 = load i32, i32* %total_in_hi323048, align 8, !tbaa !89
  %inc3049 = add i32 %1720, 1
  store i32 %inc3049, i32* %total_in_hi323048, align 8, !tbaa !89
  br label %if.end3050

if.end3050:                                       ; preds = %if.then3046, %if.end3023
  %cmp3005 = icmp sgt i32 %1715, -1
  br i1 %cmp3005, label %if.then3007, label %if.end3017

sw.bb3057:                                        ; preds = %if.then3007, %if.end.sw.bb3057_crit_edge
  %1721 = phi i32 [ %.pre, %if.end.sw.bb3057_crit_edge ], [ %1688, %if.then3007 ]
  %1722 = phi i32 [ %.pre5368, %if.end.sw.bb3057_crit_edge ], [ %1689, %if.then3007 ]
  %1723 = phi i32 [ %.pre5369, %if.end.sw.bb3057_crit_edge ], [ %1690, %if.then3007 ]
  %1724 = phi i32 [ %.pre5370, %if.end.sw.bb3057_crit_edge ], [ %1691, %if.then3007 ]
  %1725 = phi i32 [ %.pre5371, %if.end.sw.bb3057_crit_edge ], [ %1692, %if.then3007 ]
  %1726 = phi i32 [ %.pre5372, %if.end.sw.bb3057_crit_edge ], [ %1693, %if.then3007 ]
  %1727 = phi i32 [ %.pre5373, %if.end.sw.bb3057_crit_edge ], [ %1694, %if.then3007 ]
  %1728 = phi i32 [ %.pre5374, %if.end.sw.bb3057_crit_edge ], [ %1695, %if.then3007 ]
  %1729 = phi i32 [ %.pre5375, %if.end.sw.bb3057_crit_edge ], [ %1696, %if.then3007 ]
  %1730 = phi i32 [ %.pre5376, %if.end.sw.bb3057_crit_edge ], [ %1697, %if.then3007 ]
  %1731 = phi i32 [ %.pre5377, %if.end.sw.bb3057_crit_edge ], [ %1698, %if.then3007 ]
  %1732 = phi i32 [ %.pre5378, %if.end.sw.bb3057_crit_edge ], [ %1699, %if.then3007 ]
  %1733 = phi i32 [ %.pre5379, %if.end.sw.bb3057_crit_edge ], [ %1700, %if.then3007 ]
  %1734 = phi i32 [ %.pre5380, %if.end.sw.bb3057_crit_edge ], [ %1701, %if.then3007 ]
  %1735 = phi i32 [ %.pre5381, %if.end.sw.bb3057_crit_edge ], [ %1702, %if.then3007 ]
  %1736 = phi i32 [ %.pre5382, %if.end.sw.bb3057_crit_edge ], [ %1703, %if.then3007 ]
  %1737 = phi i32 [ %.pre5383, %if.end.sw.bb3057_crit_edge ], [ %1704, %if.then3007 ]
  %1738 = phi i32 [ %.pre5384, %if.end.sw.bb3057_crit_edge ], [ %1705, %if.then3007 ]
  %1739 = phi i32 [ %.pre5385, %if.end.sw.bb3057_crit_edge ], [ %1706, %if.then3007 ]
  %1740 = phi i32 [ %.pre5386, %if.end.sw.bb3057_crit_edge ], [ %1707, %if.then3007 ]
  %1741 = phi i32 [ %.pre5387, %if.end.sw.bb3057_crit_edge ], [ %1708, %if.then3007 ]
  %1742 = phi i32* [ %.pre5388, %if.end.sw.bb3057_crit_edge ], [ %1709, %if.then3007 ]
  %1743 = phi i32* [ %.pre5389, %if.end.sw.bb3057_crit_edge ], [ %1710, %if.then3007 ]
  %1744 = phi i32* [ %.pre5390, %if.end.sw.bb3057_crit_edge ], [ %1711, %if.then3007 ]
  %save_j3.pre-phi6815 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_j3.pre-phi6816, %if.then3007 ]
  %save_t4.pre-phi6759 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_t4.pre-phi6760, %if.then3007 ]
  %save_alphaSize5.pre-phi6703 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_alphaSize5.pre-phi6704, %if.then3007 ]
  %save_nGroups6.pre-phi6647 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_nGroups6.pre-phi6648, %if.then3007 ]
  %save_nSelectors7.pre-phi6591 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_nSelectors7.pre-phi6592, %if.then3007 ]
  %save_EOB8.pre-phi6535 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_EOB8.pre-phi6536, %if.then3007 ]
  %save_groupNo9.pre-phi6479 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_groupNo9.pre-phi6480, %if.then3007 ]
  %save_groupPos10.pre-phi6423 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_groupPos10.pre-phi6424, %if.then3007 ]
  %save_nextSym11.pre-phi6367 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_nextSym11.pre-phi6368, %if.then3007 ]
  %save_nblockMAX12.pre-phi6311 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_nblockMAX12.pre-phi6312, %if.then3007 ]
  %save_nblock13.pre-phi6255 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_nblock13.pre-phi6256, %if.then3007 ]
  %save_es14.pre-phi6199 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_es14.pre-phi6200, %if.then3007 ]
  %save_N15.pre-phi6143 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_N15.pre-phi6144, %if.then3007 ]
  %save_curr16.pre-phi6087 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_curr16.pre-phi6088, %if.then3007 ]
  %save_zt17.pre-phi6031 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_zt17.pre-phi6032, %if.then3007 ]
  %save_zn18.pre-phi5975 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_zn18.pre-phi5976, %if.then3007 ]
  %save_zvec19.pre-phi5919 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_zvec19.pre-phi5920, %if.then3007 ]
  %save_zj20.pre-phi5863 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_zj20.pre-phi5864, %if.then3007 ]
  %save_gSel21.pre-phi5807 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_gSel21.pre-phi5808, %if.then3007 ]
  %save_gMinlen22.pre-phi5751 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_gMinlen22.pre-phi5752, %if.then3007 ]
  %save_gLimit23.pre-phi5695 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_gLimit23.pre-phi5696, %if.then3007 ]
  %save_gBase24.pre-phi5639 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_gBase24.pre-phi5640, %if.then3007 ]
  %save_gPerm25.pre-phi5583 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %save_gPerm25.pre-phi5584, %if.then3007 ]
  %bsLive3061.pre-phi = phi i32* [ %bsLive3061.phi.trans.insert, %if.end.sw.bb3057_crit_edge ], [ %bsLive3004.pre-phi, %if.then3007 ]
  %1745 = phi i32 [ %.pre5499, %if.end.sw.bb3057_crit_edge ], [ %sub3011, %if.then3007 ]
  store i32 44, i32* %state, align 8, !tbaa !105
  %cmp30625028 = icmp sgt i32 %1745, 7
  %bsBuff3066.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp30625028, label %sw.bb3057.if.then3064_crit_edge, label %if.end3074.lr.ph

sw.bb3057.if.then3064_crit_edge:                  ; preds = %sw.bb3057
  %.pre5502 = load i32, i32* %bsBuff3066.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3064

if.end3074.lr.ph:                                 ; preds = %sw.bb3057
  %.pre5500 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3076.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5500, i64 0, i32 1
  %.pre5501 = load i32, i32* %avail_in3076.phi.trans.insert, align 8, !tbaa !98
  %next_in3084 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5500, i64 0, i32 0
  %total_in_lo323097 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5500, i64 0, i32 2
  %total_in_hi323105 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5500, i64 0, i32 3
  br label %if.end3074

if.then3064:                                      ; preds = %if.end3107, %sw.bb3057.if.then3064_crit_edge
  %1746 = phi i32 [ %.pre5502, %sw.bb3057.if.then3064_crit_edge ], [ %or3086, %if.end3107 ]
  %.lcssa4897 = phi i32 [ %1745, %sw.bb3057.if.then3064_crit_edge ], [ %add3089, %if.end3107 ]
  %sub3068 = add nsw i32 %.lcssa4897, -8
  %shr3069 = lshr i32 %1746, %sub3068
  store i32 %sub3068, i32* %bsLive3061.pre-phi, align 4, !tbaa !106
  %conv3109 = and i32 %shr3069, 255
  %cmp3110 = icmp eq i32 %conv3109, 56
  br i1 %cmp3110, label %sw.bb3114, label %save_state_and_return

if.end3074:                                       ; preds = %if.end3107, %if.end3074.lr.ph
  %1747 = phi i32 [ %.pre5501, %if.end3074.lr.ph ], [ %dec3095, %if.end3107 ]
  %1748 = phi i32 [ %1745, %if.end3074.lr.ph ], [ %add3089, %if.end3107 ]
  %cmp3077 = icmp eq i32 %1747, 0
  br i1 %cmp3077, label %save_state_and_return, label %if.end3080

if.end3080:                                       ; preds = %if.end3074
  %1749 = load i32, i32* %bsBuff3066.phi.trans.insert, align 8, !tbaa !107
  %shl3082 = shl i32 %1749, 8
  %1750 = load i8*, i8** %next_in3084, align 8, !tbaa !102
  %1751 = load i8, i8* %1750, align 1, !tbaa !12
  %conv3085 = zext i8 %1751 to i32
  %or3086 = or i32 %shl3082, %conv3085
  store i32 %or3086, i32* %bsBuff3066.phi.trans.insert, align 8, !tbaa !107
  %add3089 = add nsw i32 %1748, 8
  store i32 %add3089, i32* %bsLive3061.pre-phi, align 4, !tbaa !106
  %incdec.ptr3092 = getelementptr inbounds i8, i8* %1750, i64 1
  store i8* %incdec.ptr3092, i8** %next_in3084, align 8, !tbaa !102
  %dec3095 = add i32 %1747, -1
  store i32 %dec3095, i32* %avail_in3076.phi.trans.insert, align 8, !tbaa !98
  %1752 = load i32, i32* %total_in_lo323097, align 4, !tbaa !88
  %inc3098 = add i32 %1752, 1
  store i32 %inc3098, i32* %total_in_lo323097, align 4, !tbaa !88
  %cmp3101 = icmp eq i32 %inc3098, 0
  br i1 %cmp3101, label %if.then3103, label %if.end3107

if.then3103:                                      ; preds = %if.end3080
  %1753 = load i32, i32* %total_in_hi323105, align 8, !tbaa !89
  %inc3106 = add i32 %1753, 1
  store i32 %inc3106, i32* %total_in_hi323105, align 8, !tbaa !89
  br label %if.end3107

if.end3107:                                       ; preds = %if.then3103, %if.end3080
  %cmp3062 = icmp sgt i32 %1748, -1
  br i1 %cmp3062, label %if.then3064, label %if.end3074

sw.bb3114:                                        ; preds = %if.then3064, %if.end.sw.bb3114_crit_edge
  %1754 = phi i32 [ %.pre, %if.end.sw.bb3114_crit_edge ], [ %1721, %if.then3064 ]
  %1755 = phi i32 [ %.pre5368, %if.end.sw.bb3114_crit_edge ], [ %1722, %if.then3064 ]
  %1756 = phi i32 [ %.pre5369, %if.end.sw.bb3114_crit_edge ], [ %1723, %if.then3064 ]
  %1757 = phi i32 [ %.pre5370, %if.end.sw.bb3114_crit_edge ], [ %1724, %if.then3064 ]
  %1758 = phi i32 [ %.pre5371, %if.end.sw.bb3114_crit_edge ], [ %1725, %if.then3064 ]
  %1759 = phi i32 [ %.pre5372, %if.end.sw.bb3114_crit_edge ], [ %1726, %if.then3064 ]
  %1760 = phi i32 [ %.pre5373, %if.end.sw.bb3114_crit_edge ], [ %1727, %if.then3064 ]
  %1761 = phi i32 [ %.pre5374, %if.end.sw.bb3114_crit_edge ], [ %1728, %if.then3064 ]
  %1762 = phi i32 [ %.pre5375, %if.end.sw.bb3114_crit_edge ], [ %1729, %if.then3064 ]
  %1763 = phi i32 [ %.pre5376, %if.end.sw.bb3114_crit_edge ], [ %1730, %if.then3064 ]
  %1764 = phi i32 [ %.pre5377, %if.end.sw.bb3114_crit_edge ], [ %1731, %if.then3064 ]
  %1765 = phi i32 [ %.pre5378, %if.end.sw.bb3114_crit_edge ], [ %1732, %if.then3064 ]
  %1766 = phi i32 [ %.pre5379, %if.end.sw.bb3114_crit_edge ], [ %1733, %if.then3064 ]
  %1767 = phi i32 [ %.pre5380, %if.end.sw.bb3114_crit_edge ], [ %1734, %if.then3064 ]
  %1768 = phi i32 [ %.pre5381, %if.end.sw.bb3114_crit_edge ], [ %1735, %if.then3064 ]
  %1769 = phi i32 [ %.pre5382, %if.end.sw.bb3114_crit_edge ], [ %1736, %if.then3064 ]
  %1770 = phi i32 [ %.pre5383, %if.end.sw.bb3114_crit_edge ], [ %1737, %if.then3064 ]
  %1771 = phi i32 [ %.pre5384, %if.end.sw.bb3114_crit_edge ], [ %1738, %if.then3064 ]
  %1772 = phi i32 [ %.pre5385, %if.end.sw.bb3114_crit_edge ], [ %1739, %if.then3064 ]
  %1773 = phi i32 [ %.pre5386, %if.end.sw.bb3114_crit_edge ], [ %1740, %if.then3064 ]
  %1774 = phi i32 [ %.pre5387, %if.end.sw.bb3114_crit_edge ], [ %1741, %if.then3064 ]
  %1775 = phi i32* [ %.pre5388, %if.end.sw.bb3114_crit_edge ], [ %1742, %if.then3064 ]
  %1776 = phi i32* [ %.pre5389, %if.end.sw.bb3114_crit_edge ], [ %1743, %if.then3064 ]
  %1777 = phi i32* [ %.pre5390, %if.end.sw.bb3114_crit_edge ], [ %1744, %if.then3064 ]
  %save_j3.pre-phi6814 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_j3.pre-phi6815, %if.then3064 ]
  %save_t4.pre-phi6758 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_t4.pre-phi6759, %if.then3064 ]
  %save_alphaSize5.pre-phi6702 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_alphaSize5.pre-phi6703, %if.then3064 ]
  %save_nGroups6.pre-phi6646 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_nGroups6.pre-phi6647, %if.then3064 ]
  %save_nSelectors7.pre-phi6590 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_nSelectors7.pre-phi6591, %if.then3064 ]
  %save_EOB8.pre-phi6534 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_EOB8.pre-phi6535, %if.then3064 ]
  %save_groupNo9.pre-phi6478 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_groupNo9.pre-phi6479, %if.then3064 ]
  %save_groupPos10.pre-phi6422 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_groupPos10.pre-phi6423, %if.then3064 ]
  %save_nextSym11.pre-phi6366 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_nextSym11.pre-phi6367, %if.then3064 ]
  %save_nblockMAX12.pre-phi6310 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_nblockMAX12.pre-phi6311, %if.then3064 ]
  %save_nblock13.pre-phi6254 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_nblock13.pre-phi6255, %if.then3064 ]
  %save_es14.pre-phi6198 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_es14.pre-phi6199, %if.then3064 ]
  %save_N15.pre-phi6142 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_N15.pre-phi6143, %if.then3064 ]
  %save_curr16.pre-phi6086 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_curr16.pre-phi6087, %if.then3064 ]
  %save_zt17.pre-phi6030 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_zt17.pre-phi6031, %if.then3064 ]
  %save_zn18.pre-phi5974 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_zn18.pre-phi5975, %if.then3064 ]
  %save_zvec19.pre-phi5918 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_zvec19.pre-phi5919, %if.then3064 ]
  %save_zj20.pre-phi5862 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_zj20.pre-phi5863, %if.then3064 ]
  %save_gSel21.pre-phi5806 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_gSel21.pre-phi5807, %if.then3064 ]
  %save_gMinlen22.pre-phi5750 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_gMinlen22.pre-phi5751, %if.then3064 ]
  %save_gLimit23.pre-phi5694 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_gLimit23.pre-phi5695, %if.then3064 ]
  %save_gBase24.pre-phi5638 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_gBase24.pre-phi5639, %if.then3064 ]
  %save_gPerm25.pre-phi5582 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %save_gPerm25.pre-phi5583, %if.then3064 ]
  %bsLive3118.pre-phi = phi i32* [ %bsLive3118.phi.trans.insert, %if.end.sw.bb3114_crit_edge ], [ %bsLive3061.pre-phi, %if.then3064 ]
  %1778 = phi i32 [ %.pre5503, %if.end.sw.bb3114_crit_edge ], [ %sub3068, %if.then3064 ]
  store i32 45, i32* %state, align 8, !tbaa !105
  %cmp31195025 = icmp sgt i32 %1778, 7
  %bsBuff3123.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp31195025, label %sw.bb3114.if.then3121_crit_edge, label %if.end3131.lr.ph

sw.bb3114.if.then3121_crit_edge:                  ; preds = %sw.bb3114
  %.pre5506 = load i32, i32* %bsBuff3123.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3121

if.end3131.lr.ph:                                 ; preds = %sw.bb3114
  %.pre5504 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3133.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5504, i64 0, i32 1
  %.pre5505 = load i32, i32* %avail_in3133.phi.trans.insert, align 8, !tbaa !98
  %next_in3141 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5504, i64 0, i32 0
  %total_in_lo323154 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5504, i64 0, i32 2
  %total_in_hi323162 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5504, i64 0, i32 3
  br label %if.end3131

if.then3121:                                      ; preds = %if.end3164, %sw.bb3114.if.then3121_crit_edge
  %1779 = phi i32 [ %.pre5506, %sw.bb3114.if.then3121_crit_edge ], [ %or3143, %if.end3164 ]
  %.lcssa4894 = phi i32 [ %1778, %sw.bb3114.if.then3121_crit_edge ], [ %add3146, %if.end3164 ]
  %sub3125 = add nsw i32 %.lcssa4894, -8
  %shr3126 = lshr i32 %1779, %sub3125
  store i32 %sub3125, i32* %bsLive3118.pre-phi, align 4, !tbaa !106
  %conv3166 = and i32 %shr3126, 255
  %cmp3167 = icmp eq i32 %conv3166, 80
  br i1 %cmp3167, label %sw.bb3171, label %save_state_and_return

if.end3131:                                       ; preds = %if.end3164, %if.end3131.lr.ph
  %1780 = phi i32 [ %.pre5505, %if.end3131.lr.ph ], [ %dec3152, %if.end3164 ]
  %1781 = phi i32 [ %1778, %if.end3131.lr.ph ], [ %add3146, %if.end3164 ]
  %cmp3134 = icmp eq i32 %1780, 0
  br i1 %cmp3134, label %save_state_and_return, label %if.end3137

if.end3137:                                       ; preds = %if.end3131
  %1782 = load i32, i32* %bsBuff3123.phi.trans.insert, align 8, !tbaa !107
  %shl3139 = shl i32 %1782, 8
  %1783 = load i8*, i8** %next_in3141, align 8, !tbaa !102
  %1784 = load i8, i8* %1783, align 1, !tbaa !12
  %conv3142 = zext i8 %1784 to i32
  %or3143 = or i32 %shl3139, %conv3142
  store i32 %or3143, i32* %bsBuff3123.phi.trans.insert, align 8, !tbaa !107
  %add3146 = add nsw i32 %1781, 8
  store i32 %add3146, i32* %bsLive3118.pre-phi, align 4, !tbaa !106
  %incdec.ptr3149 = getelementptr inbounds i8, i8* %1783, i64 1
  store i8* %incdec.ptr3149, i8** %next_in3141, align 8, !tbaa !102
  %dec3152 = add i32 %1780, -1
  store i32 %dec3152, i32* %avail_in3133.phi.trans.insert, align 8, !tbaa !98
  %1785 = load i32, i32* %total_in_lo323154, align 4, !tbaa !88
  %inc3155 = add i32 %1785, 1
  store i32 %inc3155, i32* %total_in_lo323154, align 4, !tbaa !88
  %cmp3158 = icmp eq i32 %inc3155, 0
  br i1 %cmp3158, label %if.then3160, label %if.end3164

if.then3160:                                      ; preds = %if.end3137
  %1786 = load i32, i32* %total_in_hi323162, align 8, !tbaa !89
  %inc3163 = add i32 %1786, 1
  store i32 %inc3163, i32* %total_in_hi323162, align 8, !tbaa !89
  br label %if.end3164

if.end3164:                                       ; preds = %if.then3160, %if.end3137
  %cmp3119 = icmp sgt i32 %1781, -1
  br i1 %cmp3119, label %if.then3121, label %if.end3131

sw.bb3171:                                        ; preds = %if.then3121, %if.end.sw.bb3171_crit_edge
  %1787 = phi i32 [ %.pre, %if.end.sw.bb3171_crit_edge ], [ %1754, %if.then3121 ]
  %1788 = phi i32 [ %.pre5368, %if.end.sw.bb3171_crit_edge ], [ %1755, %if.then3121 ]
  %1789 = phi i32 [ %.pre5369, %if.end.sw.bb3171_crit_edge ], [ %1756, %if.then3121 ]
  %1790 = phi i32 [ %.pre5370, %if.end.sw.bb3171_crit_edge ], [ %1757, %if.then3121 ]
  %1791 = phi i32 [ %.pre5371, %if.end.sw.bb3171_crit_edge ], [ %1758, %if.then3121 ]
  %1792 = phi i32 [ %.pre5372, %if.end.sw.bb3171_crit_edge ], [ %1759, %if.then3121 ]
  %1793 = phi i32 [ %.pre5373, %if.end.sw.bb3171_crit_edge ], [ %1760, %if.then3121 ]
  %1794 = phi i32 [ %.pre5374, %if.end.sw.bb3171_crit_edge ], [ %1761, %if.then3121 ]
  %1795 = phi i32 [ %.pre5375, %if.end.sw.bb3171_crit_edge ], [ %1762, %if.then3121 ]
  %1796 = phi i32 [ %.pre5376, %if.end.sw.bb3171_crit_edge ], [ %1763, %if.then3121 ]
  %1797 = phi i32 [ %.pre5377, %if.end.sw.bb3171_crit_edge ], [ %1764, %if.then3121 ]
  %1798 = phi i32 [ %.pre5378, %if.end.sw.bb3171_crit_edge ], [ %1765, %if.then3121 ]
  %1799 = phi i32 [ %.pre5379, %if.end.sw.bb3171_crit_edge ], [ %1766, %if.then3121 ]
  %1800 = phi i32 [ %.pre5380, %if.end.sw.bb3171_crit_edge ], [ %1767, %if.then3121 ]
  %1801 = phi i32 [ %.pre5381, %if.end.sw.bb3171_crit_edge ], [ %1768, %if.then3121 ]
  %1802 = phi i32 [ %.pre5382, %if.end.sw.bb3171_crit_edge ], [ %1769, %if.then3121 ]
  %1803 = phi i32 [ %.pre5383, %if.end.sw.bb3171_crit_edge ], [ %1770, %if.then3121 ]
  %1804 = phi i32 [ %.pre5384, %if.end.sw.bb3171_crit_edge ], [ %1771, %if.then3121 ]
  %1805 = phi i32 [ %.pre5385, %if.end.sw.bb3171_crit_edge ], [ %1772, %if.then3121 ]
  %1806 = phi i32 [ %.pre5386, %if.end.sw.bb3171_crit_edge ], [ %1773, %if.then3121 ]
  %1807 = phi i32 [ %.pre5387, %if.end.sw.bb3171_crit_edge ], [ %1774, %if.then3121 ]
  %1808 = phi i32* [ %.pre5388, %if.end.sw.bb3171_crit_edge ], [ %1775, %if.then3121 ]
  %1809 = phi i32* [ %.pre5389, %if.end.sw.bb3171_crit_edge ], [ %1776, %if.then3121 ]
  %1810 = phi i32* [ %.pre5390, %if.end.sw.bb3171_crit_edge ], [ %1777, %if.then3121 ]
  %save_j3.pre-phi6813 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_j3.pre-phi6814, %if.then3121 ]
  %save_t4.pre-phi6757 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_t4.pre-phi6758, %if.then3121 ]
  %save_alphaSize5.pre-phi6701 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_alphaSize5.pre-phi6702, %if.then3121 ]
  %save_nGroups6.pre-phi6645 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_nGroups6.pre-phi6646, %if.then3121 ]
  %save_nSelectors7.pre-phi6589 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_nSelectors7.pre-phi6590, %if.then3121 ]
  %save_EOB8.pre-phi6533 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_EOB8.pre-phi6534, %if.then3121 ]
  %save_groupNo9.pre-phi6477 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_groupNo9.pre-phi6478, %if.then3121 ]
  %save_groupPos10.pre-phi6421 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_groupPos10.pre-phi6422, %if.then3121 ]
  %save_nextSym11.pre-phi6365 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_nextSym11.pre-phi6366, %if.then3121 ]
  %save_nblockMAX12.pre-phi6309 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_nblockMAX12.pre-phi6310, %if.then3121 ]
  %save_nblock13.pre-phi6253 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_nblock13.pre-phi6254, %if.then3121 ]
  %save_es14.pre-phi6197 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_es14.pre-phi6198, %if.then3121 ]
  %save_N15.pre-phi6141 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_N15.pre-phi6142, %if.then3121 ]
  %save_curr16.pre-phi6085 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_curr16.pre-phi6086, %if.then3121 ]
  %save_zt17.pre-phi6029 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_zt17.pre-phi6030, %if.then3121 ]
  %save_zn18.pre-phi5973 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_zn18.pre-phi5974, %if.then3121 ]
  %save_zvec19.pre-phi5917 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_zvec19.pre-phi5918, %if.then3121 ]
  %save_zj20.pre-phi5861 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_zj20.pre-phi5862, %if.then3121 ]
  %save_gSel21.pre-phi5805 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_gSel21.pre-phi5806, %if.then3121 ]
  %save_gMinlen22.pre-phi5749 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_gMinlen22.pre-phi5750, %if.then3121 ]
  %save_gLimit23.pre-phi5693 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_gLimit23.pre-phi5694, %if.then3121 ]
  %save_gBase24.pre-phi5637 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_gBase24.pre-phi5638, %if.then3121 ]
  %save_gPerm25.pre-phi5581 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %save_gPerm25.pre-phi5582, %if.then3121 ]
  %bsLive3175.pre-phi = phi i32* [ %bsLive3175.phi.trans.insert, %if.end.sw.bb3171_crit_edge ], [ %bsLive3118.pre-phi, %if.then3121 ]
  %1811 = phi i32 [ %.pre5507, %if.end.sw.bb3171_crit_edge ], [ %sub3125, %if.then3121 ]
  store i32 46, i32* %state, align 8, !tbaa !105
  %cmp31765022 = icmp sgt i32 %1811, 7
  %bsBuff3180.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp31765022, label %sw.bb3171.if.then3178_crit_edge, label %if.end3188.lr.ph

sw.bb3171.if.then3178_crit_edge:                  ; preds = %sw.bb3171
  %.pre5510 = load i32, i32* %bsBuff3180.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3178

if.end3188.lr.ph:                                 ; preds = %sw.bb3171
  %.pre5508 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3190.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5508, i64 0, i32 1
  %.pre5509 = load i32, i32* %avail_in3190.phi.trans.insert, align 8, !tbaa !98
  %next_in3198 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5508, i64 0, i32 0
  %total_in_lo323211 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5508, i64 0, i32 2
  %total_in_hi323219 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5508, i64 0, i32 3
  br label %if.end3188

if.then3178:                                      ; preds = %if.end3221, %sw.bb3171.if.then3178_crit_edge
  %1812 = phi i32 [ %.pre5510, %sw.bb3171.if.then3178_crit_edge ], [ %or3200, %if.end3221 ]
  %.lcssa4891 = phi i32 [ %1811, %sw.bb3171.if.then3178_crit_edge ], [ %add3203, %if.end3221 ]
  %sub3182 = add nsw i32 %.lcssa4891, -8
  %shr3183 = lshr i32 %1812, %sub3182
  store i32 %sub3182, i32* %bsLive3175.pre-phi, align 4, !tbaa !106
  %conv3223 = and i32 %shr3183, 255
  %cmp3224 = icmp eq i32 %conv3223, 144
  br i1 %cmp3224, label %if.end3227, label %save_state_and_return

if.end3188:                                       ; preds = %if.end3221, %if.end3188.lr.ph
  %1813 = phi i32 [ %.pre5509, %if.end3188.lr.ph ], [ %dec3209, %if.end3221 ]
  %1814 = phi i32 [ %1811, %if.end3188.lr.ph ], [ %add3203, %if.end3221 ]
  %cmp3191 = icmp eq i32 %1813, 0
  br i1 %cmp3191, label %save_state_and_return, label %if.end3194

if.end3194:                                       ; preds = %if.end3188
  %1815 = load i32, i32* %bsBuff3180.phi.trans.insert, align 8, !tbaa !107
  %shl3196 = shl i32 %1815, 8
  %1816 = load i8*, i8** %next_in3198, align 8, !tbaa !102
  %1817 = load i8, i8* %1816, align 1, !tbaa !12
  %conv3199 = zext i8 %1817 to i32
  %or3200 = or i32 %shl3196, %conv3199
  store i32 %or3200, i32* %bsBuff3180.phi.trans.insert, align 8, !tbaa !107
  %add3203 = add nsw i32 %1814, 8
  store i32 %add3203, i32* %bsLive3175.pre-phi, align 4, !tbaa !106
  %incdec.ptr3206 = getelementptr inbounds i8, i8* %1816, i64 1
  store i8* %incdec.ptr3206, i8** %next_in3198, align 8, !tbaa !102
  %dec3209 = add i32 %1813, -1
  store i32 %dec3209, i32* %avail_in3190.phi.trans.insert, align 8, !tbaa !98
  %1818 = load i32, i32* %total_in_lo323211, align 4, !tbaa !88
  %inc3212 = add i32 %1818, 1
  store i32 %inc3212, i32* %total_in_lo323211, align 4, !tbaa !88
  %cmp3215 = icmp eq i32 %inc3212, 0
  br i1 %cmp3215, label %if.then3217, label %if.end3221

if.then3217:                                      ; preds = %if.end3194
  %1819 = load i32, i32* %total_in_hi323219, align 8, !tbaa !89
  %inc3220 = add i32 %1819, 1
  store i32 %inc3220, i32* %total_in_hi323219, align 8, !tbaa !89
  br label %if.end3221

if.end3221:                                       ; preds = %if.then3217, %if.end3194
  %cmp3176 = icmp sgt i32 %1814, -1
  br i1 %cmp3176, label %if.then3178, label %if.end3188

if.end3227:                                       ; preds = %if.then3178
  %storedCombinedCRC = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 24
  store i32 0, i32* %storedCombinedCRC, align 4, !tbaa !126
  br label %sw.bb3228

sw.bb3228:                                        ; preds = %if.end3227, %if.end.sw.bb3228_crit_edge
  %1820 = phi i32 [ %.pre, %if.end.sw.bb3228_crit_edge ], [ %1787, %if.end3227 ]
  %1821 = phi i32 [ %.pre5368, %if.end.sw.bb3228_crit_edge ], [ %1788, %if.end3227 ]
  %1822 = phi i32 [ %.pre5369, %if.end.sw.bb3228_crit_edge ], [ %1789, %if.end3227 ]
  %1823 = phi i32 [ %.pre5370, %if.end.sw.bb3228_crit_edge ], [ %1790, %if.end3227 ]
  %1824 = phi i32 [ %.pre5371, %if.end.sw.bb3228_crit_edge ], [ %1791, %if.end3227 ]
  %1825 = phi i32 [ %.pre5372, %if.end.sw.bb3228_crit_edge ], [ %1792, %if.end3227 ]
  %1826 = phi i32 [ %.pre5373, %if.end.sw.bb3228_crit_edge ], [ %1793, %if.end3227 ]
  %1827 = phi i32 [ %.pre5374, %if.end.sw.bb3228_crit_edge ], [ %1794, %if.end3227 ]
  %1828 = phi i32 [ %.pre5375, %if.end.sw.bb3228_crit_edge ], [ %1795, %if.end3227 ]
  %1829 = phi i32 [ %.pre5376, %if.end.sw.bb3228_crit_edge ], [ %1796, %if.end3227 ]
  %1830 = phi i32 [ %.pre5377, %if.end.sw.bb3228_crit_edge ], [ %1797, %if.end3227 ]
  %1831 = phi i32 [ %.pre5378, %if.end.sw.bb3228_crit_edge ], [ %1798, %if.end3227 ]
  %1832 = phi i32 [ %.pre5379, %if.end.sw.bb3228_crit_edge ], [ %1799, %if.end3227 ]
  %1833 = phi i32 [ %.pre5380, %if.end.sw.bb3228_crit_edge ], [ %1800, %if.end3227 ]
  %1834 = phi i32 [ %.pre5381, %if.end.sw.bb3228_crit_edge ], [ %1801, %if.end3227 ]
  %1835 = phi i32 [ %.pre5382, %if.end.sw.bb3228_crit_edge ], [ %1802, %if.end3227 ]
  %1836 = phi i32 [ %.pre5383, %if.end.sw.bb3228_crit_edge ], [ %1803, %if.end3227 ]
  %1837 = phi i32 [ %.pre5384, %if.end.sw.bb3228_crit_edge ], [ %1804, %if.end3227 ]
  %1838 = phi i32 [ %.pre5385, %if.end.sw.bb3228_crit_edge ], [ %1805, %if.end3227 ]
  %1839 = phi i32 [ %.pre5386, %if.end.sw.bb3228_crit_edge ], [ %1806, %if.end3227 ]
  %1840 = phi i32 [ %.pre5387, %if.end.sw.bb3228_crit_edge ], [ %1807, %if.end3227 ]
  %1841 = phi i32* [ %.pre5388, %if.end.sw.bb3228_crit_edge ], [ %1808, %if.end3227 ]
  %1842 = phi i32* [ %.pre5389, %if.end.sw.bb3228_crit_edge ], [ %1809, %if.end3227 ]
  %1843 = phi i32* [ %.pre5390, %if.end.sw.bb3228_crit_edge ], [ %1810, %if.end3227 ]
  %save_j3.pre-phi6812 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_j3.pre-phi6813, %if.end3227 ]
  %save_t4.pre-phi6756 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_t4.pre-phi6757, %if.end3227 ]
  %save_alphaSize5.pre-phi6700 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_alphaSize5.pre-phi6701, %if.end3227 ]
  %save_nGroups6.pre-phi6644 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_nGroups6.pre-phi6645, %if.end3227 ]
  %save_nSelectors7.pre-phi6588 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_nSelectors7.pre-phi6589, %if.end3227 ]
  %save_EOB8.pre-phi6532 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_EOB8.pre-phi6533, %if.end3227 ]
  %save_groupNo9.pre-phi6476 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_groupNo9.pre-phi6477, %if.end3227 ]
  %save_groupPos10.pre-phi6420 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_groupPos10.pre-phi6421, %if.end3227 ]
  %save_nextSym11.pre-phi6364 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_nextSym11.pre-phi6365, %if.end3227 ]
  %save_nblockMAX12.pre-phi6308 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_nblockMAX12.pre-phi6309, %if.end3227 ]
  %save_nblock13.pre-phi6252 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_nblock13.pre-phi6253, %if.end3227 ]
  %save_es14.pre-phi6196 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_es14.pre-phi6197, %if.end3227 ]
  %save_N15.pre-phi6140 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_N15.pre-phi6141, %if.end3227 ]
  %save_curr16.pre-phi6084 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_curr16.pre-phi6085, %if.end3227 ]
  %save_zt17.pre-phi6028 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_zt17.pre-phi6029, %if.end3227 ]
  %save_zn18.pre-phi5972 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_zn18.pre-phi5973, %if.end3227 ]
  %save_zvec19.pre-phi5916 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_zvec19.pre-phi5917, %if.end3227 ]
  %save_zj20.pre-phi5860 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_zj20.pre-phi5861, %if.end3227 ]
  %save_gSel21.pre-phi5804 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_gSel21.pre-phi5805, %if.end3227 ]
  %save_gMinlen22.pre-phi5748 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_gMinlen22.pre-phi5749, %if.end3227 ]
  %save_gLimit23.pre-phi5692 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_gLimit23.pre-phi5693, %if.end3227 ]
  %save_gBase24.pre-phi5636 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_gBase24.pre-phi5637, %if.end3227 ]
  %save_gPerm25.pre-phi5580 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %save_gPerm25.pre-phi5581, %if.end3227 ]
  %bsLive3232.pre-phi = phi i32* [ %bsLive3232.phi.trans.insert, %if.end.sw.bb3228_crit_edge ], [ %bsLive3175.pre-phi, %if.end3227 ]
  %1844 = phi i32 [ %.pre5511, %if.end.sw.bb3228_crit_edge ], [ %sub3182, %if.end3227 ]
  store i32 47, i32* %state, align 8, !tbaa !105
  %cmp32335019 = icmp sgt i32 %1844, 7
  %bsBuff3237.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp32335019, label %sw.bb3228.if.then3235_crit_edge, label %if.end3245.lr.ph

sw.bb3228.if.then3235_crit_edge:                  ; preds = %sw.bb3228
  %.pre5514 = load i32, i32* %bsBuff3237.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3235

if.end3245.lr.ph:                                 ; preds = %sw.bb3228
  %.pre5512 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3247.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5512, i64 0, i32 1
  %.pre5513 = load i32, i32* %avail_in3247.phi.trans.insert, align 8, !tbaa !98
  %next_in3255 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5512, i64 0, i32 0
  %total_in_lo323268 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5512, i64 0, i32 2
  %total_in_hi323276 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5512, i64 0, i32 3
  br label %if.end3245

if.then3235:                                      ; preds = %if.end3278, %sw.bb3228.if.then3235_crit_edge
  %1845 = phi i32 [ %.pre5514, %sw.bb3228.if.then3235_crit_edge ], [ %or3257, %if.end3278 ]
  %.lcssa4888 = phi i32 [ %1844, %sw.bb3228.if.then3235_crit_edge ], [ %add3260, %if.end3278 ]
  %sub3239 = add nsw i32 %.lcssa4888, -8
  %shr3240 = lshr i32 %1845, %sub3239
  store i32 %sub3239, i32* %bsLive3232.pre-phi, align 4, !tbaa !106
  %storedCombinedCRC3280 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 24
  %1846 = load i32, i32* %storedCombinedCRC3280, align 4, !tbaa !126
  %shl3281 = shl i32 %1846, 8
  %conv3282 = and i32 %shr3240, 255
  %or3283 = or i32 %shl3281, %conv3282
  store i32 %or3283, i32* %storedCombinedCRC3280, align 4, !tbaa !126
  br label %sw.bb3285

if.end3245:                                       ; preds = %if.end3278, %if.end3245.lr.ph
  %1847 = phi i32 [ %.pre5513, %if.end3245.lr.ph ], [ %dec3266, %if.end3278 ]
  %1848 = phi i32 [ %1844, %if.end3245.lr.ph ], [ %add3260, %if.end3278 ]
  %cmp3248 = icmp eq i32 %1847, 0
  br i1 %cmp3248, label %save_state_and_return, label %if.end3251

if.end3251:                                       ; preds = %if.end3245
  %1849 = load i32, i32* %bsBuff3237.phi.trans.insert, align 8, !tbaa !107
  %shl3253 = shl i32 %1849, 8
  %1850 = load i8*, i8** %next_in3255, align 8, !tbaa !102
  %1851 = load i8, i8* %1850, align 1, !tbaa !12
  %conv3256 = zext i8 %1851 to i32
  %or3257 = or i32 %shl3253, %conv3256
  store i32 %or3257, i32* %bsBuff3237.phi.trans.insert, align 8, !tbaa !107
  %add3260 = add nsw i32 %1848, 8
  store i32 %add3260, i32* %bsLive3232.pre-phi, align 4, !tbaa !106
  %incdec.ptr3263 = getelementptr inbounds i8, i8* %1850, i64 1
  store i8* %incdec.ptr3263, i8** %next_in3255, align 8, !tbaa !102
  %dec3266 = add i32 %1847, -1
  store i32 %dec3266, i32* %avail_in3247.phi.trans.insert, align 8, !tbaa !98
  %1852 = load i32, i32* %total_in_lo323268, align 4, !tbaa !88
  %inc3269 = add i32 %1852, 1
  store i32 %inc3269, i32* %total_in_lo323268, align 4, !tbaa !88
  %cmp3272 = icmp eq i32 %inc3269, 0
  br i1 %cmp3272, label %if.then3274, label %if.end3278

if.then3274:                                      ; preds = %if.end3251
  %1853 = load i32, i32* %total_in_hi323276, align 8, !tbaa !89
  %inc3277 = add i32 %1853, 1
  store i32 %inc3277, i32* %total_in_hi323276, align 8, !tbaa !89
  br label %if.end3278

if.end3278:                                       ; preds = %if.then3274, %if.end3251
  %cmp3233 = icmp sgt i32 %1848, -1
  br i1 %cmp3233, label %if.then3235, label %if.end3245

sw.bb3285:                                        ; preds = %if.then3235, %if.end.sw.bb3285_crit_edge
  %1854 = phi i32 [ %.pre, %if.end.sw.bb3285_crit_edge ], [ %1820, %if.then3235 ]
  %1855 = phi i32 [ %.pre5368, %if.end.sw.bb3285_crit_edge ], [ %1821, %if.then3235 ]
  %1856 = phi i32 [ %.pre5369, %if.end.sw.bb3285_crit_edge ], [ %1822, %if.then3235 ]
  %1857 = phi i32 [ %.pre5370, %if.end.sw.bb3285_crit_edge ], [ %1823, %if.then3235 ]
  %1858 = phi i32 [ %.pre5371, %if.end.sw.bb3285_crit_edge ], [ %1824, %if.then3235 ]
  %1859 = phi i32 [ %.pre5372, %if.end.sw.bb3285_crit_edge ], [ %1825, %if.then3235 ]
  %1860 = phi i32 [ %.pre5373, %if.end.sw.bb3285_crit_edge ], [ %1826, %if.then3235 ]
  %1861 = phi i32 [ %.pre5374, %if.end.sw.bb3285_crit_edge ], [ %1827, %if.then3235 ]
  %1862 = phi i32 [ %.pre5375, %if.end.sw.bb3285_crit_edge ], [ %1828, %if.then3235 ]
  %1863 = phi i32 [ %.pre5376, %if.end.sw.bb3285_crit_edge ], [ %1829, %if.then3235 ]
  %1864 = phi i32 [ %.pre5377, %if.end.sw.bb3285_crit_edge ], [ %1830, %if.then3235 ]
  %1865 = phi i32 [ %.pre5378, %if.end.sw.bb3285_crit_edge ], [ %1831, %if.then3235 ]
  %1866 = phi i32 [ %.pre5379, %if.end.sw.bb3285_crit_edge ], [ %1832, %if.then3235 ]
  %1867 = phi i32 [ %.pre5380, %if.end.sw.bb3285_crit_edge ], [ %1833, %if.then3235 ]
  %1868 = phi i32 [ %.pre5381, %if.end.sw.bb3285_crit_edge ], [ %1834, %if.then3235 ]
  %1869 = phi i32 [ %.pre5382, %if.end.sw.bb3285_crit_edge ], [ %1835, %if.then3235 ]
  %1870 = phi i32 [ %.pre5383, %if.end.sw.bb3285_crit_edge ], [ %1836, %if.then3235 ]
  %1871 = phi i32 [ %.pre5384, %if.end.sw.bb3285_crit_edge ], [ %1837, %if.then3235 ]
  %1872 = phi i32 [ %.pre5385, %if.end.sw.bb3285_crit_edge ], [ %1838, %if.then3235 ]
  %1873 = phi i32 [ %.pre5386, %if.end.sw.bb3285_crit_edge ], [ %1839, %if.then3235 ]
  %1874 = phi i32 [ %.pre5387, %if.end.sw.bb3285_crit_edge ], [ %1840, %if.then3235 ]
  %1875 = phi i32* [ %.pre5388, %if.end.sw.bb3285_crit_edge ], [ %1841, %if.then3235 ]
  %1876 = phi i32* [ %.pre5389, %if.end.sw.bb3285_crit_edge ], [ %1842, %if.then3235 ]
  %1877 = phi i32* [ %.pre5390, %if.end.sw.bb3285_crit_edge ], [ %1843, %if.then3235 ]
  %save_j3.pre-phi6811 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_j3.pre-phi6812, %if.then3235 ]
  %save_t4.pre-phi6755 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_t4.pre-phi6756, %if.then3235 ]
  %save_alphaSize5.pre-phi6699 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_alphaSize5.pre-phi6700, %if.then3235 ]
  %save_nGroups6.pre-phi6643 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_nGroups6.pre-phi6644, %if.then3235 ]
  %save_nSelectors7.pre-phi6587 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_nSelectors7.pre-phi6588, %if.then3235 ]
  %save_EOB8.pre-phi6531 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_EOB8.pre-phi6532, %if.then3235 ]
  %save_groupNo9.pre-phi6475 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_groupNo9.pre-phi6476, %if.then3235 ]
  %save_groupPos10.pre-phi6419 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_groupPos10.pre-phi6420, %if.then3235 ]
  %save_nextSym11.pre-phi6363 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_nextSym11.pre-phi6364, %if.then3235 ]
  %save_nblockMAX12.pre-phi6307 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_nblockMAX12.pre-phi6308, %if.then3235 ]
  %save_nblock13.pre-phi6251 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_nblock13.pre-phi6252, %if.then3235 ]
  %save_es14.pre-phi6195 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_es14.pre-phi6196, %if.then3235 ]
  %save_N15.pre-phi6139 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_N15.pre-phi6140, %if.then3235 ]
  %save_curr16.pre-phi6083 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_curr16.pre-phi6084, %if.then3235 ]
  %save_zt17.pre-phi6027 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_zt17.pre-phi6028, %if.then3235 ]
  %save_zn18.pre-phi5971 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_zn18.pre-phi5972, %if.then3235 ]
  %save_zvec19.pre-phi5915 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_zvec19.pre-phi5916, %if.then3235 ]
  %save_zj20.pre-phi5859 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_zj20.pre-phi5860, %if.then3235 ]
  %save_gSel21.pre-phi5803 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_gSel21.pre-phi5804, %if.then3235 ]
  %save_gMinlen22.pre-phi5747 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_gMinlen22.pre-phi5748, %if.then3235 ]
  %save_gLimit23.pre-phi5691 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_gLimit23.pre-phi5692, %if.then3235 ]
  %save_gBase24.pre-phi5635 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_gBase24.pre-phi5636, %if.then3235 ]
  %save_gPerm25.pre-phi5579 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %save_gPerm25.pre-phi5580, %if.then3235 ]
  %bsLive3289.pre-phi = phi i32* [ %bsLive3289.phi.trans.insert, %if.end.sw.bb3285_crit_edge ], [ %bsLive3232.pre-phi, %if.then3235 ]
  %1878 = phi i32 [ %.pre5515, %if.end.sw.bb3285_crit_edge ], [ %sub3239, %if.then3235 ]
  store i32 48, i32* %state, align 8, !tbaa !105
  %cmp32905016 = icmp sgt i32 %1878, 7
  %bsBuff3294.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp32905016, label %sw.bb3285.if.then3292_crit_edge, label %if.end3302.lr.ph

sw.bb3285.if.then3292_crit_edge:                  ; preds = %sw.bb3285
  %.pre5518 = load i32, i32* %bsBuff3294.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3292

if.end3302.lr.ph:                                 ; preds = %sw.bb3285
  %.pre5516 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3304.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5516, i64 0, i32 1
  %.pre5517 = load i32, i32* %avail_in3304.phi.trans.insert, align 8, !tbaa !98
  %next_in3312 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5516, i64 0, i32 0
  %total_in_lo323325 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5516, i64 0, i32 2
  %total_in_hi323333 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5516, i64 0, i32 3
  br label %if.end3302

if.then3292:                                      ; preds = %if.end3335, %sw.bb3285.if.then3292_crit_edge
  %1879 = phi i32 [ %.pre5518, %sw.bb3285.if.then3292_crit_edge ], [ %or3314, %if.end3335 ]
  %.lcssa4885 = phi i32 [ %1878, %sw.bb3285.if.then3292_crit_edge ], [ %add3317, %if.end3335 ]
  %sub3296 = add nsw i32 %.lcssa4885, -8
  %shr3297 = lshr i32 %1879, %sub3296
  store i32 %sub3296, i32* %bsLive3289.pre-phi, align 4, !tbaa !106
  %storedCombinedCRC3337 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 24
  %1880 = load i32, i32* %storedCombinedCRC3337, align 4, !tbaa !126
  %shl3338 = shl i32 %1880, 8
  %conv3339 = and i32 %shr3297, 255
  %or3340 = or i32 %shl3338, %conv3339
  store i32 %or3340, i32* %storedCombinedCRC3337, align 4, !tbaa !126
  br label %sw.bb3342

if.end3302:                                       ; preds = %if.end3335, %if.end3302.lr.ph
  %1881 = phi i32 [ %.pre5517, %if.end3302.lr.ph ], [ %dec3323, %if.end3335 ]
  %1882 = phi i32 [ %1878, %if.end3302.lr.ph ], [ %add3317, %if.end3335 ]
  %cmp3305 = icmp eq i32 %1881, 0
  br i1 %cmp3305, label %save_state_and_return, label %if.end3308

if.end3308:                                       ; preds = %if.end3302
  %1883 = load i32, i32* %bsBuff3294.phi.trans.insert, align 8, !tbaa !107
  %shl3310 = shl i32 %1883, 8
  %1884 = load i8*, i8** %next_in3312, align 8, !tbaa !102
  %1885 = load i8, i8* %1884, align 1, !tbaa !12
  %conv3313 = zext i8 %1885 to i32
  %or3314 = or i32 %shl3310, %conv3313
  store i32 %or3314, i32* %bsBuff3294.phi.trans.insert, align 8, !tbaa !107
  %add3317 = add nsw i32 %1882, 8
  store i32 %add3317, i32* %bsLive3289.pre-phi, align 4, !tbaa !106
  %incdec.ptr3320 = getelementptr inbounds i8, i8* %1884, i64 1
  store i8* %incdec.ptr3320, i8** %next_in3312, align 8, !tbaa !102
  %dec3323 = add i32 %1881, -1
  store i32 %dec3323, i32* %avail_in3304.phi.trans.insert, align 8, !tbaa !98
  %1886 = load i32, i32* %total_in_lo323325, align 4, !tbaa !88
  %inc3326 = add i32 %1886, 1
  store i32 %inc3326, i32* %total_in_lo323325, align 4, !tbaa !88
  %cmp3329 = icmp eq i32 %inc3326, 0
  br i1 %cmp3329, label %if.then3331, label %if.end3335

if.then3331:                                      ; preds = %if.end3308
  %1887 = load i32, i32* %total_in_hi323333, align 8, !tbaa !89
  %inc3334 = add i32 %1887, 1
  store i32 %inc3334, i32* %total_in_hi323333, align 8, !tbaa !89
  br label %if.end3335

if.end3335:                                       ; preds = %if.then3331, %if.end3308
  %cmp3290 = icmp sgt i32 %1882, -1
  br i1 %cmp3290, label %if.then3292, label %if.end3302

sw.bb3342:                                        ; preds = %if.then3292, %if.end.sw.bb3342_crit_edge
  %1888 = phi i32 [ %.pre, %if.end.sw.bb3342_crit_edge ], [ %1854, %if.then3292 ]
  %1889 = phi i32 [ %.pre5368, %if.end.sw.bb3342_crit_edge ], [ %1855, %if.then3292 ]
  %1890 = phi i32 [ %.pre5369, %if.end.sw.bb3342_crit_edge ], [ %1856, %if.then3292 ]
  %1891 = phi i32 [ %.pre5370, %if.end.sw.bb3342_crit_edge ], [ %1857, %if.then3292 ]
  %1892 = phi i32 [ %.pre5371, %if.end.sw.bb3342_crit_edge ], [ %1858, %if.then3292 ]
  %1893 = phi i32 [ %.pre5372, %if.end.sw.bb3342_crit_edge ], [ %1859, %if.then3292 ]
  %1894 = phi i32 [ %.pre5373, %if.end.sw.bb3342_crit_edge ], [ %1860, %if.then3292 ]
  %1895 = phi i32 [ %.pre5374, %if.end.sw.bb3342_crit_edge ], [ %1861, %if.then3292 ]
  %1896 = phi i32 [ %.pre5375, %if.end.sw.bb3342_crit_edge ], [ %1862, %if.then3292 ]
  %1897 = phi i32 [ %.pre5376, %if.end.sw.bb3342_crit_edge ], [ %1863, %if.then3292 ]
  %1898 = phi i32 [ %.pre5377, %if.end.sw.bb3342_crit_edge ], [ %1864, %if.then3292 ]
  %1899 = phi i32 [ %.pre5378, %if.end.sw.bb3342_crit_edge ], [ %1865, %if.then3292 ]
  %1900 = phi i32 [ %.pre5379, %if.end.sw.bb3342_crit_edge ], [ %1866, %if.then3292 ]
  %1901 = phi i32 [ %.pre5380, %if.end.sw.bb3342_crit_edge ], [ %1867, %if.then3292 ]
  %1902 = phi i32 [ %.pre5381, %if.end.sw.bb3342_crit_edge ], [ %1868, %if.then3292 ]
  %1903 = phi i32 [ %.pre5382, %if.end.sw.bb3342_crit_edge ], [ %1869, %if.then3292 ]
  %1904 = phi i32 [ %.pre5383, %if.end.sw.bb3342_crit_edge ], [ %1870, %if.then3292 ]
  %1905 = phi i32 [ %.pre5384, %if.end.sw.bb3342_crit_edge ], [ %1871, %if.then3292 ]
  %1906 = phi i32 [ %.pre5385, %if.end.sw.bb3342_crit_edge ], [ %1872, %if.then3292 ]
  %1907 = phi i32 [ %.pre5386, %if.end.sw.bb3342_crit_edge ], [ %1873, %if.then3292 ]
  %1908 = phi i32 [ %.pre5387, %if.end.sw.bb3342_crit_edge ], [ %1874, %if.then3292 ]
  %1909 = phi i32* [ %.pre5388, %if.end.sw.bb3342_crit_edge ], [ %1875, %if.then3292 ]
  %1910 = phi i32* [ %.pre5389, %if.end.sw.bb3342_crit_edge ], [ %1876, %if.then3292 ]
  %1911 = phi i32* [ %.pre5390, %if.end.sw.bb3342_crit_edge ], [ %1877, %if.then3292 ]
  %save_j3.pre-phi6810 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_j3.pre-phi6811, %if.then3292 ]
  %save_t4.pre-phi6754 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_t4.pre-phi6755, %if.then3292 ]
  %save_alphaSize5.pre-phi6698 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_alphaSize5.pre-phi6699, %if.then3292 ]
  %save_nGroups6.pre-phi6642 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_nGroups6.pre-phi6643, %if.then3292 ]
  %save_nSelectors7.pre-phi6586 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_nSelectors7.pre-phi6587, %if.then3292 ]
  %save_EOB8.pre-phi6530 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_EOB8.pre-phi6531, %if.then3292 ]
  %save_groupNo9.pre-phi6474 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_groupNo9.pre-phi6475, %if.then3292 ]
  %save_groupPos10.pre-phi6418 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_groupPos10.pre-phi6419, %if.then3292 ]
  %save_nextSym11.pre-phi6362 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_nextSym11.pre-phi6363, %if.then3292 ]
  %save_nblockMAX12.pre-phi6306 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_nblockMAX12.pre-phi6307, %if.then3292 ]
  %save_nblock13.pre-phi6250 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_nblock13.pre-phi6251, %if.then3292 ]
  %save_es14.pre-phi6194 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_es14.pre-phi6195, %if.then3292 ]
  %save_N15.pre-phi6138 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_N15.pre-phi6139, %if.then3292 ]
  %save_curr16.pre-phi6082 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_curr16.pre-phi6083, %if.then3292 ]
  %save_zt17.pre-phi6026 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_zt17.pre-phi6027, %if.then3292 ]
  %save_zn18.pre-phi5970 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_zn18.pre-phi5971, %if.then3292 ]
  %save_zvec19.pre-phi5914 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_zvec19.pre-phi5915, %if.then3292 ]
  %save_zj20.pre-phi5858 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_zj20.pre-phi5859, %if.then3292 ]
  %save_gSel21.pre-phi5802 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_gSel21.pre-phi5803, %if.then3292 ]
  %save_gMinlen22.pre-phi5746 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_gMinlen22.pre-phi5747, %if.then3292 ]
  %save_gLimit23.pre-phi5690 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_gLimit23.pre-phi5691, %if.then3292 ]
  %save_gBase24.pre-phi5634 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_gBase24.pre-phi5635, %if.then3292 ]
  %save_gPerm25.pre-phi5578 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %save_gPerm25.pre-phi5579, %if.then3292 ]
  %bsLive3346.pre-phi = phi i32* [ %bsLive3346.phi.trans.insert, %if.end.sw.bb3342_crit_edge ], [ %bsLive3289.pre-phi, %if.then3292 ]
  %1912 = phi i32 [ %.pre5519, %if.end.sw.bb3342_crit_edge ], [ %sub3296, %if.then3292 ]
  store i32 49, i32* %state, align 8, !tbaa !105
  %cmp33475013 = icmp sgt i32 %1912, 7
  %bsBuff3351.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp33475013, label %sw.bb3342.if.then3349_crit_edge, label %if.end3359.lr.ph

sw.bb3342.if.then3349_crit_edge:                  ; preds = %sw.bb3342
  %.pre5522 = load i32, i32* %bsBuff3351.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3349

if.end3359.lr.ph:                                 ; preds = %sw.bb3342
  %.pre5520 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3361.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5520, i64 0, i32 1
  %.pre5521 = load i32, i32* %avail_in3361.phi.trans.insert, align 8, !tbaa !98
  %next_in3369 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5520, i64 0, i32 0
  %total_in_lo323382 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5520, i64 0, i32 2
  %total_in_hi323390 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5520, i64 0, i32 3
  br label %if.end3359

if.then3349:                                      ; preds = %if.end3392, %sw.bb3342.if.then3349_crit_edge
  %1913 = phi i32 [ %.pre5522, %sw.bb3342.if.then3349_crit_edge ], [ %or3371, %if.end3392 ]
  %.lcssa4882 = phi i32 [ %1912, %sw.bb3342.if.then3349_crit_edge ], [ %add3374, %if.end3392 ]
  %sub3353 = add nsw i32 %.lcssa4882, -8
  %shr3354 = lshr i32 %1913, %sub3353
  store i32 %sub3353, i32* %bsLive3346.pre-phi, align 4, !tbaa !106
  %storedCombinedCRC3394 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 24
  %1914 = load i32, i32* %storedCombinedCRC3394, align 4, !tbaa !126
  %shl3395 = shl i32 %1914, 8
  %conv3396 = and i32 %shr3354, 255
  %or3397 = or i32 %shl3395, %conv3396
  store i32 %or3397, i32* %storedCombinedCRC3394, align 4, !tbaa !126
  br label %sw.bb3399

if.end3359:                                       ; preds = %if.end3392, %if.end3359.lr.ph
  %1915 = phi i32 [ %.pre5521, %if.end3359.lr.ph ], [ %dec3380, %if.end3392 ]
  %1916 = phi i32 [ %1912, %if.end3359.lr.ph ], [ %add3374, %if.end3392 ]
  %cmp3362 = icmp eq i32 %1915, 0
  br i1 %cmp3362, label %save_state_and_return, label %if.end3365

if.end3365:                                       ; preds = %if.end3359
  %1917 = load i32, i32* %bsBuff3351.phi.trans.insert, align 8, !tbaa !107
  %shl3367 = shl i32 %1917, 8
  %1918 = load i8*, i8** %next_in3369, align 8, !tbaa !102
  %1919 = load i8, i8* %1918, align 1, !tbaa !12
  %conv3370 = zext i8 %1919 to i32
  %or3371 = or i32 %shl3367, %conv3370
  store i32 %or3371, i32* %bsBuff3351.phi.trans.insert, align 8, !tbaa !107
  %add3374 = add nsw i32 %1916, 8
  store i32 %add3374, i32* %bsLive3346.pre-phi, align 4, !tbaa !106
  %incdec.ptr3377 = getelementptr inbounds i8, i8* %1918, i64 1
  store i8* %incdec.ptr3377, i8** %next_in3369, align 8, !tbaa !102
  %dec3380 = add i32 %1915, -1
  store i32 %dec3380, i32* %avail_in3361.phi.trans.insert, align 8, !tbaa !98
  %1920 = load i32, i32* %total_in_lo323382, align 4, !tbaa !88
  %inc3383 = add i32 %1920, 1
  store i32 %inc3383, i32* %total_in_lo323382, align 4, !tbaa !88
  %cmp3386 = icmp eq i32 %inc3383, 0
  br i1 %cmp3386, label %if.then3388, label %if.end3392

if.then3388:                                      ; preds = %if.end3365
  %1921 = load i32, i32* %total_in_hi323390, align 8, !tbaa !89
  %inc3391 = add i32 %1921, 1
  store i32 %inc3391, i32* %total_in_hi323390, align 8, !tbaa !89
  br label %if.end3392

if.end3392:                                       ; preds = %if.then3388, %if.end3365
  %cmp3347 = icmp sgt i32 %1916, -1
  br i1 %cmp3347, label %if.then3349, label %if.end3359

sw.bb3399:                                        ; preds = %if.then3349, %if.end.sw.bb3399_crit_edge
  %1922 = phi i32 [ %.pre, %if.end.sw.bb3399_crit_edge ], [ %1888, %if.then3349 ]
  %1923 = phi i32 [ %.pre5368, %if.end.sw.bb3399_crit_edge ], [ %1889, %if.then3349 ]
  %1924 = phi i32 [ %.pre5369, %if.end.sw.bb3399_crit_edge ], [ %1890, %if.then3349 ]
  %1925 = phi i32 [ %.pre5370, %if.end.sw.bb3399_crit_edge ], [ %1891, %if.then3349 ]
  %1926 = phi i32 [ %.pre5371, %if.end.sw.bb3399_crit_edge ], [ %1892, %if.then3349 ]
  %1927 = phi i32 [ %.pre5372, %if.end.sw.bb3399_crit_edge ], [ %1893, %if.then3349 ]
  %1928 = phi i32 [ %.pre5373, %if.end.sw.bb3399_crit_edge ], [ %1894, %if.then3349 ]
  %1929 = phi i32 [ %.pre5374, %if.end.sw.bb3399_crit_edge ], [ %1895, %if.then3349 ]
  %1930 = phi i32 [ %.pre5375, %if.end.sw.bb3399_crit_edge ], [ %1896, %if.then3349 ]
  %1931 = phi i32 [ %.pre5376, %if.end.sw.bb3399_crit_edge ], [ %1897, %if.then3349 ]
  %1932 = phi i32 [ %.pre5377, %if.end.sw.bb3399_crit_edge ], [ %1898, %if.then3349 ]
  %1933 = phi i32 [ %.pre5378, %if.end.sw.bb3399_crit_edge ], [ %1899, %if.then3349 ]
  %1934 = phi i32 [ %.pre5379, %if.end.sw.bb3399_crit_edge ], [ %1900, %if.then3349 ]
  %1935 = phi i32 [ %.pre5380, %if.end.sw.bb3399_crit_edge ], [ %1901, %if.then3349 ]
  %1936 = phi i32 [ %.pre5381, %if.end.sw.bb3399_crit_edge ], [ %1902, %if.then3349 ]
  %1937 = phi i32 [ %.pre5382, %if.end.sw.bb3399_crit_edge ], [ %1903, %if.then3349 ]
  %1938 = phi i32 [ %.pre5383, %if.end.sw.bb3399_crit_edge ], [ %1904, %if.then3349 ]
  %1939 = phi i32 [ %.pre5384, %if.end.sw.bb3399_crit_edge ], [ %1905, %if.then3349 ]
  %1940 = phi i32 [ %.pre5385, %if.end.sw.bb3399_crit_edge ], [ %1906, %if.then3349 ]
  %1941 = phi i32 [ %.pre5386, %if.end.sw.bb3399_crit_edge ], [ %1907, %if.then3349 ]
  %1942 = phi i32 [ %.pre5387, %if.end.sw.bb3399_crit_edge ], [ %1908, %if.then3349 ]
  %1943 = phi i32* [ %.pre5388, %if.end.sw.bb3399_crit_edge ], [ %1909, %if.then3349 ]
  %1944 = phi i32* [ %.pre5389, %if.end.sw.bb3399_crit_edge ], [ %1910, %if.then3349 ]
  %1945 = phi i32* [ %.pre5390, %if.end.sw.bb3399_crit_edge ], [ %1911, %if.then3349 ]
  %save_j3.pre-phi6809 = phi i32* [ %save_j3.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_j3.pre-phi6810, %if.then3349 ]
  %save_t4.pre-phi6753 = phi i32* [ %save_t4.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_t4.pre-phi6754, %if.then3349 ]
  %save_alphaSize5.pre-phi6697 = phi i32* [ %save_alphaSize5.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_alphaSize5.pre-phi6698, %if.then3349 ]
  %save_nGroups6.pre-phi6641 = phi i32* [ %save_nGroups6.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_nGroups6.pre-phi6642, %if.then3349 ]
  %save_nSelectors7.pre-phi6585 = phi i32* [ %save_nSelectors7.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_nSelectors7.pre-phi6586, %if.then3349 ]
  %save_EOB8.pre-phi6529 = phi i32* [ %save_EOB8.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_EOB8.pre-phi6530, %if.then3349 ]
  %save_groupNo9.pre-phi6473 = phi i32* [ %save_groupNo9.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_groupNo9.pre-phi6474, %if.then3349 ]
  %save_groupPos10.pre-phi6417 = phi i32* [ %save_groupPos10.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_groupPos10.pre-phi6418, %if.then3349 ]
  %save_nextSym11.pre-phi6361 = phi i32* [ %save_nextSym11.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_nextSym11.pre-phi6362, %if.then3349 ]
  %save_nblockMAX12.pre-phi6305 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_nblockMAX12.pre-phi6306, %if.then3349 ]
  %save_nblock13.pre-phi6249 = phi i32* [ %save_nblock13.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_nblock13.pre-phi6250, %if.then3349 ]
  %save_es14.pre-phi6193 = phi i32* [ %save_es14.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_es14.pre-phi6194, %if.then3349 ]
  %save_N15.pre-phi6137 = phi i32* [ %save_N15.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_N15.pre-phi6138, %if.then3349 ]
  %save_curr16.pre-phi6081 = phi i32* [ %save_curr16.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_curr16.pre-phi6082, %if.then3349 ]
  %save_zt17.pre-phi6025 = phi i32* [ %save_zt17.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_zt17.pre-phi6026, %if.then3349 ]
  %save_zn18.pre-phi5969 = phi i32* [ %save_zn18.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_zn18.pre-phi5970, %if.then3349 ]
  %save_zvec19.pre-phi5913 = phi i32* [ %save_zvec19.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_zvec19.pre-phi5914, %if.then3349 ]
  %save_zj20.pre-phi5857 = phi i32* [ %save_zj20.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_zj20.pre-phi5858, %if.then3349 ]
  %save_gSel21.pre-phi5801 = phi i32* [ %save_gSel21.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_gSel21.pre-phi5802, %if.then3349 ]
  %save_gMinlen22.pre-phi5745 = phi i32* [ %save_gMinlen22.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_gMinlen22.pre-phi5746, %if.then3349 ]
  %save_gLimit23.pre-phi5689 = phi i32** [ %save_gLimit23.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_gLimit23.pre-phi5690, %if.then3349 ]
  %save_gBase24.pre-phi5633 = phi i32** [ %save_gBase24.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_gBase24.pre-phi5634, %if.then3349 ]
  %save_gPerm25.pre-phi5577 = phi i32** [ %save_gPerm25.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %save_gPerm25.pre-phi5578, %if.then3349 ]
  %bsLive3403.pre-phi = phi i32* [ %bsLive3403.phi.trans.insert, %if.end.sw.bb3399_crit_edge ], [ %bsLive3346.pre-phi, %if.then3349 ]
  %1946 = phi i32 [ %.pre5523, %if.end.sw.bb3399_crit_edge ], [ %sub3353, %if.then3349 ]
  store i32 50, i32* %state, align 8, !tbaa !105
  %cmp34045011 = icmp sgt i32 %1946, 7
  %bsBuff3408.phi.trans.insert = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 7
  br i1 %cmp34045011, label %sw.bb3399.if.then3406_crit_edge, label %if.end3416.lr.ph

sw.bb3399.if.then3406_crit_edge:                  ; preds = %sw.bb3399
  %.pre5526 = load i32, i32* %bsBuff3408.phi.trans.insert, align 8, !tbaa !107
  br label %if.then3406

if.end3416.lr.ph:                                 ; preds = %sw.bb3399
  %.pre5524 = load %struct.bz_stream*, %struct.bz_stream** %strm1, align 8, !tbaa !103
  %avail_in3418.phi.trans.insert = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5524, i64 0, i32 1
  %.pre5525 = load i32, i32* %avail_in3418.phi.trans.insert, align 8, !tbaa !98
  %next_in3426 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5524, i64 0, i32 0
  %total_in_lo323439 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5524, i64 0, i32 2
  %total_in_hi323447 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %.pre5524, i64 0, i32 3
  br label %if.end3416

if.then3406:                                      ; preds = %if.end3449, %sw.bb3399.if.then3406_crit_edge
  %1947 = phi i32 [ %.pre5526, %sw.bb3399.if.then3406_crit_edge ], [ %or3428, %if.end3449 ]
  %.lcssa = phi i32 [ %1946, %sw.bb3399.if.then3406_crit_edge ], [ %add3431, %if.end3449 ]
  %sub3410 = add nsw i32 %.lcssa, -8
  %shr3411 = lshr i32 %1947, %sub3410
  store i32 %sub3410, i32* %bsLive3403.pre-phi, align 4, !tbaa !106
  %storedCombinedCRC3451 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 24
  %1948 = load i32, i32* %storedCombinedCRC3451, align 4, !tbaa !126
  %shl3452 = shl i32 %1948, 8
  %conv3453 = and i32 %shr3411, 255
  %or3454 = or i32 %shl3452, %conv3453
  store i32 %or3454, i32* %storedCombinedCRC3451, align 4, !tbaa !126
  store i32 1, i32* %state, align 8, !tbaa !105
  br label %save_state_and_return

if.end3416:                                       ; preds = %if.end3449, %if.end3416.lr.ph
  %1949 = phi i32 [ %.pre5525, %if.end3416.lr.ph ], [ %dec3437, %if.end3449 ]
  %1950 = phi i32 [ %1946, %if.end3416.lr.ph ], [ %add3431, %if.end3449 ]
  %cmp3419 = icmp eq i32 %1949, 0
  br i1 %cmp3419, label %save_state_and_return, label %if.end3422

if.end3422:                                       ; preds = %if.end3416
  %1951 = load i32, i32* %bsBuff3408.phi.trans.insert, align 8, !tbaa !107
  %shl3424 = shl i32 %1951, 8
  %1952 = load i8*, i8** %next_in3426, align 8, !tbaa !102
  %1953 = load i8, i8* %1952, align 1, !tbaa !12
  %conv3427 = zext i8 %1953 to i32
  %or3428 = or i32 %shl3424, %conv3427
  store i32 %or3428, i32* %bsBuff3408.phi.trans.insert, align 8, !tbaa !107
  %add3431 = add nsw i32 %1950, 8
  store i32 %add3431, i32* %bsLive3403.pre-phi, align 4, !tbaa !106
  %incdec.ptr3434 = getelementptr inbounds i8, i8* %1952, i64 1
  store i8* %incdec.ptr3434, i8** %next_in3426, align 8, !tbaa !102
  %dec3437 = add i32 %1949, -1
  store i32 %dec3437, i32* %avail_in3418.phi.trans.insert, align 8, !tbaa !98
  %1954 = load i32, i32* %total_in_lo323439, align 4, !tbaa !88
  %inc3440 = add i32 %1954, 1
  store i32 %inc3440, i32* %total_in_lo323439, align 4, !tbaa !88
  %cmp3443 = icmp eq i32 %inc3440, 0
  br i1 %cmp3443, label %if.then3445, label %if.end3449

if.then3445:                                      ; preds = %if.end3422
  %1955 = load i32, i32* %total_in_hi323447, align 8, !tbaa !89
  %inc3448 = add i32 %1955, 1
  store i32 %inc3448, i32* %total_in_hi323447, align 8, !tbaa !89
  br label %if.end3449

if.end3449:                                       ; preds = %if.then3445, %if.end3422
  %cmp3404 = icmp sgt i32 %1950, -1
  br i1 %cmp3404, label %if.then3406, label %if.end3416

sw.default:                                       ; preds = %if.end
  tail call void @BZ2_bz__AssertH__fail(i32 4001) #2
  tail call void @BZ2_bz__AssertH__fail(i32 4002) #2
  br label %save_state_and_return

save_state_and_return.loopexit5205:               ; preds = %for.inc2608.2, %for.inc2608.1, %for.body2594.1, %for.body2594
  %indvars.iv5292.lcssa = phi i64 [ %indvars.iv5292, %for.body2594 ], [ %indvars.iv.next5293, %for.body2594.1 ], [ %indvars.iv.next5293.1, %for.inc2608.1 ], [ %indvars.iv.next5293.2, %for.inc2608.2 ]
  %1956 = trunc i64 %indvars.iv5292.lcssa to i32
  br label %save_state_and_return

save_state_and_return.loopexit5207:               ; preds = %while.body2173
  %1957 = trunc i64 %indvars.iv5303 to i32
  br label %save_state_and_return

save_state_and_return.loopexit5208:               ; preds = %while.body2157
  %1958 = trunc i64 %indvars.iv5305 to i32
  br label %save_state_and_return

save_state_and_return:                            ; preds = %save_state_and_return.loopexit5208, %save_state_and_return.loopexit5207, %save_state_and_return.loopexit5205, %sw.default, %if.end3416, %if.then3406, %if.end3359, %if.end3302, %if.end3245, %if.end3188, %if.then3178, %if.end3131, %if.then3121, %if.end3074, %if.then3064, %if.end3017, %if.then3007, %if.end2960, %if.then2950, %if.else2926, %if.end2917, %if.else2822, %if.end2815, %while.end2551, %while.end2532, %if.end2495, %while.cond2466, %if.end2431, %if.then2386, %if.else2186, %while.end2116, %if.end2079, %while.cond2050, %if.end2015, %if.then1970, %while.end1923, %if.end1886, %while.cond1857, %if.end1822, %if.then1777, %if.end1623, %if.end1566, %while.cond1540, %if.end1501, %if.end1429, %if.end1390, %if.end1328, %if.then1319, %if.end1270, %if.then1261, %if.then1261, %if.then1261, %makeMaps_d.exit, %if.end1196, %if.end1112, %if.end1084, %if.end1040, %if.then1030, %if.end983, %if.end926, %if.end874, %if.end817, %if.end760, %if.end703, %if.end646, %if.end582, %if.then572, %if.end525, %if.then515, %if.end468, %if.then458, %if.end411, %if.then401, %if.end354, %if.then344, %if.end292, %if.then282, %if.else, %if.then237, %if.end192, %if.then183, %if.end136, %if.then126, %if.end79, %if.then69, %if.end33, %if.then29
  %1959 = phi i32 [ %.pre5382, %sw.default ], [ %1937, %if.then3406 ], [ 0, %if.then29 ], [ %27, %if.then69 ], [ %60, %if.then126 ], [ %93, %if.then183 ], [ %93, %if.then237 ], [ %93, %if.else ], [ %136, %if.then282 ], [ %169, %if.then344 ], [ %202, %if.then401 ], [ %235, %if.then458 ], [ %268, %if.then515 ], [ %301, %if.then572 ], [ %576, %if.then1030 ], [ %576, %if.end1084 ], [ %666, %makeMaps_d.exit ], [ %771, %if.then1261 ], [ %771, %if.then1261 ], [ %771, %if.then1261 ], [ %800, %if.then1319 ], [ %962, %while.cond1540 ], [ %902, %if.then1777 ], [ %1087, %while.cond1857 ], [ %1087, %while.end1923 ], [ %1109, %if.then1970 ], [ %1123, %while.cond2050 ], [ %1123, %while.end2116 ], [ %1107, %if.else2186 ], [ %1107, %if.then2386 ], [ %1294, %while.cond2466 ], [ %1294, %while.end2532 ], [ %1107, %while.end2551 ], [ %1107, %if.end2917 ], [ %1107, %if.else2926 ], [ %1107, %if.end2815 ], [ %1107, %if.else2822 ], [ %1670, %if.then2950 ], [ %1703, %if.then3007 ], [ %1736, %if.then3064 ], [ %1769, %if.then3121 ], [ %1802, %if.then3178 ], [ %1107, %save_state_and_return.loopexit5205 ], [ %1123, %save_state_and_return.loopexit5207 ], [ %1123, %save_state_and_return.loopexit5208 ], [ %1937, %if.end3416 ], [ %1903, %if.end3359 ], [ %1869, %if.end3302 ], [ %1835, %if.end3245 ], [ %1802, %if.end3188 ], [ %1769, %if.end3131 ], [ %1736, %if.end3074 ], [ %1703, %if.end3017 ], [ %1670, %if.end2960 ], [ %633, %if.end1112 ], [ %711, %if.end1196 ], [ %.ph7123, %if.end1390 ], [ %.ph7123, %if.end1429 ], [ %1009, %if.end1623 ], [ %980, %if.end1566 ], [ %919, %if.end1501 ], [ %1093, %if.end1886 ], [ %1126, %if.end2079 ], [ %1112, %if.end2015 ], [ %1297, %if.end2495 ], [ %1284, %if.end2431 ], [ %1072, %if.end1822 ], [ %800, %if.end1328 ], [ %771, %if.end1270 ], [ %576, %if.end1040 ], [ %542, %if.end983 ], [ %508, %if.end926 ], [ %474, %if.end874 ], [ %440, %if.end817 ], [ %406, %if.end760 ], [ %372, %if.end703 ], [ %338, %if.end646 ], [ %301, %if.end582 ], [ %268, %if.end525 ], [ %235, %if.end468 ], [ %202, %if.end411 ], [ %169, %if.end354 ], [ %136, %if.end292 ], [ %93, %if.end192 ], [ %60, %if.end136 ], [ %27, %if.end79 ], [ 0, %if.end33 ]
  %save_j3.pre-phi6767 = phi i32* [ %save_j3.phi.trans.insert, %sw.default ], [ %save_j3.pre-phi6809, %if.then3406 ], [ %save_j, %if.then29 ], [ %save_j3.pre-phi6821, %if.then69 ], [ %save_j3.pre-phi6820, %if.then126 ], [ %save_j3.pre-phi6819, %if.then183 ], [ %save_j3.pre-phi6819, %if.then237 ], [ %save_j3.pre-phi6819, %if.else ], [ %save_j3.pre-phi6818, %if.then282 ], [ %save_j3.pre-phi6808, %if.then344 ], [ %save_j3.pre-phi6807, %if.then401 ], [ %save_j3.pre-phi6806, %if.then458 ], [ %save_j3.pre-phi6805, %if.then515 ], [ %save_j3.pre-phi6804, %if.then572 ], [ %save_j3.pre-phi6796, %if.then1030 ], [ %save_j3.pre-phi6796, %if.end1084 ], [ %save_j3.pre-phi6793, %makeMaps_d.exit ], [ %save_j3.pre-phi6789, %if.then1261 ], [ %save_j3.pre-phi6789, %if.then1261 ], [ %save_j3.pre-phi6789, %if.then1261 ], [ %save_j3.pre-phi6788, %if.then1319 ], [ %save_j3.pre-phi6781, %while.cond1540 ], [ %save_j3.pre-phi6784, %if.then1777 ], [ %save_j3.pre-phi6777, %while.cond1857 ], [ %save_j3.pre-phi6777, %while.end1923 ], [ %save_j3.pre-phi6774, %if.then1970 ], [ %save_j3.pre-phi6772, %while.cond2050 ], [ %save_j3.pre-phi6772, %while.end2116 ], [ %save_j3.pre-phi6775, %if.else2186 ], [ %save_j3.pre-phi6775, %if.then2386 ], [ %save_j3.pre-phi6769, %while.cond2466 ], [ %save_j3.pre-phi6769, %while.end2532 ], [ %save_j3.pre-phi6775, %while.end2551 ], [ %save_j3.pre-phi6775, %if.end2917 ], [ %save_j3.pre-phi6775, %if.else2926 ], [ %save_j3.pre-phi6775, %if.end2815 ], [ %save_j3.pre-phi6775, %if.else2822 ], [ %save_j3.pre-phi6817, %if.then2950 ], [ %save_j3.pre-phi6816, %if.then3007 ], [ %save_j3.pre-phi6815, %if.then3064 ], [ %save_j3.pre-phi6814, %if.then3121 ], [ %save_j3.pre-phi6813, %if.then3178 ], [ %save_j3.pre-phi6775, %save_state_and_return.loopexit5205 ], [ %save_j3.pre-phi6772, %save_state_and_return.loopexit5207 ], [ %save_j3.pre-phi6772, %save_state_and_return.loopexit5208 ], [ %save_j3.pre-phi6809, %if.end3416 ], [ %save_j3.pre-phi6810, %if.end3359 ], [ %save_j3.pre-phi6811, %if.end3302 ], [ %save_j3.pre-phi6812, %if.end3245 ], [ %save_j3.pre-phi6813, %if.end3188 ], [ %save_j3.pre-phi6814, %if.end3131 ], [ %save_j3.pre-phi6815, %if.end3074 ], [ %save_j3.pre-phi6816, %if.end3017 ], [ %save_j3.pre-phi6817, %if.end2960 ], [ %save_j3.pre-phi6794, %if.end1112 ], [ %save_j3.pre-phi6790, %if.end1196 ], [ %save_j3.pre-phi6785.ph, %if.end1390 ], [ %save_j3.pre-phi6785.ph, %if.end1429 ], [ %save_j3.pre-phi6779, %if.end1623 ], [ %save_j3.pre-phi6780, %if.end1566 ], [ %save_j3.pre-phi6783, %if.end1501 ], [ %save_j3.pre-phi6776, %if.end1886 ], [ %save_j3.pre-phi6771, %if.end2079 ], [ %save_j3.pre-phi6773, %if.end2015 ], [ %save_j3.pre-phi6768, %if.end2495 ], [ %save_j3.pre-phi6770, %if.end2431 ], [ %save_j3.pre-phi6778, %if.end1822 ], [ %save_j3.pre-phi6788, %if.end1328 ], [ %save_j3.pre-phi6789, %if.end1270 ], [ %save_j3.pre-phi6796, %if.end1040 ], [ %save_j3.pre-phi6797, %if.end983 ], [ %save_j3.pre-phi6798, %if.end926 ], [ %save_j3.pre-phi6799, %if.end874 ], [ %save_j3.pre-phi6800, %if.end817 ], [ %save_j3.pre-phi6801, %if.end760 ], [ %save_j3.pre-phi6802, %if.end703 ], [ %save_j3.pre-phi6803, %if.end646 ], [ %save_j3.pre-phi6804, %if.end582 ], [ %save_j3.pre-phi6805, %if.end525 ], [ %save_j3.pre-phi6806, %if.end468 ], [ %save_j3.pre-phi6807, %if.end411 ], [ %save_j3.pre-phi6808, %if.end354 ], [ %save_j3.pre-phi6818, %if.end292 ], [ %save_j3.pre-phi6819, %if.end192 ], [ %save_j3.pre-phi6820, %if.end136 ], [ %save_j3.pre-phi6821, %if.end79 ], [ %save_j, %if.end33 ]
  %save_t4.pre-phi6711 = phi i32* [ %save_t4.phi.trans.insert, %sw.default ], [ %save_t4.pre-phi6753, %if.then3406 ], [ %save_t, %if.then29 ], [ %save_t4.pre-phi6765, %if.then69 ], [ %save_t4.pre-phi6764, %if.then126 ], [ %save_t4.pre-phi6763, %if.then183 ], [ %save_t4.pre-phi6763, %if.then237 ], [ %save_t4.pre-phi6763, %if.else ], [ %save_t4.pre-phi6762, %if.then282 ], [ %save_t4.pre-phi6752, %if.then344 ], [ %save_t4.pre-phi6751, %if.then401 ], [ %save_t4.pre-phi6750, %if.then458 ], [ %save_t4.pre-phi6749, %if.then515 ], [ %save_t4.pre-phi6748, %if.then572 ], [ %save_t4.pre-phi6740, %if.then1030 ], [ %save_t4.pre-phi6740, %if.end1084 ], [ %save_t4.pre-phi6737, %makeMaps_d.exit ], [ %save_t4.pre-phi6733, %if.then1261 ], [ %save_t4.pre-phi6733, %if.then1261 ], [ %save_t4.pre-phi6733, %if.then1261 ], [ %save_t4.pre-phi6732, %if.then1319 ], [ %save_t4.pre-phi6725, %while.cond1540 ], [ %save_t4.pre-phi6728, %if.then1777 ], [ %save_t4.pre-phi6721, %while.cond1857 ], [ %save_t4.pre-phi6721, %while.end1923 ], [ %save_t4.pre-phi6718, %if.then1970 ], [ %save_t4.pre-phi6716, %while.cond2050 ], [ %save_t4.pre-phi6716, %while.end2116 ], [ %save_t4.pre-phi6719, %if.else2186 ], [ %save_t4.pre-phi6719, %if.then2386 ], [ %save_t4.pre-phi6713, %while.cond2466 ], [ %save_t4.pre-phi6713, %while.end2532 ], [ %save_t4.pre-phi6719, %while.end2551 ], [ %save_t4.pre-phi6719, %if.end2917 ], [ %save_t4.pre-phi6719, %if.else2926 ], [ %save_t4.pre-phi6719, %if.end2815 ], [ %save_t4.pre-phi6719, %if.else2822 ], [ %save_t4.pre-phi6761, %if.then2950 ], [ %save_t4.pre-phi6760, %if.then3007 ], [ %save_t4.pre-phi6759, %if.then3064 ], [ %save_t4.pre-phi6758, %if.then3121 ], [ %save_t4.pre-phi6757, %if.then3178 ], [ %save_t4.pre-phi6719, %save_state_and_return.loopexit5205 ], [ %save_t4.pre-phi6716, %save_state_and_return.loopexit5207 ], [ %save_t4.pre-phi6716, %save_state_and_return.loopexit5208 ], [ %save_t4.pre-phi6753, %if.end3416 ], [ %save_t4.pre-phi6754, %if.end3359 ], [ %save_t4.pre-phi6755, %if.end3302 ], [ %save_t4.pre-phi6756, %if.end3245 ], [ %save_t4.pre-phi6757, %if.end3188 ], [ %save_t4.pre-phi6758, %if.end3131 ], [ %save_t4.pre-phi6759, %if.end3074 ], [ %save_t4.pre-phi6760, %if.end3017 ], [ %save_t4.pre-phi6761, %if.end2960 ], [ %save_t4.pre-phi6738, %if.end1112 ], [ %save_t4.pre-phi6734, %if.end1196 ], [ %save_t4.pre-phi6729.ph, %if.end1390 ], [ %save_t4.pre-phi6729.ph, %if.end1429 ], [ %save_t4.pre-phi6723, %if.end1623 ], [ %save_t4.pre-phi6724, %if.end1566 ], [ %save_t4.pre-phi6727, %if.end1501 ], [ %save_t4.pre-phi6720, %if.end1886 ], [ %save_t4.pre-phi6715, %if.end2079 ], [ %save_t4.pre-phi6717, %if.end2015 ], [ %save_t4.pre-phi6712, %if.end2495 ], [ %save_t4.pre-phi6714, %if.end2431 ], [ %save_t4.pre-phi6722, %if.end1822 ], [ %save_t4.pre-phi6732, %if.end1328 ], [ %save_t4.pre-phi6733, %if.end1270 ], [ %save_t4.pre-phi6740, %if.end1040 ], [ %save_t4.pre-phi6741, %if.end983 ], [ %save_t4.pre-phi6742, %if.end926 ], [ %save_t4.pre-phi6743, %if.end874 ], [ %save_t4.pre-phi6744, %if.end817 ], [ %save_t4.pre-phi6745, %if.end760 ], [ %save_t4.pre-phi6746, %if.end703 ], [ %save_t4.pre-phi6747, %if.end646 ], [ %save_t4.pre-phi6748, %if.end582 ], [ %save_t4.pre-phi6749, %if.end525 ], [ %save_t4.pre-phi6750, %if.end468 ], [ %save_t4.pre-phi6751, %if.end411 ], [ %save_t4.pre-phi6752, %if.end354 ], [ %save_t4.pre-phi6762, %if.end292 ], [ %save_t4.pre-phi6763, %if.end192 ], [ %save_t4.pre-phi6764, %if.end136 ], [ %save_t4.pre-phi6765, %if.end79 ], [ %save_t, %if.end33 ]
  %save_alphaSize5.pre-phi6655 = phi i32* [ %save_alphaSize5.phi.trans.insert, %sw.default ], [ %save_alphaSize5.pre-phi6697, %if.then3406 ], [ %save_alphaSize, %if.then29 ], [ %save_alphaSize5.pre-phi6709, %if.then69 ], [ %save_alphaSize5.pre-phi6708, %if.then126 ], [ %save_alphaSize5.pre-phi6707, %if.then183 ], [ %save_alphaSize5.pre-phi6707, %if.then237 ], [ %save_alphaSize5.pre-phi6707, %if.else ], [ %save_alphaSize5.pre-phi6706, %if.then282 ], [ %save_alphaSize5.pre-phi6696, %if.then344 ], [ %save_alphaSize5.pre-phi6695, %if.then401 ], [ %save_alphaSize5.pre-phi6694, %if.then458 ], [ %save_alphaSize5.pre-phi6693, %if.then515 ], [ %save_alphaSize5.pre-phi6692, %if.then572 ], [ %save_alphaSize5.pre-phi6684, %if.then1030 ], [ %save_alphaSize5.pre-phi6684, %if.end1084 ], [ %save_alphaSize5.pre-phi6681, %makeMaps_d.exit ], [ %save_alphaSize5.pre-phi6677, %if.then1261 ], [ %save_alphaSize5.pre-phi6677, %if.then1261 ], [ %save_alphaSize5.pre-phi6677, %if.then1261 ], [ %save_alphaSize5.pre-phi6676, %if.then1319 ], [ %save_alphaSize5.pre-phi6669, %while.cond1540 ], [ %save_alphaSize5.pre-phi6672, %if.then1777 ], [ %save_alphaSize5.pre-phi6665, %while.cond1857 ], [ %save_alphaSize5.pre-phi6665, %while.end1923 ], [ %save_alphaSize5.pre-phi6662, %if.then1970 ], [ %save_alphaSize5.pre-phi6660, %while.cond2050 ], [ %save_alphaSize5.pre-phi6660, %while.end2116 ], [ %save_alphaSize5.pre-phi6663, %if.else2186 ], [ %save_alphaSize5.pre-phi6663, %if.then2386 ], [ %save_alphaSize5.pre-phi6657, %while.cond2466 ], [ %save_alphaSize5.pre-phi6657, %while.end2532 ], [ %save_alphaSize5.pre-phi6663, %while.end2551 ], [ %save_alphaSize5.pre-phi6663, %if.end2917 ], [ %save_alphaSize5.pre-phi6663, %if.else2926 ], [ %save_alphaSize5.pre-phi6663, %if.end2815 ], [ %save_alphaSize5.pre-phi6663, %if.else2822 ], [ %save_alphaSize5.pre-phi6705, %if.then2950 ], [ %save_alphaSize5.pre-phi6704, %if.then3007 ], [ %save_alphaSize5.pre-phi6703, %if.then3064 ], [ %save_alphaSize5.pre-phi6702, %if.then3121 ], [ %save_alphaSize5.pre-phi6701, %if.then3178 ], [ %save_alphaSize5.pre-phi6663, %save_state_and_return.loopexit5205 ], [ %save_alphaSize5.pre-phi6660, %save_state_and_return.loopexit5207 ], [ %save_alphaSize5.pre-phi6660, %save_state_and_return.loopexit5208 ], [ %save_alphaSize5.pre-phi6697, %if.end3416 ], [ %save_alphaSize5.pre-phi6698, %if.end3359 ], [ %save_alphaSize5.pre-phi6699, %if.end3302 ], [ %save_alphaSize5.pre-phi6700, %if.end3245 ], [ %save_alphaSize5.pre-phi6701, %if.end3188 ], [ %save_alphaSize5.pre-phi6702, %if.end3131 ], [ %save_alphaSize5.pre-phi6703, %if.end3074 ], [ %save_alphaSize5.pre-phi6704, %if.end3017 ], [ %save_alphaSize5.pre-phi6705, %if.end2960 ], [ %save_alphaSize5.pre-phi6682, %if.end1112 ], [ %save_alphaSize5.pre-phi6678, %if.end1196 ], [ %save_alphaSize5.pre-phi6673.ph, %if.end1390 ], [ %save_alphaSize5.pre-phi6673.ph, %if.end1429 ], [ %save_alphaSize5.pre-phi6667, %if.end1623 ], [ %save_alphaSize5.pre-phi6668, %if.end1566 ], [ %save_alphaSize5.pre-phi6671, %if.end1501 ], [ %save_alphaSize5.pre-phi6664, %if.end1886 ], [ %save_alphaSize5.pre-phi6659, %if.end2079 ], [ %save_alphaSize5.pre-phi6661, %if.end2015 ], [ %save_alphaSize5.pre-phi6656, %if.end2495 ], [ %save_alphaSize5.pre-phi6658, %if.end2431 ], [ %save_alphaSize5.pre-phi6666, %if.end1822 ], [ %save_alphaSize5.pre-phi6676, %if.end1328 ], [ %save_alphaSize5.pre-phi6677, %if.end1270 ], [ %save_alphaSize5.pre-phi6684, %if.end1040 ], [ %save_alphaSize5.pre-phi6685, %if.end983 ], [ %save_alphaSize5.pre-phi6686, %if.end926 ], [ %save_alphaSize5.pre-phi6687, %if.end874 ], [ %save_alphaSize5.pre-phi6688, %if.end817 ], [ %save_alphaSize5.pre-phi6689, %if.end760 ], [ %save_alphaSize5.pre-phi6690, %if.end703 ], [ %save_alphaSize5.pre-phi6691, %if.end646 ], [ %save_alphaSize5.pre-phi6692, %if.end582 ], [ %save_alphaSize5.pre-phi6693, %if.end525 ], [ %save_alphaSize5.pre-phi6694, %if.end468 ], [ %save_alphaSize5.pre-phi6695, %if.end411 ], [ %save_alphaSize5.pre-phi6696, %if.end354 ], [ %save_alphaSize5.pre-phi6706, %if.end292 ], [ %save_alphaSize5.pre-phi6707, %if.end192 ], [ %save_alphaSize5.pre-phi6708, %if.end136 ], [ %save_alphaSize5.pre-phi6709, %if.end79 ], [ %save_alphaSize, %if.end33 ]
  %save_nGroups6.pre-phi6599 = phi i32* [ %save_nGroups6.phi.trans.insert, %sw.default ], [ %save_nGroups6.pre-phi6641, %if.then3406 ], [ %save_nGroups, %if.then29 ], [ %save_nGroups6.pre-phi6653, %if.then69 ], [ %save_nGroups6.pre-phi6652, %if.then126 ], [ %save_nGroups6.pre-phi6651, %if.then183 ], [ %save_nGroups6.pre-phi6651, %if.then237 ], [ %save_nGroups6.pre-phi6651, %if.else ], [ %save_nGroups6.pre-phi6650, %if.then282 ], [ %save_nGroups6.pre-phi6640, %if.then344 ], [ %save_nGroups6.pre-phi6639, %if.then401 ], [ %save_nGroups6.pre-phi6638, %if.then458 ], [ %save_nGroups6.pre-phi6637, %if.then515 ], [ %save_nGroups6.pre-phi6636, %if.then572 ], [ %save_nGroups6.pre-phi6628, %if.then1030 ], [ %save_nGroups6.pre-phi6628, %if.end1084 ], [ %save_nGroups6.pre-phi6625, %makeMaps_d.exit ], [ %save_nGroups6.pre-phi6621, %if.then1261 ], [ %save_nGroups6.pre-phi6621, %if.then1261 ], [ %save_nGroups6.pre-phi6621, %if.then1261 ], [ %save_nGroups6.pre-phi6620, %if.then1319 ], [ %save_nGroups6.pre-phi6613, %while.cond1540 ], [ %save_nGroups6.pre-phi6616, %if.then1777 ], [ %save_nGroups6.pre-phi6609, %while.cond1857 ], [ %save_nGroups6.pre-phi6609, %while.end1923 ], [ %save_nGroups6.pre-phi6606, %if.then1970 ], [ %save_nGroups6.pre-phi6604, %while.cond2050 ], [ %save_nGroups6.pre-phi6604, %while.end2116 ], [ %save_nGroups6.pre-phi6607, %if.else2186 ], [ %save_nGroups6.pre-phi6607, %if.then2386 ], [ %save_nGroups6.pre-phi6601, %while.cond2466 ], [ %save_nGroups6.pre-phi6601, %while.end2532 ], [ %save_nGroups6.pre-phi6607, %while.end2551 ], [ %save_nGroups6.pre-phi6607, %if.end2917 ], [ %save_nGroups6.pre-phi6607, %if.else2926 ], [ %save_nGroups6.pre-phi6607, %if.end2815 ], [ %save_nGroups6.pre-phi6607, %if.else2822 ], [ %save_nGroups6.pre-phi6649, %if.then2950 ], [ %save_nGroups6.pre-phi6648, %if.then3007 ], [ %save_nGroups6.pre-phi6647, %if.then3064 ], [ %save_nGroups6.pre-phi6646, %if.then3121 ], [ %save_nGroups6.pre-phi6645, %if.then3178 ], [ %save_nGroups6.pre-phi6607, %save_state_and_return.loopexit5205 ], [ %save_nGroups6.pre-phi6604, %save_state_and_return.loopexit5207 ], [ %save_nGroups6.pre-phi6604, %save_state_and_return.loopexit5208 ], [ %save_nGroups6.pre-phi6641, %if.end3416 ], [ %save_nGroups6.pre-phi6642, %if.end3359 ], [ %save_nGroups6.pre-phi6643, %if.end3302 ], [ %save_nGroups6.pre-phi6644, %if.end3245 ], [ %save_nGroups6.pre-phi6645, %if.end3188 ], [ %save_nGroups6.pre-phi6646, %if.end3131 ], [ %save_nGroups6.pre-phi6647, %if.end3074 ], [ %save_nGroups6.pre-phi6648, %if.end3017 ], [ %save_nGroups6.pre-phi6649, %if.end2960 ], [ %save_nGroups6.pre-phi6626, %if.end1112 ], [ %save_nGroups6.pre-phi6622, %if.end1196 ], [ %save_nGroups6.pre-phi6617.ph, %if.end1390 ], [ %save_nGroups6.pre-phi6617.ph, %if.end1429 ], [ %save_nGroups6.pre-phi6611, %if.end1623 ], [ %save_nGroups6.pre-phi6612, %if.end1566 ], [ %save_nGroups6.pre-phi6615, %if.end1501 ], [ %save_nGroups6.pre-phi6608, %if.end1886 ], [ %save_nGroups6.pre-phi6603, %if.end2079 ], [ %save_nGroups6.pre-phi6605, %if.end2015 ], [ %save_nGroups6.pre-phi6600, %if.end2495 ], [ %save_nGroups6.pre-phi6602, %if.end2431 ], [ %save_nGroups6.pre-phi6610, %if.end1822 ], [ %save_nGroups6.pre-phi6620, %if.end1328 ], [ %save_nGroups6.pre-phi6621, %if.end1270 ], [ %save_nGroups6.pre-phi6628, %if.end1040 ], [ %save_nGroups6.pre-phi6629, %if.end983 ], [ %save_nGroups6.pre-phi6630, %if.end926 ], [ %save_nGroups6.pre-phi6631, %if.end874 ], [ %save_nGroups6.pre-phi6632, %if.end817 ], [ %save_nGroups6.pre-phi6633, %if.end760 ], [ %save_nGroups6.pre-phi6634, %if.end703 ], [ %save_nGroups6.pre-phi6635, %if.end646 ], [ %save_nGroups6.pre-phi6636, %if.end582 ], [ %save_nGroups6.pre-phi6637, %if.end525 ], [ %save_nGroups6.pre-phi6638, %if.end468 ], [ %save_nGroups6.pre-phi6639, %if.end411 ], [ %save_nGroups6.pre-phi6640, %if.end354 ], [ %save_nGroups6.pre-phi6650, %if.end292 ], [ %save_nGroups6.pre-phi6651, %if.end192 ], [ %save_nGroups6.pre-phi6652, %if.end136 ], [ %save_nGroups6.pre-phi6653, %if.end79 ], [ %save_nGroups, %if.end33 ]
  %save_nSelectors7.pre-phi6543 = phi i32* [ %save_nSelectors7.phi.trans.insert, %sw.default ], [ %save_nSelectors7.pre-phi6585, %if.then3406 ], [ %save_nSelectors, %if.then29 ], [ %save_nSelectors7.pre-phi6597, %if.then69 ], [ %save_nSelectors7.pre-phi6596, %if.then126 ], [ %save_nSelectors7.pre-phi6595, %if.then183 ], [ %save_nSelectors7.pre-phi6595, %if.then237 ], [ %save_nSelectors7.pre-phi6595, %if.else ], [ %save_nSelectors7.pre-phi6594, %if.then282 ], [ %save_nSelectors7.pre-phi6584, %if.then344 ], [ %save_nSelectors7.pre-phi6583, %if.then401 ], [ %save_nSelectors7.pre-phi6582, %if.then458 ], [ %save_nSelectors7.pre-phi6581, %if.then515 ], [ %save_nSelectors7.pre-phi6580, %if.then572 ], [ %save_nSelectors7.pre-phi6572, %if.then1030 ], [ %save_nSelectors7.pre-phi6572, %if.end1084 ], [ %save_nSelectors7.pre-phi6569, %makeMaps_d.exit ], [ %save_nSelectors7.pre-phi6565, %if.then1261 ], [ %save_nSelectors7.pre-phi6565, %if.then1261 ], [ %save_nSelectors7.pre-phi6565, %if.then1261 ], [ %save_nSelectors7.pre-phi6564, %if.then1319 ], [ %save_nSelectors7.pre-phi6557, %while.cond1540 ], [ %save_nSelectors7.pre-phi6560, %if.then1777 ], [ %save_nSelectors7.pre-phi6553, %while.cond1857 ], [ %save_nSelectors7.pre-phi6553, %while.end1923 ], [ %save_nSelectors7.pre-phi6550, %if.then1970 ], [ %save_nSelectors7.pre-phi6548, %while.cond2050 ], [ %save_nSelectors7.pre-phi6548, %while.end2116 ], [ %save_nSelectors7.pre-phi6551, %if.else2186 ], [ %save_nSelectors7.pre-phi6551, %if.then2386 ], [ %save_nSelectors7.pre-phi6545, %while.cond2466 ], [ %save_nSelectors7.pre-phi6545, %while.end2532 ], [ %save_nSelectors7.pre-phi6551, %while.end2551 ], [ %save_nSelectors7.pre-phi6551, %if.end2917 ], [ %save_nSelectors7.pre-phi6551, %if.else2926 ], [ %save_nSelectors7.pre-phi6551, %if.end2815 ], [ %save_nSelectors7.pre-phi6551, %if.else2822 ], [ %save_nSelectors7.pre-phi6593, %if.then2950 ], [ %save_nSelectors7.pre-phi6592, %if.then3007 ], [ %save_nSelectors7.pre-phi6591, %if.then3064 ], [ %save_nSelectors7.pre-phi6590, %if.then3121 ], [ %save_nSelectors7.pre-phi6589, %if.then3178 ], [ %save_nSelectors7.pre-phi6551, %save_state_and_return.loopexit5205 ], [ %save_nSelectors7.pre-phi6548, %save_state_and_return.loopexit5207 ], [ %save_nSelectors7.pre-phi6548, %save_state_and_return.loopexit5208 ], [ %save_nSelectors7.pre-phi6585, %if.end3416 ], [ %save_nSelectors7.pre-phi6586, %if.end3359 ], [ %save_nSelectors7.pre-phi6587, %if.end3302 ], [ %save_nSelectors7.pre-phi6588, %if.end3245 ], [ %save_nSelectors7.pre-phi6589, %if.end3188 ], [ %save_nSelectors7.pre-phi6590, %if.end3131 ], [ %save_nSelectors7.pre-phi6591, %if.end3074 ], [ %save_nSelectors7.pre-phi6592, %if.end3017 ], [ %save_nSelectors7.pre-phi6593, %if.end2960 ], [ %save_nSelectors7.pre-phi6570, %if.end1112 ], [ %save_nSelectors7.pre-phi6566, %if.end1196 ], [ %save_nSelectors7.pre-phi6561.ph, %if.end1390 ], [ %save_nSelectors7.pre-phi6561.ph, %if.end1429 ], [ %save_nSelectors7.pre-phi6555, %if.end1623 ], [ %save_nSelectors7.pre-phi6556, %if.end1566 ], [ %save_nSelectors7.pre-phi6559, %if.end1501 ], [ %save_nSelectors7.pre-phi6552, %if.end1886 ], [ %save_nSelectors7.pre-phi6547, %if.end2079 ], [ %save_nSelectors7.pre-phi6549, %if.end2015 ], [ %save_nSelectors7.pre-phi6544, %if.end2495 ], [ %save_nSelectors7.pre-phi6546, %if.end2431 ], [ %save_nSelectors7.pre-phi6554, %if.end1822 ], [ %save_nSelectors7.pre-phi6564, %if.end1328 ], [ %save_nSelectors7.pre-phi6565, %if.end1270 ], [ %save_nSelectors7.pre-phi6572, %if.end1040 ], [ %save_nSelectors7.pre-phi6573, %if.end983 ], [ %save_nSelectors7.pre-phi6574, %if.end926 ], [ %save_nSelectors7.pre-phi6575, %if.end874 ], [ %save_nSelectors7.pre-phi6576, %if.end817 ], [ %save_nSelectors7.pre-phi6577, %if.end760 ], [ %save_nSelectors7.pre-phi6578, %if.end703 ], [ %save_nSelectors7.pre-phi6579, %if.end646 ], [ %save_nSelectors7.pre-phi6580, %if.end582 ], [ %save_nSelectors7.pre-phi6581, %if.end525 ], [ %save_nSelectors7.pre-phi6582, %if.end468 ], [ %save_nSelectors7.pre-phi6583, %if.end411 ], [ %save_nSelectors7.pre-phi6584, %if.end354 ], [ %save_nSelectors7.pre-phi6594, %if.end292 ], [ %save_nSelectors7.pre-phi6595, %if.end192 ], [ %save_nSelectors7.pre-phi6596, %if.end136 ], [ %save_nSelectors7.pre-phi6597, %if.end79 ], [ %save_nSelectors, %if.end33 ]
  %save_EOB8.pre-phi6487 = phi i32* [ %save_EOB8.phi.trans.insert, %sw.default ], [ %save_EOB8.pre-phi6529, %if.then3406 ], [ %save_EOB, %if.then29 ], [ %save_EOB8.pre-phi6541, %if.then69 ], [ %save_EOB8.pre-phi6540, %if.then126 ], [ %save_EOB8.pre-phi6539, %if.then183 ], [ %save_EOB8.pre-phi6539, %if.then237 ], [ %save_EOB8.pre-phi6539, %if.else ], [ %save_EOB8.pre-phi6538, %if.then282 ], [ %save_EOB8.pre-phi6528, %if.then344 ], [ %save_EOB8.pre-phi6527, %if.then401 ], [ %save_EOB8.pre-phi6526, %if.then458 ], [ %save_EOB8.pre-phi6525, %if.then515 ], [ %save_EOB8.pre-phi6524, %if.then572 ], [ %save_EOB8.pre-phi6516, %if.then1030 ], [ %save_EOB8.pre-phi6516, %if.end1084 ], [ %save_EOB8.pre-phi6513, %makeMaps_d.exit ], [ %save_EOB8.pre-phi6509, %if.then1261 ], [ %save_EOB8.pre-phi6509, %if.then1261 ], [ %save_EOB8.pre-phi6509, %if.then1261 ], [ %save_EOB8.pre-phi6508, %if.then1319 ], [ %save_EOB8.pre-phi6501, %while.cond1540 ], [ %save_EOB8.pre-phi6504, %if.then1777 ], [ %save_EOB8.pre-phi6497, %while.cond1857 ], [ %save_EOB8.pre-phi6497, %while.end1923 ], [ %save_EOB8.pre-phi6494, %if.then1970 ], [ %save_EOB8.pre-phi6492, %while.cond2050 ], [ %save_EOB8.pre-phi6492, %while.end2116 ], [ %save_EOB8.pre-phi6495, %if.else2186 ], [ %save_EOB8.pre-phi6495, %if.then2386 ], [ %save_EOB8.pre-phi6489, %while.cond2466 ], [ %save_EOB8.pre-phi6489, %while.end2532 ], [ %save_EOB8.pre-phi6495, %while.end2551 ], [ %save_EOB8.pre-phi6495, %if.end2917 ], [ %save_EOB8.pre-phi6495, %if.else2926 ], [ %save_EOB8.pre-phi6495, %if.end2815 ], [ %save_EOB8.pre-phi6495, %if.else2822 ], [ %save_EOB8.pre-phi6537, %if.then2950 ], [ %save_EOB8.pre-phi6536, %if.then3007 ], [ %save_EOB8.pre-phi6535, %if.then3064 ], [ %save_EOB8.pre-phi6534, %if.then3121 ], [ %save_EOB8.pre-phi6533, %if.then3178 ], [ %save_EOB8.pre-phi6495, %save_state_and_return.loopexit5205 ], [ %save_EOB8.pre-phi6492, %save_state_and_return.loopexit5207 ], [ %save_EOB8.pre-phi6492, %save_state_and_return.loopexit5208 ], [ %save_EOB8.pre-phi6529, %if.end3416 ], [ %save_EOB8.pre-phi6530, %if.end3359 ], [ %save_EOB8.pre-phi6531, %if.end3302 ], [ %save_EOB8.pre-phi6532, %if.end3245 ], [ %save_EOB8.pre-phi6533, %if.end3188 ], [ %save_EOB8.pre-phi6534, %if.end3131 ], [ %save_EOB8.pre-phi6535, %if.end3074 ], [ %save_EOB8.pre-phi6536, %if.end3017 ], [ %save_EOB8.pre-phi6537, %if.end2960 ], [ %save_EOB8.pre-phi6514, %if.end1112 ], [ %save_EOB8.pre-phi6510, %if.end1196 ], [ %save_EOB8.pre-phi6505.ph, %if.end1390 ], [ %save_EOB8.pre-phi6505.ph, %if.end1429 ], [ %save_EOB8.pre-phi6499, %if.end1623 ], [ %save_EOB8.pre-phi6500, %if.end1566 ], [ %save_EOB8.pre-phi6503, %if.end1501 ], [ %save_EOB8.pre-phi6496, %if.end1886 ], [ %save_EOB8.pre-phi6491, %if.end2079 ], [ %save_EOB8.pre-phi6493, %if.end2015 ], [ %save_EOB8.pre-phi6488, %if.end2495 ], [ %save_EOB8.pre-phi6490, %if.end2431 ], [ %save_EOB8.pre-phi6498, %if.end1822 ], [ %save_EOB8.pre-phi6508, %if.end1328 ], [ %save_EOB8.pre-phi6509, %if.end1270 ], [ %save_EOB8.pre-phi6516, %if.end1040 ], [ %save_EOB8.pre-phi6517, %if.end983 ], [ %save_EOB8.pre-phi6518, %if.end926 ], [ %save_EOB8.pre-phi6519, %if.end874 ], [ %save_EOB8.pre-phi6520, %if.end817 ], [ %save_EOB8.pre-phi6521, %if.end760 ], [ %save_EOB8.pre-phi6522, %if.end703 ], [ %save_EOB8.pre-phi6523, %if.end646 ], [ %save_EOB8.pre-phi6524, %if.end582 ], [ %save_EOB8.pre-phi6525, %if.end525 ], [ %save_EOB8.pre-phi6526, %if.end468 ], [ %save_EOB8.pre-phi6527, %if.end411 ], [ %save_EOB8.pre-phi6528, %if.end354 ], [ %save_EOB8.pre-phi6538, %if.end292 ], [ %save_EOB8.pre-phi6539, %if.end192 ], [ %save_EOB8.pre-phi6540, %if.end136 ], [ %save_EOB8.pre-phi6541, %if.end79 ], [ %save_EOB, %if.end33 ]
  %save_groupNo9.pre-phi6431 = phi i32* [ %save_groupNo9.phi.trans.insert, %sw.default ], [ %save_groupNo9.pre-phi6473, %if.then3406 ], [ %save_groupNo, %if.then29 ], [ %save_groupNo9.pre-phi6485, %if.then69 ], [ %save_groupNo9.pre-phi6484, %if.then126 ], [ %save_groupNo9.pre-phi6483, %if.then183 ], [ %save_groupNo9.pre-phi6483, %if.then237 ], [ %save_groupNo9.pre-phi6483, %if.else ], [ %save_groupNo9.pre-phi6482, %if.then282 ], [ %save_groupNo9.pre-phi6472, %if.then344 ], [ %save_groupNo9.pre-phi6471, %if.then401 ], [ %save_groupNo9.pre-phi6470, %if.then458 ], [ %save_groupNo9.pre-phi6469, %if.then515 ], [ %save_groupNo9.pre-phi6468, %if.then572 ], [ %save_groupNo9.pre-phi6460, %if.then1030 ], [ %save_groupNo9.pre-phi6460, %if.end1084 ], [ %save_groupNo9.pre-phi6457, %makeMaps_d.exit ], [ %save_groupNo9.pre-phi6453, %if.then1261 ], [ %save_groupNo9.pre-phi6453, %if.then1261 ], [ %save_groupNo9.pre-phi6453, %if.then1261 ], [ %save_groupNo9.pre-phi6452, %if.then1319 ], [ %save_groupNo9.pre-phi6445, %while.cond1540 ], [ %save_groupNo9.pre-phi6448, %if.then1777 ], [ %save_groupNo9.pre-phi6441, %while.cond1857 ], [ %save_groupNo9.pre-phi6441, %while.end1923 ], [ %save_groupNo9.pre-phi6438, %if.then1970 ], [ %save_groupNo9.pre-phi6436, %while.cond2050 ], [ %save_groupNo9.pre-phi6436, %while.end2116 ], [ %save_groupNo9.pre-phi6439, %if.else2186 ], [ %save_groupNo9.pre-phi6439, %if.then2386 ], [ %save_groupNo9.pre-phi6433, %while.cond2466 ], [ %save_groupNo9.pre-phi6433, %while.end2532 ], [ %save_groupNo9.pre-phi6439, %while.end2551 ], [ %save_groupNo9.pre-phi6439, %if.end2917 ], [ %save_groupNo9.pre-phi6439, %if.else2926 ], [ %save_groupNo9.pre-phi6439, %if.end2815 ], [ %save_groupNo9.pre-phi6439, %if.else2822 ], [ %save_groupNo9.pre-phi6481, %if.then2950 ], [ %save_groupNo9.pre-phi6480, %if.then3007 ], [ %save_groupNo9.pre-phi6479, %if.then3064 ], [ %save_groupNo9.pre-phi6478, %if.then3121 ], [ %save_groupNo9.pre-phi6477, %if.then3178 ], [ %save_groupNo9.pre-phi6439, %save_state_and_return.loopexit5205 ], [ %save_groupNo9.pre-phi6436, %save_state_and_return.loopexit5207 ], [ %save_groupNo9.pre-phi6436, %save_state_and_return.loopexit5208 ], [ %save_groupNo9.pre-phi6473, %if.end3416 ], [ %save_groupNo9.pre-phi6474, %if.end3359 ], [ %save_groupNo9.pre-phi6475, %if.end3302 ], [ %save_groupNo9.pre-phi6476, %if.end3245 ], [ %save_groupNo9.pre-phi6477, %if.end3188 ], [ %save_groupNo9.pre-phi6478, %if.end3131 ], [ %save_groupNo9.pre-phi6479, %if.end3074 ], [ %save_groupNo9.pre-phi6480, %if.end3017 ], [ %save_groupNo9.pre-phi6481, %if.end2960 ], [ %save_groupNo9.pre-phi6458, %if.end1112 ], [ %save_groupNo9.pre-phi6454, %if.end1196 ], [ %save_groupNo9.pre-phi6449.ph, %if.end1390 ], [ %save_groupNo9.pre-phi6449.ph, %if.end1429 ], [ %save_groupNo9.pre-phi6443, %if.end1623 ], [ %save_groupNo9.pre-phi6444, %if.end1566 ], [ %save_groupNo9.pre-phi6447, %if.end1501 ], [ %save_groupNo9.pre-phi6440, %if.end1886 ], [ %save_groupNo9.pre-phi6435, %if.end2079 ], [ %save_groupNo9.pre-phi6437, %if.end2015 ], [ %save_groupNo9.pre-phi6432, %if.end2495 ], [ %save_groupNo9.pre-phi6434, %if.end2431 ], [ %save_groupNo9.pre-phi6442, %if.end1822 ], [ %save_groupNo9.pre-phi6452, %if.end1328 ], [ %save_groupNo9.pre-phi6453, %if.end1270 ], [ %save_groupNo9.pre-phi6460, %if.end1040 ], [ %save_groupNo9.pre-phi6461, %if.end983 ], [ %save_groupNo9.pre-phi6462, %if.end926 ], [ %save_groupNo9.pre-phi6463, %if.end874 ], [ %save_groupNo9.pre-phi6464, %if.end817 ], [ %save_groupNo9.pre-phi6465, %if.end760 ], [ %save_groupNo9.pre-phi6466, %if.end703 ], [ %save_groupNo9.pre-phi6467, %if.end646 ], [ %save_groupNo9.pre-phi6468, %if.end582 ], [ %save_groupNo9.pre-phi6469, %if.end525 ], [ %save_groupNo9.pre-phi6470, %if.end468 ], [ %save_groupNo9.pre-phi6471, %if.end411 ], [ %save_groupNo9.pre-phi6472, %if.end354 ], [ %save_groupNo9.pre-phi6482, %if.end292 ], [ %save_groupNo9.pre-phi6483, %if.end192 ], [ %save_groupNo9.pre-phi6484, %if.end136 ], [ %save_groupNo9.pre-phi6485, %if.end79 ], [ %save_groupNo, %if.end33 ]
  %save_groupPos10.pre-phi6375 = phi i32* [ %save_groupPos10.phi.trans.insert, %sw.default ], [ %save_groupPos10.pre-phi6417, %if.then3406 ], [ %save_groupPos, %if.then29 ], [ %save_groupPos10.pre-phi6429, %if.then69 ], [ %save_groupPos10.pre-phi6428, %if.then126 ], [ %save_groupPos10.pre-phi6427, %if.then183 ], [ %save_groupPos10.pre-phi6427, %if.then237 ], [ %save_groupPos10.pre-phi6427, %if.else ], [ %save_groupPos10.pre-phi6426, %if.then282 ], [ %save_groupPos10.pre-phi6416, %if.then344 ], [ %save_groupPos10.pre-phi6415, %if.then401 ], [ %save_groupPos10.pre-phi6414, %if.then458 ], [ %save_groupPos10.pre-phi6413, %if.then515 ], [ %save_groupPos10.pre-phi6412, %if.then572 ], [ %save_groupPos10.pre-phi6404, %if.then1030 ], [ %save_groupPos10.pre-phi6404, %if.end1084 ], [ %save_groupPos10.pre-phi6401, %makeMaps_d.exit ], [ %save_groupPos10.pre-phi6397, %if.then1261 ], [ %save_groupPos10.pre-phi6397, %if.then1261 ], [ %save_groupPos10.pre-phi6397, %if.then1261 ], [ %save_groupPos10.pre-phi6396, %if.then1319 ], [ %save_groupPos10.pre-phi6389, %while.cond1540 ], [ %save_groupPos10.pre-phi6392, %if.then1777 ], [ %save_groupPos10.pre-phi6385, %while.cond1857 ], [ %save_groupPos10.pre-phi6385, %while.end1923 ], [ %save_groupPos10.pre-phi6382, %if.then1970 ], [ %save_groupPos10.pre-phi6380, %while.cond2050 ], [ %save_groupPos10.pre-phi6380, %while.end2116 ], [ %save_groupPos10.pre-phi6383, %if.else2186 ], [ %save_groupPos10.pre-phi6383, %if.then2386 ], [ %save_groupPos10.pre-phi6377, %while.cond2466 ], [ %save_groupPos10.pre-phi6377, %while.end2532 ], [ %save_groupPos10.pre-phi6383, %while.end2551 ], [ %save_groupPos10.pre-phi6383, %if.end2917 ], [ %save_groupPos10.pre-phi6383, %if.else2926 ], [ %save_groupPos10.pre-phi6383, %if.end2815 ], [ %save_groupPos10.pre-phi6383, %if.else2822 ], [ %save_groupPos10.pre-phi6425, %if.then2950 ], [ %save_groupPos10.pre-phi6424, %if.then3007 ], [ %save_groupPos10.pre-phi6423, %if.then3064 ], [ %save_groupPos10.pre-phi6422, %if.then3121 ], [ %save_groupPos10.pre-phi6421, %if.then3178 ], [ %save_groupPos10.pre-phi6383, %save_state_and_return.loopexit5205 ], [ %save_groupPos10.pre-phi6380, %save_state_and_return.loopexit5207 ], [ %save_groupPos10.pre-phi6380, %save_state_and_return.loopexit5208 ], [ %save_groupPos10.pre-phi6417, %if.end3416 ], [ %save_groupPos10.pre-phi6418, %if.end3359 ], [ %save_groupPos10.pre-phi6419, %if.end3302 ], [ %save_groupPos10.pre-phi6420, %if.end3245 ], [ %save_groupPos10.pre-phi6421, %if.end3188 ], [ %save_groupPos10.pre-phi6422, %if.end3131 ], [ %save_groupPos10.pre-phi6423, %if.end3074 ], [ %save_groupPos10.pre-phi6424, %if.end3017 ], [ %save_groupPos10.pre-phi6425, %if.end2960 ], [ %save_groupPos10.pre-phi6402, %if.end1112 ], [ %save_groupPos10.pre-phi6398, %if.end1196 ], [ %save_groupPos10.pre-phi6393.ph, %if.end1390 ], [ %save_groupPos10.pre-phi6393.ph, %if.end1429 ], [ %save_groupPos10.pre-phi6387, %if.end1623 ], [ %save_groupPos10.pre-phi6388, %if.end1566 ], [ %save_groupPos10.pre-phi6391, %if.end1501 ], [ %save_groupPos10.pre-phi6384, %if.end1886 ], [ %save_groupPos10.pre-phi6379, %if.end2079 ], [ %save_groupPos10.pre-phi6381, %if.end2015 ], [ %save_groupPos10.pre-phi6376, %if.end2495 ], [ %save_groupPos10.pre-phi6378, %if.end2431 ], [ %save_groupPos10.pre-phi6386, %if.end1822 ], [ %save_groupPos10.pre-phi6396, %if.end1328 ], [ %save_groupPos10.pre-phi6397, %if.end1270 ], [ %save_groupPos10.pre-phi6404, %if.end1040 ], [ %save_groupPos10.pre-phi6405, %if.end983 ], [ %save_groupPos10.pre-phi6406, %if.end926 ], [ %save_groupPos10.pre-phi6407, %if.end874 ], [ %save_groupPos10.pre-phi6408, %if.end817 ], [ %save_groupPos10.pre-phi6409, %if.end760 ], [ %save_groupPos10.pre-phi6410, %if.end703 ], [ %save_groupPos10.pre-phi6411, %if.end646 ], [ %save_groupPos10.pre-phi6412, %if.end582 ], [ %save_groupPos10.pre-phi6413, %if.end525 ], [ %save_groupPos10.pre-phi6414, %if.end468 ], [ %save_groupPos10.pre-phi6415, %if.end411 ], [ %save_groupPos10.pre-phi6416, %if.end354 ], [ %save_groupPos10.pre-phi6426, %if.end292 ], [ %save_groupPos10.pre-phi6427, %if.end192 ], [ %save_groupPos10.pre-phi6428, %if.end136 ], [ %save_groupPos10.pre-phi6429, %if.end79 ], [ %save_groupPos, %if.end33 ]
  %save_nextSym11.pre-phi6319 = phi i32* [ %save_nextSym11.phi.trans.insert, %sw.default ], [ %save_nextSym11.pre-phi6361, %if.then3406 ], [ %save_nextSym, %if.then29 ], [ %save_nextSym11.pre-phi6373, %if.then69 ], [ %save_nextSym11.pre-phi6372, %if.then126 ], [ %save_nextSym11.pre-phi6371, %if.then183 ], [ %save_nextSym11.pre-phi6371, %if.then237 ], [ %save_nextSym11.pre-phi6371, %if.else ], [ %save_nextSym11.pre-phi6370, %if.then282 ], [ %save_nextSym11.pre-phi6360, %if.then344 ], [ %save_nextSym11.pre-phi6359, %if.then401 ], [ %save_nextSym11.pre-phi6358, %if.then458 ], [ %save_nextSym11.pre-phi6357, %if.then515 ], [ %save_nextSym11.pre-phi6356, %if.then572 ], [ %save_nextSym11.pre-phi6348, %if.then1030 ], [ %save_nextSym11.pre-phi6348, %if.end1084 ], [ %save_nextSym11.pre-phi6345, %makeMaps_d.exit ], [ %save_nextSym11.pre-phi6341, %if.then1261 ], [ %save_nextSym11.pre-phi6341, %if.then1261 ], [ %save_nextSym11.pre-phi6341, %if.then1261 ], [ %save_nextSym11.pre-phi6340, %if.then1319 ], [ %save_nextSym11.pre-phi6333, %while.cond1540 ], [ %save_nextSym11.pre-phi6336, %if.then1777 ], [ %save_nextSym11.pre-phi6329, %while.cond1857 ], [ %save_nextSym11.pre-phi6329, %while.end1923 ], [ %save_nextSym11.pre-phi6326, %if.then1970 ], [ %save_nextSym11.pre-phi6324, %while.cond2050 ], [ %save_nextSym11.pre-phi6324, %while.end2116 ], [ %save_nextSym11.pre-phi6327, %if.else2186 ], [ %save_nextSym11.pre-phi6327, %if.then2386 ], [ %save_nextSym11.pre-phi6321, %while.cond2466 ], [ %save_nextSym11.pre-phi6321, %while.end2532 ], [ %save_nextSym11.pre-phi6327, %while.end2551 ], [ %save_nextSym11.pre-phi6327, %if.end2917 ], [ %save_nextSym11.pre-phi6327, %if.else2926 ], [ %save_nextSym11.pre-phi6327, %if.end2815 ], [ %save_nextSym11.pre-phi6327, %if.else2822 ], [ %save_nextSym11.pre-phi6369, %if.then2950 ], [ %save_nextSym11.pre-phi6368, %if.then3007 ], [ %save_nextSym11.pre-phi6367, %if.then3064 ], [ %save_nextSym11.pre-phi6366, %if.then3121 ], [ %save_nextSym11.pre-phi6365, %if.then3178 ], [ %save_nextSym11.pre-phi6327, %save_state_and_return.loopexit5205 ], [ %save_nextSym11.pre-phi6324, %save_state_and_return.loopexit5207 ], [ %save_nextSym11.pre-phi6324, %save_state_and_return.loopexit5208 ], [ %save_nextSym11.pre-phi6361, %if.end3416 ], [ %save_nextSym11.pre-phi6362, %if.end3359 ], [ %save_nextSym11.pre-phi6363, %if.end3302 ], [ %save_nextSym11.pre-phi6364, %if.end3245 ], [ %save_nextSym11.pre-phi6365, %if.end3188 ], [ %save_nextSym11.pre-phi6366, %if.end3131 ], [ %save_nextSym11.pre-phi6367, %if.end3074 ], [ %save_nextSym11.pre-phi6368, %if.end3017 ], [ %save_nextSym11.pre-phi6369, %if.end2960 ], [ %save_nextSym11.pre-phi6346, %if.end1112 ], [ %save_nextSym11.pre-phi6342, %if.end1196 ], [ %save_nextSym11.pre-phi6337.ph, %if.end1390 ], [ %save_nextSym11.pre-phi6337.ph, %if.end1429 ], [ %save_nextSym11.pre-phi6331, %if.end1623 ], [ %save_nextSym11.pre-phi6332, %if.end1566 ], [ %save_nextSym11.pre-phi6335, %if.end1501 ], [ %save_nextSym11.pre-phi6328, %if.end1886 ], [ %save_nextSym11.pre-phi6323, %if.end2079 ], [ %save_nextSym11.pre-phi6325, %if.end2015 ], [ %save_nextSym11.pre-phi6320, %if.end2495 ], [ %save_nextSym11.pre-phi6322, %if.end2431 ], [ %save_nextSym11.pre-phi6330, %if.end1822 ], [ %save_nextSym11.pre-phi6340, %if.end1328 ], [ %save_nextSym11.pre-phi6341, %if.end1270 ], [ %save_nextSym11.pre-phi6348, %if.end1040 ], [ %save_nextSym11.pre-phi6349, %if.end983 ], [ %save_nextSym11.pre-phi6350, %if.end926 ], [ %save_nextSym11.pre-phi6351, %if.end874 ], [ %save_nextSym11.pre-phi6352, %if.end817 ], [ %save_nextSym11.pre-phi6353, %if.end760 ], [ %save_nextSym11.pre-phi6354, %if.end703 ], [ %save_nextSym11.pre-phi6355, %if.end646 ], [ %save_nextSym11.pre-phi6356, %if.end582 ], [ %save_nextSym11.pre-phi6357, %if.end525 ], [ %save_nextSym11.pre-phi6358, %if.end468 ], [ %save_nextSym11.pre-phi6359, %if.end411 ], [ %save_nextSym11.pre-phi6360, %if.end354 ], [ %save_nextSym11.pre-phi6370, %if.end292 ], [ %save_nextSym11.pre-phi6371, %if.end192 ], [ %save_nextSym11.pre-phi6372, %if.end136 ], [ %save_nextSym11.pre-phi6373, %if.end79 ], [ %save_nextSym, %if.end33 ]
  %save_nblockMAX12.pre-phi6263 = phi i32* [ %save_nblockMAX12.phi.trans.insert, %sw.default ], [ %save_nblockMAX12.pre-phi6305, %if.then3406 ], [ %save_nblockMAX, %if.then29 ], [ %save_nblockMAX12.pre-phi6317, %if.then69 ], [ %save_nblockMAX12.pre-phi6316, %if.then126 ], [ %save_nblockMAX12.pre-phi6315, %if.then183 ], [ %save_nblockMAX12.pre-phi6315, %if.then237 ], [ %save_nblockMAX12.pre-phi6315, %if.else ], [ %save_nblockMAX12.pre-phi6314, %if.then282 ], [ %save_nblockMAX12.pre-phi6304, %if.then344 ], [ %save_nblockMAX12.pre-phi6303, %if.then401 ], [ %save_nblockMAX12.pre-phi6302, %if.then458 ], [ %save_nblockMAX12.pre-phi6301, %if.then515 ], [ %save_nblockMAX12.pre-phi6300, %if.then572 ], [ %save_nblockMAX12.pre-phi6292, %if.then1030 ], [ %save_nblockMAX12.pre-phi6292, %if.end1084 ], [ %save_nblockMAX12.pre-phi6289, %makeMaps_d.exit ], [ %save_nblockMAX12.pre-phi6285, %if.then1261 ], [ %save_nblockMAX12.pre-phi6285, %if.then1261 ], [ %save_nblockMAX12.pre-phi6285, %if.then1261 ], [ %save_nblockMAX12.pre-phi6284, %if.then1319 ], [ %save_nblockMAX12.pre-phi6277, %while.cond1540 ], [ %save_nblockMAX12.pre-phi6280, %if.then1777 ], [ %save_nblockMAX12.pre-phi6273, %while.cond1857 ], [ %save_nblockMAX12.pre-phi6273, %while.end1923 ], [ %save_nblockMAX12.pre-phi6270, %if.then1970 ], [ %save_nblockMAX12.pre-phi6268, %while.cond2050 ], [ %save_nblockMAX12.pre-phi6268, %while.end2116 ], [ %save_nblockMAX12.pre-phi6271, %if.else2186 ], [ %save_nblockMAX12.pre-phi6271, %if.then2386 ], [ %save_nblockMAX12.pre-phi6265, %while.cond2466 ], [ %save_nblockMAX12.pre-phi6265, %while.end2532 ], [ %save_nblockMAX12.pre-phi6271, %while.end2551 ], [ %save_nblockMAX12.pre-phi6271, %if.end2917 ], [ %save_nblockMAX12.pre-phi6271, %if.else2926 ], [ %save_nblockMAX12.pre-phi6271, %if.end2815 ], [ %save_nblockMAX12.pre-phi6271, %if.else2822 ], [ %save_nblockMAX12.pre-phi6313, %if.then2950 ], [ %save_nblockMAX12.pre-phi6312, %if.then3007 ], [ %save_nblockMAX12.pre-phi6311, %if.then3064 ], [ %save_nblockMAX12.pre-phi6310, %if.then3121 ], [ %save_nblockMAX12.pre-phi6309, %if.then3178 ], [ %save_nblockMAX12.pre-phi6271, %save_state_and_return.loopexit5205 ], [ %save_nblockMAX12.pre-phi6268, %save_state_and_return.loopexit5207 ], [ %save_nblockMAX12.pre-phi6268, %save_state_and_return.loopexit5208 ], [ %save_nblockMAX12.pre-phi6305, %if.end3416 ], [ %save_nblockMAX12.pre-phi6306, %if.end3359 ], [ %save_nblockMAX12.pre-phi6307, %if.end3302 ], [ %save_nblockMAX12.pre-phi6308, %if.end3245 ], [ %save_nblockMAX12.pre-phi6309, %if.end3188 ], [ %save_nblockMAX12.pre-phi6310, %if.end3131 ], [ %save_nblockMAX12.pre-phi6311, %if.end3074 ], [ %save_nblockMAX12.pre-phi6312, %if.end3017 ], [ %save_nblockMAX12.pre-phi6313, %if.end2960 ], [ %save_nblockMAX12.pre-phi6290, %if.end1112 ], [ %save_nblockMAX12.pre-phi6286, %if.end1196 ], [ %save_nblockMAX12.pre-phi6281.ph, %if.end1390 ], [ %save_nblockMAX12.pre-phi6281.ph, %if.end1429 ], [ %save_nblockMAX12.pre-phi6275, %if.end1623 ], [ %save_nblockMAX12.pre-phi6276, %if.end1566 ], [ %save_nblockMAX12.pre-phi6279, %if.end1501 ], [ %save_nblockMAX12.pre-phi6272, %if.end1886 ], [ %save_nblockMAX12.pre-phi6267, %if.end2079 ], [ %save_nblockMAX12.pre-phi6269, %if.end2015 ], [ %save_nblockMAX12.pre-phi6264, %if.end2495 ], [ %save_nblockMAX12.pre-phi6266, %if.end2431 ], [ %save_nblockMAX12.pre-phi6274, %if.end1822 ], [ %save_nblockMAX12.pre-phi6284, %if.end1328 ], [ %save_nblockMAX12.pre-phi6285, %if.end1270 ], [ %save_nblockMAX12.pre-phi6292, %if.end1040 ], [ %save_nblockMAX12.pre-phi6293, %if.end983 ], [ %save_nblockMAX12.pre-phi6294, %if.end926 ], [ %save_nblockMAX12.pre-phi6295, %if.end874 ], [ %save_nblockMAX12.pre-phi6296, %if.end817 ], [ %save_nblockMAX12.pre-phi6297, %if.end760 ], [ %save_nblockMAX12.pre-phi6298, %if.end703 ], [ %save_nblockMAX12.pre-phi6299, %if.end646 ], [ %save_nblockMAX12.pre-phi6300, %if.end582 ], [ %save_nblockMAX12.pre-phi6301, %if.end525 ], [ %save_nblockMAX12.pre-phi6302, %if.end468 ], [ %save_nblockMAX12.pre-phi6303, %if.end411 ], [ %save_nblockMAX12.pre-phi6304, %if.end354 ], [ %save_nblockMAX12.pre-phi6314, %if.end292 ], [ %save_nblockMAX12.pre-phi6315, %if.end192 ], [ %save_nblockMAX12.pre-phi6316, %if.end136 ], [ %save_nblockMAX12.pre-phi6317, %if.end79 ], [ %save_nblockMAX, %if.end33 ]
  %save_nblock13.pre-phi6207 = phi i32* [ %save_nblock13.phi.trans.insert, %sw.default ], [ %save_nblock13.pre-phi6249, %if.then3406 ], [ %save_nblock, %if.then29 ], [ %save_nblock13.pre-phi6261, %if.then69 ], [ %save_nblock13.pre-phi6260, %if.then126 ], [ %save_nblock13.pre-phi6259, %if.then183 ], [ %save_nblock13.pre-phi6259, %if.then237 ], [ %save_nblock13.pre-phi6259, %if.else ], [ %save_nblock13.pre-phi6258, %if.then282 ], [ %save_nblock13.pre-phi6248, %if.then344 ], [ %save_nblock13.pre-phi6247, %if.then401 ], [ %save_nblock13.pre-phi6246, %if.then458 ], [ %save_nblock13.pre-phi6245, %if.then515 ], [ %save_nblock13.pre-phi6244, %if.then572 ], [ %save_nblock13.pre-phi6236, %if.then1030 ], [ %save_nblock13.pre-phi6236, %if.end1084 ], [ %save_nblock13.pre-phi6233, %makeMaps_d.exit ], [ %save_nblock13.pre-phi6229, %if.then1261 ], [ %save_nblock13.pre-phi6229, %if.then1261 ], [ %save_nblock13.pre-phi6229, %if.then1261 ], [ %save_nblock13.pre-phi6228, %if.then1319 ], [ %save_nblock13.pre-phi6221, %while.cond1540 ], [ %save_nblock13.pre-phi6224, %if.then1777 ], [ %save_nblock13.pre-phi6217, %while.cond1857 ], [ %save_nblock13.pre-phi6217, %while.end1923 ], [ %save_nblock13.pre-phi6214, %if.then1970 ], [ %save_nblock13.pre-phi6212, %while.cond2050 ], [ %save_nblock13.pre-phi6212, %while.end2116 ], [ %save_nblock13.pre-phi6215, %if.else2186 ], [ %save_nblock13.pre-phi6215, %if.then2386 ], [ %save_nblock13.pre-phi6209, %while.cond2466 ], [ %save_nblock13.pre-phi6209, %while.end2532 ], [ %save_nblock13.pre-phi6215, %while.end2551 ], [ %save_nblock13.pre-phi6215, %if.end2917 ], [ %save_nblock13.pre-phi6215, %if.else2926 ], [ %save_nblock13.pre-phi6215, %if.end2815 ], [ %save_nblock13.pre-phi6215, %if.else2822 ], [ %save_nblock13.pre-phi6257, %if.then2950 ], [ %save_nblock13.pre-phi6256, %if.then3007 ], [ %save_nblock13.pre-phi6255, %if.then3064 ], [ %save_nblock13.pre-phi6254, %if.then3121 ], [ %save_nblock13.pre-phi6253, %if.then3178 ], [ %save_nblock13.pre-phi6215, %save_state_and_return.loopexit5205 ], [ %save_nblock13.pre-phi6212, %save_state_and_return.loopexit5207 ], [ %save_nblock13.pre-phi6212, %save_state_and_return.loopexit5208 ], [ %save_nblock13.pre-phi6249, %if.end3416 ], [ %save_nblock13.pre-phi6250, %if.end3359 ], [ %save_nblock13.pre-phi6251, %if.end3302 ], [ %save_nblock13.pre-phi6252, %if.end3245 ], [ %save_nblock13.pre-phi6253, %if.end3188 ], [ %save_nblock13.pre-phi6254, %if.end3131 ], [ %save_nblock13.pre-phi6255, %if.end3074 ], [ %save_nblock13.pre-phi6256, %if.end3017 ], [ %save_nblock13.pre-phi6257, %if.end2960 ], [ %save_nblock13.pre-phi6234, %if.end1112 ], [ %save_nblock13.pre-phi6230, %if.end1196 ], [ %save_nblock13.pre-phi6225.ph, %if.end1390 ], [ %save_nblock13.pre-phi6225.ph, %if.end1429 ], [ %save_nblock13.pre-phi6219, %if.end1623 ], [ %save_nblock13.pre-phi6220, %if.end1566 ], [ %save_nblock13.pre-phi6223, %if.end1501 ], [ %save_nblock13.pre-phi6216, %if.end1886 ], [ %save_nblock13.pre-phi6211, %if.end2079 ], [ %save_nblock13.pre-phi6213, %if.end2015 ], [ %save_nblock13.pre-phi6208, %if.end2495 ], [ %save_nblock13.pre-phi6210, %if.end2431 ], [ %save_nblock13.pre-phi6218, %if.end1822 ], [ %save_nblock13.pre-phi6228, %if.end1328 ], [ %save_nblock13.pre-phi6229, %if.end1270 ], [ %save_nblock13.pre-phi6236, %if.end1040 ], [ %save_nblock13.pre-phi6237, %if.end983 ], [ %save_nblock13.pre-phi6238, %if.end926 ], [ %save_nblock13.pre-phi6239, %if.end874 ], [ %save_nblock13.pre-phi6240, %if.end817 ], [ %save_nblock13.pre-phi6241, %if.end760 ], [ %save_nblock13.pre-phi6242, %if.end703 ], [ %save_nblock13.pre-phi6243, %if.end646 ], [ %save_nblock13.pre-phi6244, %if.end582 ], [ %save_nblock13.pre-phi6245, %if.end525 ], [ %save_nblock13.pre-phi6246, %if.end468 ], [ %save_nblock13.pre-phi6247, %if.end411 ], [ %save_nblock13.pre-phi6248, %if.end354 ], [ %save_nblock13.pre-phi6258, %if.end292 ], [ %save_nblock13.pre-phi6259, %if.end192 ], [ %save_nblock13.pre-phi6260, %if.end136 ], [ %save_nblock13.pre-phi6261, %if.end79 ], [ %save_nblock, %if.end33 ]
  %save_es14.pre-phi6151 = phi i32* [ %save_es14.phi.trans.insert, %sw.default ], [ %save_es14.pre-phi6193, %if.then3406 ], [ %save_es, %if.then29 ], [ %save_es14.pre-phi6205, %if.then69 ], [ %save_es14.pre-phi6204, %if.then126 ], [ %save_es14.pre-phi6203, %if.then183 ], [ %save_es14.pre-phi6203, %if.then237 ], [ %save_es14.pre-phi6203, %if.else ], [ %save_es14.pre-phi6202, %if.then282 ], [ %save_es14.pre-phi6192, %if.then344 ], [ %save_es14.pre-phi6191, %if.then401 ], [ %save_es14.pre-phi6190, %if.then458 ], [ %save_es14.pre-phi6189, %if.then515 ], [ %save_es14.pre-phi6188, %if.then572 ], [ %save_es14.pre-phi6180, %if.then1030 ], [ %save_es14.pre-phi6180, %if.end1084 ], [ %save_es14.pre-phi6177, %makeMaps_d.exit ], [ %save_es14.pre-phi6173, %if.then1261 ], [ %save_es14.pre-phi6173, %if.then1261 ], [ %save_es14.pre-phi6173, %if.then1261 ], [ %save_es14.pre-phi6172, %if.then1319 ], [ %save_es14.pre-phi6165, %while.cond1540 ], [ %save_es14.pre-phi6168, %if.then1777 ], [ %save_es14.pre-phi6161, %while.cond1857 ], [ %save_es14.pre-phi6161, %while.end1923 ], [ %save_es14.pre-phi6158, %if.then1970 ], [ %save_es14.pre-phi6156, %while.cond2050 ], [ %save_es14.pre-phi6156, %while.end2116 ], [ %save_es14.pre-phi6159, %if.else2186 ], [ %save_es14.pre-phi6159, %if.then2386 ], [ %save_es14.pre-phi6153, %while.cond2466 ], [ %save_es14.pre-phi6153, %while.end2532 ], [ %save_es14.pre-phi6159, %while.end2551 ], [ %save_es14.pre-phi6159, %if.end2917 ], [ %save_es14.pre-phi6159, %if.else2926 ], [ %save_es14.pre-phi6159, %if.end2815 ], [ %save_es14.pre-phi6159, %if.else2822 ], [ %save_es14.pre-phi6201, %if.then2950 ], [ %save_es14.pre-phi6200, %if.then3007 ], [ %save_es14.pre-phi6199, %if.then3064 ], [ %save_es14.pre-phi6198, %if.then3121 ], [ %save_es14.pre-phi6197, %if.then3178 ], [ %save_es14.pre-phi6159, %save_state_and_return.loopexit5205 ], [ %save_es14.pre-phi6156, %save_state_and_return.loopexit5207 ], [ %save_es14.pre-phi6156, %save_state_and_return.loopexit5208 ], [ %save_es14.pre-phi6193, %if.end3416 ], [ %save_es14.pre-phi6194, %if.end3359 ], [ %save_es14.pre-phi6195, %if.end3302 ], [ %save_es14.pre-phi6196, %if.end3245 ], [ %save_es14.pre-phi6197, %if.end3188 ], [ %save_es14.pre-phi6198, %if.end3131 ], [ %save_es14.pre-phi6199, %if.end3074 ], [ %save_es14.pre-phi6200, %if.end3017 ], [ %save_es14.pre-phi6201, %if.end2960 ], [ %save_es14.pre-phi6178, %if.end1112 ], [ %save_es14.pre-phi6174, %if.end1196 ], [ %save_es14.pre-phi6169.ph, %if.end1390 ], [ %save_es14.pre-phi6169.ph, %if.end1429 ], [ %save_es14.pre-phi6163, %if.end1623 ], [ %save_es14.pre-phi6164, %if.end1566 ], [ %save_es14.pre-phi6167, %if.end1501 ], [ %save_es14.pre-phi6160, %if.end1886 ], [ %save_es14.pre-phi6155, %if.end2079 ], [ %save_es14.pre-phi6157, %if.end2015 ], [ %save_es14.pre-phi6152, %if.end2495 ], [ %save_es14.pre-phi6154, %if.end2431 ], [ %save_es14.pre-phi6162, %if.end1822 ], [ %save_es14.pre-phi6172, %if.end1328 ], [ %save_es14.pre-phi6173, %if.end1270 ], [ %save_es14.pre-phi6180, %if.end1040 ], [ %save_es14.pre-phi6181, %if.end983 ], [ %save_es14.pre-phi6182, %if.end926 ], [ %save_es14.pre-phi6183, %if.end874 ], [ %save_es14.pre-phi6184, %if.end817 ], [ %save_es14.pre-phi6185, %if.end760 ], [ %save_es14.pre-phi6186, %if.end703 ], [ %save_es14.pre-phi6187, %if.end646 ], [ %save_es14.pre-phi6188, %if.end582 ], [ %save_es14.pre-phi6189, %if.end525 ], [ %save_es14.pre-phi6190, %if.end468 ], [ %save_es14.pre-phi6191, %if.end411 ], [ %save_es14.pre-phi6192, %if.end354 ], [ %save_es14.pre-phi6202, %if.end292 ], [ %save_es14.pre-phi6203, %if.end192 ], [ %save_es14.pre-phi6204, %if.end136 ], [ %save_es14.pre-phi6205, %if.end79 ], [ %save_es, %if.end33 ]
  %save_N15.pre-phi6095 = phi i32* [ %save_N15.phi.trans.insert, %sw.default ], [ %save_N15.pre-phi6137, %if.then3406 ], [ %save_N, %if.then29 ], [ %save_N15.pre-phi6149, %if.then69 ], [ %save_N15.pre-phi6148, %if.then126 ], [ %save_N15.pre-phi6147, %if.then183 ], [ %save_N15.pre-phi6147, %if.then237 ], [ %save_N15.pre-phi6147, %if.else ], [ %save_N15.pre-phi6146, %if.then282 ], [ %save_N15.pre-phi6136, %if.then344 ], [ %save_N15.pre-phi6135, %if.then401 ], [ %save_N15.pre-phi6134, %if.then458 ], [ %save_N15.pre-phi6133, %if.then515 ], [ %save_N15.pre-phi6132, %if.then572 ], [ %save_N15.pre-phi6124, %if.then1030 ], [ %save_N15.pre-phi6124, %if.end1084 ], [ %save_N15.pre-phi6121, %makeMaps_d.exit ], [ %save_N15.pre-phi6117, %if.then1261 ], [ %save_N15.pre-phi6117, %if.then1261 ], [ %save_N15.pre-phi6117, %if.then1261 ], [ %save_N15.pre-phi6116, %if.then1319 ], [ %save_N15.pre-phi6109, %while.cond1540 ], [ %save_N15.pre-phi6112, %if.then1777 ], [ %save_N15.pre-phi6105, %while.cond1857 ], [ %save_N15.pre-phi6105, %while.end1923 ], [ %save_N15.pre-phi6102, %if.then1970 ], [ %save_N15.pre-phi6100, %while.cond2050 ], [ %save_N15.pre-phi6100, %while.end2116 ], [ %save_N15.pre-phi6103, %if.else2186 ], [ %save_N15.pre-phi6103, %if.then2386 ], [ %save_N15.pre-phi6097, %while.cond2466 ], [ %save_N15.pre-phi6097, %while.end2532 ], [ %save_N15.pre-phi6103, %while.end2551 ], [ %save_N15.pre-phi6103, %if.end2917 ], [ %save_N15.pre-phi6103, %if.else2926 ], [ %save_N15.pre-phi6103, %if.end2815 ], [ %save_N15.pre-phi6103, %if.else2822 ], [ %save_N15.pre-phi6145, %if.then2950 ], [ %save_N15.pre-phi6144, %if.then3007 ], [ %save_N15.pre-phi6143, %if.then3064 ], [ %save_N15.pre-phi6142, %if.then3121 ], [ %save_N15.pre-phi6141, %if.then3178 ], [ %save_N15.pre-phi6103, %save_state_and_return.loopexit5205 ], [ %save_N15.pre-phi6100, %save_state_and_return.loopexit5207 ], [ %save_N15.pre-phi6100, %save_state_and_return.loopexit5208 ], [ %save_N15.pre-phi6137, %if.end3416 ], [ %save_N15.pre-phi6138, %if.end3359 ], [ %save_N15.pre-phi6139, %if.end3302 ], [ %save_N15.pre-phi6140, %if.end3245 ], [ %save_N15.pre-phi6141, %if.end3188 ], [ %save_N15.pre-phi6142, %if.end3131 ], [ %save_N15.pre-phi6143, %if.end3074 ], [ %save_N15.pre-phi6144, %if.end3017 ], [ %save_N15.pre-phi6145, %if.end2960 ], [ %save_N15.pre-phi6122, %if.end1112 ], [ %save_N15.pre-phi6118, %if.end1196 ], [ %save_N15.pre-phi6113.ph, %if.end1390 ], [ %save_N15.pre-phi6113.ph, %if.end1429 ], [ %save_N15.pre-phi6107, %if.end1623 ], [ %save_N15.pre-phi6108, %if.end1566 ], [ %save_N15.pre-phi6111, %if.end1501 ], [ %save_N15.pre-phi6104, %if.end1886 ], [ %save_N15.pre-phi6099, %if.end2079 ], [ %save_N15.pre-phi6101, %if.end2015 ], [ %save_N15.pre-phi6096, %if.end2495 ], [ %save_N15.pre-phi6098, %if.end2431 ], [ %save_N15.pre-phi6106, %if.end1822 ], [ %save_N15.pre-phi6116, %if.end1328 ], [ %save_N15.pre-phi6117, %if.end1270 ], [ %save_N15.pre-phi6124, %if.end1040 ], [ %save_N15.pre-phi6125, %if.end983 ], [ %save_N15.pre-phi6126, %if.end926 ], [ %save_N15.pre-phi6127, %if.end874 ], [ %save_N15.pre-phi6128, %if.end817 ], [ %save_N15.pre-phi6129, %if.end760 ], [ %save_N15.pre-phi6130, %if.end703 ], [ %save_N15.pre-phi6131, %if.end646 ], [ %save_N15.pre-phi6132, %if.end582 ], [ %save_N15.pre-phi6133, %if.end525 ], [ %save_N15.pre-phi6134, %if.end468 ], [ %save_N15.pre-phi6135, %if.end411 ], [ %save_N15.pre-phi6136, %if.end354 ], [ %save_N15.pre-phi6146, %if.end292 ], [ %save_N15.pre-phi6147, %if.end192 ], [ %save_N15.pre-phi6148, %if.end136 ], [ %save_N15.pre-phi6149, %if.end79 ], [ %save_N, %if.end33 ]
  %save_curr16.pre-phi6039 = phi i32* [ %save_curr16.phi.trans.insert, %sw.default ], [ %save_curr16.pre-phi6081, %if.then3406 ], [ %save_curr, %if.then29 ], [ %save_curr16.pre-phi6093, %if.then69 ], [ %save_curr16.pre-phi6092, %if.then126 ], [ %save_curr16.pre-phi6091, %if.then183 ], [ %save_curr16.pre-phi6091, %if.then237 ], [ %save_curr16.pre-phi6091, %if.else ], [ %save_curr16.pre-phi6090, %if.then282 ], [ %save_curr16.pre-phi6080, %if.then344 ], [ %save_curr16.pre-phi6079, %if.then401 ], [ %save_curr16.pre-phi6078, %if.then458 ], [ %save_curr16.pre-phi6077, %if.then515 ], [ %save_curr16.pre-phi6076, %if.then572 ], [ %save_curr16.pre-phi6068, %if.then1030 ], [ %save_curr16.pre-phi6068, %if.end1084 ], [ %save_curr16.pre-phi6065, %makeMaps_d.exit ], [ %save_curr16.pre-phi6061, %if.then1261 ], [ %save_curr16.pre-phi6061, %if.then1261 ], [ %save_curr16.pre-phi6061, %if.then1261 ], [ %save_curr16.pre-phi6060, %if.then1319 ], [ %save_curr16.pre-phi6053, %while.cond1540 ], [ %save_curr16.pre-phi6056, %if.then1777 ], [ %save_curr16.pre-phi6049, %while.cond1857 ], [ %save_curr16.pre-phi6049, %while.end1923 ], [ %save_curr16.pre-phi6046, %if.then1970 ], [ %save_curr16.pre-phi6044, %while.cond2050 ], [ %save_curr16.pre-phi6044, %while.end2116 ], [ %save_curr16.pre-phi6047, %if.else2186 ], [ %save_curr16.pre-phi6047, %if.then2386 ], [ %save_curr16.pre-phi6041, %while.cond2466 ], [ %save_curr16.pre-phi6041, %while.end2532 ], [ %save_curr16.pre-phi6047, %while.end2551 ], [ %save_curr16.pre-phi6047, %if.end2917 ], [ %save_curr16.pre-phi6047, %if.else2926 ], [ %save_curr16.pre-phi6047, %if.end2815 ], [ %save_curr16.pre-phi6047, %if.else2822 ], [ %save_curr16.pre-phi6089, %if.then2950 ], [ %save_curr16.pre-phi6088, %if.then3007 ], [ %save_curr16.pre-phi6087, %if.then3064 ], [ %save_curr16.pre-phi6086, %if.then3121 ], [ %save_curr16.pre-phi6085, %if.then3178 ], [ %save_curr16.pre-phi6047, %save_state_and_return.loopexit5205 ], [ %save_curr16.pre-phi6044, %save_state_and_return.loopexit5207 ], [ %save_curr16.pre-phi6044, %save_state_and_return.loopexit5208 ], [ %save_curr16.pre-phi6081, %if.end3416 ], [ %save_curr16.pre-phi6082, %if.end3359 ], [ %save_curr16.pre-phi6083, %if.end3302 ], [ %save_curr16.pre-phi6084, %if.end3245 ], [ %save_curr16.pre-phi6085, %if.end3188 ], [ %save_curr16.pre-phi6086, %if.end3131 ], [ %save_curr16.pre-phi6087, %if.end3074 ], [ %save_curr16.pre-phi6088, %if.end3017 ], [ %save_curr16.pre-phi6089, %if.end2960 ], [ %save_curr16.pre-phi6066, %if.end1112 ], [ %save_curr16.pre-phi6062, %if.end1196 ], [ %save_curr16.pre-phi6057.ph, %if.end1390 ], [ %save_curr16.pre-phi6057.ph, %if.end1429 ], [ %save_curr16.pre-phi6051, %if.end1623 ], [ %save_curr16.pre-phi6052, %if.end1566 ], [ %save_curr16.pre-phi6055, %if.end1501 ], [ %save_curr16.pre-phi6048, %if.end1886 ], [ %save_curr16.pre-phi6043, %if.end2079 ], [ %save_curr16.pre-phi6045, %if.end2015 ], [ %save_curr16.pre-phi6040, %if.end2495 ], [ %save_curr16.pre-phi6042, %if.end2431 ], [ %save_curr16.pre-phi6050, %if.end1822 ], [ %save_curr16.pre-phi6060, %if.end1328 ], [ %save_curr16.pre-phi6061, %if.end1270 ], [ %save_curr16.pre-phi6068, %if.end1040 ], [ %save_curr16.pre-phi6069, %if.end983 ], [ %save_curr16.pre-phi6070, %if.end926 ], [ %save_curr16.pre-phi6071, %if.end874 ], [ %save_curr16.pre-phi6072, %if.end817 ], [ %save_curr16.pre-phi6073, %if.end760 ], [ %save_curr16.pre-phi6074, %if.end703 ], [ %save_curr16.pre-phi6075, %if.end646 ], [ %save_curr16.pre-phi6076, %if.end582 ], [ %save_curr16.pre-phi6077, %if.end525 ], [ %save_curr16.pre-phi6078, %if.end468 ], [ %save_curr16.pre-phi6079, %if.end411 ], [ %save_curr16.pre-phi6080, %if.end354 ], [ %save_curr16.pre-phi6090, %if.end292 ], [ %save_curr16.pre-phi6091, %if.end192 ], [ %save_curr16.pre-phi6092, %if.end136 ], [ %save_curr16.pre-phi6093, %if.end79 ], [ %save_curr, %if.end33 ]
  %save_zt17.pre-phi5983 = phi i32* [ %save_zt17.phi.trans.insert, %sw.default ], [ %save_zt17.pre-phi6025, %if.then3406 ], [ %save_zt, %if.then29 ], [ %save_zt17.pre-phi6037, %if.then69 ], [ %save_zt17.pre-phi6036, %if.then126 ], [ %save_zt17.pre-phi6035, %if.then183 ], [ %save_zt17.pre-phi6035, %if.then237 ], [ %save_zt17.pre-phi6035, %if.else ], [ %save_zt17.pre-phi6034, %if.then282 ], [ %save_zt17.pre-phi6024, %if.then344 ], [ %save_zt17.pre-phi6023, %if.then401 ], [ %save_zt17.pre-phi6022, %if.then458 ], [ %save_zt17.pre-phi6021, %if.then515 ], [ %save_zt17.pre-phi6020, %if.then572 ], [ %save_zt17.pre-phi6012, %if.then1030 ], [ %save_zt17.pre-phi6012, %if.end1084 ], [ %save_zt17.pre-phi6009, %makeMaps_d.exit ], [ %save_zt17.pre-phi6005, %if.then1261 ], [ %save_zt17.pre-phi6005, %if.then1261 ], [ %save_zt17.pre-phi6005, %if.then1261 ], [ %save_zt17.pre-phi6004, %if.then1319 ], [ %save_zt17.pre-phi5997, %while.cond1540 ], [ %save_zt17.pre-phi6000, %if.then1777 ], [ %save_zt17.pre-phi5993, %while.cond1857 ], [ %save_zt17.pre-phi5993, %while.end1923 ], [ %save_zt17.pre-phi5990, %if.then1970 ], [ %save_zt17.pre-phi5988, %while.cond2050 ], [ %save_zt17.pre-phi5988, %while.end2116 ], [ %save_zt17.pre-phi5991, %if.else2186 ], [ %save_zt17.pre-phi5991, %if.then2386 ], [ %save_zt17.pre-phi5985, %while.cond2466 ], [ %save_zt17.pre-phi5985, %while.end2532 ], [ %save_zt17.pre-phi5991, %while.end2551 ], [ %save_zt17.pre-phi5991, %if.end2917 ], [ %save_zt17.pre-phi5991, %if.else2926 ], [ %save_zt17.pre-phi5991, %if.end2815 ], [ %save_zt17.pre-phi5991, %if.else2822 ], [ %save_zt17.pre-phi6033, %if.then2950 ], [ %save_zt17.pre-phi6032, %if.then3007 ], [ %save_zt17.pre-phi6031, %if.then3064 ], [ %save_zt17.pre-phi6030, %if.then3121 ], [ %save_zt17.pre-phi6029, %if.then3178 ], [ %save_zt17.pre-phi5991, %save_state_and_return.loopexit5205 ], [ %save_zt17.pre-phi5988, %save_state_and_return.loopexit5207 ], [ %save_zt17.pre-phi5988, %save_state_and_return.loopexit5208 ], [ %save_zt17.pre-phi6025, %if.end3416 ], [ %save_zt17.pre-phi6026, %if.end3359 ], [ %save_zt17.pre-phi6027, %if.end3302 ], [ %save_zt17.pre-phi6028, %if.end3245 ], [ %save_zt17.pre-phi6029, %if.end3188 ], [ %save_zt17.pre-phi6030, %if.end3131 ], [ %save_zt17.pre-phi6031, %if.end3074 ], [ %save_zt17.pre-phi6032, %if.end3017 ], [ %save_zt17.pre-phi6033, %if.end2960 ], [ %save_zt17.pre-phi6010, %if.end1112 ], [ %save_zt17.pre-phi6006, %if.end1196 ], [ %save_zt17.pre-phi6001.ph, %if.end1390 ], [ %save_zt17.pre-phi6001.ph, %if.end1429 ], [ %save_zt17.pre-phi5995, %if.end1623 ], [ %save_zt17.pre-phi5996, %if.end1566 ], [ %save_zt17.pre-phi5999, %if.end1501 ], [ %save_zt17.pre-phi5992, %if.end1886 ], [ %save_zt17.pre-phi5987, %if.end2079 ], [ %save_zt17.pre-phi5989, %if.end2015 ], [ %save_zt17.pre-phi5984, %if.end2495 ], [ %save_zt17.pre-phi5986, %if.end2431 ], [ %save_zt17.pre-phi5994, %if.end1822 ], [ %save_zt17.pre-phi6004, %if.end1328 ], [ %save_zt17.pre-phi6005, %if.end1270 ], [ %save_zt17.pre-phi6012, %if.end1040 ], [ %save_zt17.pre-phi6013, %if.end983 ], [ %save_zt17.pre-phi6014, %if.end926 ], [ %save_zt17.pre-phi6015, %if.end874 ], [ %save_zt17.pre-phi6016, %if.end817 ], [ %save_zt17.pre-phi6017, %if.end760 ], [ %save_zt17.pre-phi6018, %if.end703 ], [ %save_zt17.pre-phi6019, %if.end646 ], [ %save_zt17.pre-phi6020, %if.end582 ], [ %save_zt17.pre-phi6021, %if.end525 ], [ %save_zt17.pre-phi6022, %if.end468 ], [ %save_zt17.pre-phi6023, %if.end411 ], [ %save_zt17.pre-phi6024, %if.end354 ], [ %save_zt17.pre-phi6034, %if.end292 ], [ %save_zt17.pre-phi6035, %if.end192 ], [ %save_zt17.pre-phi6036, %if.end136 ], [ %save_zt17.pre-phi6037, %if.end79 ], [ %save_zt, %if.end33 ]
  %save_zn18.pre-phi5927 = phi i32* [ %save_zn18.phi.trans.insert, %sw.default ], [ %save_zn18.pre-phi5969, %if.then3406 ], [ %save_zn, %if.then29 ], [ %save_zn18.pre-phi5981, %if.then69 ], [ %save_zn18.pre-phi5980, %if.then126 ], [ %save_zn18.pre-phi5979, %if.then183 ], [ %save_zn18.pre-phi5979, %if.then237 ], [ %save_zn18.pre-phi5979, %if.else ], [ %save_zn18.pre-phi5978, %if.then282 ], [ %save_zn18.pre-phi5968, %if.then344 ], [ %save_zn18.pre-phi5967, %if.then401 ], [ %save_zn18.pre-phi5966, %if.then458 ], [ %save_zn18.pre-phi5965, %if.then515 ], [ %save_zn18.pre-phi5964, %if.then572 ], [ %save_zn18.pre-phi5956, %if.then1030 ], [ %save_zn18.pre-phi5956, %if.end1084 ], [ %save_zn18.pre-phi5953, %makeMaps_d.exit ], [ %save_zn18.pre-phi5949, %if.then1261 ], [ %save_zn18.pre-phi5949, %if.then1261 ], [ %save_zn18.pre-phi5949, %if.then1261 ], [ %save_zn18.pre-phi5948, %if.then1319 ], [ %save_zn18.pre-phi5941, %while.cond1540 ], [ %save_zn18.pre-phi5944, %if.then1777 ], [ %save_zn18.pre-phi5937, %while.cond1857 ], [ %save_zn18.pre-phi5937, %while.end1923 ], [ %save_zn18.pre-phi5934, %if.then1970 ], [ %save_zn18.pre-phi5932, %while.cond2050 ], [ %save_zn18.pre-phi5932, %while.end2116 ], [ %save_zn18.pre-phi5935, %if.else2186 ], [ %save_zn18.pre-phi5935, %if.then2386 ], [ %save_zn18.pre-phi5929, %while.cond2466 ], [ %save_zn18.pre-phi5929, %while.end2532 ], [ %save_zn18.pre-phi5935, %while.end2551 ], [ %save_zn18.pre-phi5935, %if.end2917 ], [ %save_zn18.pre-phi5935, %if.else2926 ], [ %save_zn18.pre-phi5935, %if.end2815 ], [ %save_zn18.pre-phi5935, %if.else2822 ], [ %save_zn18.pre-phi5977, %if.then2950 ], [ %save_zn18.pre-phi5976, %if.then3007 ], [ %save_zn18.pre-phi5975, %if.then3064 ], [ %save_zn18.pre-phi5974, %if.then3121 ], [ %save_zn18.pre-phi5973, %if.then3178 ], [ %save_zn18.pre-phi5935, %save_state_and_return.loopexit5205 ], [ %save_zn18.pre-phi5932, %save_state_and_return.loopexit5207 ], [ %save_zn18.pre-phi5932, %save_state_and_return.loopexit5208 ], [ %save_zn18.pre-phi5969, %if.end3416 ], [ %save_zn18.pre-phi5970, %if.end3359 ], [ %save_zn18.pre-phi5971, %if.end3302 ], [ %save_zn18.pre-phi5972, %if.end3245 ], [ %save_zn18.pre-phi5973, %if.end3188 ], [ %save_zn18.pre-phi5974, %if.end3131 ], [ %save_zn18.pre-phi5975, %if.end3074 ], [ %save_zn18.pre-phi5976, %if.end3017 ], [ %save_zn18.pre-phi5977, %if.end2960 ], [ %save_zn18.pre-phi5954, %if.end1112 ], [ %save_zn18.pre-phi5950, %if.end1196 ], [ %save_zn18.pre-phi5945.ph, %if.end1390 ], [ %save_zn18.pre-phi5945.ph, %if.end1429 ], [ %save_zn18.pre-phi5939, %if.end1623 ], [ %save_zn18.pre-phi5940, %if.end1566 ], [ %save_zn18.pre-phi5943, %if.end1501 ], [ %save_zn18.pre-phi5936, %if.end1886 ], [ %save_zn18.pre-phi5931, %if.end2079 ], [ %save_zn18.pre-phi5933, %if.end2015 ], [ %save_zn18.pre-phi5928, %if.end2495 ], [ %save_zn18.pre-phi5930, %if.end2431 ], [ %save_zn18.pre-phi5938, %if.end1822 ], [ %save_zn18.pre-phi5948, %if.end1328 ], [ %save_zn18.pre-phi5949, %if.end1270 ], [ %save_zn18.pre-phi5956, %if.end1040 ], [ %save_zn18.pre-phi5957, %if.end983 ], [ %save_zn18.pre-phi5958, %if.end926 ], [ %save_zn18.pre-phi5959, %if.end874 ], [ %save_zn18.pre-phi5960, %if.end817 ], [ %save_zn18.pre-phi5961, %if.end760 ], [ %save_zn18.pre-phi5962, %if.end703 ], [ %save_zn18.pre-phi5963, %if.end646 ], [ %save_zn18.pre-phi5964, %if.end582 ], [ %save_zn18.pre-phi5965, %if.end525 ], [ %save_zn18.pre-phi5966, %if.end468 ], [ %save_zn18.pre-phi5967, %if.end411 ], [ %save_zn18.pre-phi5968, %if.end354 ], [ %save_zn18.pre-phi5978, %if.end292 ], [ %save_zn18.pre-phi5979, %if.end192 ], [ %save_zn18.pre-phi5980, %if.end136 ], [ %save_zn18.pre-phi5981, %if.end79 ], [ %save_zn, %if.end33 ]
  %save_zvec19.pre-phi5871 = phi i32* [ %save_zvec19.phi.trans.insert, %sw.default ], [ %save_zvec19.pre-phi5913, %if.then3406 ], [ %save_zvec, %if.then29 ], [ %save_zvec19.pre-phi5925, %if.then69 ], [ %save_zvec19.pre-phi5924, %if.then126 ], [ %save_zvec19.pre-phi5923, %if.then183 ], [ %save_zvec19.pre-phi5923, %if.then237 ], [ %save_zvec19.pre-phi5923, %if.else ], [ %save_zvec19.pre-phi5922, %if.then282 ], [ %save_zvec19.pre-phi5912, %if.then344 ], [ %save_zvec19.pre-phi5911, %if.then401 ], [ %save_zvec19.pre-phi5910, %if.then458 ], [ %save_zvec19.pre-phi5909, %if.then515 ], [ %save_zvec19.pre-phi5908, %if.then572 ], [ %save_zvec19.pre-phi5900, %if.then1030 ], [ %save_zvec19.pre-phi5900, %if.end1084 ], [ %save_zvec19.pre-phi5897, %makeMaps_d.exit ], [ %save_zvec19.pre-phi5893, %if.then1261 ], [ %save_zvec19.pre-phi5893, %if.then1261 ], [ %save_zvec19.pre-phi5893, %if.then1261 ], [ %save_zvec19.pre-phi5892, %if.then1319 ], [ %save_zvec19.pre-phi5885, %while.cond1540 ], [ %save_zvec19.pre-phi5888, %if.then1777 ], [ %save_zvec19.pre-phi5881, %while.cond1857 ], [ %save_zvec19.pre-phi5881, %while.end1923 ], [ %save_zvec19.pre-phi5878, %if.then1970 ], [ %save_zvec19.pre-phi5876, %while.cond2050 ], [ %save_zvec19.pre-phi5876, %while.end2116 ], [ %save_zvec19.pre-phi5879, %if.else2186 ], [ %save_zvec19.pre-phi5879, %if.then2386 ], [ %save_zvec19.pre-phi5873, %while.cond2466 ], [ %save_zvec19.pre-phi5873, %while.end2532 ], [ %save_zvec19.pre-phi5879, %while.end2551 ], [ %save_zvec19.pre-phi5879, %if.end2917 ], [ %save_zvec19.pre-phi5879, %if.else2926 ], [ %save_zvec19.pre-phi5879, %if.end2815 ], [ %save_zvec19.pre-phi5879, %if.else2822 ], [ %save_zvec19.pre-phi5921, %if.then2950 ], [ %save_zvec19.pre-phi5920, %if.then3007 ], [ %save_zvec19.pre-phi5919, %if.then3064 ], [ %save_zvec19.pre-phi5918, %if.then3121 ], [ %save_zvec19.pre-phi5917, %if.then3178 ], [ %save_zvec19.pre-phi5879, %save_state_and_return.loopexit5205 ], [ %save_zvec19.pre-phi5876, %save_state_and_return.loopexit5207 ], [ %save_zvec19.pre-phi5876, %save_state_and_return.loopexit5208 ], [ %save_zvec19.pre-phi5913, %if.end3416 ], [ %save_zvec19.pre-phi5914, %if.end3359 ], [ %save_zvec19.pre-phi5915, %if.end3302 ], [ %save_zvec19.pre-phi5916, %if.end3245 ], [ %save_zvec19.pre-phi5917, %if.end3188 ], [ %save_zvec19.pre-phi5918, %if.end3131 ], [ %save_zvec19.pre-phi5919, %if.end3074 ], [ %save_zvec19.pre-phi5920, %if.end3017 ], [ %save_zvec19.pre-phi5921, %if.end2960 ], [ %save_zvec19.pre-phi5898, %if.end1112 ], [ %save_zvec19.pre-phi5894, %if.end1196 ], [ %save_zvec19.pre-phi5889.ph, %if.end1390 ], [ %save_zvec19.pre-phi5889.ph, %if.end1429 ], [ %save_zvec19.pre-phi5883, %if.end1623 ], [ %save_zvec19.pre-phi5884, %if.end1566 ], [ %save_zvec19.pre-phi5887, %if.end1501 ], [ %save_zvec19.pre-phi5880, %if.end1886 ], [ %save_zvec19.pre-phi5875, %if.end2079 ], [ %save_zvec19.pre-phi5877, %if.end2015 ], [ %save_zvec19.pre-phi5872, %if.end2495 ], [ %save_zvec19.pre-phi5874, %if.end2431 ], [ %save_zvec19.pre-phi5882, %if.end1822 ], [ %save_zvec19.pre-phi5892, %if.end1328 ], [ %save_zvec19.pre-phi5893, %if.end1270 ], [ %save_zvec19.pre-phi5900, %if.end1040 ], [ %save_zvec19.pre-phi5901, %if.end983 ], [ %save_zvec19.pre-phi5902, %if.end926 ], [ %save_zvec19.pre-phi5903, %if.end874 ], [ %save_zvec19.pre-phi5904, %if.end817 ], [ %save_zvec19.pre-phi5905, %if.end760 ], [ %save_zvec19.pre-phi5906, %if.end703 ], [ %save_zvec19.pre-phi5907, %if.end646 ], [ %save_zvec19.pre-phi5908, %if.end582 ], [ %save_zvec19.pre-phi5909, %if.end525 ], [ %save_zvec19.pre-phi5910, %if.end468 ], [ %save_zvec19.pre-phi5911, %if.end411 ], [ %save_zvec19.pre-phi5912, %if.end354 ], [ %save_zvec19.pre-phi5922, %if.end292 ], [ %save_zvec19.pre-phi5923, %if.end192 ], [ %save_zvec19.pre-phi5924, %if.end136 ], [ %save_zvec19.pre-phi5925, %if.end79 ], [ %save_zvec, %if.end33 ]
  %save_zj20.pre-phi5815 = phi i32* [ %save_zj20.phi.trans.insert, %sw.default ], [ %save_zj20.pre-phi5857, %if.then3406 ], [ %save_zj, %if.then29 ], [ %save_zj20.pre-phi5869, %if.then69 ], [ %save_zj20.pre-phi5868, %if.then126 ], [ %save_zj20.pre-phi5867, %if.then183 ], [ %save_zj20.pre-phi5867, %if.then237 ], [ %save_zj20.pre-phi5867, %if.else ], [ %save_zj20.pre-phi5866, %if.then282 ], [ %save_zj20.pre-phi5856, %if.then344 ], [ %save_zj20.pre-phi5855, %if.then401 ], [ %save_zj20.pre-phi5854, %if.then458 ], [ %save_zj20.pre-phi5853, %if.then515 ], [ %save_zj20.pre-phi5852, %if.then572 ], [ %save_zj20.pre-phi5844, %if.then1030 ], [ %save_zj20.pre-phi5844, %if.end1084 ], [ %save_zj20.pre-phi5841, %makeMaps_d.exit ], [ %save_zj20.pre-phi5837, %if.then1261 ], [ %save_zj20.pre-phi5837, %if.then1261 ], [ %save_zj20.pre-phi5837, %if.then1261 ], [ %save_zj20.pre-phi5836, %if.then1319 ], [ %save_zj20.pre-phi5829, %while.cond1540 ], [ %save_zj20.pre-phi5832, %if.then1777 ], [ %save_zj20.pre-phi5825, %while.cond1857 ], [ %save_zj20.pre-phi5825, %while.end1923 ], [ %save_zj20.pre-phi5822, %if.then1970 ], [ %save_zj20.pre-phi5820, %while.cond2050 ], [ %save_zj20.pre-phi5820, %while.end2116 ], [ %save_zj20.pre-phi5823, %if.else2186 ], [ %save_zj20.pre-phi5823, %if.then2386 ], [ %save_zj20.pre-phi5817, %while.cond2466 ], [ %save_zj20.pre-phi5817, %while.end2532 ], [ %save_zj20.pre-phi5823, %while.end2551 ], [ %save_zj20.pre-phi5823, %if.end2917 ], [ %save_zj20.pre-phi5823, %if.else2926 ], [ %save_zj20.pre-phi5823, %if.end2815 ], [ %save_zj20.pre-phi5823, %if.else2822 ], [ %save_zj20.pre-phi5865, %if.then2950 ], [ %save_zj20.pre-phi5864, %if.then3007 ], [ %save_zj20.pre-phi5863, %if.then3064 ], [ %save_zj20.pre-phi5862, %if.then3121 ], [ %save_zj20.pre-phi5861, %if.then3178 ], [ %save_zj20.pre-phi5823, %save_state_and_return.loopexit5205 ], [ %save_zj20.pre-phi5820, %save_state_and_return.loopexit5207 ], [ %save_zj20.pre-phi5820, %save_state_and_return.loopexit5208 ], [ %save_zj20.pre-phi5857, %if.end3416 ], [ %save_zj20.pre-phi5858, %if.end3359 ], [ %save_zj20.pre-phi5859, %if.end3302 ], [ %save_zj20.pre-phi5860, %if.end3245 ], [ %save_zj20.pre-phi5861, %if.end3188 ], [ %save_zj20.pre-phi5862, %if.end3131 ], [ %save_zj20.pre-phi5863, %if.end3074 ], [ %save_zj20.pre-phi5864, %if.end3017 ], [ %save_zj20.pre-phi5865, %if.end2960 ], [ %save_zj20.pre-phi5842, %if.end1112 ], [ %save_zj20.pre-phi5838, %if.end1196 ], [ %save_zj20.pre-phi5833.ph, %if.end1390 ], [ %save_zj20.pre-phi5833.ph, %if.end1429 ], [ %save_zj20.pre-phi5827, %if.end1623 ], [ %save_zj20.pre-phi5828, %if.end1566 ], [ %save_zj20.pre-phi5831, %if.end1501 ], [ %save_zj20.pre-phi5824, %if.end1886 ], [ %save_zj20.pre-phi5819, %if.end2079 ], [ %save_zj20.pre-phi5821, %if.end2015 ], [ %save_zj20.pre-phi5816, %if.end2495 ], [ %save_zj20.pre-phi5818, %if.end2431 ], [ %save_zj20.pre-phi5826, %if.end1822 ], [ %save_zj20.pre-phi5836, %if.end1328 ], [ %save_zj20.pre-phi5837, %if.end1270 ], [ %save_zj20.pre-phi5844, %if.end1040 ], [ %save_zj20.pre-phi5845, %if.end983 ], [ %save_zj20.pre-phi5846, %if.end926 ], [ %save_zj20.pre-phi5847, %if.end874 ], [ %save_zj20.pre-phi5848, %if.end817 ], [ %save_zj20.pre-phi5849, %if.end760 ], [ %save_zj20.pre-phi5850, %if.end703 ], [ %save_zj20.pre-phi5851, %if.end646 ], [ %save_zj20.pre-phi5852, %if.end582 ], [ %save_zj20.pre-phi5853, %if.end525 ], [ %save_zj20.pre-phi5854, %if.end468 ], [ %save_zj20.pre-phi5855, %if.end411 ], [ %save_zj20.pre-phi5856, %if.end354 ], [ %save_zj20.pre-phi5866, %if.end292 ], [ %save_zj20.pre-phi5867, %if.end192 ], [ %save_zj20.pre-phi5868, %if.end136 ], [ %save_zj20.pre-phi5869, %if.end79 ], [ %save_zj, %if.end33 ]
  %save_gSel21.pre-phi5759 = phi i32* [ %save_gSel21.phi.trans.insert, %sw.default ], [ %save_gSel21.pre-phi5801, %if.then3406 ], [ %save_gSel, %if.then29 ], [ %save_gSel21.pre-phi5813, %if.then69 ], [ %save_gSel21.pre-phi5812, %if.then126 ], [ %save_gSel21.pre-phi5811, %if.then183 ], [ %save_gSel21.pre-phi5811, %if.then237 ], [ %save_gSel21.pre-phi5811, %if.else ], [ %save_gSel21.pre-phi5810, %if.then282 ], [ %save_gSel21.pre-phi5800, %if.then344 ], [ %save_gSel21.pre-phi5799, %if.then401 ], [ %save_gSel21.pre-phi5798, %if.then458 ], [ %save_gSel21.pre-phi5797, %if.then515 ], [ %save_gSel21.pre-phi5796, %if.then572 ], [ %save_gSel21.pre-phi5788, %if.then1030 ], [ %save_gSel21.pre-phi5788, %if.end1084 ], [ %save_gSel21.pre-phi5785, %makeMaps_d.exit ], [ %save_gSel21.pre-phi5781, %if.then1261 ], [ %save_gSel21.pre-phi5781, %if.then1261 ], [ %save_gSel21.pre-phi5781, %if.then1261 ], [ %save_gSel21.pre-phi5780, %if.then1319 ], [ %save_gSel21.pre-phi5773, %while.cond1540 ], [ %save_gSel21.pre-phi5776, %if.then1777 ], [ %save_gSel21.pre-phi5769, %while.cond1857 ], [ %save_gSel21.pre-phi5769, %while.end1923 ], [ %save_gSel21.pre-phi5766, %if.then1970 ], [ %save_gSel21.pre-phi5764, %while.cond2050 ], [ %save_gSel21.pre-phi5764, %while.end2116 ], [ %save_gSel21.pre-phi5767, %if.else2186 ], [ %save_gSel21.pre-phi5767, %if.then2386 ], [ %save_gSel21.pre-phi5761, %while.cond2466 ], [ %save_gSel21.pre-phi5761, %while.end2532 ], [ %save_gSel21.pre-phi5767, %while.end2551 ], [ %save_gSel21.pre-phi5767, %if.end2917 ], [ %save_gSel21.pre-phi5767, %if.else2926 ], [ %save_gSel21.pre-phi5767, %if.end2815 ], [ %save_gSel21.pre-phi5767, %if.else2822 ], [ %save_gSel21.pre-phi5809, %if.then2950 ], [ %save_gSel21.pre-phi5808, %if.then3007 ], [ %save_gSel21.pre-phi5807, %if.then3064 ], [ %save_gSel21.pre-phi5806, %if.then3121 ], [ %save_gSel21.pre-phi5805, %if.then3178 ], [ %save_gSel21.pre-phi5767, %save_state_and_return.loopexit5205 ], [ %save_gSel21.pre-phi5764, %save_state_and_return.loopexit5207 ], [ %save_gSel21.pre-phi5764, %save_state_and_return.loopexit5208 ], [ %save_gSel21.pre-phi5801, %if.end3416 ], [ %save_gSel21.pre-phi5802, %if.end3359 ], [ %save_gSel21.pre-phi5803, %if.end3302 ], [ %save_gSel21.pre-phi5804, %if.end3245 ], [ %save_gSel21.pre-phi5805, %if.end3188 ], [ %save_gSel21.pre-phi5806, %if.end3131 ], [ %save_gSel21.pre-phi5807, %if.end3074 ], [ %save_gSel21.pre-phi5808, %if.end3017 ], [ %save_gSel21.pre-phi5809, %if.end2960 ], [ %save_gSel21.pre-phi5786, %if.end1112 ], [ %save_gSel21.pre-phi5782, %if.end1196 ], [ %save_gSel21.pre-phi5777.ph, %if.end1390 ], [ %save_gSel21.pre-phi5777.ph, %if.end1429 ], [ %save_gSel21.pre-phi5771, %if.end1623 ], [ %save_gSel21.pre-phi5772, %if.end1566 ], [ %save_gSel21.pre-phi5775, %if.end1501 ], [ %save_gSel21.pre-phi5768, %if.end1886 ], [ %save_gSel21.pre-phi5763, %if.end2079 ], [ %save_gSel21.pre-phi5765, %if.end2015 ], [ %save_gSel21.pre-phi5760, %if.end2495 ], [ %save_gSel21.pre-phi5762, %if.end2431 ], [ %save_gSel21.pre-phi5770, %if.end1822 ], [ %save_gSel21.pre-phi5780, %if.end1328 ], [ %save_gSel21.pre-phi5781, %if.end1270 ], [ %save_gSel21.pre-phi5788, %if.end1040 ], [ %save_gSel21.pre-phi5789, %if.end983 ], [ %save_gSel21.pre-phi5790, %if.end926 ], [ %save_gSel21.pre-phi5791, %if.end874 ], [ %save_gSel21.pre-phi5792, %if.end817 ], [ %save_gSel21.pre-phi5793, %if.end760 ], [ %save_gSel21.pre-phi5794, %if.end703 ], [ %save_gSel21.pre-phi5795, %if.end646 ], [ %save_gSel21.pre-phi5796, %if.end582 ], [ %save_gSel21.pre-phi5797, %if.end525 ], [ %save_gSel21.pre-phi5798, %if.end468 ], [ %save_gSel21.pre-phi5799, %if.end411 ], [ %save_gSel21.pre-phi5800, %if.end354 ], [ %save_gSel21.pre-phi5810, %if.end292 ], [ %save_gSel21.pre-phi5811, %if.end192 ], [ %save_gSel21.pre-phi5812, %if.end136 ], [ %save_gSel21.pre-phi5813, %if.end79 ], [ %save_gSel, %if.end33 ]
  %save_gMinlen22.pre-phi5703 = phi i32* [ %save_gMinlen22.phi.trans.insert, %sw.default ], [ %save_gMinlen22.pre-phi5745, %if.then3406 ], [ %save_gMinlen, %if.then29 ], [ %save_gMinlen22.pre-phi5757, %if.then69 ], [ %save_gMinlen22.pre-phi5756, %if.then126 ], [ %save_gMinlen22.pre-phi5755, %if.then183 ], [ %save_gMinlen22.pre-phi5755, %if.then237 ], [ %save_gMinlen22.pre-phi5755, %if.else ], [ %save_gMinlen22.pre-phi5754, %if.then282 ], [ %save_gMinlen22.pre-phi5744, %if.then344 ], [ %save_gMinlen22.pre-phi5743, %if.then401 ], [ %save_gMinlen22.pre-phi5742, %if.then458 ], [ %save_gMinlen22.pre-phi5741, %if.then515 ], [ %save_gMinlen22.pre-phi5740, %if.then572 ], [ %save_gMinlen22.pre-phi5732, %if.then1030 ], [ %save_gMinlen22.pre-phi5732, %if.end1084 ], [ %save_gMinlen22.pre-phi5729, %makeMaps_d.exit ], [ %save_gMinlen22.pre-phi5725, %if.then1261 ], [ %save_gMinlen22.pre-phi5725, %if.then1261 ], [ %save_gMinlen22.pre-phi5725, %if.then1261 ], [ %save_gMinlen22.pre-phi5724, %if.then1319 ], [ %save_gMinlen22.pre-phi5717, %while.cond1540 ], [ %save_gMinlen22.pre-phi5720, %if.then1777 ], [ %save_gMinlen22.pre-phi5713, %while.cond1857 ], [ %save_gMinlen22.pre-phi5713, %while.end1923 ], [ %save_gMinlen22.pre-phi5710, %if.then1970 ], [ %save_gMinlen22.pre-phi5708, %while.cond2050 ], [ %save_gMinlen22.pre-phi5708, %while.end2116 ], [ %save_gMinlen22.pre-phi5711, %if.else2186 ], [ %save_gMinlen22.pre-phi5711, %if.then2386 ], [ %save_gMinlen22.pre-phi5705, %while.cond2466 ], [ %save_gMinlen22.pre-phi5705, %while.end2532 ], [ %save_gMinlen22.pre-phi5711, %while.end2551 ], [ %save_gMinlen22.pre-phi5711, %if.end2917 ], [ %save_gMinlen22.pre-phi5711, %if.else2926 ], [ %save_gMinlen22.pre-phi5711, %if.end2815 ], [ %save_gMinlen22.pre-phi5711, %if.else2822 ], [ %save_gMinlen22.pre-phi5753, %if.then2950 ], [ %save_gMinlen22.pre-phi5752, %if.then3007 ], [ %save_gMinlen22.pre-phi5751, %if.then3064 ], [ %save_gMinlen22.pre-phi5750, %if.then3121 ], [ %save_gMinlen22.pre-phi5749, %if.then3178 ], [ %save_gMinlen22.pre-phi5711, %save_state_and_return.loopexit5205 ], [ %save_gMinlen22.pre-phi5708, %save_state_and_return.loopexit5207 ], [ %save_gMinlen22.pre-phi5708, %save_state_and_return.loopexit5208 ], [ %save_gMinlen22.pre-phi5745, %if.end3416 ], [ %save_gMinlen22.pre-phi5746, %if.end3359 ], [ %save_gMinlen22.pre-phi5747, %if.end3302 ], [ %save_gMinlen22.pre-phi5748, %if.end3245 ], [ %save_gMinlen22.pre-phi5749, %if.end3188 ], [ %save_gMinlen22.pre-phi5750, %if.end3131 ], [ %save_gMinlen22.pre-phi5751, %if.end3074 ], [ %save_gMinlen22.pre-phi5752, %if.end3017 ], [ %save_gMinlen22.pre-phi5753, %if.end2960 ], [ %save_gMinlen22.pre-phi5730, %if.end1112 ], [ %save_gMinlen22.pre-phi5726, %if.end1196 ], [ %save_gMinlen22.pre-phi5721.ph, %if.end1390 ], [ %save_gMinlen22.pre-phi5721.ph, %if.end1429 ], [ %save_gMinlen22.pre-phi5715, %if.end1623 ], [ %save_gMinlen22.pre-phi5716, %if.end1566 ], [ %save_gMinlen22.pre-phi5719, %if.end1501 ], [ %save_gMinlen22.pre-phi5712, %if.end1886 ], [ %save_gMinlen22.pre-phi5707, %if.end2079 ], [ %save_gMinlen22.pre-phi5709, %if.end2015 ], [ %save_gMinlen22.pre-phi5704, %if.end2495 ], [ %save_gMinlen22.pre-phi5706, %if.end2431 ], [ %save_gMinlen22.pre-phi5714, %if.end1822 ], [ %save_gMinlen22.pre-phi5724, %if.end1328 ], [ %save_gMinlen22.pre-phi5725, %if.end1270 ], [ %save_gMinlen22.pre-phi5732, %if.end1040 ], [ %save_gMinlen22.pre-phi5733, %if.end983 ], [ %save_gMinlen22.pre-phi5734, %if.end926 ], [ %save_gMinlen22.pre-phi5735, %if.end874 ], [ %save_gMinlen22.pre-phi5736, %if.end817 ], [ %save_gMinlen22.pre-phi5737, %if.end760 ], [ %save_gMinlen22.pre-phi5738, %if.end703 ], [ %save_gMinlen22.pre-phi5739, %if.end646 ], [ %save_gMinlen22.pre-phi5740, %if.end582 ], [ %save_gMinlen22.pre-phi5741, %if.end525 ], [ %save_gMinlen22.pre-phi5742, %if.end468 ], [ %save_gMinlen22.pre-phi5743, %if.end411 ], [ %save_gMinlen22.pre-phi5744, %if.end354 ], [ %save_gMinlen22.pre-phi5754, %if.end292 ], [ %save_gMinlen22.pre-phi5755, %if.end192 ], [ %save_gMinlen22.pre-phi5756, %if.end136 ], [ %save_gMinlen22.pre-phi5757, %if.end79 ], [ %save_gMinlen, %if.end33 ]
  %save_gLimit23.pre-phi5647 = phi i32** [ %save_gLimit23.phi.trans.insert, %sw.default ], [ %save_gLimit23.pre-phi5689, %if.then3406 ], [ %save_gLimit, %if.then29 ], [ %save_gLimit23.pre-phi5701, %if.then69 ], [ %save_gLimit23.pre-phi5700, %if.then126 ], [ %save_gLimit23.pre-phi5699, %if.then183 ], [ %save_gLimit23.pre-phi5699, %if.then237 ], [ %save_gLimit23.pre-phi5699, %if.else ], [ %save_gLimit23.pre-phi5698, %if.then282 ], [ %save_gLimit23.pre-phi5688, %if.then344 ], [ %save_gLimit23.pre-phi5687, %if.then401 ], [ %save_gLimit23.pre-phi5686, %if.then458 ], [ %save_gLimit23.pre-phi5685, %if.then515 ], [ %save_gLimit23.pre-phi5684, %if.then572 ], [ %save_gLimit23.pre-phi5676, %if.then1030 ], [ %save_gLimit23.pre-phi5676, %if.end1084 ], [ %save_gLimit23.pre-phi5673, %makeMaps_d.exit ], [ %save_gLimit23.pre-phi5669, %if.then1261 ], [ %save_gLimit23.pre-phi5669, %if.then1261 ], [ %save_gLimit23.pre-phi5669, %if.then1261 ], [ %save_gLimit23.pre-phi5668, %if.then1319 ], [ %save_gLimit23.pre-phi5661, %while.cond1540 ], [ %save_gLimit23.pre-phi5664, %if.then1777 ], [ %save_gLimit23.pre-phi5657, %while.cond1857 ], [ %save_gLimit23.pre-phi5657, %while.end1923 ], [ %save_gLimit23.pre-phi5654, %if.then1970 ], [ %save_gLimit23.pre-phi5652, %while.cond2050 ], [ %save_gLimit23.pre-phi5652, %while.end2116 ], [ %save_gLimit23.pre-phi5655, %if.else2186 ], [ %save_gLimit23.pre-phi5655, %if.then2386 ], [ %save_gLimit23.pre-phi5649, %while.cond2466 ], [ %save_gLimit23.pre-phi5649, %while.end2532 ], [ %save_gLimit23.pre-phi5655, %while.end2551 ], [ %save_gLimit23.pre-phi5655, %if.end2917 ], [ %save_gLimit23.pre-phi5655, %if.else2926 ], [ %save_gLimit23.pre-phi5655, %if.end2815 ], [ %save_gLimit23.pre-phi5655, %if.else2822 ], [ %save_gLimit23.pre-phi5697, %if.then2950 ], [ %save_gLimit23.pre-phi5696, %if.then3007 ], [ %save_gLimit23.pre-phi5695, %if.then3064 ], [ %save_gLimit23.pre-phi5694, %if.then3121 ], [ %save_gLimit23.pre-phi5693, %if.then3178 ], [ %save_gLimit23.pre-phi5655, %save_state_and_return.loopexit5205 ], [ %save_gLimit23.pre-phi5652, %save_state_and_return.loopexit5207 ], [ %save_gLimit23.pre-phi5652, %save_state_and_return.loopexit5208 ], [ %save_gLimit23.pre-phi5689, %if.end3416 ], [ %save_gLimit23.pre-phi5690, %if.end3359 ], [ %save_gLimit23.pre-phi5691, %if.end3302 ], [ %save_gLimit23.pre-phi5692, %if.end3245 ], [ %save_gLimit23.pre-phi5693, %if.end3188 ], [ %save_gLimit23.pre-phi5694, %if.end3131 ], [ %save_gLimit23.pre-phi5695, %if.end3074 ], [ %save_gLimit23.pre-phi5696, %if.end3017 ], [ %save_gLimit23.pre-phi5697, %if.end2960 ], [ %save_gLimit23.pre-phi5674, %if.end1112 ], [ %save_gLimit23.pre-phi5670, %if.end1196 ], [ %save_gLimit23.pre-phi5665.ph, %if.end1390 ], [ %save_gLimit23.pre-phi5665.ph, %if.end1429 ], [ %save_gLimit23.pre-phi5659, %if.end1623 ], [ %save_gLimit23.pre-phi5660, %if.end1566 ], [ %save_gLimit23.pre-phi5663, %if.end1501 ], [ %save_gLimit23.pre-phi5656, %if.end1886 ], [ %save_gLimit23.pre-phi5651, %if.end2079 ], [ %save_gLimit23.pre-phi5653, %if.end2015 ], [ %save_gLimit23.pre-phi5648, %if.end2495 ], [ %save_gLimit23.pre-phi5650, %if.end2431 ], [ %save_gLimit23.pre-phi5658, %if.end1822 ], [ %save_gLimit23.pre-phi5668, %if.end1328 ], [ %save_gLimit23.pre-phi5669, %if.end1270 ], [ %save_gLimit23.pre-phi5676, %if.end1040 ], [ %save_gLimit23.pre-phi5677, %if.end983 ], [ %save_gLimit23.pre-phi5678, %if.end926 ], [ %save_gLimit23.pre-phi5679, %if.end874 ], [ %save_gLimit23.pre-phi5680, %if.end817 ], [ %save_gLimit23.pre-phi5681, %if.end760 ], [ %save_gLimit23.pre-phi5682, %if.end703 ], [ %save_gLimit23.pre-phi5683, %if.end646 ], [ %save_gLimit23.pre-phi5684, %if.end582 ], [ %save_gLimit23.pre-phi5685, %if.end525 ], [ %save_gLimit23.pre-phi5686, %if.end468 ], [ %save_gLimit23.pre-phi5687, %if.end411 ], [ %save_gLimit23.pre-phi5688, %if.end354 ], [ %save_gLimit23.pre-phi5698, %if.end292 ], [ %save_gLimit23.pre-phi5699, %if.end192 ], [ %save_gLimit23.pre-phi5700, %if.end136 ], [ %save_gLimit23.pre-phi5701, %if.end79 ], [ %save_gLimit, %if.end33 ]
  %save_gBase24.pre-phi5591 = phi i32** [ %save_gBase24.phi.trans.insert, %sw.default ], [ %save_gBase24.pre-phi5633, %if.then3406 ], [ %save_gBase, %if.then29 ], [ %save_gBase24.pre-phi5645, %if.then69 ], [ %save_gBase24.pre-phi5644, %if.then126 ], [ %save_gBase24.pre-phi5643, %if.then183 ], [ %save_gBase24.pre-phi5643, %if.then237 ], [ %save_gBase24.pre-phi5643, %if.else ], [ %save_gBase24.pre-phi5642, %if.then282 ], [ %save_gBase24.pre-phi5632, %if.then344 ], [ %save_gBase24.pre-phi5631, %if.then401 ], [ %save_gBase24.pre-phi5630, %if.then458 ], [ %save_gBase24.pre-phi5629, %if.then515 ], [ %save_gBase24.pre-phi5628, %if.then572 ], [ %save_gBase24.pre-phi5620, %if.then1030 ], [ %save_gBase24.pre-phi5620, %if.end1084 ], [ %save_gBase24.pre-phi5617, %makeMaps_d.exit ], [ %save_gBase24.pre-phi5613, %if.then1261 ], [ %save_gBase24.pre-phi5613, %if.then1261 ], [ %save_gBase24.pre-phi5613, %if.then1261 ], [ %save_gBase24.pre-phi5612, %if.then1319 ], [ %save_gBase24.pre-phi5605, %while.cond1540 ], [ %save_gBase24.pre-phi5608, %if.then1777 ], [ %save_gBase24.pre-phi5601, %while.cond1857 ], [ %save_gBase24.pre-phi5601, %while.end1923 ], [ %save_gBase24.pre-phi5598, %if.then1970 ], [ %save_gBase24.pre-phi5596, %while.cond2050 ], [ %save_gBase24.pre-phi5596, %while.end2116 ], [ %save_gBase24.pre-phi5599, %if.else2186 ], [ %save_gBase24.pre-phi5599, %if.then2386 ], [ %save_gBase24.pre-phi5593, %while.cond2466 ], [ %save_gBase24.pre-phi5593, %while.end2532 ], [ %save_gBase24.pre-phi5599, %while.end2551 ], [ %save_gBase24.pre-phi5599, %if.end2917 ], [ %save_gBase24.pre-phi5599, %if.else2926 ], [ %save_gBase24.pre-phi5599, %if.end2815 ], [ %save_gBase24.pre-phi5599, %if.else2822 ], [ %save_gBase24.pre-phi5641, %if.then2950 ], [ %save_gBase24.pre-phi5640, %if.then3007 ], [ %save_gBase24.pre-phi5639, %if.then3064 ], [ %save_gBase24.pre-phi5638, %if.then3121 ], [ %save_gBase24.pre-phi5637, %if.then3178 ], [ %save_gBase24.pre-phi5599, %save_state_and_return.loopexit5205 ], [ %save_gBase24.pre-phi5596, %save_state_and_return.loopexit5207 ], [ %save_gBase24.pre-phi5596, %save_state_and_return.loopexit5208 ], [ %save_gBase24.pre-phi5633, %if.end3416 ], [ %save_gBase24.pre-phi5634, %if.end3359 ], [ %save_gBase24.pre-phi5635, %if.end3302 ], [ %save_gBase24.pre-phi5636, %if.end3245 ], [ %save_gBase24.pre-phi5637, %if.end3188 ], [ %save_gBase24.pre-phi5638, %if.end3131 ], [ %save_gBase24.pre-phi5639, %if.end3074 ], [ %save_gBase24.pre-phi5640, %if.end3017 ], [ %save_gBase24.pre-phi5641, %if.end2960 ], [ %save_gBase24.pre-phi5618, %if.end1112 ], [ %save_gBase24.pre-phi5614, %if.end1196 ], [ %save_gBase24.pre-phi5609.ph, %if.end1390 ], [ %save_gBase24.pre-phi5609.ph, %if.end1429 ], [ %save_gBase24.pre-phi5603, %if.end1623 ], [ %save_gBase24.pre-phi5604, %if.end1566 ], [ %save_gBase24.pre-phi5607, %if.end1501 ], [ %save_gBase24.pre-phi5600, %if.end1886 ], [ %save_gBase24.pre-phi5595, %if.end2079 ], [ %save_gBase24.pre-phi5597, %if.end2015 ], [ %save_gBase24.pre-phi5592, %if.end2495 ], [ %save_gBase24.pre-phi5594, %if.end2431 ], [ %save_gBase24.pre-phi5602, %if.end1822 ], [ %save_gBase24.pre-phi5612, %if.end1328 ], [ %save_gBase24.pre-phi5613, %if.end1270 ], [ %save_gBase24.pre-phi5620, %if.end1040 ], [ %save_gBase24.pre-phi5621, %if.end983 ], [ %save_gBase24.pre-phi5622, %if.end926 ], [ %save_gBase24.pre-phi5623, %if.end874 ], [ %save_gBase24.pre-phi5624, %if.end817 ], [ %save_gBase24.pre-phi5625, %if.end760 ], [ %save_gBase24.pre-phi5626, %if.end703 ], [ %save_gBase24.pre-phi5627, %if.end646 ], [ %save_gBase24.pre-phi5628, %if.end582 ], [ %save_gBase24.pre-phi5629, %if.end525 ], [ %save_gBase24.pre-phi5630, %if.end468 ], [ %save_gBase24.pre-phi5631, %if.end411 ], [ %save_gBase24.pre-phi5632, %if.end354 ], [ %save_gBase24.pre-phi5642, %if.end292 ], [ %save_gBase24.pre-phi5643, %if.end192 ], [ %save_gBase24.pre-phi5644, %if.end136 ], [ %save_gBase24.pre-phi5645, %if.end79 ], [ %save_gBase, %if.end33 ]
  %save_gPerm25.pre-phi5535 = phi i32** [ %save_gPerm25.phi.trans.insert, %sw.default ], [ %save_gPerm25.pre-phi5577, %if.then3406 ], [ %save_gPerm, %if.then29 ], [ %save_gPerm25.pre-phi5589, %if.then69 ], [ %save_gPerm25.pre-phi5588, %if.then126 ], [ %save_gPerm25.pre-phi5587, %if.then183 ], [ %save_gPerm25.pre-phi5587, %if.then237 ], [ %save_gPerm25.pre-phi5587, %if.else ], [ %save_gPerm25.pre-phi5586, %if.then282 ], [ %save_gPerm25.pre-phi5576, %if.then344 ], [ %save_gPerm25.pre-phi5575, %if.then401 ], [ %save_gPerm25.pre-phi5574, %if.then458 ], [ %save_gPerm25.pre-phi5573, %if.then515 ], [ %save_gPerm25.pre-phi5572, %if.then572 ], [ %save_gPerm25.pre-phi5564, %if.then1030 ], [ %save_gPerm25.pre-phi5564, %if.end1084 ], [ %save_gPerm25.pre-phi5561, %makeMaps_d.exit ], [ %save_gPerm25.pre-phi5557, %if.then1261 ], [ %save_gPerm25.pre-phi5557, %if.then1261 ], [ %save_gPerm25.pre-phi5557, %if.then1261 ], [ %save_gPerm25.pre-phi5556, %if.then1319 ], [ %save_gPerm25.pre-phi5549, %while.cond1540 ], [ %save_gPerm25.pre-phi5552, %if.then1777 ], [ %save_gPerm25.pre-phi5545, %while.cond1857 ], [ %save_gPerm25.pre-phi5545, %while.end1923 ], [ %save_gPerm25.pre-phi5542, %if.then1970 ], [ %save_gPerm25.pre-phi5540, %while.cond2050 ], [ %save_gPerm25.pre-phi5540, %while.end2116 ], [ %save_gPerm25.pre-phi5543, %if.else2186 ], [ %save_gPerm25.pre-phi5543, %if.then2386 ], [ %save_gPerm25.pre-phi5537, %while.cond2466 ], [ %save_gPerm25.pre-phi5537, %while.end2532 ], [ %save_gPerm25.pre-phi5543, %while.end2551 ], [ %save_gPerm25.pre-phi5543, %if.end2917 ], [ %save_gPerm25.pre-phi5543, %if.else2926 ], [ %save_gPerm25.pre-phi5543, %if.end2815 ], [ %save_gPerm25.pre-phi5543, %if.else2822 ], [ %save_gPerm25.pre-phi5585, %if.then2950 ], [ %save_gPerm25.pre-phi5584, %if.then3007 ], [ %save_gPerm25.pre-phi5583, %if.then3064 ], [ %save_gPerm25.pre-phi5582, %if.then3121 ], [ %save_gPerm25.pre-phi5581, %if.then3178 ], [ %save_gPerm25.pre-phi5543, %save_state_and_return.loopexit5205 ], [ %save_gPerm25.pre-phi5540, %save_state_and_return.loopexit5207 ], [ %save_gPerm25.pre-phi5540, %save_state_and_return.loopexit5208 ], [ %save_gPerm25.pre-phi5577, %if.end3416 ], [ %save_gPerm25.pre-phi5578, %if.end3359 ], [ %save_gPerm25.pre-phi5579, %if.end3302 ], [ %save_gPerm25.pre-phi5580, %if.end3245 ], [ %save_gPerm25.pre-phi5581, %if.end3188 ], [ %save_gPerm25.pre-phi5582, %if.end3131 ], [ %save_gPerm25.pre-phi5583, %if.end3074 ], [ %save_gPerm25.pre-phi5584, %if.end3017 ], [ %save_gPerm25.pre-phi5585, %if.end2960 ], [ %save_gPerm25.pre-phi5562, %if.end1112 ], [ %save_gPerm25.pre-phi5558, %if.end1196 ], [ %save_gPerm25.pre-phi5553.ph, %if.end1390 ], [ %save_gPerm25.pre-phi5553.ph, %if.end1429 ], [ %save_gPerm25.pre-phi5547, %if.end1623 ], [ %save_gPerm25.pre-phi5548, %if.end1566 ], [ %save_gPerm25.pre-phi5551, %if.end1501 ], [ %save_gPerm25.pre-phi5544, %if.end1886 ], [ %save_gPerm25.pre-phi5539, %if.end2079 ], [ %save_gPerm25.pre-phi5541, %if.end2015 ], [ %save_gPerm25.pre-phi5536, %if.end2495 ], [ %save_gPerm25.pre-phi5538, %if.end2431 ], [ %save_gPerm25.pre-phi5546, %if.end1822 ], [ %save_gPerm25.pre-phi5556, %if.end1328 ], [ %save_gPerm25.pre-phi5557, %if.end1270 ], [ %save_gPerm25.pre-phi5564, %if.end1040 ], [ %save_gPerm25.pre-phi5565, %if.end983 ], [ %save_gPerm25.pre-phi5566, %if.end926 ], [ %save_gPerm25.pre-phi5567, %if.end874 ], [ %save_gPerm25.pre-phi5568, %if.end817 ], [ %save_gPerm25.pre-phi5569, %if.end760 ], [ %save_gPerm25.pre-phi5570, %if.end703 ], [ %save_gPerm25.pre-phi5571, %if.end646 ], [ %save_gPerm25.pre-phi5572, %if.end582 ], [ %save_gPerm25.pre-phi5573, %if.end525 ], [ %save_gPerm25.pre-phi5574, %if.end468 ], [ %save_gPerm25.pre-phi5575, %if.end411 ], [ %save_gPerm25.pre-phi5576, %if.end354 ], [ %save_gPerm25.pre-phi5586, %if.end292 ], [ %save_gPerm25.pre-phi5587, %if.end192 ], [ %save_gPerm25.pre-phi5588, %if.end136 ], [ %save_gPerm25.pre-phi5589, %if.end79 ], [ %save_gPerm, %if.end33 ]
  %gPerm.14 = phi i32* [ %.pre5390, %sw.default ], [ %1945, %if.then3406 ], [ null, %if.then29 ], [ %35, %if.then69 ], [ %68, %if.then126 ], [ %101, %if.then183 ], [ %101, %if.then237 ], [ %101, %if.else ], [ %144, %if.then282 ], [ %177, %if.then344 ], [ %210, %if.then401 ], [ %243, %if.then458 ], [ %276, %if.then515 ], [ %309, %if.then572 ], [ %584, %if.then1030 ], [ %584, %if.end1084 ], [ %674, %makeMaps_d.exit ], [ %779, %if.then1261 ], [ %779, %if.then1261 ], [ %779, %if.then1261 ], [ %808, %if.then1319 ], [ %970, %while.cond1540 ], [ %910, %if.then1777 ], [ %gPerm.2, %while.cond1857 ], [ %gPerm.2, %while.end1923 ], [ %gPerm.5, %if.then1970 ], [ %gPerm.8, %while.cond2050 ], [ %gPerm.8, %while.end2116 ], [ %gPerm.4, %if.else2186 ], [ %gPerm.4, %if.then2386 ], [ %gPerm.12, %while.cond2466 ], [ %gPerm.12, %while.end2532 ], [ %gPerm.4, %while.end2551 ], [ %gPerm.4, %if.end2917 ], [ %gPerm.4, %if.else2926 ], [ %gPerm.4, %if.end2815 ], [ %gPerm.4, %if.else2822 ], [ %1678, %if.then2950 ], [ %1711, %if.then3007 ], [ %1744, %if.then3064 ], [ %1777, %if.then3121 ], [ %1810, %if.then3178 ], [ %gPerm.4, %save_state_and_return.loopexit5205 ], [ %gPerm.8, %save_state_and_return.loopexit5207 ], [ %gPerm.8, %save_state_and_return.loopexit5208 ], [ %1945, %if.end3416 ], [ %1911, %if.end3359 ], [ %1877, %if.end3302 ], [ %1843, %if.end3245 ], [ %1810, %if.end3188 ], [ %1777, %if.end3131 ], [ %1744, %if.end3074 ], [ %1711, %if.end3017 ], [ %1678, %if.end2960 ], [ %641, %if.end1112 ], [ %719, %if.end1196 ], [ %.ph7131, %if.end1390 ], [ %.ph7131, %if.end1429 ], [ %1017, %if.end1623 ], [ %988, %if.end1566 ], [ %927, %if.end1501 ], [ %gPerm.3, %if.end1886 ], [ %gPerm.9, %if.end2079 ], [ %gPerm.7, %if.end2015 ], [ %gPerm.13, %if.end2495 ], [ %gPerm.11, %if.end2431 ], [ %gPerm.1, %if.end1822 ], [ %808, %if.end1328 ], [ %779, %if.end1270 ], [ %584, %if.end1040 ], [ %550, %if.end983 ], [ %516, %if.end926 ], [ %482, %if.end874 ], [ %448, %if.end817 ], [ %414, %if.end760 ], [ %380, %if.end703 ], [ %346, %if.end646 ], [ %309, %if.end582 ], [ %276, %if.end525 ], [ %243, %if.end468 ], [ %210, %if.end411 ], [ %177, %if.end354 ], [ %144, %if.end292 ], [ %101, %if.end192 ], [ %68, %if.end136 ], [ %35, %if.end79 ], [ null, %if.end33 ]
  %gBase.14 = phi i32* [ %.pre5389, %sw.default ], [ %1944, %if.then3406 ], [ null, %if.then29 ], [ %34, %if.then69 ], [ %67, %if.then126 ], [ %100, %if.then183 ], [ %100, %if.then237 ], [ %100, %if.else ], [ %143, %if.then282 ], [ %176, %if.then344 ], [ %209, %if.then401 ], [ %242, %if.then458 ], [ %275, %if.then515 ], [ %308, %if.then572 ], [ %583, %if.then1030 ], [ %583, %if.end1084 ], [ %673, %makeMaps_d.exit ], [ %778, %if.then1261 ], [ %778, %if.then1261 ], [ %778, %if.then1261 ], [ %807, %if.then1319 ], [ %969, %while.cond1540 ], [ %909, %if.then1777 ], [ %gBase.2, %while.cond1857 ], [ %gBase.2, %while.end1923 ], [ %gBase.5, %if.then1970 ], [ %gBase.8, %while.cond2050 ], [ %gBase.8, %while.end2116 ], [ %gBase.4, %if.else2186 ], [ %gBase.4, %if.then2386 ], [ %gBase.12, %while.cond2466 ], [ %gBase.12, %while.end2532 ], [ %gBase.4, %while.end2551 ], [ %gBase.4, %if.end2917 ], [ %gBase.4, %if.else2926 ], [ %gBase.4, %if.end2815 ], [ %gBase.4, %if.else2822 ], [ %1677, %if.then2950 ], [ %1710, %if.then3007 ], [ %1743, %if.then3064 ], [ %1776, %if.then3121 ], [ %1809, %if.then3178 ], [ %gBase.4, %save_state_and_return.loopexit5205 ], [ %gBase.8, %save_state_and_return.loopexit5207 ], [ %gBase.8, %save_state_and_return.loopexit5208 ], [ %1944, %if.end3416 ], [ %1910, %if.end3359 ], [ %1876, %if.end3302 ], [ %1842, %if.end3245 ], [ %1809, %if.end3188 ], [ %1776, %if.end3131 ], [ %1743, %if.end3074 ], [ %1710, %if.end3017 ], [ %1677, %if.end2960 ], [ %640, %if.end1112 ], [ %718, %if.end1196 ], [ %.ph7130, %if.end1390 ], [ %.ph7130, %if.end1429 ], [ %1016, %if.end1623 ], [ %987, %if.end1566 ], [ %926, %if.end1501 ], [ %gBase.3, %if.end1886 ], [ %gBase.9, %if.end2079 ], [ %gBase.7, %if.end2015 ], [ %gBase.13, %if.end2495 ], [ %gBase.11, %if.end2431 ], [ %gBase.1, %if.end1822 ], [ %807, %if.end1328 ], [ %778, %if.end1270 ], [ %583, %if.end1040 ], [ %549, %if.end983 ], [ %515, %if.end926 ], [ %481, %if.end874 ], [ %447, %if.end817 ], [ %413, %if.end760 ], [ %379, %if.end703 ], [ %345, %if.end646 ], [ %308, %if.end582 ], [ %275, %if.end525 ], [ %242, %if.end468 ], [ %209, %if.end411 ], [ %176, %if.end354 ], [ %143, %if.end292 ], [ %100, %if.end192 ], [ %67, %if.end136 ], [ %34, %if.end79 ], [ null, %if.end33 ]
  %gLimit.14 = phi i32* [ %.pre5388, %sw.default ], [ %1943, %if.then3406 ], [ null, %if.then29 ], [ %33, %if.then69 ], [ %66, %if.then126 ], [ %99, %if.then183 ], [ %99, %if.then237 ], [ %99, %if.else ], [ %142, %if.then282 ], [ %175, %if.then344 ], [ %208, %if.then401 ], [ %241, %if.then458 ], [ %274, %if.then515 ], [ %307, %if.then572 ], [ %582, %if.then1030 ], [ %582, %if.end1084 ], [ %672, %makeMaps_d.exit ], [ %777, %if.then1261 ], [ %777, %if.then1261 ], [ %777, %if.then1261 ], [ %806, %if.then1319 ], [ %968, %while.cond1540 ], [ %908, %if.then1777 ], [ %gLimit.2, %while.cond1857 ], [ %gLimit.2, %while.end1923 ], [ %gLimit.5, %if.then1970 ], [ %gLimit.8, %while.cond2050 ], [ %gLimit.8, %while.end2116 ], [ %gLimit.4, %if.else2186 ], [ %gLimit.4, %if.then2386 ], [ %gLimit.12, %while.cond2466 ], [ %gLimit.12, %while.end2532 ], [ %gLimit.4, %while.end2551 ], [ %gLimit.4, %if.end2917 ], [ %gLimit.4, %if.else2926 ], [ %gLimit.4, %if.end2815 ], [ %gLimit.4, %if.else2822 ], [ %1676, %if.then2950 ], [ %1709, %if.then3007 ], [ %1742, %if.then3064 ], [ %1775, %if.then3121 ], [ %1808, %if.then3178 ], [ %gLimit.4, %save_state_and_return.loopexit5205 ], [ %gLimit.8, %save_state_and_return.loopexit5207 ], [ %gLimit.8, %save_state_and_return.loopexit5208 ], [ %1943, %if.end3416 ], [ %1909, %if.end3359 ], [ %1875, %if.end3302 ], [ %1841, %if.end3245 ], [ %1808, %if.end3188 ], [ %1775, %if.end3131 ], [ %1742, %if.end3074 ], [ %1709, %if.end3017 ], [ %1676, %if.end2960 ], [ %639, %if.end1112 ], [ %717, %if.end1196 ], [ %.ph7129, %if.end1390 ], [ %.ph7129, %if.end1429 ], [ %1015, %if.end1623 ], [ %986, %if.end1566 ], [ %925, %if.end1501 ], [ %gLimit.3, %if.end1886 ], [ %gLimit.9, %if.end2079 ], [ %gLimit.7, %if.end2015 ], [ %gLimit.13, %if.end2495 ], [ %gLimit.11, %if.end2431 ], [ %gLimit.1, %if.end1822 ], [ %806, %if.end1328 ], [ %777, %if.end1270 ], [ %582, %if.end1040 ], [ %548, %if.end983 ], [ %514, %if.end926 ], [ %480, %if.end874 ], [ %446, %if.end817 ], [ %412, %if.end760 ], [ %378, %if.end703 ], [ %344, %if.end646 ], [ %307, %if.end582 ], [ %274, %if.end525 ], [ %241, %if.end468 ], [ %208, %if.end411 ], [ %175, %if.end354 ], [ %142, %if.end292 ], [ %99, %if.end192 ], [ %66, %if.end136 ], [ %33, %if.end79 ], [ null, %if.end33 ]
  %gMinlen.14 = phi i32 [ %.pre5387, %sw.default ], [ %1942, %if.then3406 ], [ 0, %if.then29 ], [ %32, %if.then69 ], [ %65, %if.then126 ], [ %98, %if.then183 ], [ %98, %if.then237 ], [ %98, %if.else ], [ %141, %if.then282 ], [ %174, %if.then344 ], [ %207, %if.then401 ], [ %240, %if.then458 ], [ %273, %if.then515 ], [ %306, %if.then572 ], [ %581, %if.then1030 ], [ %581, %if.end1084 ], [ %671, %makeMaps_d.exit ], [ %776, %if.then1261 ], [ %776, %if.then1261 ], [ %776, %if.then1261 ], [ %805, %if.then1319 ], [ %967, %while.cond1540 ], [ %907, %if.then1777 ], [ %gMinlen.2, %while.cond1857 ], [ %gMinlen.2, %while.end1923 ], [ %gMinlen.5, %if.then1970 ], [ %gMinlen.8, %while.cond2050 ], [ %gMinlen.8, %while.end2116 ], [ %gMinlen.4, %if.else2186 ], [ %gMinlen.4, %if.then2386 ], [ %gMinlen.12, %while.cond2466 ], [ %gMinlen.12, %while.end2532 ], [ %gMinlen.4, %while.end2551 ], [ %gMinlen.4, %if.end2917 ], [ %gMinlen.4, %if.else2926 ], [ %gMinlen.4, %if.end2815 ], [ %gMinlen.4, %if.else2822 ], [ %1675, %if.then2950 ], [ %1708, %if.then3007 ], [ %1741, %if.then3064 ], [ %1774, %if.then3121 ], [ %1807, %if.then3178 ], [ %gMinlen.4, %save_state_and_return.loopexit5205 ], [ %gMinlen.8, %save_state_and_return.loopexit5207 ], [ %gMinlen.8, %save_state_and_return.loopexit5208 ], [ %1942, %if.end3416 ], [ %1908, %if.end3359 ], [ %1874, %if.end3302 ], [ %1840, %if.end3245 ], [ %1807, %if.end3188 ], [ %1774, %if.end3131 ], [ %1741, %if.end3074 ], [ %1708, %if.end3017 ], [ %1675, %if.end2960 ], [ %638, %if.end1112 ], [ %716, %if.end1196 ], [ %.ph7128, %if.end1390 ], [ %.ph7128, %if.end1429 ], [ %1014, %if.end1623 ], [ %985, %if.end1566 ], [ %924, %if.end1501 ], [ %gMinlen.3, %if.end1886 ], [ %gMinlen.9, %if.end2079 ], [ %gMinlen.7, %if.end2015 ], [ %gMinlen.13, %if.end2495 ], [ %gMinlen.11, %if.end2431 ], [ %gMinlen.1, %if.end1822 ], [ %805, %if.end1328 ], [ %776, %if.end1270 ], [ %581, %if.end1040 ], [ %547, %if.end983 ], [ %513, %if.end926 ], [ %479, %if.end874 ], [ %445, %if.end817 ], [ %411, %if.end760 ], [ %377, %if.end703 ], [ %343, %if.end646 ], [ %306, %if.end582 ], [ %273, %if.end525 ], [ %240, %if.end468 ], [ %207, %if.end411 ], [ %174, %if.end354 ], [ %141, %if.end292 ], [ %98, %if.end192 ], [ %65, %if.end136 ], [ %32, %if.end79 ], [ 0, %if.end33 ]
  %gSel.14 = phi i32 [ %.pre5386, %sw.default ], [ %1941, %if.then3406 ], [ 0, %if.then29 ], [ %31, %if.then69 ], [ %64, %if.then126 ], [ %97, %if.then183 ], [ %97, %if.then237 ], [ %97, %if.else ], [ %140, %if.then282 ], [ %173, %if.then344 ], [ %206, %if.then401 ], [ %239, %if.then458 ], [ %272, %if.then515 ], [ %305, %if.then572 ], [ %580, %if.then1030 ], [ %580, %if.end1084 ], [ %670, %makeMaps_d.exit ], [ %775, %if.then1261 ], [ %775, %if.then1261 ], [ %775, %if.then1261 ], [ %804, %if.then1319 ], [ %966, %while.cond1540 ], [ %906, %if.then1777 ], [ %gSel.2, %while.cond1857 ], [ %gSel.2, %while.end1923 ], [ %gSel.5, %if.then1970 ], [ %gSel.8, %while.cond2050 ], [ %gSel.8, %while.end2116 ], [ %gSel.4, %if.else2186 ], [ %gSel.4, %if.then2386 ], [ %gSel.12, %while.cond2466 ], [ %gSel.12, %while.end2532 ], [ %gSel.4, %while.end2551 ], [ %gSel.4, %if.end2917 ], [ %gSel.4, %if.else2926 ], [ %gSel.4, %if.end2815 ], [ %gSel.4, %if.else2822 ], [ %1674, %if.then2950 ], [ %1707, %if.then3007 ], [ %1740, %if.then3064 ], [ %1773, %if.then3121 ], [ %1806, %if.then3178 ], [ %gSel.4, %save_state_and_return.loopexit5205 ], [ %gSel.8, %save_state_and_return.loopexit5207 ], [ %gSel.8, %save_state_and_return.loopexit5208 ], [ %1941, %if.end3416 ], [ %1907, %if.end3359 ], [ %1873, %if.end3302 ], [ %1839, %if.end3245 ], [ %1806, %if.end3188 ], [ %1773, %if.end3131 ], [ %1740, %if.end3074 ], [ %1707, %if.end3017 ], [ %1674, %if.end2960 ], [ %637, %if.end1112 ], [ %715, %if.end1196 ], [ %.ph7127, %if.end1390 ], [ %.ph7127, %if.end1429 ], [ %1013, %if.end1623 ], [ %984, %if.end1566 ], [ %923, %if.end1501 ], [ %gSel.3, %if.end1886 ], [ %gSel.9, %if.end2079 ], [ %gSel.7, %if.end2015 ], [ %gSel.13, %if.end2495 ], [ %gSel.11, %if.end2431 ], [ %gSel.1, %if.end1822 ], [ %804, %if.end1328 ], [ %775, %if.end1270 ], [ %580, %if.end1040 ], [ %546, %if.end983 ], [ %512, %if.end926 ], [ %478, %if.end874 ], [ %444, %if.end817 ], [ %410, %if.end760 ], [ %376, %if.end703 ], [ %342, %if.end646 ], [ %305, %if.end582 ], [ %272, %if.end525 ], [ %239, %if.end468 ], [ %206, %if.end411 ], [ %173, %if.end354 ], [ %140, %if.end292 ], [ %97, %if.end192 ], [ %64, %if.end136 ], [ %31, %if.end79 ], [ 0, %if.end33 ]
  %zj.10 = phi i32 [ %.pre5385, %sw.default ], [ %1940, %if.then3406 ], [ 0, %if.then29 ], [ %30, %if.then69 ], [ %63, %if.then126 ], [ %96, %if.then183 ], [ %96, %if.then237 ], [ %96, %if.else ], [ %139, %if.then282 ], [ %172, %if.then344 ], [ %205, %if.then401 ], [ %238, %if.then458 ], [ %271, %if.then515 ], [ %304, %if.then572 ], [ %579, %if.then1030 ], [ %579, %if.end1084 ], [ %669, %makeMaps_d.exit ], [ %774, %if.then1261 ], [ %774, %if.then1261 ], [ %774, %if.then1261 ], [ %803, %if.then1319 ], [ %965, %while.cond1540 ], [ %905, %if.then1777 ], [ %zj.0, %while.cond1857 ], [ %zj.0, %while.end1923 ], [ %zj.3, %if.then1970 ], [ %zj.5, %while.cond2050 ], [ %zj.5, %while.end2116 ], [ %zj.2, %if.else2186 ], [ %zj.2, %if.then2386 ], [ %zj.8, %while.cond2466 ], [ %zj.8, %while.end2532 ], [ %zj.2, %while.end2551 ], [ %zj.2, %if.end2917 ], [ %zj.2, %if.else2926 ], [ %zj.2, %if.end2815 ], [ %zj.2, %if.else2822 ], [ %1673, %if.then2950 ], [ %1706, %if.then3007 ], [ %1739, %if.then3064 ], [ %1772, %if.then3121 ], [ %1805, %if.then3178 ], [ %zj.2, %save_state_and_return.loopexit5205 ], [ %zj.5, %save_state_and_return.loopexit5207 ], [ %zj.5, %save_state_and_return.loopexit5208 ], [ %1940, %if.end3416 ], [ %1906, %if.end3359 ], [ %1872, %if.end3302 ], [ %1838, %if.end3245 ], [ %1805, %if.end3188 ], [ %1772, %if.end3131 ], [ %1739, %if.end3074 ], [ %1706, %if.end3017 ], [ %1673, %if.end2960 ], [ %636, %if.end1112 ], [ %714, %if.end1196 ], [ %.ph7126, %if.end1390 ], [ %.ph7126, %if.end1429 ], [ %1012, %if.end1623 ], [ %983, %if.end1566 ], [ %922, %if.end1501 ], [ %zj.1, %if.end1886 ], [ %zj.6, %if.end2079 ], [ %zj.4, %if.end2015 ], [ %zj.9, %if.end2495 ], [ %zj.7, %if.end2431 ], [ %1074, %if.end1822 ], [ %803, %if.end1328 ], [ %774, %if.end1270 ], [ %579, %if.end1040 ], [ %545, %if.end983 ], [ %511, %if.end926 ], [ %477, %if.end874 ], [ %443, %if.end817 ], [ %409, %if.end760 ], [ %375, %if.end703 ], [ %341, %if.end646 ], [ %304, %if.end582 ], [ %271, %if.end525 ], [ %238, %if.end468 ], [ %205, %if.end411 ], [ %172, %if.end354 ], [ %139, %if.end292 ], [ %96, %if.end192 ], [ %63, %if.end136 ], [ %30, %if.end79 ], [ 0, %if.end33 ]
  %zvec.10 = phi i32 [ %.pre5384, %sw.default ], [ %1939, %if.then3406 ], [ 0, %if.then29 ], [ %29, %if.then69 ], [ %62, %if.then126 ], [ %95, %if.then183 ], [ %95, %if.then237 ], [ %95, %if.else ], [ %138, %if.then282 ], [ %171, %if.then344 ], [ %204, %if.then401 ], [ %237, %if.then458 ], [ %270, %if.then515 ], [ %303, %if.then572 ], [ %578, %if.then1030 ], [ %578, %if.end1084 ], [ %668, %makeMaps_d.exit ], [ %773, %if.then1261 ], [ %773, %if.then1261 ], [ %773, %if.then1261 ], [ %802, %if.then1319 ], [ %964, %while.cond1540 ], [ %904, %if.then1777 ], [ %zvec.0, %while.cond1857 ], [ %zvec.0, %while.end1923 ], [ %zvec.3, %if.then1970 ], [ %zvec.5, %while.cond2050 ], [ %zvec.5, %while.end2116 ], [ %zvec.2, %if.else2186 ], [ %zvec.2, %if.then2386 ], [ %zvec.8, %while.cond2466 ], [ %zvec.8, %while.end2532 ], [ %zvec.2, %while.end2551 ], [ %zvec.2, %if.end2917 ], [ %zvec.2, %if.else2926 ], [ %zvec.2, %if.end2815 ], [ %zvec.2, %if.else2822 ], [ %1672, %if.then2950 ], [ %1705, %if.then3007 ], [ %1738, %if.then3064 ], [ %1771, %if.then3121 ], [ %1804, %if.then3178 ], [ %zvec.2, %save_state_and_return.loopexit5205 ], [ %zvec.5, %save_state_and_return.loopexit5207 ], [ %zvec.5, %save_state_and_return.loopexit5208 ], [ %1939, %if.end3416 ], [ %1905, %if.end3359 ], [ %1871, %if.end3302 ], [ %1837, %if.end3245 ], [ %1804, %if.end3188 ], [ %1771, %if.end3131 ], [ %1738, %if.end3074 ], [ %1705, %if.end3017 ], [ %1672, %if.end2960 ], [ %635, %if.end1112 ], [ %713, %if.end1196 ], [ %.ph7125, %if.end1390 ], [ %.ph7125, %if.end1429 ], [ %1011, %if.end1623 ], [ %982, %if.end1566 ], [ %921, %if.end1501 ], [ %zvec.1, %if.end1886 ], [ %zvec.6, %if.end2079 ], [ %zvec.4, %if.end2015 ], [ %zvec.9, %if.end2495 ], [ %zvec.7, %if.end2431 ], [ %1073, %if.end1822 ], [ %802, %if.end1328 ], [ %773, %if.end1270 ], [ %578, %if.end1040 ], [ %544, %if.end983 ], [ %510, %if.end926 ], [ %476, %if.end874 ], [ %442, %if.end817 ], [ %408, %if.end760 ], [ %374, %if.end703 ], [ %340, %if.end646 ], [ %303, %if.end582 ], [ %270, %if.end525 ], [ %237, %if.end468 ], [ %204, %if.end411 ], [ %171, %if.end354 ], [ %138, %if.end292 ], [ %95, %if.end192 ], [ %62, %if.end136 ], [ %29, %if.end79 ], [ 0, %if.end33 ]
  %zn.11 = phi i32 [ %.pre5383, %sw.default ], [ %1938, %if.then3406 ], [ 0, %if.then29 ], [ %28, %if.then69 ], [ %61, %if.then126 ], [ %94, %if.then183 ], [ %94, %if.then237 ], [ %94, %if.else ], [ %137, %if.then282 ], [ %170, %if.then344 ], [ %203, %if.then401 ], [ %236, %if.then458 ], [ %269, %if.then515 ], [ %302, %if.then572 ], [ %577, %if.then1030 ], [ %577, %if.end1084 ], [ %667, %makeMaps_d.exit ], [ %772, %if.then1261 ], [ %772, %if.then1261 ], [ %772, %if.then1261 ], [ %801, %if.then1319 ], [ %963, %while.cond1540 ], [ %903, %if.then1777 ], [ %zn.1, %while.cond1857 ], [ %zn.1, %while.end1923 ], [ %zn.4, %if.then1970 ], [ %zn.6, %while.cond2050 ], [ %zn.6, %while.end2116 ], [ %zn.3, %if.else2186 ], [ %zn.3, %if.then2386 ], [ %zn.9, %while.cond2466 ], [ %zn.9, %while.end2532 ], [ %zn.3, %while.end2551 ], [ %zn.3, %if.end2917 ], [ %zn.3, %if.else2926 ], [ %zn.3, %if.end2815 ], [ %zn.3, %if.else2822 ], [ %1671, %if.then2950 ], [ %1704, %if.then3007 ], [ %1737, %if.then3064 ], [ %1770, %if.then3121 ], [ %1803, %if.then3178 ], [ %zn.3, %save_state_and_return.loopexit5205 ], [ %zn.6, %save_state_and_return.loopexit5207 ], [ %zn.6, %save_state_and_return.loopexit5208 ], [ %1938, %if.end3416 ], [ %1904, %if.end3359 ], [ %1870, %if.end3302 ], [ %1836, %if.end3245 ], [ %1803, %if.end3188 ], [ %1770, %if.end3131 ], [ %1737, %if.end3074 ], [ %1704, %if.end3017 ], [ %1671, %if.end2960 ], [ %634, %if.end1112 ], [ %712, %if.end1196 ], [ %.ph7124, %if.end1390 ], [ %.ph7124, %if.end1429 ], [ %1010, %if.end1623 ], [ %981, %if.end1566 ], [ %920, %if.end1501 ], [ %zn.2, %if.end1886 ], [ %zn.7, %if.end2079 ], [ %zn.5, %if.end2015 ], [ %zn.10, %if.end2495 ], [ %zn.8, %if.end2431 ], [ %zn.0, %if.end1822 ], [ %801, %if.end1328 ], [ %772, %if.end1270 ], [ %577, %if.end1040 ], [ %543, %if.end983 ], [ %509, %if.end926 ], [ %475, %if.end874 ], [ %441, %if.end817 ], [ %407, %if.end760 ], [ %373, %if.end703 ], [ %339, %if.end646 ], [ %302, %if.end582 ], [ %269, %if.end525 ], [ %236, %if.end468 ], [ %203, %if.end411 ], [ %170, %if.end354 ], [ %137, %if.end292 ], [ %94, %if.end192 ], [ %61, %if.end136 ], [ %28, %if.end79 ], [ 0, %if.end33 ]
  %curr.18 = phi i32 [ %.pre5381, %sw.default ], [ %1936, %if.then3406 ], [ 0, %if.then29 ], [ %26, %if.then69 ], [ %59, %if.then126 ], [ %92, %if.then183 ], [ %92, %if.then237 ], [ %92, %if.else ], [ %135, %if.then282 ], [ %168, %if.then344 ], [ %201, %if.then401 ], [ %234, %if.then458 ], [ %267, %if.then515 ], [ %300, %if.then572 ], [ %575, %if.then1030 ], [ %575, %if.end1084 ], [ %665, %makeMaps_d.exit ], [ %770, %if.then1261 ], [ %770, %if.then1261 ], [ %770, %if.then1261 ], [ %799, %if.then1319 ], [ %curr.3, %while.cond1540 ], [ %curr.0, %if.then1777 ], [ %curr.8, %while.cond1857 ], [ %curr.8, %while.end1923 ], [ %curr.11, %if.then1970 ], [ %curr.13, %while.cond2050 ], [ %curr.13, %while.end2116 ], [ %curr.10, %if.else2186 ], [ %curr.10, %if.then2386 ], [ %curr.16, %while.cond2466 ], [ %curr.16, %while.end2532 ], [ %curr.10, %while.end2551 ], [ %curr.10, %if.end2917 ], [ %curr.10, %if.else2926 ], [ %curr.10, %if.end2815 ], [ %curr.10, %if.else2822 ], [ %1669, %if.then2950 ], [ %1702, %if.then3007 ], [ %1735, %if.then3064 ], [ %1768, %if.then3121 ], [ %1801, %if.then3178 ], [ %curr.10, %save_state_and_return.loopexit5205 ], [ %curr.13, %save_state_and_return.loopexit5207 ], [ %curr.13, %save_state_and_return.loopexit5208 ], [ %1936, %if.end3416 ], [ %1902, %if.end3359 ], [ %1868, %if.end3302 ], [ %1834, %if.end3245 ], [ %1801, %if.end3188 ], [ %1768, %if.end3131 ], [ %1735, %if.end3074 ], [ %1702, %if.end3017 ], [ %1669, %if.end2960 ], [ %632, %if.end1112 ], [ %710, %if.end1196 ], [ %.ph7122, %if.end1390 ], [ %.ph7122, %if.end1429 ], [ %curr.5, %if.end1623 ], [ %curr.4, %if.end1566 ], [ %curr.1, %if.end1501 ], [ %curr.9, %if.end1886 ], [ %curr.14, %if.end2079 ], [ %curr.12, %if.end2015 ], [ %curr.17, %if.end2495 ], [ %curr.15, %if.end2431 ], [ %curr.7, %if.end1822 ], [ %799, %if.end1328 ], [ %770, %if.end1270 ], [ %575, %if.end1040 ], [ %541, %if.end983 ], [ %507, %if.end926 ], [ %473, %if.end874 ], [ %439, %if.end817 ], [ %405, %if.end760 ], [ %371, %if.end703 ], [ %337, %if.end646 ], [ %300, %if.end582 ], [ %267, %if.end525 ], [ %234, %if.end468 ], [ %201, %if.end411 ], [ %168, %if.end354 ], [ %135, %if.end292 ], [ %92, %if.end192 ], [ %59, %if.end136 ], [ %26, %if.end79 ], [ 0, %if.end33 ]
  %N.8 = phi i32 [ %.pre5380, %sw.default ], [ %1935, %if.then3406 ], [ 0, %if.then29 ], [ %25, %if.then69 ], [ %58, %if.then126 ], [ %91, %if.then183 ], [ %91, %if.then237 ], [ %91, %if.else ], [ %134, %if.then282 ], [ %167, %if.then344 ], [ %200, %if.then401 ], [ %233, %if.then458 ], [ %266, %if.then515 ], [ %299, %if.then572 ], [ %574, %if.then1030 ], [ %574, %if.end1084 ], [ %664, %makeMaps_d.exit ], [ %769, %if.then1261 ], [ %769, %if.then1261 ], [ %769, %if.then1261 ], [ %798, %if.then1319 ], [ %961, %while.cond1540 ], [ %901, %if.then1777 ], [ %1086, %while.cond1857 ], [ %1086, %while.end1923 ], [ %mul1967, %if.then1970 ], [ %N.3, %while.cond2050 ], [ %N.3, %while.end2116 ], [ %N.0, %if.else2186 ], [ %N.0, %if.then2386 ], [ %N.6, %while.cond2466 ], [ %N.6, %while.end2532 ], [ %N.0, %while.end2551 ], [ %N.0, %if.end2917 ], [ %N.0, %if.else2926 ], [ %N.0, %if.end2815 ], [ %N.0, %if.else2822 ], [ %1668, %if.then2950 ], [ %1701, %if.then3007 ], [ %1734, %if.then3064 ], [ %1767, %if.then3121 ], [ %1800, %if.then3178 ], [ %N.0, %save_state_and_return.loopexit5205 ], [ %N.3, %save_state_and_return.loopexit5207 ], [ %N.3, %save_state_and_return.loopexit5208 ], [ %1935, %if.end3416 ], [ %1901, %if.end3359 ], [ %1867, %if.end3302 ], [ %1833, %if.end3245 ], [ %1800, %if.end3188 ], [ %1767, %if.end3131 ], [ %1734, %if.end3074 ], [ %1701, %if.end3017 ], [ %1668, %if.end2960 ], [ %631, %if.end1112 ], [ %709, %if.end1196 ], [ %.ph7121, %if.end1390 ], [ %.ph7121, %if.end1429 ], [ %1008, %if.end1623 ], [ %979, %if.end1566 ], [ %918, %if.end1501 ], [ %1092, %if.end1886 ], [ %N.4, %if.end2079 ], [ %N.2, %if.end2015 ], [ %N.7, %if.end2495 ], [ %N.5, %if.end2431 ], [ %1071, %if.end1822 ], [ %798, %if.end1328 ], [ %769, %if.end1270 ], [ %574, %if.end1040 ], [ %540, %if.end983 ], [ %506, %if.end926 ], [ %472, %if.end874 ], [ %438, %if.end817 ], [ %404, %if.end760 ], [ %370, %if.end703 ], [ %336, %if.end646 ], [ %299, %if.end582 ], [ %266, %if.end525 ], [ %233, %if.end468 ], [ %200, %if.end411 ], [ %167, %if.end354 ], [ %134, %if.end292 ], [ %91, %if.end192 ], [ %58, %if.end136 ], [ %25, %if.end79 ], [ 0, %if.end33 ]
  %es.12 = phi i32 [ %.pre5379, %sw.default ], [ %1934, %if.then3406 ], [ 0, %if.then29 ], [ %24, %if.then69 ], [ %57, %if.then126 ], [ %90, %if.then183 ], [ %90, %if.then237 ], [ %90, %if.else ], [ %133, %if.then282 ], [ %166, %if.then344 ], [ %199, %if.then401 ], [ %232, %if.then458 ], [ %265, %if.then515 ], [ %298, %if.then572 ], [ %573, %if.then1030 ], [ %573, %if.end1084 ], [ %663, %makeMaps_d.exit ], [ %768, %if.then1261 ], [ %768, %if.then1261 ], [ %768, %if.then1261 ], [ %797, %if.then1319 ], [ %960, %while.cond1540 ], [ %900, %if.then1777 ], [ %1085, %while.cond1857 ], [ %1085, %while.end1923 ], [ %es.2, %if.then1970 ], [ %es.4, %while.cond2050 ], [ %es.4, %while.end2116 ], [ %es.0, %if.else2186 ], [ %es.0, %if.then2386 ], [ %es.10, %while.cond2466 ], [ %es.10, %while.end2532 ], [ %es.0, %while.end2551 ], [ %es.0, %if.end2917 ], [ %es.0, %if.else2926 ], [ %es.0, %if.end2815 ], [ %es.0, %if.else2822 ], [ %1667, %if.then2950 ], [ %1700, %if.then3007 ], [ %1733, %if.then3064 ], [ %1766, %if.then3121 ], [ %1799, %if.then3178 ], [ %es.0, %save_state_and_return.loopexit5205 ], [ %es.75072, %save_state_and_return.loopexit5207 ], [ %es.65077, %save_state_and_return.loopexit5208 ], [ %1934, %if.end3416 ], [ %1900, %if.end3359 ], [ %1866, %if.end3302 ], [ %1832, %if.end3245 ], [ %1799, %if.end3188 ], [ %1766, %if.end3131 ], [ %1733, %if.end3074 ], [ %1700, %if.end3017 ], [ %1667, %if.end2960 ], [ %630, %if.end1112 ], [ %708, %if.end1196 ], [ %.ph7120, %if.end1390 ], [ %.ph7120, %if.end1429 ], [ %1007, %if.end1623 ], [ %978, %if.end1566 ], [ %917, %if.end1501 ], [ %1091, %if.end1886 ], [ %es.5, %if.end2079 ], [ %es.3, %if.end2015 ], [ %es.11, %if.end2495 ], [ %es.9, %if.end2431 ], [ %1070, %if.end1822 ], [ %797, %if.end1328 ], [ %768, %if.end1270 ], [ %573, %if.end1040 ], [ %539, %if.end983 ], [ %505, %if.end926 ], [ %471, %if.end874 ], [ %437, %if.end817 ], [ %403, %if.end760 ], [ %369, %if.end703 ], [ %335, %if.end646 ], [ %298, %if.end582 ], [ %265, %if.end525 ], [ %232, %if.end468 ], [ %199, %if.end411 ], [ %166, %if.end354 ], [ %133, %if.end292 ], [ %90, %if.end192 ], [ %57, %if.end136 ], [ %24, %if.end79 ], [ 0, %if.end33 ]
  %nblock.14 = phi i32 [ %.pre5378, %sw.default ], [ %1933, %if.then3406 ], [ 0, %if.then29 ], [ %23, %if.then69 ], [ %56, %if.then126 ], [ %89, %if.then183 ], [ %89, %if.then237 ], [ %89, %if.else ], [ %132, %if.then282 ], [ %165, %if.then344 ], [ %198, %if.then401 ], [ %231, %if.then458 ], [ %264, %if.then515 ], [ %297, %if.then572 ], [ %572, %if.then1030 ], [ %572, %if.end1084 ], [ %662, %makeMaps_d.exit ], [ %767, %if.then1261 ], [ %767, %if.then1261 ], [ %767, %if.then1261 ], [ %796, %if.then1319 ], [ %959, %while.cond1540 ], [ 0, %if.then1777 ], [ %nblock.1, %while.cond1857 ], [ %nblock.1, %while.end1923 ], [ %nblock.4, %if.then1970 ], [ %nblock.6, %while.cond2050 ], [ %nblock.6, %while.end2116 ], [ %nblock.3, %if.else2186 ], [ %inc2383, %if.then2386 ], [ %nblock.12, %while.cond2466 ], [ %nblock.12, %while.end2532 ], [ %nblock.3, %while.end2551 ], [ %nblock.3, %if.end2917 ], [ %nblock.3, %if.else2926 ], [ %nblock.3, %if.end2815 ], [ %nblock.3, %if.else2822 ], [ %1666, %if.then2950 ], [ %1699, %if.then3007 ], [ %1732, %if.then3064 ], [ %1765, %if.then3121 ], [ %1798, %if.then3178 ], [ %nblock.3, %save_state_and_return.loopexit5205 ], [ %1957, %save_state_and_return.loopexit5207 ], [ %1958, %save_state_and_return.loopexit5208 ], [ %1933, %if.end3416 ], [ %1899, %if.end3359 ], [ %1865, %if.end3302 ], [ %1831, %if.end3245 ], [ %1798, %if.end3188 ], [ %1765, %if.end3131 ], [ %1732, %if.end3074 ], [ %1699, %if.end3017 ], [ %1666, %if.end2960 ], [ %629, %if.end1112 ], [ %707, %if.end1196 ], [ %.ph7119, %if.end1390 ], [ %.ph7119, %if.end1429 ], [ %1006, %if.end1623 ], [ %977, %if.end1566 ], [ %916, %if.end1501 ], [ %nblock.2, %if.end1886 ], [ %nblock.7, %if.end2079 ], [ %nblock.5, %if.end2015 ], [ %nblock.13, %if.end2495 ], [ %nblock.11, %if.end2431 ], [ %nblock.0, %if.end1822 ], [ %796, %if.end1328 ], [ %767, %if.end1270 ], [ %572, %if.end1040 ], [ %538, %if.end983 ], [ %504, %if.end926 ], [ %470, %if.end874 ], [ %436, %if.end817 ], [ %402, %if.end760 ], [ %368, %if.end703 ], [ %334, %if.end646 ], [ %297, %if.end582 ], [ %264, %if.end525 ], [ %231, %if.end468 ], [ %198, %if.end411 ], [ %165, %if.end354 ], [ %132, %if.end292 ], [ %89, %if.end192 ], [ %56, %if.end136 ], [ %23, %if.end79 ], [ 0, %if.end33 ]
  %nblockMAX.11 = phi i32 [ %.pre5377, %sw.default ], [ %1932, %if.then3406 ], [ 0, %if.then29 ], [ %22, %if.then69 ], [ %55, %if.then126 ], [ %88, %if.then183 ], [ %88, %if.then237 ], [ %88, %if.else ], [ %131, %if.then282 ], [ %164, %if.then344 ], [ %197, %if.then401 ], [ %230, %if.then458 ], [ %263, %if.then515 ], [ %296, %if.then572 ], [ %571, %if.then1030 ], [ %571, %if.end1084 ], [ %661, %makeMaps_d.exit ], [ %766, %if.then1261 ], [ %766, %if.then1261 ], [ %766, %if.then1261 ], [ %795, %if.then1319 ], [ %958, %while.cond1540 ], [ %mul1742, %if.then1777 ], [ %nblockMAX.1, %while.cond1857 ], [ %nblockMAX.1, %while.end1923 ], [ %nblockMAX.4, %if.then1970 ], [ %nblockMAX.6, %while.cond2050 ], [ %nblockMAX.6, %while.end2116 ], [ %nblockMAX.3, %if.else2186 ], [ %nblockMAX.3, %if.then2386 ], [ %nblockMAX.9, %while.cond2466 ], [ %nblockMAX.9, %while.end2532 ], [ %nblockMAX.3, %while.end2551 ], [ %nblockMAX.3, %if.end2917 ], [ %nblockMAX.3, %if.else2926 ], [ %nblockMAX.3, %if.end2815 ], [ %nblockMAX.3, %if.else2822 ], [ %1665, %if.then2950 ], [ %1698, %if.then3007 ], [ %1731, %if.then3064 ], [ %1764, %if.then3121 ], [ %1797, %if.then3178 ], [ %nblockMAX.3, %save_state_and_return.loopexit5205 ], [ %nblockMAX.6, %save_state_and_return.loopexit5207 ], [ %nblockMAX.6, %save_state_and_return.loopexit5208 ], [ %1932, %if.end3416 ], [ %1898, %if.end3359 ], [ %1864, %if.end3302 ], [ %1830, %if.end3245 ], [ %1797, %if.end3188 ], [ %1764, %if.end3131 ], [ %1731, %if.end3074 ], [ %1698, %if.end3017 ], [ %1665, %if.end2960 ], [ %628, %if.end1112 ], [ %706, %if.end1196 ], [ %.ph7118, %if.end1390 ], [ %.ph7118, %if.end1429 ], [ %1005, %if.end1623 ], [ %976, %if.end1566 ], [ %915, %if.end1501 ], [ %nblockMAX.2, %if.end1886 ], [ %nblockMAX.7, %if.end2079 ], [ %nblockMAX.5, %if.end2015 ], [ %nblockMAX.10, %if.end2495 ], [ %nblockMAX.8, %if.end2431 ], [ %nblockMAX.0, %if.end1822 ], [ %795, %if.end1328 ], [ %766, %if.end1270 ], [ %571, %if.end1040 ], [ %537, %if.end983 ], [ %503, %if.end926 ], [ %469, %if.end874 ], [ %435, %if.end817 ], [ %401, %if.end760 ], [ %367, %if.end703 ], [ %333, %if.end646 ], [ %296, %if.end582 ], [ %263, %if.end525 ], [ %230, %if.end468 ], [ %197, %if.end411 ], [ %164, %if.end354 ], [ %131, %if.end292 ], [ %88, %if.end192 ], [ %55, %if.end136 ], [ %22, %if.end79 ], [ 0, %if.end33 ]
  %nextSym.8 = phi i32 [ %.pre5376, %sw.default ], [ %1931, %if.then3406 ], [ 0, %if.then29 ], [ %21, %if.then69 ], [ %54, %if.then126 ], [ %87, %if.then183 ], [ %87, %if.then237 ], [ %87, %if.else ], [ %130, %if.then282 ], [ %163, %if.then344 ], [ %196, %if.then401 ], [ %229, %if.then458 ], [ %262, %if.then515 ], [ %295, %if.then572 ], [ %570, %if.then1030 ], [ %570, %if.end1084 ], [ %660, %makeMaps_d.exit ], [ %765, %if.then1261 ], [ %765, %if.then1261 ], [ %765, %if.then1261 ], [ %794, %if.then1319 ], [ %957, %while.cond1540 ], [ %897, %if.then1777 ], [ %1084, %while.cond1857 ], [ %1084, %while.end1923 ], [ %nextSym.1, %if.then1970 ], [ %nextSym.3, %while.cond2050 ], [ %nextSym.3, %while.end2116 ], [ %nextSym.0, %if.else2186 ], [ %nextSym.0, %if.then2386 ], [ %nextSym.6, %while.cond2466 ], [ %nextSym.6, %while.end2532 ], [ %nextSym.0, %while.end2551 ], [ %nextSym.0, %if.end2917 ], [ %nextSym.0, %if.else2926 ], [ %nextSym.0, %if.end2815 ], [ %nextSym.0, %if.else2822 ], [ %1664, %if.then2950 ], [ %1697, %if.then3007 ], [ %1730, %if.then3064 ], [ %1763, %if.then3121 ], [ %1796, %if.then3178 ], [ %nextSym.0, %save_state_and_return.loopexit5205 ], [ %1139, %save_state_and_return.loopexit5207 ], [ %1139, %save_state_and_return.loopexit5208 ], [ %1931, %if.end3416 ], [ %1897, %if.end3359 ], [ %1863, %if.end3302 ], [ %1829, %if.end3245 ], [ %1796, %if.end3188 ], [ %1763, %if.end3131 ], [ %1730, %if.end3074 ], [ %1697, %if.end3017 ], [ %1664, %if.end2960 ], [ %627, %if.end1112 ], [ %705, %if.end1196 ], [ %.ph7117, %if.end1390 ], [ %.ph7117, %if.end1429 ], [ %1004, %if.end1623 ], [ %975, %if.end1566 ], [ %914, %if.end1501 ], [ %1090, %if.end1886 ], [ %nextSym.4, %if.end2079 ], [ %nextSym.2, %if.end2015 ], [ %nextSym.7, %if.end2495 ], [ %nextSym.5, %if.end2431 ], [ %1069, %if.end1822 ], [ %794, %if.end1328 ], [ %765, %if.end1270 ], [ %570, %if.end1040 ], [ %536, %if.end983 ], [ %502, %if.end926 ], [ %468, %if.end874 ], [ %434, %if.end817 ], [ %400, %if.end760 ], [ %366, %if.end703 ], [ %332, %if.end646 ], [ %295, %if.end582 ], [ %262, %if.end525 ], [ %229, %if.end468 ], [ %196, %if.end411 ], [ %163, %if.end354 ], [ %130, %if.end292 ], [ %87, %if.end192 ], [ %54, %if.end136 ], [ %21, %if.end79 ], [ 0, %if.end33 ]
  %groupPos.14 = phi i32 [ %.pre5375, %sw.default ], [ %1930, %if.then3406 ], [ 0, %if.then29 ], [ %20, %if.then69 ], [ %53, %if.then126 ], [ %86, %if.then183 ], [ %86, %if.then237 ], [ %86, %if.else ], [ %129, %if.then282 ], [ %162, %if.then344 ], [ %195, %if.then401 ], [ %228, %if.then458 ], [ %261, %if.then515 ], [ %294, %if.then572 ], [ %569, %if.then1030 ], [ %569, %if.end1084 ], [ %659, %makeMaps_d.exit ], [ %764, %if.then1261 ], [ %764, %if.then1261 ], [ %764, %if.then1261 ], [ %793, %if.then1319 ], [ %956, %while.cond1540 ], [ 0, %if.then1777 ], [ %groupPos.2, %while.cond1857 ], [ %groupPos.2, %while.end1923 ], [ 0, %if.then1970 ], [ %groupPos.8, %while.cond2050 ], [ %groupPos.8, %while.end2116 ], [ %groupPos.4, %if.else2186 ], [ 0, %if.then2386 ], [ %groupPos.12, %while.cond2466 ], [ %groupPos.12, %while.end2532 ], [ %groupPos.4, %while.end2551 ], [ %groupPos.4, %if.end2917 ], [ %groupPos.4, %if.else2926 ], [ %groupPos.4, %if.end2815 ], [ %groupPos.4, %if.else2822 ], [ %1663, %if.then2950 ], [ %1696, %if.then3007 ], [ %1729, %if.then3064 ], [ %1762, %if.then3121 ], [ %1795, %if.then3178 ], [ %groupPos.4, %save_state_and_return.loopexit5205 ], [ %groupPos.8, %save_state_and_return.loopexit5207 ], [ %groupPos.8, %save_state_and_return.loopexit5208 ], [ %1930, %if.end3416 ], [ %1896, %if.end3359 ], [ %1862, %if.end3302 ], [ %1828, %if.end3245 ], [ %1795, %if.end3188 ], [ %1762, %if.end3131 ], [ %1729, %if.end3074 ], [ %1696, %if.end3017 ], [ %1663, %if.end2960 ], [ %626, %if.end1112 ], [ %704, %if.end1196 ], [ %.ph7116, %if.end1390 ], [ %.ph7116, %if.end1429 ], [ %1003, %if.end1623 ], [ %974, %if.end1566 ], [ %913, %if.end1501 ], [ %groupPos.3, %if.end1886 ], [ %groupPos.9, %if.end2079 ], [ %groupPos.7, %if.end2015 ], [ %groupPos.13, %if.end2495 ], [ %groupPos.11, %if.end2431 ], [ %groupPos.1, %if.end1822 ], [ %793, %if.end1328 ], [ %764, %if.end1270 ], [ %569, %if.end1040 ], [ %535, %if.end983 ], [ %501, %if.end926 ], [ %467, %if.end874 ], [ %433, %if.end817 ], [ %399, %if.end760 ], [ %365, %if.end703 ], [ %331, %if.end646 ], [ %294, %if.end582 ], [ %261, %if.end525 ], [ %228, %if.end468 ], [ %195, %if.end411 ], [ %162, %if.end354 ], [ %129, %if.end292 ], [ %86, %if.end192 ], [ %53, %if.end136 ], [ %20, %if.end79 ], [ 0, %if.end33 ]
  %groupNo.14 = phi i32 [ %.pre5374, %sw.default ], [ %1929, %if.then3406 ], [ 0, %if.then29 ], [ %19, %if.then69 ], [ %52, %if.then126 ], [ %85, %if.then183 ], [ %85, %if.then237 ], [ %85, %if.else ], [ %128, %if.then282 ], [ %161, %if.then344 ], [ %194, %if.then401 ], [ %227, %if.then458 ], [ %260, %if.then515 ], [ %293, %if.then572 ], [ %568, %if.then1030 ], [ %568, %if.end1084 ], [ %658, %makeMaps_d.exit ], [ %763, %if.then1261 ], [ %763, %if.then1261 ], [ %763, %if.then1261 ], [ %792, %if.then1319 ], [ %955, %while.cond1540 ], [ 0, %if.then1777 ], [ %groupNo.2, %while.cond1857 ], [ %groupNo.2, %while.end1923 ], [ %inc1971, %if.then1970 ], [ %groupNo.8, %while.cond2050 ], [ %groupNo.8, %while.end2116 ], [ %groupNo.4, %if.else2186 ], [ %inc2387, %if.then2386 ], [ %groupNo.12, %while.cond2466 ], [ %groupNo.12, %while.end2532 ], [ %groupNo.4, %while.end2551 ], [ %groupNo.4, %if.end2917 ], [ %groupNo.4, %if.else2926 ], [ %groupNo.4, %if.end2815 ], [ %groupNo.4, %if.else2822 ], [ %1662, %if.then2950 ], [ %1695, %if.then3007 ], [ %1728, %if.then3064 ], [ %1761, %if.then3121 ], [ %1794, %if.then3178 ], [ %groupNo.4, %save_state_and_return.loopexit5205 ], [ %groupNo.8, %save_state_and_return.loopexit5207 ], [ %groupNo.8, %save_state_and_return.loopexit5208 ], [ %1929, %if.end3416 ], [ %1895, %if.end3359 ], [ %1861, %if.end3302 ], [ %1827, %if.end3245 ], [ %1794, %if.end3188 ], [ %1761, %if.end3131 ], [ %1728, %if.end3074 ], [ %1695, %if.end3017 ], [ %1662, %if.end2960 ], [ %625, %if.end1112 ], [ %703, %if.end1196 ], [ %.ph7115, %if.end1390 ], [ %.ph7115, %if.end1429 ], [ %1002, %if.end1623 ], [ %973, %if.end1566 ], [ %912, %if.end1501 ], [ %groupNo.3, %if.end1886 ], [ %groupNo.9, %if.end2079 ], [ %groupNo.7, %if.end2015 ], [ %groupNo.13, %if.end2495 ], [ %groupNo.11, %if.end2431 ], [ %groupNo.1, %if.end1822 ], [ %792, %if.end1328 ], [ %763, %if.end1270 ], [ %568, %if.end1040 ], [ %534, %if.end983 ], [ %500, %if.end926 ], [ %466, %if.end874 ], [ %432, %if.end817 ], [ %398, %if.end760 ], [ %364, %if.end703 ], [ %330, %if.end646 ], [ %293, %if.end582 ], [ %260, %if.end525 ], [ %227, %if.end468 ], [ %194, %if.end411 ], [ %161, %if.end354 ], [ %128, %if.end292 ], [ %85, %if.end192 ], [ %52, %if.end136 ], [ %19, %if.end79 ], [ 0, %if.end33 ]
  %EOB.11 = phi i32 [ %.pre5373, %sw.default ], [ %1928, %if.then3406 ], [ 0, %if.then29 ], [ %18, %if.then69 ], [ %51, %if.then126 ], [ %84, %if.then183 ], [ %84, %if.then237 ], [ %84, %if.else ], [ %127, %if.then282 ], [ %160, %if.then344 ], [ %193, %if.then401 ], [ %226, %if.then458 ], [ %259, %if.then515 ], [ %292, %if.then572 ], [ %567, %if.then1030 ], [ %567, %if.end1084 ], [ %657, %makeMaps_d.exit ], [ %762, %if.then1261 ], [ %762, %if.then1261 ], [ %762, %if.then1261 ], [ %791, %if.then1319 ], [ %954, %while.cond1540 ], [ %add1740, %if.then1777 ], [ %EOB.1, %while.cond1857 ], [ %EOB.1, %while.end1923 ], [ %EOB.4, %if.then1970 ], [ %EOB.6, %while.cond2050 ], [ %EOB.6, %while.end2116 ], [ %EOB.3, %if.else2186 ], [ %EOB.3, %if.then2386 ], [ %EOB.9, %while.cond2466 ], [ %EOB.9, %while.end2532 ], [ %nextSym.0, %while.end2551 ], [ %nextSym.0, %if.end2917 ], [ %nextSym.0, %if.else2926 ], [ %nextSym.0, %if.end2815 ], [ %nextSym.0, %if.else2822 ], [ %1661, %if.then2950 ], [ %1694, %if.then3007 ], [ %1727, %if.then3064 ], [ %1760, %if.then3121 ], [ %1793, %if.then3178 ], [ %nextSym.0, %save_state_and_return.loopexit5205 ], [ %EOB.6, %save_state_and_return.loopexit5207 ], [ %EOB.6, %save_state_and_return.loopexit5208 ], [ %1928, %if.end3416 ], [ %1894, %if.end3359 ], [ %1860, %if.end3302 ], [ %1826, %if.end3245 ], [ %1793, %if.end3188 ], [ %1760, %if.end3131 ], [ %1727, %if.end3074 ], [ %1694, %if.end3017 ], [ %1661, %if.end2960 ], [ %624, %if.end1112 ], [ %702, %if.end1196 ], [ %.ph7114, %if.end1390 ], [ %.ph7114, %if.end1429 ], [ %1001, %if.end1623 ], [ %972, %if.end1566 ], [ %911, %if.end1501 ], [ %EOB.2, %if.end1886 ], [ %EOB.7, %if.end2079 ], [ %EOB.5, %if.end2015 ], [ %EOB.10, %if.end2495 ], [ %EOB.8, %if.end2431 ], [ %EOB.0, %if.end1822 ], [ %791, %if.end1328 ], [ %762, %if.end1270 ], [ %567, %if.end1040 ], [ %533, %if.end983 ], [ %499, %if.end926 ], [ %465, %if.end874 ], [ %431, %if.end817 ], [ %397, %if.end760 ], [ %363, %if.end703 ], [ %329, %if.end646 ], [ %292, %if.end582 ], [ %259, %if.end525 ], [ %226, %if.end468 ], [ %193, %if.end411 ], [ %160, %if.end354 ], [ %127, %if.end292 ], [ %84, %if.end192 ], [ %51, %if.end136 ], [ %18, %if.end79 ], [ 0, %if.end33 ]
  %nSelectors.20 = phi i32 [ %.pre5372, %sw.default ], [ %1927, %if.then3406 ], [ 0, %if.then29 ], [ %17, %if.then69 ], [ %50, %if.then126 ], [ %83, %if.then183 ], [ %83, %if.then237 ], [ %83, %if.else ], [ %126, %if.then282 ], [ %159, %if.then344 ], [ %192, %if.then401 ], [ %225, %if.then458 ], [ %258, %if.then515 ], [ %291, %if.then572 ], [ %566, %if.then1030 ], [ %566, %if.end1084 ], [ %656, %makeMaps_d.exit ], [ %761, %if.then1261 ], [ %761, %if.then1261 ], [ %761, %if.then1261 ], [ 0, %if.then1319 ], [ %nSelectors.6, %while.cond1540 ], [ %nSelectors.3, %if.then1777 ], [ %nSelectors.10, %while.cond1857 ], [ %nSelectors.10, %while.end1923 ], [ %nSelectors.13, %if.then1970 ], [ %nSelectors.15, %while.cond2050 ], [ %nSelectors.15, %while.end2116 ], [ %nSelectors.12, %if.else2186 ], [ %nSelectors.12, %if.then2386 ], [ %nSelectors.18, %while.cond2466 ], [ %nSelectors.18, %while.end2532 ], [ %nSelectors.12, %while.end2551 ], [ %nSelectors.12, %if.end2917 ], [ %nSelectors.12, %if.else2926 ], [ %nSelectors.12, %if.end2815 ], [ %nSelectors.12, %if.else2822 ], [ %1660, %if.then2950 ], [ %1693, %if.then3007 ], [ %1726, %if.then3064 ], [ %1759, %if.then3121 ], [ %1792, %if.then3178 ], [ %nSelectors.12, %save_state_and_return.loopexit5205 ], [ %nSelectors.15, %save_state_and_return.loopexit5207 ], [ %nSelectors.15, %save_state_and_return.loopexit5208 ], [ %1927, %if.end3416 ], [ %1893, %if.end3359 ], [ %1859, %if.end3302 ], [ %1825, %if.end3245 ], [ %1792, %if.end3188 ], [ %1759, %if.end3131 ], [ %1726, %if.end3074 ], [ %1693, %if.end3017 ], [ %1660, %if.end2960 ], [ %623, %if.end1112 ], [ %701, %if.end1196 ], [ %nSelectors.2.ph, %if.end1390 ], [ %nSelectors.2.ph, %if.end1429 ], [ %nSelectors.8, %if.end1623 ], [ %nSelectors.7, %if.end1566 ], [ %nSelectors.4, %if.end1501 ], [ %nSelectors.11, %if.end1886 ], [ %nSelectors.16, %if.end2079 ], [ %nSelectors.14, %if.end2015 ], [ %nSelectors.19, %if.end2495 ], [ %nSelectors.17, %if.end2431 ], [ %nSelectors.9, %if.end1822 ], [ %790, %if.end1328 ], [ %761, %if.end1270 ], [ %566, %if.end1040 ], [ %532, %if.end983 ], [ %498, %if.end926 ], [ %464, %if.end874 ], [ %430, %if.end817 ], [ %396, %if.end760 ], [ %362, %if.end703 ], [ %328, %if.end646 ], [ %291, %if.end582 ], [ %258, %if.end525 ], [ %225, %if.end468 ], [ %192, %if.end411 ], [ %159, %if.end354 ], [ %126, %if.end292 ], [ %83, %if.end192 ], [ %50, %if.end136 ], [ %17, %if.end79 ], [ 0, %if.end33 ]
  %nGroups.21 = phi i32 [ %.pre5371, %sw.default ], [ %1926, %if.then3406 ], [ 0, %if.then29 ], [ %16, %if.then69 ], [ %49, %if.then126 ], [ %82, %if.then183 ], [ %82, %if.then237 ], [ %82, %if.else ], [ %125, %if.then282 ], [ %158, %if.then344 ], [ %191, %if.then401 ], [ %224, %if.then458 ], [ %257, %if.then515 ], [ %290, %if.then572 ], [ %565, %if.then1030 ], [ %565, %if.end1084 ], [ %655, %makeMaps_d.exit ], [ %and1267, %if.then1261 ], [ %and1267, %if.then1261 ], [ %and1267, %if.then1261 ], [ %nGroups.0, %if.then1319 ], [ %nGroups.7, %while.cond1540 ], [ %nGroups.4, %if.then1777 ], [ %nGroups.11, %while.cond1857 ], [ %nGroups.11, %while.end1923 ], [ %nGroups.14, %if.then1970 ], [ %nGroups.16, %while.cond2050 ], [ %nGroups.16, %while.end2116 ], [ %nGroups.13, %if.else2186 ], [ %nGroups.13, %if.then2386 ], [ %nGroups.19, %while.cond2466 ], [ %nGroups.19, %while.end2532 ], [ %nGroups.13, %while.end2551 ], [ %nGroups.13, %if.end2917 ], [ %nGroups.13, %if.else2926 ], [ %nGroups.13, %if.end2815 ], [ %nGroups.13, %if.else2822 ], [ %1659, %if.then2950 ], [ %1692, %if.then3007 ], [ %1725, %if.then3064 ], [ %1758, %if.then3121 ], [ %1791, %if.then3178 ], [ %nGroups.13, %save_state_and_return.loopexit5205 ], [ %nGroups.16, %save_state_and_return.loopexit5207 ], [ %nGroups.16, %save_state_and_return.loopexit5208 ], [ %1926, %if.end3416 ], [ %1892, %if.end3359 ], [ %1858, %if.end3302 ], [ %1824, %if.end3245 ], [ %1791, %if.end3188 ], [ %1758, %if.end3131 ], [ %1725, %if.end3074 ], [ %1692, %if.end3017 ], [ %1659, %if.end2960 ], [ %622, %if.end1112 ], [ %700, %if.end1196 ], [ %nGroups.3.ph, %if.end1390 ], [ %nGroups.3.ph, %if.end1429 ], [ %nGroups.9, %if.end1623 ], [ %nGroups.8, %if.end1566 ], [ %nGroups.5, %if.end1501 ], [ %nGroups.12, %if.end1886 ], [ %nGroups.17, %if.end2079 ], [ %nGroups.15, %if.end2015 ], [ %nGroups.20, %if.end2495 ], [ %nGroups.18, %if.end2431 ], [ %nGroups.10, %if.end1822 ], [ %nGroups.0, %if.end1328 ], [ %760, %if.end1270 ], [ %565, %if.end1040 ], [ %531, %if.end983 ], [ %497, %if.end926 ], [ %463, %if.end874 ], [ %429, %if.end817 ], [ %395, %if.end760 ], [ %361, %if.end703 ], [ %327, %if.end646 ], [ %290, %if.end582 ], [ %257, %if.end525 ], [ %224, %if.end468 ], [ %191, %if.end411 ], [ %158, %if.end354 ], [ %125, %if.end292 ], [ %82, %if.end192 ], [ %49, %if.end136 ], [ %16, %if.end79 ], [ 0, %if.end33 ]
  %alphaSize.22 = phi i32 [ %.pre5370, %sw.default ], [ %1925, %if.then3406 ], [ 0, %if.then29 ], [ %15, %if.then69 ], [ %48, %if.then126 ], [ %81, %if.then183 ], [ %81, %if.then237 ], [ %81, %if.else ], [ %124, %if.then282 ], [ %157, %if.then344 ], [ %190, %if.then401 ], [ %223, %if.then458 ], [ %256, %if.then515 ], [ %289, %if.then572 ], [ %564, %if.then1030 ], [ %564, %if.end1084 ], [ %654, %makeMaps_d.exit ], [ %alphaSize.0, %if.then1261 ], [ %alphaSize.0, %if.then1261 ], [ %alphaSize.0, %if.then1261 ], [ %alphaSize.1, %if.then1319 ], [ %alphaSize.8, %while.cond1540 ], [ %alphaSize.5, %if.then1777 ], [ %alphaSize.12, %while.cond1857 ], [ %alphaSize.12, %while.end1923 ], [ %alphaSize.15, %if.then1970 ], [ %alphaSize.17, %while.cond2050 ], [ %alphaSize.17, %while.end2116 ], [ %alphaSize.14, %if.else2186 ], [ %alphaSize.14, %if.then2386 ], [ %alphaSize.20, %while.cond2466 ], [ %alphaSize.20, %while.end2532 ], [ %alphaSize.14, %while.end2551 ], [ %alphaSize.14, %if.end2917 ], [ %alphaSize.14, %if.else2926 ], [ %alphaSize.14, %if.end2815 ], [ %alphaSize.14, %if.else2822 ], [ %1658, %if.then2950 ], [ %1691, %if.then3007 ], [ %1724, %if.then3064 ], [ %1757, %if.then3121 ], [ %1790, %if.then3178 ], [ %alphaSize.14, %save_state_and_return.loopexit5205 ], [ %alphaSize.17, %save_state_and_return.loopexit5207 ], [ %alphaSize.17, %save_state_and_return.loopexit5208 ], [ %1925, %if.end3416 ], [ %1891, %if.end3359 ], [ %1857, %if.end3302 ], [ %1823, %if.end3245 ], [ %1790, %if.end3188 ], [ %1757, %if.end3131 ], [ %1724, %if.end3074 ], [ %1691, %if.end3017 ], [ %1658, %if.end2960 ], [ %621, %if.end1112 ], [ %699, %if.end1196 ], [ %alphaSize.4.ph, %if.end1390 ], [ %alphaSize.4.ph, %if.end1429 ], [ %alphaSize.10, %if.end1623 ], [ %alphaSize.9, %if.end1566 ], [ %alphaSize.6, %if.end1501 ], [ %alphaSize.13, %if.end1886 ], [ %alphaSize.18, %if.end2079 ], [ %alphaSize.16, %if.end2015 ], [ %alphaSize.21, %if.end2495 ], [ %alphaSize.19, %if.end2431 ], [ %alphaSize.11, %if.end1822 ], [ %alphaSize.1, %if.end1328 ], [ %alphaSize.0, %if.end1270 ], [ %564, %if.end1040 ], [ %530, %if.end983 ], [ %496, %if.end926 ], [ %462, %if.end874 ], [ %428, %if.end817 ], [ %394, %if.end760 ], [ %360, %if.end703 ], [ %326, %if.end646 ], [ %289, %if.end582 ], [ %256, %if.end525 ], [ %223, %if.end468 ], [ %190, %if.end411 ], [ %157, %if.end354 ], [ %124, %if.end292 ], [ %81, %if.end192 ], [ %48, %if.end136 ], [ %15, %if.end79 ], [ 0, %if.end33 ]
  %t.18 = phi i32 [ %.pre5369, %sw.default ], [ %1924, %if.then3406 ], [ 0, %if.then29 ], [ %14, %if.then69 ], [ %47, %if.then126 ], [ %80, %if.then183 ], [ %80, %if.then237 ], [ %80, %if.else ], [ %123, %if.then282 ], [ %156, %if.then344 ], [ %189, %if.then401 ], [ %222, %if.then458 ], [ %255, %if.then515 ], [ %288, %if.then572 ], [ %563, %if.then1030 ], [ %563, %if.end1084 ], [ %653, %makeMaps_d.exit ], [ %759, %if.then1261 ], [ %759, %if.then1261 ], [ %759, %if.then1261 ], [ %789, %if.then1319 ], [ %t.3, %while.cond1540 ], [ %t.6.lcssa, %if.then1777 ], [ %t.8, %while.cond1857 ], [ %t.8, %while.end1923 ], [ %t.11, %if.then1970 ], [ %t.13, %while.cond2050 ], [ %t.13, %while.end2116 ], [ %t.10, %if.else2186 ], [ %t.10, %if.then2386 ], [ %t.16, %while.cond2466 ], [ %t.16, %while.end2532 ], [ %t.10, %while.end2551 ], [ %t.10, %if.end2917 ], [ %t.10, %if.else2926 ], [ %t.10, %if.end2815 ], [ %t.10, %if.else2822 ], [ %1657, %if.then2950 ], [ %1690, %if.then3007 ], [ %1723, %if.then3064 ], [ %1756, %if.then3121 ], [ %1789, %if.then3178 ], [ %t.10, %save_state_and_return.loopexit5205 ], [ %t.13, %save_state_and_return.loopexit5207 ], [ %t.13, %save_state_and_return.loopexit5208 ], [ %1924, %if.end3416 ], [ %1890, %if.end3359 ], [ %1856, %if.end3302 ], [ %1822, %if.end3245 ], [ %1789, %if.end3188 ], [ %1756, %if.end3131 ], [ %1723, %if.end3074 ], [ %1690, %if.end3017 ], [ %1657, %if.end2960 ], [ %620, %if.end1112 ], [ %698, %if.end1196 ], [ %.ph, %if.end1390 ], [ %.ph, %if.end1429 ], [ %t.5, %if.end1623 ], [ %t.4, %if.end1566 ], [ %t.1, %if.end1501 ], [ %t.9, %if.end1886 ], [ %t.14, %if.end2079 ], [ %t.12, %if.end2015 ], [ %t.17, %if.end2495 ], [ %t.15, %if.end2431 ], [ %t.7, %if.end1822 ], [ %789, %if.end1328 ], [ %759, %if.end1270 ], [ %563, %if.end1040 ], [ %529, %if.end983 ], [ %495, %if.end926 ], [ %461, %if.end874 ], [ %427, %if.end817 ], [ %393, %if.end760 ], [ %359, %if.end703 ], [ %325, %if.end646 ], [ %288, %if.end582 ], [ %255, %if.end525 ], [ %222, %if.end468 ], [ %189, %if.end411 ], [ %156, %if.end354 ], [ %123, %if.end292 ], [ %80, %if.end192 ], [ %47, %if.end136 ], [ %14, %if.end79 ], [ 0, %if.end33 ]
  %j.28 = phi i32 [ %.pre5368, %sw.default ], [ %1923, %if.then3406 ], [ 0, %if.then29 ], [ %13, %if.then69 ], [ %46, %if.then126 ], [ %79, %if.then183 ], [ %79, %if.then237 ], [ %79, %if.else ], [ %122, %if.then282 ], [ %155, %if.then344 ], [ %188, %if.then401 ], [ %221, %if.then458 ], [ %254, %if.then515 ], [ %287, %if.then572 ], [ %562, %if.then1030 ], [ %562, %if.end1084 ], [ %j.0, %makeMaps_d.exit ], [ %j.4, %if.then1261 ], [ %j.4, %if.then1261 ], [ %j.4, %if.then1261 ], [ %j.5, %if.then1319 ], [ %j.12, %while.cond1540 ], [ %j.9, %if.then1777 ], [ %j.16, %while.cond1857 ], [ %j.16, %while.end1923 ], [ %j.19, %if.then1970 ], [ %j.21, %while.cond2050 ], [ %j.21, %while.end2116 ], [ %j.18, %if.else2186 ], [ %j.18, %if.then2386 ], [ %j.24, %while.cond2466 ], [ %j.24, %while.end2532 ], [ %j.18, %while.end2551 ], [ %j.18, %if.end2917 ], [ %j.18, %if.else2926 ], [ %or2727, %if.end2815 ], [ %or2727, %if.else2822 ], [ %1656, %if.then2950 ], [ %1689, %if.then3007 ], [ %1722, %if.then3064 ], [ %1755, %if.then3121 ], [ %1788, %if.then3178 ], [ %j.18, %save_state_and_return.loopexit5205 ], [ %j.21, %save_state_and_return.loopexit5207 ], [ %j.21, %save_state_and_return.loopexit5208 ], [ %1923, %if.end3416 ], [ %1889, %if.end3359 ], [ %1855, %if.end3302 ], [ %1821, %if.end3245 ], [ %1788, %if.end3188 ], [ %1755, %if.end3131 ], [ %1722, %if.end3074 ], [ %1689, %if.end3017 ], [ %1656, %if.end2960 ], [ %619, %if.end1112 ], [ %j.2, %if.end1196 ], [ %j.8, %if.end1390 ], [ %inc1430, %if.end1429 ], [ %j.14, %if.end1623 ], [ %j.13, %if.end1566 ], [ %j.10, %if.end1501 ], [ %j.17, %if.end1886 ], [ %j.22, %if.end2079 ], [ %j.20, %if.end2015 ], [ %j.25, %if.end2495 ], [ %j.23, %if.end2431 ], [ %j.15, %if.end1822 ], [ %j.5, %if.end1328 ], [ %j.4, %if.end1270 ], [ %562, %if.end1040 ], [ %528, %if.end983 ], [ %494, %if.end926 ], [ %460, %if.end874 ], [ %426, %if.end817 ], [ %392, %if.end760 ], [ %358, %if.end703 ], [ %324, %if.end646 ], [ %287, %if.end582 ], [ %254, %if.end525 ], [ %221, %if.end468 ], [ %188, %if.end411 ], [ %155, %if.end354 ], [ %122, %if.end292 ], [ %79, %if.end192 ], [ %46, %if.end136 ], [ %13, %if.end79 ], [ 0, %if.end33 ]
  %i.40 = phi i32 [ %.pre, %sw.default ], [ %1922, %if.then3406 ], [ 0, %if.then29 ], [ %12, %if.then69 ], [ %45, %if.then126 ], [ %78, %if.then183 ], [ %78, %if.then237 ], [ %78, %if.else ], [ %121, %if.then282 ], [ %154, %if.then344 ], [ %187, %if.then401 ], [ %220, %if.then458 ], [ %253, %if.then515 ], [ %286, %if.then572 ], [ %561, %if.then1030 ], [ %561, %if.end1084 ], [ %i.3, %makeMaps_d.exit ], [ %i.7, %if.then1261 ], [ %i.7, %if.then1261 ], [ %i.7, %if.then1261 ], [ %i.8, %if.then1319 ], [ %i.16, %while.cond1540 ], [ 256, %if.then1777 ], [ %i.22, %while.cond1857 ], [ %i.22, %while.end1923 ], [ %i.25, %if.then1970 ], [ %i.27, %while.cond2050 ], [ %i.27, %while.end2116 ], [ %i.24, %if.else2186 ], [ %i.24, %if.then2386 ], [ %i.30, %while.cond2466 ], [ %i.30, %while.end2532 ], [ %i.24, %while.end2551 ], [ %i.38.lcssa, %if.end2917 ], [ %i.38.lcssa, %if.else2926 ], [ %j.26, %if.end2815 ], [ %j.26, %if.else2822 ], [ %1655, %if.then2950 ], [ %1688, %if.then3007 ], [ %1721, %if.then3064 ], [ %1754, %if.then3121 ], [ %1787, %if.then3178 ], [ %1956, %save_state_and_return.loopexit5205 ], [ %i.27, %save_state_and_return.loopexit5207 ], [ %i.27, %save_state_and_return.loopexit5208 ], [ %1922, %if.end3416 ], [ %1888, %if.end3359 ], [ %1854, %if.end3302 ], [ %1820, %if.end3245 ], [ %1787, %if.end3188 ], [ %1754, %if.end3131 ], [ %1721, %if.end3074 ], [ %1688, %if.end3017 ], [ %1655, %if.end2960 ], [ %i.1, %if.end1112 ], [ %i.5, %if.end1196 ], [ %i.11.ph, %if.end1390 ], [ %i.11.ph, %if.end1429 ], [ %i.18, %if.end1623 ], [ %i.17, %if.end1566 ], [ %i.14, %if.end1501 ], [ %i.23, %if.end1886 ], [ %i.28, %if.end2079 ], [ %i.26, %if.end2015 ], [ %i.31, %if.end2495 ], [ %i.29, %if.end2431 ], [ %i.21, %if.end1822 ], [ %i.8, %if.end1328 ], [ %i.7, %if.end1270 ], [ %561, %if.end1040 ], [ %527, %if.end983 ], [ %493, %if.end926 ], [ %459, %if.end874 ], [ %425, %if.end817 ], [ %391, %if.end760 ], [ %357, %if.end703 ], [ %323, %if.end646 ], [ %286, %if.end582 ], [ %253, %if.end525 ], [ %220, %if.end468 ], [ %187, %if.end411 ], [ %154, %if.end354 ], [ %121, %if.end292 ], [ %78, %if.end192 ], [ %45, %if.end136 ], [ %12, %if.end79 ], [ 0, %if.end33 ]
  %retVal.0 = phi i32 [ 0, %sw.default ], [ 4, %if.then3406 ], [ -5, %if.then29 ], [ -5, %if.then69 ], [ -5, %if.then126 ], [ -5, %if.then183 ], [ -3, %if.then237 ], [ -3, %if.else ], [ -4, %if.then282 ], [ -4, %if.then344 ], [ -4, %if.then401 ], [ -4, %if.then458 ], [ -4, %if.then515 ], [ -4, %if.then572 ], [ -4, %if.then1030 ], [ -4, %if.end1084 ], [ -4, %makeMaps_d.exit ], [ -4, %if.then1261 ], [ -4, %if.then1261 ], [ -4, %if.then1261 ], [ -4, %if.then1319 ], [ -4, %while.cond1540 ], [ -4, %if.then1777 ], [ -4, %while.cond1857 ], [ -4, %while.end1923 ], [ -4, %if.then1970 ], [ -4, %while.cond2050 ], [ -4, %while.end2116 ], [ -4, %if.else2186 ], [ -4, %if.then2386 ], [ -4, %while.cond2466 ], [ -4, %while.end2532 ], [ -4, %while.end2551 ], [ 0, %if.end2917 ], [ 0, %if.else2926 ], [ 0, %if.end2815 ], [ 0, %if.else2822 ], [ -4, %if.then2950 ], [ -4, %if.then3007 ], [ -4, %if.then3064 ], [ -4, %if.then3121 ], [ -4, %if.then3178 ], [ -4, %save_state_and_return.loopexit5205 ], [ -4, %save_state_and_return.loopexit5207 ], [ -4, %save_state_and_return.loopexit5208 ], [ 0, %if.end3416 ], [ 0, %if.end3359 ], [ 0, %if.end3302 ], [ 0, %if.end3245 ], [ 0, %if.end3188 ], [ 0, %if.end3131 ], [ 0, %if.end3074 ], [ 0, %if.end3017 ], [ 0, %if.end2960 ], [ 0, %if.end1112 ], [ 0, %if.end1196 ], [ 0, %if.end1390 ], [ -4, %if.end1429 ], [ 0, %if.end1623 ], [ 0, %if.end1566 ], [ 0, %if.end1501 ], [ 0, %if.end1886 ], [ 0, %if.end2079 ], [ 0, %if.end2015 ], [ 0, %if.end2495 ], [ 0, %if.end2431 ], [ 0, %if.end1822 ], [ 0, %if.end1328 ], [ 0, %if.end1270 ], [ 0, %if.end1040 ], [ 0, %if.end983 ], [ 0, %if.end926 ], [ 0, %if.end874 ], [ 0, %if.end817 ], [ 0, %if.end760 ], [ 0, %if.end703 ], [ 0, %if.end646 ], [ 0, %if.end582 ], [ 0, %if.end525 ], [ 0, %if.end468 ], [ 0, %if.end411 ], [ 0, %if.end354 ], [ 0, %if.end292 ], [ 0, %if.end192 ], [ 0, %if.end136 ], [ 0, %if.end79 ], [ 0, %if.end33 ]
  store i32 %i.40, i32* %save_i, align 4, !tbaa !150
  store i32 %j.28, i32* %save_j3.pre-phi6767, align 8, !tbaa !151
  store i32 %t.18, i32* %save_t4.pre-phi6711, align 4, !tbaa !152
  store i32 %alphaSize.22, i32* %save_alphaSize5.pre-phi6655, align 8, !tbaa !153
  store i32 %nGroups.21, i32* %save_nGroups6.pre-phi6599, align 4, !tbaa !154
  store i32 %nSelectors.20, i32* %save_nSelectors7.pre-phi6543, align 8, !tbaa !155
  store i32 %EOB.11, i32* %save_EOB8.pre-phi6487, align 4, !tbaa !156
  store i32 %groupNo.14, i32* %save_groupNo9.pre-phi6431, align 8, !tbaa !157
  store i32 %groupPos.14, i32* %save_groupPos10.pre-phi6375, align 4, !tbaa !158
  store i32 %nextSym.8, i32* %save_nextSym11.pre-phi6319, align 8, !tbaa !159
  store i32 %nblockMAX.11, i32* %save_nblockMAX12.pre-phi6263, align 4, !tbaa !160
  store i32 %nblock.14, i32* %save_nblock13.pre-phi6207, align 8, !tbaa !117
  store i32 %es.12, i32* %save_es14.pre-phi6151, align 4, !tbaa !161
  store i32 %N.8, i32* %save_N15.pre-phi6095, align 8, !tbaa !162
  store i32 %curr.18, i32* %save_curr16.pre-phi6039, align 4, !tbaa !163
  store i32 %1959, i32* %save_zt17.pre-phi5983, align 8, !tbaa !164
  store i32 %zn.11, i32* %save_zn18.pre-phi5927, align 4, !tbaa !165
  store i32 %zvec.10, i32* %save_zvec19.pre-phi5871, align 8, !tbaa !166
  store i32 %zj.10, i32* %save_zj20.pre-phi5815, align 4, !tbaa !167
  store i32 %gSel.14, i32* %save_gSel21.pre-phi5759, align 8, !tbaa !168
  store i32 %gMinlen.14, i32* %save_gMinlen22.pre-phi5703, align 4, !tbaa !169
  store i32* %gLimit.14, i32** %save_gLimit23.pre-phi5647, align 8, !tbaa !170
  store i32* %gBase.14, i32** %save_gBase24.pre-phi5591, align 8, !tbaa !171
  store i32* %gPerm.14, i32** %save_gPerm25.pre-phi5535, align 8, !tbaa !172
  ret i32 %retVal.0

for.body2594.1:                                   ; preds = %for.inc2608
  %arrayidx2597.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv.next5293
  %1960 = load i32, i32* %arrayidx2597.1, align 4, !tbaa !6
  %cmp2598.1 = icmp slt i32 %1960, 0
  %cmp2604.1 = icmp sgt i32 %1960, %nblock.3
  %or.cond4833.1 = or i1 %cmp2598.1, %cmp2604.1
  br i1 %or.cond4833.1, label %save_state_and_return.loopexit5205, label %for.inc2608.1

for.inc2608.1:                                    ; preds = %for.body2594.1
  %indvars.iv.next5293.1 = or i64 %indvars.iv5292, 2
  %arrayidx2597.2 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv.next5293.1
  %1961 = load i32, i32* %arrayidx2597.2, align 4, !tbaa !6
  %cmp2598.2 = icmp slt i32 %1961, 0
  %cmp2604.2 = icmp sgt i32 %1961, %nblock.3
  %or.cond4833.2 = or i1 %cmp2598.2, %cmp2604.2
  br i1 %or.cond4833.2, label %save_state_and_return.loopexit5205, label %for.inc2608.2

for.inc2608.2:                                    ; preds = %for.inc2608.1
  %indvars.iv.next5293.2 = or i64 %indvars.iv5292, 3
  %arrayidx2597.3 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 18, i64 %indvars.iv.next5293.2
  %1962 = load i32, i32* %arrayidx2597.3, align 4, !tbaa !6
  %cmp2598.3 = icmp slt i32 %1962, 0
  %cmp2604.3 = icmp sgt i32 %1962, %nblock.3
  %or.cond4833.3 = or i1 %cmp2598.3, %cmp2604.3
  br i1 %or.cond4833.3, label %save_state_and_return.loopexit5205, label %for.inc2608.3

for.inc2608.3:                                    ; preds = %for.inc2608.2
  %indvars.iv.next5293.3 = add nuw nsw i64 %indvars.iv5292, 4
  br label %for.body2594

if.then.i.1:                                      ; preds = %for.inc.i
  %1963 = trunc i32 %i.014.i to i8
  %conv.i.1 = or i8 %1963, 1
  %idxprom2.i.1 = sext i32 %757 to i64
  %arrayidx3.i.1 = getelementptr inbounds %struct.DState, %struct.DState* %s, i64 0, i32 30, i64 %idxprom2.i.1
  store i8 %conv.i.1, i8* %arrayidx3.i.1, align 1, !tbaa !12
  %1964 = load i32, i32* %nInUse.i, align 8, !tbaa !175
  %inc.i.1 = add nsw i32 %1964, 1
  store i32 %inc.i.1, i32* %nInUse.i, align 8, !tbaa !175
  br label %for.inc.i.1

for.inc.i.1:                                      ; preds = %if.then.i.1, %for.inc.i
  %1965 = phi i32 [ %757, %for.inc.i ], [ %inc.i.1, %if.then.i.1 ]
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %inc5.i.1 = add nuw nsw i32 %i.014.i, 2
  %exitcond.i.1 = icmp eq i64 %indvars.iv.next.i.1, 256
  br i1 %exitcond.i.1, label %makeMaps_d.exit, label %for.body.i
}

; Function Attrs: nounwind uwtable
define void @BZ2_hbMakeCodeLengths(i8* nocapture %len, i32* nocapture readonly %freq, i32 %alphaSize, i32 %maxLen) local_unnamed_addr #1 {
entry:
  %heap = alloca [260 x i32], align 16
  %weight = alloca [516 x i32], align 16
  %parent = alloca [516 x i32], align 16
  %0 = bitcast [260 x i32]* %heap to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %0) #2
  %1 = bitcast [516 x i32]* %weight to i8*
  call void @llvm.lifetime.start.p0i8(i64 2064, i8* nonnull %1) #2
  %2 = bitcast [516 x i32]* %parent to i8*
  call void @llvm.lifetime.start.p0i8(i64 2064, i8* nonnull %2) #2
  %cmp386 = icmp sgt i32 %alphaSize, 0
  br i1 %cmp386, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %wide.trip.count410 = zext i32 %alphaSize to i64
  %min.iters.check = icmp ult i32 %alphaSize, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %wide.trip.count410, 4294967288
  %3 = add nsw i64 %n.vec, -8
  %4 = lshr exact i64 %3, 3
  %5 = add nuw nsw i64 %4, 1
  %xtraiter443 = and i64 %5, 1
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter445 = sub nsw i64 %5, %xtraiter443
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter446 = phi i64 [ %unroll_iter445, %vector.ph.new ], [ %niter446.nsub.1, %vector.body ]
  %7 = getelementptr inbounds i32, i32* %freq, i64 %index
  %8 = bitcast i32* %7 to <4 x i32>*
  %wide.load = load <4 x i32>, <4 x i32>* %8, align 4, !tbaa !6
  %9 = getelementptr i32, i32* %7, i64 4
  %10 = bitcast i32* %9 to <4 x i32>*
  %wide.load423 = load <4 x i32>, <4 x i32>* %10, align 4, !tbaa !6
  %11 = icmp eq <4 x i32> %wide.load, zeroinitializer
  %12 = icmp eq <4 x i32> %wide.load423, zeroinitializer
  %13 = shl <4 x i32> %wide.load, <i32 8, i32 8, i32 8, i32 8>
  %14 = shl <4 x i32> %wide.load423, <i32 8, i32 8, i32 8, i32 8>
  %15 = select <4 x i1> %11, <4 x i32> <i32 256, i32 256, i32 256, i32 256>, <4 x i32> %13
  %16 = select <4 x i1> %12, <4 x i32> <i32 256, i32 256, i32 256, i32 256>, <4 x i32> %14
  %17 = or i64 %index, 1
  %18 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %17
  %19 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> %15, <4 x i32>* %19, align 4, !tbaa !6
  %20 = getelementptr i32, i32* %18, i64 4
  %21 = bitcast i32* %20 to <4 x i32>*
  store <4 x i32> %16, <4 x i32>* %21, align 4, !tbaa !6
  %index.next = or i64 %index, 8
  %22 = getelementptr inbounds i32, i32* %freq, i64 %index.next
  %23 = bitcast i32* %22 to <4 x i32>*
  %wide.load.1 = load <4 x i32>, <4 x i32>* %23, align 4, !tbaa !6
  %24 = getelementptr i32, i32* %22, i64 4
  %25 = bitcast i32* %24 to <4 x i32>*
  %wide.load423.1 = load <4 x i32>, <4 x i32>* %25, align 4, !tbaa !6
  %26 = icmp eq <4 x i32> %wide.load.1, zeroinitializer
  %27 = icmp eq <4 x i32> %wide.load423.1, zeroinitializer
  %28 = shl <4 x i32> %wide.load.1, <i32 8, i32 8, i32 8, i32 8>
  %29 = shl <4 x i32> %wide.load423.1, <i32 8, i32 8, i32 8, i32 8>
  %30 = select <4 x i1> %26, <4 x i32> <i32 256, i32 256, i32 256, i32 256>, <4 x i32> %28
  %31 = select <4 x i1> %27, <4 x i32> <i32 256, i32 256, i32 256, i32 256>, <4 x i32> %29
  %32 = or i64 %index, 9
  %33 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %32
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %34, align 4, !tbaa !6
  %35 = getelementptr i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> %31, <4 x i32>* %36, align 4, !tbaa !6
  %index.next.1 = add i64 %index, 16
  %niter446.nsub.1 = add i64 %niter446, -2
  %niter446.ncmp.1 = icmp eq i64 %niter446.nsub.1, 0
  br i1 %niter446.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !192

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod444 = icmp eq i64 %xtraiter443, 0
  br i1 %lcmp.mod444, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %37 = getelementptr inbounds i32, i32* %freq, i64 %index.unr
  %38 = bitcast i32* %37 to <4 x i32>*
  %wide.load.epil = load <4 x i32>, <4 x i32>* %38, align 4, !tbaa !6
  %39 = getelementptr i32, i32* %37, i64 4
  %40 = bitcast i32* %39 to <4 x i32>*
  %wide.load423.epil = load <4 x i32>, <4 x i32>* %40, align 4, !tbaa !6
  %41 = icmp eq <4 x i32> %wide.load.epil, zeroinitializer
  %42 = icmp eq <4 x i32> %wide.load423.epil, zeroinitializer
  %43 = shl <4 x i32> %wide.load.epil, <i32 8, i32 8, i32 8, i32 8>
  %44 = shl <4 x i32> %wide.load423.epil, <i32 8, i32 8, i32 8, i32 8>
  %45 = select <4 x i1> %41, <4 x i32> <i32 256, i32 256, i32 256, i32 256>, <4 x i32> %43
  %46 = select <4 x i1> %42, <4 x i32> <i32 256, i32 256, i32 256, i32 256>, <4 x i32> %44
  %47 = or i64 %index.unr, 1
  %48 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %49, align 4, !tbaa !6
  %50 = getelementptr i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %51, align 4, !tbaa !6
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count410
  br i1 %cmp.n, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %indvars.iv408.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv408 = phi i64 [ %indvars.iv.next409, %for.body ], [ %indvars.iv408.ph, %for.body.preheader ]
  %arrayidx = getelementptr inbounds i32, i32* %freq, i64 %indvars.iv408
  %52 = load i32, i32* %arrayidx, align 4, !tbaa !6
  %cmp1 = icmp eq i32 %52, 0
  %.op = shl i32 %52, 8
  %shl = select i1 %cmp1, i32 256, i32 %.op
  %indvars.iv.next409 = add nuw nsw i64 %indvars.iv408, 1
  %arrayidx5 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %indvars.iv.next409
  store i32 %shl, i32* %arrayidx5, align 4, !tbaa !6
  %exitcond411 = icmp eq i64 %indvars.iv.next409, %wide.trip.count410
  br i1 %exitcond411, label %for.end, label %for.body, !llvm.loop !193

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %arrayidx6 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 0
  %arrayidx7 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 0
  %arrayidx8 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 0
  %cmp10351 = icmp slt i32 %alphaSize, 1
  %arrayidx43 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 1
  %53 = sext i32 %alphaSize to i64
  %54 = add i32 %alphaSize, 1
  %wide.trip.count = zext i32 %alphaSize to i64
  %cmp39 = icmp ult i32 %alphaSize, 260
  %cmp41376 = icmp sgt i32 %alphaSize, 1
  %55 = sext i32 %alphaSize to i64
  %wide.trip.count406 = zext i32 %54 to i64
  store i32 0, i32* %arrayidx6, align 16, !tbaa !6
  store i32 0, i32* %arrayidx7, align 16, !tbaa !6
  store i32 -2, i32* %arrayidx8, align 16, !tbaa !6
  br i1 %cmp10351, label %while.end234, label %for.body11.lr.ph.lr.ph

for.body11.lr.ph.lr.ph:                           ; preds = %for.end
  %wide.trip.count402 = zext i32 %54 to i64
  %56 = add nsw i64 %wide.trip.count406, -1
  %57 = add nsw i64 %wide.trip.count402, -1
  %58 = and i32 %54, 1
  %59 = xor i32 %58, 1
  %60 = icmp eq i32 %54, 2
  %xtraiter = zext i32 %59 to i64
  %unroll_iter = sub nsw i64 %57, %xtraiter
  %lcmp.mod = icmp eq i32 %59, 0
  %min.iters.check427 = icmp ult i64 %56, 8
  %61 = and i32 %alphaSize, 7
  %n.mod.vf429 = zext i32 %61 to i64
  %n.vec430 = sub nsw i64 %56, %n.mod.vf429
  %ind.end = add nsw i64 %n.vec430, 1
  %cmp.n434 = icmp eq i32 %61, 0
  br label %for.body11

for.body11:                                       ; preds = %for.body11.backedge, %for.body11.lr.ph.lr.ph
  %indvars.iv390 = phi i64 [ 1, %for.body11.lr.ph.lr.ph ], [ %indvars.iv390.be, %for.body11.backedge ]
  %indvars.iv = phi i64 [ 0, %for.body11.lr.ph.lr.ph ], [ %indvars.iv.be, %for.body11.backedge ]
  %arrayidx13 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %indvars.iv390
  store i32 -1, i32* %arrayidx13, align 4, !tbaa !6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx16 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %indvars.iv.next
  %62 = trunc i64 %indvars.iv390 to i32
  store i32 %62, i32* %arrayidx16, align 4, !tbaa !6
  %arrayidx21 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %indvars.iv390
  %63 = load i32, i32* %arrayidx21, align 4, !tbaa !6
  %64 = trunc i64 %indvars.iv.next to i32
  %65 = lshr i32 %64, 1
  %66 = zext i32 %65 to i64
  %arrayidx23343 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %66
  %67 = load i32, i32* %arrayidx23343, align 4, !tbaa !6
  %idxprom24344 = sext i32 %67 to i64
  %arrayidx25345 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom24344
  %68 = load i32, i32* %arrayidx25345, align 4, !tbaa !6
  %cmp26346 = icmp slt i32 %63, %68
  br i1 %cmp26346, label %while.body27.preheader, label %while.end

while.body27.preheader:                           ; preds = %for.body11
  br label %while.body27

while.body27:                                     ; preds = %while.body27, %while.body27.preheader
  %arrayidx32350 = phi i32* [ %arrayidx32, %while.body27 ], [ %arrayidx16, %while.body27.preheader ]
  %69 = phi i32 [ %70, %while.body27 ], [ %67, %while.body27.preheader ]
  %shr349 = phi i32 [ %shr, %while.body27 ], [ %65, %while.body27.preheader ]
  store i32 %69, i32* %arrayidx32350, align 4, !tbaa !6
  %shr = ashr i32 %shr349, 1
  %idxprom22 = sext i32 %shr to i64
  %arrayidx23 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom22
  %70 = load i32, i32* %arrayidx23, align 4, !tbaa !6
  %idxprom24 = sext i32 %70 to i64
  %arrayidx25 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom24
  %71 = load i32, i32* %arrayidx25, align 4, !tbaa !6
  %cmp26 = icmp slt i32 %63, %71
  %idxprom31 = sext i32 %shr349 to i64
  %arrayidx32 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom31
  br i1 %cmp26, label %while.body27, label %while.end

while.end:                                        ; preds = %while.body27, %for.body11
  %arrayidx32.lcssa = phi i32* [ %arrayidx16, %for.body11 ], [ %arrayidx32, %while.body27 ]
  store i32 %62, i32* %arrayidx32.lcssa, align 4, !tbaa !6
  %indvars.iv.next391 = add nuw nsw i64 %indvars.iv390, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.end38, label %for.body11.backedge

for.body11.backedge:                              ; preds = %for.end233, %while.end
  %indvars.iv390.be = phi i64 [ %indvars.iv.next391, %while.end ], [ 1, %for.end233 ]
  %indvars.iv.be = phi i64 [ %indvars.iv.next, %while.end ], [ 0, %for.end233 ]
  br label %for.body11

for.end38:                                        ; preds = %while.end
  br i1 %cmp39, label %if.end, label %if.then

if.then:                                          ; preds = %for.end38
  tail call void @BZ2_bz__AssertH__fail(i32 2001) #2
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end38
  br i1 %cmp41376, label %while.body42.preheader, label %while.end193

while.body42.preheader:                           ; preds = %if.end
  br label %while.body42

while.body42:                                     ; preds = %while.end190, %while.body42.preheader
  %indvars.iv395 = phi i64 [ %indvars.iv.next396, %while.end190 ], [ %55, %while.body42.preheader ]
  %indvars.iv393 = phi i64 [ %indvars.iv.next394, %while.end190 ], [ %53, %while.body42.preheader ]
  %72 = load i32, i32* %arrayidx43, align 4, !tbaa !6
  %arrayidx45 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %indvars.iv395
  %73 = load i32, i32* %arrayidx45, align 4, !tbaa !6
  store i32 %73, i32* %arrayidx43, align 4, !tbaa !6
  %indvars.iv.next396 = add nsw i64 %indvars.iv395, -1
  %cmp54355 = icmp sgt i64 %indvars.iv395, 2
  br i1 %cmp54355, label %if.end56.lr.ph, label %while.end84

if.end56.lr.ph:                                   ; preds = %while.body42
  %idxprom71 = sext i32 %73 to i64
  %arrayidx72 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom71
  %74 = load i32, i32* %arrayidx72, align 4, !tbaa !6
  br label %if.end56

if.end56:                                         ; preds = %if.end79, %if.end56.lr.ph
  %shl53357 = phi i32 [ 2, %if.end56.lr.ph ], [ %shl53, %if.end79 ]
  %zz47.0356 = phi i32 [ 1, %if.end56.lr.ph ], [ %yy.0, %if.end79 ]
  %75 = sext i32 %shl53357 to i64
  %cmp57 = icmp sgt i64 %indvars.iv.next396, %75
  br i1 %cmp57, label %land.lhs.true, label %if.end70

land.lhs.true:                                    ; preds = %if.end56
  %add58 = or i32 %shl53357, 1
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom59
  %76 = load i32, i32* %arrayidx60, align 4, !tbaa !6
  %idxprom61 = sext i32 %76 to i64
  %arrayidx62 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom61
  %77 = load i32, i32* %arrayidx62, align 4, !tbaa !6
  %arrayidx64 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %75
  %78 = load i32, i32* %arrayidx64, align 8, !tbaa !6
  %idxprom65 = sext i32 %78 to i64
  %arrayidx66 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom65
  %79 = load i32, i32* %arrayidx66, align 4, !tbaa !6
  %cmp67 = icmp slt i32 %77, %79
  %spec.select338 = select i1 %cmp67, i32 %add58, i32 %shl53357
  %.pre = sext i32 %spec.select338 to i64
  br label %if.end70

if.end70:                                         ; preds = %land.lhs.true, %if.end56
  %idxprom73.pre-phi = phi i64 [ %.pre, %land.lhs.true ], [ %75, %if.end56 ]
  %yy.0 = phi i32 [ %spec.select338, %land.lhs.true ], [ %shl53357, %if.end56 ]
  %arrayidx74 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom73.pre-phi
  %80 = load i32, i32* %arrayidx74, align 4, !tbaa !6
  %idxprom75 = sext i32 %80 to i64
  %arrayidx76 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom75
  %81 = load i32, i32* %arrayidx76, align 4, !tbaa !6
  %cmp77 = icmp slt i32 %74, %81
  br i1 %cmp77, label %while.end84, label %if.end79

if.end79:                                         ; preds = %if.end70
  %idxprom82 = sext i32 %zz47.0356 to i64
  %arrayidx83 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom82
  store i32 %80, i32* %arrayidx83, align 4, !tbaa !6
  %shl53 = shl i32 %yy.0, 1
  %82 = sext i32 %shl53 to i64
  %cmp54 = icmp sgt i64 %indvars.iv395, %82
  br i1 %cmp54, label %if.end56, label %while.end84

while.end84:                                      ; preds = %if.end79, %if.end70, %while.body42
  %zz47.0.lcssa = phi i32 [ 1, %while.body42 ], [ %yy.0, %if.end79 ], [ %zz47.0356, %if.end70 ]
  %idxprom85 = sext i32 %zz47.0.lcssa to i64
  %arrayidx86 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom85
  store i32 %73, i32* %arrayidx86, align 4, !tbaa !6
  %83 = load i32, i32* %arrayidx43, align 4, !tbaa !6
  %arrayidx89 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %indvars.iv.next396
  %84 = load i32, i32* %arrayidx89, align 4, !tbaa !6
  store i32 %84, i32* %arrayidx43, align 4, !tbaa !6
  %85 = add nsw i64 %indvars.iv395, -2
  %cmp100360 = icmp slt i64 %indvars.iv395, 4
  br i1 %cmp100360, label %while.end131, label %if.end102.lr.ph

if.end102.lr.ph:                                  ; preds = %while.end84
  %idxprom118 = sext i32 %84 to i64
  %arrayidx119 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom118
  %86 = load i32, i32* %arrayidx119, align 4, !tbaa !6
  br label %if.end102

if.end102:                                        ; preds = %if.end126, %if.end102.lr.ph
  %shl99362 = phi i32 [ 2, %if.end102.lr.ph ], [ %shl99, %if.end126 ]
  %zz92.0361 = phi i32 [ 1, %if.end102.lr.ph ], [ %yy93.0, %if.end126 ]
  %87 = sext i32 %shl99362 to i64
  %cmp103 = icmp sgt i64 %85, %87
  br i1 %cmp103, label %land.lhs.true104, label %if.end117

land.lhs.true104:                                 ; preds = %if.end102
  %add105 = or i32 %shl99362, 1
  %idxprom106 = sext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom106
  %88 = load i32, i32* %arrayidx107, align 4, !tbaa !6
  %idxprom108 = sext i32 %88 to i64
  %arrayidx109 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom108
  %89 = load i32, i32* %arrayidx109, align 4, !tbaa !6
  %arrayidx111 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %87
  %90 = load i32, i32* %arrayidx111, align 8, !tbaa !6
  %idxprom112 = sext i32 %90 to i64
  %arrayidx113 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom112
  %91 = load i32, i32* %arrayidx113, align 4, !tbaa !6
  %cmp114 = icmp slt i32 %89, %91
  %spec.select339 = select i1 %cmp114, i32 %add105, i32 %shl99362
  %.pre412 = sext i32 %spec.select339 to i64
  br label %if.end117

if.end117:                                        ; preds = %land.lhs.true104, %if.end102
  %idxprom120.pre-phi = phi i64 [ %.pre412, %land.lhs.true104 ], [ %87, %if.end102 ]
  %yy93.0 = phi i32 [ %spec.select339, %land.lhs.true104 ], [ %shl99362, %if.end102 ]
  %arrayidx121 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom120.pre-phi
  %92 = load i32, i32* %arrayidx121, align 4, !tbaa !6
  %idxprom122 = sext i32 %92 to i64
  %arrayidx123 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom122
  %93 = load i32, i32* %arrayidx123, align 4, !tbaa !6
  %cmp124 = icmp slt i32 %86, %93
  br i1 %cmp124, label %while.end131, label %if.end126

if.end126:                                        ; preds = %if.end117
  %idxprom129 = sext i32 %zz92.0361 to i64
  %arrayidx130 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom129
  store i32 %92, i32* %arrayidx130, align 4, !tbaa !6
  %shl99 = shl i32 %yy93.0, 1
  %94 = sext i32 %shl99 to i64
  %cmp100 = icmp slt i64 %85, %94
  br i1 %cmp100, label %while.end131, label %if.end102

while.end131:                                     ; preds = %if.end126, %if.end117, %while.end84
  %zz92.0.lcssa = phi i32 [ 1, %while.end84 ], [ %zz92.0361, %if.end117 ], [ %yy93.0, %if.end126 ]
  %idxprom132 = sext i32 %zz92.0.lcssa to i64
  %arrayidx133 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom132
  store i32 %84, i32* %arrayidx133, align 4, !tbaa !6
  %indvars.iv.next394 = add nsw i64 %indvars.iv393, 1
  %idxprom135 = sext i32 %83 to i64
  %arrayidx136 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom135
  %95 = trunc i64 %indvars.iv.next394 to i32
  store i32 %95, i32* %arrayidx136, align 4, !tbaa !6
  %idxprom137 = sext i32 %72 to i64
  %arrayidx138 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom137
  store i32 %95, i32* %arrayidx138, align 4, !tbaa !6
  %arrayidx140 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom137
  %96 = load i32, i32* %arrayidx140, align 4, !tbaa !6
  %and = and i32 %96, -256
  %arrayidx142 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom135
  %97 = load i32, i32* %arrayidx142, align 4, !tbaa !6
  %and143 = and i32 %97, -256
  %add144 = add i32 %and143, %and
  %and147 = and i32 %96, 255
  %and150 = and i32 %97, 255
  %cmp151 = icmp ugt i32 %and147, %and150
  %and147.and150 = select i1 %cmp151, i32 %and147, i32 %and150
  %add162 = add nuw nsw i32 %and147.and150, 1
  %or = or i32 %add162, %add144
  %arrayidx164 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %indvars.iv.next394
  store i32 %or, i32* %arrayidx164, align 4, !tbaa !6
  %arrayidx166 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %indvars.iv.next394
  store i32 -1, i32* %arrayidx166, align 4, !tbaa !6
  store i32 %95, i32* %arrayidx89, align 4, !tbaa !6
  %98 = trunc i64 %indvars.iv.next396 to i32
  %shr177365 = ashr i32 %98, 1
  %idxprom178366 = sext i32 %shr177365 to i64
  %arrayidx179367 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom178366
  %99 = load i32, i32* %arrayidx179367, align 4, !tbaa !6
  %idxprom180368 = sext i32 %99 to i64
  %arrayidx181369 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom180368
  %100 = load i32, i32* %arrayidx181369, align 4, !tbaa !6
  %cmp182370 = icmp slt i32 %or, %100
  br i1 %cmp182370, label %while.body183.preheader, label %while.end190

while.body183.preheader:                          ; preds = %while.end131
  br label %while.body183

while.body183:                                    ; preds = %while.body183, %while.body183.preheader
  %arrayidx188374 = phi i32* [ %arrayidx188, %while.body183 ], [ %arrayidx89, %while.body183.preheader ]
  %101 = phi i32 [ %102, %while.body183 ], [ %99, %while.body183.preheader ]
  %shr177373 = phi i32 [ %shr177, %while.body183 ], [ %shr177365, %while.body183.preheader ]
  store i32 %101, i32* %arrayidx188374, align 4, !tbaa !6
  %shr177 = ashr i32 %shr177373, 1
  %idxprom178 = sext i32 %shr177 to i64
  %arrayidx179 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom178
  %102 = load i32, i32* %arrayidx179, align 4, !tbaa !6
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %idxprom180
  %103 = load i32, i32* %arrayidx181, align 4, !tbaa !6
  %cmp182 = icmp slt i32 %or, %103
  %idxprom187 = sext i32 %shr177373 to i64
  %arrayidx188 = getelementptr inbounds [260 x i32], [260 x i32]* %heap, i64 0, i64 %idxprom187
  br i1 %cmp182, label %while.body183, label %while.end190

while.end190:                                     ; preds = %while.body183, %while.end131
  %arrayidx188.lcssa = phi i32* [ %arrayidx89, %while.end131 ], [ %arrayidx188, %while.body183 ]
  store i32 %95, i32* %arrayidx188.lcssa, align 4, !tbaa !6
  br i1 %cmp54355, label %while.body42, label %while.end193.loopexit

while.end193.loopexit:                            ; preds = %while.end190
  %104 = trunc i64 %indvars.iv.next394 to i32
  br label %while.end193

while.end193:                                     ; preds = %while.end193.loopexit, %if.end
  %nNodes.0.lcssa = phi i32 [ %alphaSize, %if.end ], [ %104, %while.end193.loopexit ]
  %cmp194 = icmp slt i32 %nNodes.0.lcssa, 516
  br i1 %cmp194, label %if.end196, label %if.then195

if.then195:                                       ; preds = %while.end193
  tail call void @BZ2_bz__AssertH__fail(i32 2002) #2
  br label %if.end196

if.end196:                                        ; preds = %if.then195, %while.end193
  br i1 %cmp10351, label %while.end234, label %for.body199.preheader

for.body199.preheader:                            ; preds = %if.end196
  br i1 %60, label %for.end217.unr-lcssa, label %for.body199.preheader.new

for.body199.preheader.new:                        ; preds = %for.body199.preheader
  br label %for.body199

for.body199:                                      ; preds = %while.end208.1, %for.body199.preheader.new
  %indvars.iv399 = phi i64 [ 1, %for.body199.preheader.new ], [ %indvars.iv.next400.1, %while.end208.1 ]
  %tooLong.0381 = phi i8 [ 0, %for.body199.preheader.new ], [ %spec.select340.1, %while.end208.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body199.preheader.new ], [ %niter.nsub.1, %while.end208.1 ]
  %105 = trunc i64 %indvars.iv399 to i32
  br label %while.cond200

while.cond200:                                    ; preds = %while.cond200, %for.body199
  %k.0 = phi i32 [ %105, %for.body199 ], [ %106, %while.cond200 ]
  %j.0 = phi i32 [ 0, %for.body199 ], [ %inc207, %while.cond200 ]
  %idxprom201 = sext i32 %k.0 to i64
  %arrayidx202 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom201
  %106 = load i32, i32* %arrayidx202, align 4, !tbaa !6
  %cmp203 = icmp sgt i32 %106, -1
  %inc207 = add nuw nsw i32 %j.0, 1
  br i1 %cmp203, label %while.cond200, label %while.end208

while.end208:                                     ; preds = %while.cond200
  %conv = trunc i32 %j.0 to i8
  %107 = add nsw i64 %indvars.iv399, -1
  %arrayidx210 = getelementptr inbounds i8, i8* %len, i64 %107
  store i8 %conv, i8* %arrayidx210, align 1, !tbaa !12
  %cmp211 = icmp sgt i32 %j.0, %maxLen
  %108 = trunc i64 %indvars.iv399 to i32
  %109 = add i32 %108, 1
  br label %while.cond200.1

for.end217.unr-lcssa:                             ; preds = %while.end208.1, %for.body199.preheader
  %spec.select340.lcssa.ph = phi i8 [ undef, %for.body199.preheader ], [ %spec.select340.1, %while.end208.1 ]
  %indvars.iv399.unr = phi i64 [ 1, %for.body199.preheader ], [ %indvars.iv.next400.1, %while.end208.1 ]
  %tooLong.0381.unr = phi i8 [ 0, %for.body199.preheader ], [ %spec.select340.1, %while.end208.1 ]
  br i1 %lcmp.mod, label %for.end217, label %for.body199.epil

for.body199.epil:                                 ; preds = %for.end217.unr-lcssa
  %110 = trunc i64 %indvars.iv399.unr to i32
  br label %while.cond200.epil

while.cond200.epil:                               ; preds = %while.cond200.epil, %for.body199.epil
  %k.0.epil = phi i32 [ %110, %for.body199.epil ], [ %111, %while.cond200.epil ]
  %j.0.epil = phi i32 [ 0, %for.body199.epil ], [ %inc207.epil, %while.cond200.epil ]
  %idxprom201.epil = sext i32 %k.0.epil to i64
  %arrayidx202.epil = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom201.epil
  %111 = load i32, i32* %arrayidx202.epil, align 4, !tbaa !6
  %cmp203.epil = icmp sgt i32 %111, -1
  %inc207.epil = add nuw nsw i32 %j.0.epil, 1
  br i1 %cmp203.epil, label %while.cond200.epil, label %while.end208.epil

while.end208.epil:                                ; preds = %while.cond200.epil
  %conv.epil = trunc i32 %j.0.epil to i8
  %112 = add nsw i64 %indvars.iv399.unr, -1
  %arrayidx210.epil = getelementptr inbounds i8, i8* %len, i64 %112
  store i8 %conv.epil, i8* %arrayidx210.epil, align 1, !tbaa !12
  %cmp211.epil = icmp sgt i32 %j.0.epil, %maxLen
  %spec.select340.epil = select i1 %cmp211.epil, i8 1, i8 %tooLong.0381.unr
  br label %for.end217

for.end217:                                       ; preds = %while.end208.epil, %for.end217.unr-lcssa
  %spec.select340.lcssa = phi i8 [ %spec.select340.lcssa.ph, %for.end217.unr-lcssa ], [ %spec.select340.epil, %while.end208.epil ]
  %tobool = icmp eq i8 %spec.select340.lcssa, 0
  br i1 %tobool, label %while.end234, label %if.end219

if.end219:                                        ; preds = %for.end217
  br i1 %cmp10351, label %while.cond.while.end234_crit_edge.critedge, label %for.body223.lr.ph

for.body223.lr.ph:                                ; preds = %if.end219
  br i1 %min.iters.check427, label %for.body223.preheader, label %vector.ph428

vector.ph428:                                     ; preds = %for.body223.lr.ph
  br label %vector.body424

vector.body424:                                   ; preds = %vector.body424, %vector.ph428
  %index431 = phi i64 [ 0, %vector.ph428 ], [ %index.next432, %vector.body424 ]
  %offset.idx = or i64 %index431, 1
  %113 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %offset.idx
  %114 = bitcast i32* %113 to <4 x i32>*
  %wide.load439 = load <4 x i32>, <4 x i32>* %114, align 4, !tbaa !6
  %115 = getelementptr i32, i32* %113, i64 4
  %116 = bitcast i32* %115 to <4 x i32>*
  %wide.load440 = load <4 x i32>, <4 x i32>* %116, align 4, !tbaa !6
  %117 = ashr <4 x i32> %wide.load439, <i32 8, i32 8, i32 8, i32 8>
  %118 = ashr <4 x i32> %wide.load440, <i32 8, i32 8, i32 8, i32 8>
  %119 = sdiv <4 x i32> %117, <i32 2, i32 2, i32 2, i32 2>
  %120 = sdiv <4 x i32> %118, <i32 2, i32 2, i32 2, i32 2>
  %121 = shl nsw <4 x i32> %119, <i32 8, i32 8, i32 8, i32 8>
  %122 = shl nsw <4 x i32> %120, <i32 8, i32 8, i32 8, i32 8>
  %123 = add nsw <4 x i32> %121, <i32 256, i32 256, i32 256, i32 256>
  %124 = add nsw <4 x i32> %122, <i32 256, i32 256, i32 256, i32 256>
  %125 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %125, align 4, !tbaa !6
  %126 = bitcast i32* %115 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %126, align 4, !tbaa !6
  %index.next432 = add i64 %index431, 8
  %127 = icmp eq i64 %index.next432, %n.vec430
  br i1 %127, label %middle.block425, label %vector.body424, !llvm.loop !194

middle.block425:                                  ; preds = %vector.body424
  br i1 %cmp.n434, label %for.end233, label %for.body223.preheader

for.body223.preheader:                            ; preds = %middle.block425, %for.body223.lr.ph
  %indvars.iv404.ph = phi i64 [ 1, %for.body223.lr.ph ], [ %ind.end, %middle.block425 ]
  br label %for.body223

for.body223:                                      ; preds = %for.body223, %for.body223.preheader
  %indvars.iv404 = phi i64 [ %indvars.iv.next405, %for.body223 ], [ %indvars.iv404.ph, %for.body223.preheader ]
  %arrayidx225 = getelementptr inbounds [516 x i32], [516 x i32]* %weight, i64 0, i64 %indvars.iv404
  %128 = load i32, i32* %arrayidx225, align 4, !tbaa !6
  %shr226 = ashr i32 %128, 8
  %div = sdiv i32 %shr226, 2
  %add227 = shl nsw i32 %div, 8
  %shl228 = add nsw i32 %add227, 256
  store i32 %shl228, i32* %arrayidx225, align 4, !tbaa !6
  %indvars.iv.next405 = add nuw nsw i64 %indvars.iv404, 1
  %exitcond407 = icmp eq i64 %indvars.iv.next405, %wide.trip.count406
  br i1 %exitcond407, label %for.end233, label %for.body223, !llvm.loop !195

for.end233:                                       ; preds = %for.body223, %middle.block425
  store i32 0, i32* %arrayidx6, align 16, !tbaa !6
  store i32 0, i32* %arrayidx7, align 16, !tbaa !6
  store i32 -2, i32* %arrayidx8, align 16, !tbaa !6
  br i1 %cmp10351, label %while.end234, label %for.body11.backedge

while.cond.while.end234_crit_edge.critedge:       ; preds = %if.end219
  store i32 0, i32* %arrayidx6, align 16, !tbaa !6
  store i32 0, i32* %arrayidx7, align 16, !tbaa !6
  store i32 -2, i32* %arrayidx8, align 16, !tbaa !6
  br label %while.end234

while.end234:                                     ; preds = %while.cond.while.end234_crit_edge.critedge, %for.end233, %for.end217, %if.end196, %for.end
  call void @llvm.lifetime.end.p0i8(i64 2064, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 2064, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %0) #2
  ret void

while.cond200.1:                                  ; preds = %while.cond200.1, %while.end208
  %k.0.1 = phi i32 [ %109, %while.end208 ], [ %129, %while.cond200.1 ]
  %j.0.1 = phi i32 [ 0, %while.end208 ], [ %inc207.1, %while.cond200.1 ]
  %idxprom201.1 = sext i32 %k.0.1 to i64
  %arrayidx202.1 = getelementptr inbounds [516 x i32], [516 x i32]* %parent, i64 0, i64 %idxprom201.1
  %129 = load i32, i32* %arrayidx202.1, align 4, !tbaa !6
  %cmp203.1 = icmp sgt i32 %129, -1
  %inc207.1 = add nuw nsw i32 %j.0.1, 1
  br i1 %cmp203.1, label %while.cond200.1, label %while.end208.1

while.end208.1:                                   ; preds = %while.cond200.1
  %conv.1 = trunc i32 %j.0.1 to i8
  %arrayidx210.1 = getelementptr inbounds i8, i8* %len, i64 %indvars.iv399
  store i8 %conv.1, i8* %arrayidx210.1, align 1, !tbaa !12
  %cmp211.1 = icmp sgt i32 %j.0.1, %maxLen
  %130 = or i1 %cmp211.1, %cmp211
  %spec.select340.1 = select i1 %130, i8 1, i8 %tooLong.0381
  %indvars.iv.next400.1 = add nuw nsw i64 %indvars.iv399, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.end217.unr-lcssa, label %for.body199
}

; Function Attrs: norecurse nounwind uwtable
define void @BZ2_hbAssignCodes(i32* nocapture %code, i8* nocapture readonly %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) local_unnamed_addr #0 {
entry:
  %cmp25 = icmp sle i32 %minLen, %maxLen
  %cmp222 = icmp sgt i32 %alphaSize, 0
  %or.cond = and i1 %cmp25, %cmp222
  br i1 %or.cond, label %for.body.lr.ph.split.us, label %for.end11

for.body.lr.ph.split.us:                          ; preds = %entry
  %wide.trip.count = zext i32 %alphaSize to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %0 = icmp eq i32 %alphaSize, 1
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond1.for.end_crit_edge.us, %for.body.lr.ph.split.us
  %vec.028.us = phi i32 [ 0, %for.body.lr.ph.split.us ], [ %shl.us, %for.cond1.for.end_crit_edge.us ]
  %n.026.us = phi i32 [ %minLen, %for.body.lr.ph.split.us ], [ %inc10.us, %for.cond1.for.end_crit_edge.us ]
  br i1 %0, label %for.cond1.for.end_crit_edge.us.unr-lcssa, label %for.body.us.new

for.body.us.new:                                  ; preds = %for.body.us
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.inc.us.1, %for.body.us.new
  %indvars.iv = phi i64 [ 0, %for.body.us.new ], [ %indvars.iv.next.1, %for.inc.us.1 ]
  %vec.123.us = phi i32 [ %vec.028.us, %for.body.us.new ], [ %vec.2.us.1, %for.inc.us.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body.us.new ], [ %niter.nsub.1, %for.inc.us.1 ]
  %arrayidx.us = getelementptr inbounds i8, i8* %length, i64 %indvars.iv
  %1 = load i8, i8* %arrayidx.us, align 1, !tbaa !12
  %conv.us = zext i8 %1 to i32
  %cmp4.us = icmp eq i32 %n.026.us, %conv.us
  br i1 %cmp4.us, label %if.then.us, label %for.inc.us

if.then.us:                                       ; preds = %for.body3.us
  %arrayidx7.us = getelementptr inbounds i32, i32* %code, i64 %indvars.iv
  store i32 %vec.123.us, i32* %arrayidx7.us, align 4, !tbaa !6
  %inc.us = add nsw i32 %vec.123.us, 1
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.then.us, %for.body3.us
  %vec.2.us = phi i32 [ %inc.us, %if.then.us ], [ %vec.123.us, %for.body3.us ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds i8, i8* %length, i64 %indvars.iv.next
  %2 = load i8, i8* %arrayidx.us.1, align 1, !tbaa !12
  %conv.us.1 = zext i8 %2 to i32
  %cmp4.us.1 = icmp eq i32 %n.026.us, %conv.us.1
  br i1 %cmp4.us.1, label %if.then.us.1, label %for.inc.us.1

for.cond1.for.end_crit_edge.us.unr-lcssa:         ; preds = %for.inc.us.1, %for.body.us
  %vec.2.us.lcssa.ph = phi i32 [ undef, %for.body.us ], [ %vec.2.us.1, %for.inc.us.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.us ], [ %indvars.iv.next.1, %for.inc.us.1 ]
  %vec.123.us.unr = phi i32 [ %vec.028.us, %for.body.us ], [ %vec.2.us.1, %for.inc.us.1 ]
  br i1 %lcmp.mod, label %for.cond1.for.end_crit_edge.us, label %for.body3.us.epil

for.body3.us.epil:                                ; preds = %for.cond1.for.end_crit_edge.us.unr-lcssa
  %arrayidx.us.epil = getelementptr inbounds i8, i8* %length, i64 %indvars.iv.unr
  %3 = load i8, i8* %arrayidx.us.epil, align 1, !tbaa !12
  %conv.us.epil = zext i8 %3 to i32
  %cmp4.us.epil = icmp eq i32 %n.026.us, %conv.us.epil
  br i1 %cmp4.us.epil, label %if.then.us.epil, label %for.cond1.for.end_crit_edge.us

if.then.us.epil:                                  ; preds = %for.body3.us.epil
  %arrayidx7.us.epil = getelementptr inbounds i32, i32* %code, i64 %indvars.iv.unr
  store i32 %vec.123.us.unr, i32* %arrayidx7.us.epil, align 4, !tbaa !6
  %inc.us.epil = add nsw i32 %vec.123.us.unr, 1
  br label %for.cond1.for.end_crit_edge.us

for.cond1.for.end_crit_edge.us:                   ; preds = %if.then.us.epil, %for.body3.us.epil, %for.cond1.for.end_crit_edge.us.unr-lcssa
  %vec.2.us.lcssa = phi i32 [ %vec.2.us.lcssa.ph, %for.cond1.for.end_crit_edge.us.unr-lcssa ], [ %inc.us.epil, %if.then.us.epil ], [ %vec.123.us.unr, %for.body3.us.epil ]
  %shl.us = shl i32 %vec.2.us.lcssa, 1
  %inc10.us = add nsw i32 %n.026.us, 1
  %cmp.us = icmp slt i32 %n.026.us, %maxLen
  br i1 %cmp.us, label %for.body.us, label %for.end11

for.end11:                                        ; preds = %for.cond1.for.end_crit_edge.us, %entry
  ret void

if.then.us.1:                                     ; preds = %for.inc.us
  %arrayidx7.us.1 = getelementptr inbounds i32, i32* %code, i64 %indvars.iv.next
  store i32 %vec.2.us, i32* %arrayidx7.us.1, align 4, !tbaa !6
  %inc.us.1 = add nsw i32 %vec.2.us, 1
  br label %for.inc.us.1

for.inc.us.1:                                     ; preds = %if.then.us.1, %for.inc.us
  %vec.2.us.1 = phi i32 [ %inc.us.1, %if.then.us.1 ], [ %vec.2.us, %for.inc.us ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond1.for.end_crit_edge.us.unr-lcssa, label %for.body3.us
}

; Function Attrs: norecurse nounwind uwtable
define void @BZ2_hbCreateDecodeTables(i32* nocapture %limit, i32* nocapture %base, i32* nocapture %perm, i8* nocapture readonly %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) local_unnamed_addr #0 {
entry:
  %limit165 = bitcast i32* %limit to i8*
  %base177 = bitcast i32* %base to i8*
  %cmp155 = icmp sgt i32 %minLen, %maxLen
  br i1 %cmp155, label %for.end11, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %cmp2152 = icmp sgt i32 %alphaSize, 0
  br i1 %cmp2152, label %for.body.lr.ph.split.us, label %for.end11.thread

for.end11.thread:                                 ; preds = %for.body.lr.ph
  call void @llvm.memset.p0i8.i64(i8* %base177, i8 0, i64 92, i32 4, i1 false)
  br label %for.end11.for.end33_crit_edge

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  %wide.trip.count180 = zext i32 %alphaSize to i64
  %xtraiter239 = and i64 %wide.trip.count180, 1
  %0 = icmp eq i32 %alphaSize, 1
  %unroll_iter241 = sub nsw i64 %wide.trip.count180, %xtraiter239
  %lcmp.mod240 = icmp eq i64 %xtraiter239, 0
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond1.for.inc9_crit_edge.us, %for.body.lr.ph.split.us
  %i.0157.us = phi i32 [ %minLen, %for.body.lr.ph.split.us ], [ %inc10.us, %for.cond1.for.inc9_crit_edge.us ]
  %pp.0156.us = phi i32 [ 0, %for.body.lr.ph.split.us ], [ %pp.2.us.lcssa, %for.cond1.for.inc9_crit_edge.us ]
  br i1 %0, label %for.cond1.for.inc9_crit_edge.us.unr-lcssa, label %for.body.us.new

for.body.us.new:                                  ; preds = %for.body.us
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.inc.us.1, %for.body.us.new
  %indvars.iv178 = phi i64 [ 0, %for.body.us.new ], [ %indvars.iv.next179.1, %for.inc.us.1 ]
  %pp.1153.us = phi i32 [ %pp.0156.us, %for.body.us.new ], [ %pp.2.us.1, %for.inc.us.1 ]
  %niter242 = phi i64 [ %unroll_iter241, %for.body.us.new ], [ %niter242.nsub.1, %for.inc.us.1 ]
  %arrayidx.us = getelementptr inbounds i8, i8* %length, i64 %indvars.iv178
  %1 = load i8, i8* %arrayidx.us, align 1, !tbaa !12
  %conv.us = zext i8 %1 to i32
  %cmp4.us = icmp eq i32 %i.0157.us, %conv.us
  br i1 %cmp4.us, label %if.then.us, label %for.inc.us

if.then.us:                                       ; preds = %for.body3.us
  %idxprom6.us = sext i32 %pp.1153.us to i64
  %arrayidx7.us = getelementptr inbounds i32, i32* %perm, i64 %idxprom6.us
  %2 = trunc i64 %indvars.iv178 to i32
  store i32 %2, i32* %arrayidx7.us, align 4, !tbaa !6
  %inc.us = add nsw i32 %pp.1153.us, 1
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.then.us, %for.body3.us
  %pp.2.us = phi i32 [ %inc.us, %if.then.us ], [ %pp.1153.us, %for.body3.us ]
  %indvars.iv.next179 = or i64 %indvars.iv178, 1
  %arrayidx.us.1 = getelementptr inbounds i8, i8* %length, i64 %indvars.iv.next179
  %3 = load i8, i8* %arrayidx.us.1, align 1, !tbaa !12
  %conv.us.1 = zext i8 %3 to i32
  %cmp4.us.1 = icmp eq i32 %i.0157.us, %conv.us.1
  br i1 %cmp4.us.1, label %if.then.us.1, label %for.inc.us.1

for.cond1.for.inc9_crit_edge.us.unr-lcssa:        ; preds = %for.inc.us.1, %for.body.us
  %pp.2.us.lcssa.ph = phi i32 [ undef, %for.body.us ], [ %pp.2.us.1, %for.inc.us.1 ]
  %indvars.iv178.unr = phi i64 [ 0, %for.body.us ], [ %indvars.iv.next179.1, %for.inc.us.1 ]
  %pp.1153.us.unr = phi i32 [ %pp.0156.us, %for.body.us ], [ %pp.2.us.1, %for.inc.us.1 ]
  br i1 %lcmp.mod240, label %for.cond1.for.inc9_crit_edge.us, label %for.body3.us.epil

for.body3.us.epil:                                ; preds = %for.cond1.for.inc9_crit_edge.us.unr-lcssa
  %arrayidx.us.epil = getelementptr inbounds i8, i8* %length, i64 %indvars.iv178.unr
  %4 = load i8, i8* %arrayidx.us.epil, align 1, !tbaa !12
  %conv.us.epil = zext i8 %4 to i32
  %cmp4.us.epil = icmp eq i32 %i.0157.us, %conv.us.epil
  br i1 %cmp4.us.epil, label %if.then.us.epil, label %for.cond1.for.inc9_crit_edge.us

if.then.us.epil:                                  ; preds = %for.body3.us.epil
  %idxprom6.us.epil = sext i32 %pp.1153.us.unr to i64
  %arrayidx7.us.epil = getelementptr inbounds i32, i32* %perm, i64 %idxprom6.us.epil
  %5 = trunc i64 %indvars.iv178.unr to i32
  store i32 %5, i32* %arrayidx7.us.epil, align 4, !tbaa !6
  %inc.us.epil = add nsw i32 %pp.1153.us.unr, 1
  br label %for.cond1.for.inc9_crit_edge.us

for.cond1.for.inc9_crit_edge.us:                  ; preds = %if.then.us.epil, %for.body3.us.epil, %for.cond1.for.inc9_crit_edge.us.unr-lcssa
  %pp.2.us.lcssa = phi i32 [ %pp.2.us.lcssa.ph, %for.cond1.for.inc9_crit_edge.us.unr-lcssa ], [ %inc.us.epil, %if.then.us.epil ], [ %pp.1153.us.unr, %for.body3.us.epil ]
  %inc10.us = add nsw i32 %i.0157.us, 1
  %cmp.us = icmp slt i32 %i.0157.us, %maxLen
  br i1 %cmp.us, label %for.body.us, label %for.end11

for.end11:                                        ; preds = %for.cond1.for.inc9_crit_edge.us, %entry
  call void @llvm.memset.p0i8.i64(i8* %base177, i8 0, i64 92, i32 4, i1 false)
  %cmp22149 = icmp sgt i32 %alphaSize, 0
  br i1 %cmp22149, label %for.body24.lr.ph, label %for.end11.for.end33_crit_edge

for.end11.for.end33_crit_edge:                    ; preds = %for.end11, %for.end11.thread
  %.pre203 = getelementptr inbounds i32, i32* %base, i64 1
  %.pre204 = getelementptr inbounds i32, i32* %base, i64 2
  %.pre205 = getelementptr inbounds i32, i32* %base, i64 3
  %.pre206 = getelementptr inbounds i32, i32* %base, i64 4
  %.pre207 = getelementptr inbounds i32, i32* %base, i64 5
  %.pre208 = getelementptr inbounds i32, i32* %base, i64 6
  %.pre209 = getelementptr inbounds i32, i32* %base, i64 7
  %.pre210 = getelementptr inbounds i32, i32* %base, i64 8
  %.pre211 = getelementptr inbounds i32, i32* %base, i64 9
  %.pre212 = getelementptr inbounds i32, i32* %base, i64 10
  %.pre213 = getelementptr inbounds i32, i32* %base, i64 11
  %.pre214 = getelementptr inbounds i32, i32* %base, i64 12
  %.pre215 = getelementptr inbounds i32, i32* %base, i64 13
  %.pre216 = getelementptr inbounds i32, i32* %base, i64 14
  %.pre217 = getelementptr inbounds i32, i32* %base, i64 15
  %.pre218 = getelementptr inbounds i32, i32* %base, i64 16
  %.pre219 = getelementptr inbounds i32, i32* %base, i64 17
  %.pre220 = getelementptr inbounds i32, i32* %base, i64 18
  %.pre221 = getelementptr inbounds i32, i32* %base, i64 19
  %.pre222 = getelementptr inbounds i32, i32* %base, i64 20
  %.pre223 = getelementptr inbounds i32, i32* %base, i64 21
  %.pre224 = getelementptr inbounds i32, i32* %base, i64 22
  br label %for.end33

for.body24.lr.ph:                                 ; preds = %for.end11
  %wide.trip.count172 = zext i32 %alphaSize to i64
  %xtraiter237 = and i64 %wide.trip.count172, 1
  %6 = icmp eq i32 %alphaSize, 1
  br i1 %6, label %for.end33.loopexit.unr-lcssa, label %for.body24.lr.ph.new

for.body24.lr.ph.new:                             ; preds = %for.body24.lr.ph
  %unroll_iter = sub nsw i64 %wide.trip.count172, %xtraiter237
  br label %for.body24

for.body24:                                       ; preds = %for.body24, %for.body24.lr.ph.new
  %indvars.iv170 = phi i64 [ 0, %for.body24.lr.ph.new ], [ %indvars.iv.next171.1, %for.body24 ]
  %niter = phi i64 [ %unroll_iter, %for.body24.lr.ph.new ], [ %niter.nsub.1, %for.body24 ]
  %arrayidx26 = getelementptr inbounds i8, i8* %length, i64 %indvars.iv170
  %7 = load i8, i8* %arrayidx26, align 1, !tbaa !12
  %conv27 = zext i8 %7 to i64
  %add = add nuw nsw i64 %conv27, 1
  %arrayidx29 = getelementptr inbounds i32, i32* %base, i64 %add
  %8 = load i32, i32* %arrayidx29, align 4, !tbaa !6
  %inc30 = add nsw i32 %8, 1
  store i32 %inc30, i32* %arrayidx29, align 4, !tbaa !6
  %indvars.iv.next171 = or i64 %indvars.iv170, 1
  %arrayidx26.1 = getelementptr inbounds i8, i8* %length, i64 %indvars.iv.next171
  %9 = load i8, i8* %arrayidx26.1, align 1, !tbaa !12
  %conv27.1 = zext i8 %9 to i64
  %add.1 = add nuw nsw i64 %conv27.1, 1
  %arrayidx29.1 = getelementptr inbounds i32, i32* %base, i64 %add.1
  %10 = load i32, i32* %arrayidx29.1, align 4, !tbaa !6
  %inc30.1 = add nsw i32 %10, 1
  store i32 %inc30.1, i32* %arrayidx29.1, align 4, !tbaa !6
  %indvars.iv.next171.1 = add nuw nsw i64 %indvars.iv170, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.end33.loopexit.unr-lcssa, label %for.body24

for.end33.loopexit.unr-lcssa:                     ; preds = %for.body24, %for.body24.lr.ph
  %indvars.iv170.unr = phi i64 [ 0, %for.body24.lr.ph ], [ %indvars.iv.next171.1, %for.body24 ]
  %lcmp.mod238 = icmp eq i64 %xtraiter237, 0
  br i1 %lcmp.mod238, label %for.end33.loopexit, label %for.body24.epil

for.body24.epil:                                  ; preds = %for.end33.loopexit.unr-lcssa
  %arrayidx26.epil = getelementptr inbounds i8, i8* %length, i64 %indvars.iv170.unr
  %11 = load i8, i8* %arrayidx26.epil, align 1, !tbaa !12
  %conv27.epil = zext i8 %11 to i64
  %add.epil = add nuw nsw i64 %conv27.epil, 1
  %arrayidx29.epil = getelementptr inbounds i32, i32* %base, i64 %add.epil
  %12 = load i32, i32* %arrayidx29.epil, align 4, !tbaa !6
  %inc30.epil = add nsw i32 %12, 1
  store i32 %inc30.epil, i32* %arrayidx29.epil, align 4, !tbaa !6
  br label %for.end33.loopexit

for.end33.loopexit:                               ; preds = %for.body24.epil, %for.end33.loopexit.unr-lcssa
  %arrayidx41.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 1
  %.pre = load i32, i32* %arrayidx41.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.1.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 2
  %.pre182 = load i32, i32* %arrayidx41.1.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.2.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 3
  %.pre183 = load i32, i32* %arrayidx41.2.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.3.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 4
  %.pre184 = load i32, i32* %arrayidx41.3.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.4.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 5
  %.pre185 = load i32, i32* %arrayidx41.4.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.5.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 6
  %.pre186 = load i32, i32* %arrayidx41.5.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.6.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 7
  %.pre187 = load i32, i32* %arrayidx41.6.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.7.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 8
  %.pre188 = load i32, i32* %arrayidx41.7.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.8.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 9
  %.pre189 = load i32, i32* %arrayidx41.8.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.9.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 10
  %.pre190 = load i32, i32* %arrayidx41.9.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.10.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 11
  %.pre191 = load i32, i32* %arrayidx41.10.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.11.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 12
  %.pre192 = load i32, i32* %arrayidx41.11.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.12.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 13
  %.pre193 = load i32, i32* %arrayidx41.12.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.13.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 14
  %.pre194 = load i32, i32* %arrayidx41.13.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.14.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 15
  %.pre195 = load i32, i32* %arrayidx41.14.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.15.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 16
  %.pre196 = load i32, i32* %arrayidx41.15.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.16.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 17
  %.pre197 = load i32, i32* %arrayidx41.16.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.17.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 18
  %.pre198 = load i32, i32* %arrayidx41.17.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.18.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 19
  %.pre199 = load i32, i32* %arrayidx41.18.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.19.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 20
  %.pre200 = load i32, i32* %arrayidx41.19.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.20.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 21
  %.pre201 = load i32, i32* %arrayidx41.20.phi.trans.insert, align 4, !tbaa !6
  %arrayidx41.21.phi.trans.insert = getelementptr inbounds i32, i32* %base, i64 22
  %.pre202 = load i32, i32* %arrayidx41.21.phi.trans.insert, align 4, !tbaa !6
  br label %for.end33

for.end33:                                        ; preds = %for.end33.loopexit, %for.end11.for.end33_crit_edge
  %arrayidx41.21.pre-phi = phi i32* [ %.pre224, %for.end11.for.end33_crit_edge ], [ %arrayidx41.21.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.20.pre-phi = phi i32* [ %.pre223, %for.end11.for.end33_crit_edge ], [ %arrayidx41.20.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.19.pre-phi = phi i32* [ %.pre222, %for.end11.for.end33_crit_edge ], [ %arrayidx41.19.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.18.pre-phi = phi i32* [ %.pre221, %for.end11.for.end33_crit_edge ], [ %arrayidx41.18.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.17.pre-phi = phi i32* [ %.pre220, %for.end11.for.end33_crit_edge ], [ %arrayidx41.17.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.16.pre-phi = phi i32* [ %.pre219, %for.end11.for.end33_crit_edge ], [ %arrayidx41.16.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.15.pre-phi = phi i32* [ %.pre218, %for.end11.for.end33_crit_edge ], [ %arrayidx41.15.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.14.pre-phi = phi i32* [ %.pre217, %for.end11.for.end33_crit_edge ], [ %arrayidx41.14.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.13.pre-phi = phi i32* [ %.pre216, %for.end11.for.end33_crit_edge ], [ %arrayidx41.13.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.12.pre-phi = phi i32* [ %.pre215, %for.end11.for.end33_crit_edge ], [ %arrayidx41.12.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.11.pre-phi = phi i32* [ %.pre214, %for.end11.for.end33_crit_edge ], [ %arrayidx41.11.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.10.pre-phi = phi i32* [ %.pre213, %for.end11.for.end33_crit_edge ], [ %arrayidx41.10.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.9.pre-phi = phi i32* [ %.pre212, %for.end11.for.end33_crit_edge ], [ %arrayidx41.9.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.8.pre-phi = phi i32* [ %.pre211, %for.end11.for.end33_crit_edge ], [ %arrayidx41.8.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.7.pre-phi = phi i32* [ %.pre210, %for.end11.for.end33_crit_edge ], [ %arrayidx41.7.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.6.pre-phi = phi i32* [ %.pre209, %for.end11.for.end33_crit_edge ], [ %arrayidx41.6.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.5.pre-phi = phi i32* [ %.pre208, %for.end11.for.end33_crit_edge ], [ %arrayidx41.5.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.4.pre-phi = phi i32* [ %.pre207, %for.end11.for.end33_crit_edge ], [ %arrayidx41.4.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.3.pre-phi = phi i32* [ %.pre206, %for.end11.for.end33_crit_edge ], [ %arrayidx41.3.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.2.pre-phi = phi i32* [ %.pre205, %for.end11.for.end33_crit_edge ], [ %arrayidx41.2.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.1.pre-phi = phi i32* [ %.pre204, %for.end11.for.end33_crit_edge ], [ %arrayidx41.1.phi.trans.insert, %for.end33.loopexit ]
  %arrayidx41.pre-phi = phi i32* [ %.pre203, %for.end11.for.end33_crit_edge ], [ %arrayidx41.phi.trans.insert, %for.end33.loopexit ]
  %13 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre202, %for.end33.loopexit ]
  %14 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre201, %for.end33.loopexit ]
  %15 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre200, %for.end33.loopexit ]
  %16 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre199, %for.end33.loopexit ]
  %17 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre198, %for.end33.loopexit ]
  %18 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre197, %for.end33.loopexit ]
  %19 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre196, %for.end33.loopexit ]
  %20 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre195, %for.end33.loopexit ]
  %21 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre194, %for.end33.loopexit ]
  %22 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre193, %for.end33.loopexit ]
  %23 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre192, %for.end33.loopexit ]
  %24 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre191, %for.end33.loopexit ]
  %25 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre190, %for.end33.loopexit ]
  %26 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre189, %for.end33.loopexit ]
  %27 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre188, %for.end33.loopexit ]
  %28 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre187, %for.end33.loopexit ]
  %29 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre186, %for.end33.loopexit ]
  %30 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre185, %for.end33.loopexit ]
  %31 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre184, %for.end33.loopexit ]
  %32 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre183, %for.end33.loopexit ]
  %33 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre182, %for.end33.loopexit ]
  %34 = phi i32 [ 0, %for.end11.for.end33_crit_edge ], [ %.pre, %for.end33.loopexit ]
  store i32 %34, i32* %arrayidx41.pre-phi, align 4, !tbaa !6
  %add42.1 = add nsw i32 %33, %34
  store i32 %add42.1, i32* %arrayidx41.1.pre-phi, align 4, !tbaa !6
  %add42.2 = add nsw i32 %32, %add42.1
  store i32 %add42.2, i32* %arrayidx41.2.pre-phi, align 4, !tbaa !6
  %add42.3 = add nsw i32 %31, %add42.2
  store i32 %add42.3, i32* %arrayidx41.3.pre-phi, align 4, !tbaa !6
  %add42.4 = add nsw i32 %30, %add42.3
  store i32 %add42.4, i32* %arrayidx41.4.pre-phi, align 4, !tbaa !6
  %add42.5 = add nsw i32 %29, %add42.4
  store i32 %add42.5, i32* %arrayidx41.5.pre-phi, align 4, !tbaa !6
  %add42.6 = add nsw i32 %28, %add42.5
  store i32 %add42.6, i32* %arrayidx41.6.pre-phi, align 4, !tbaa !6
  %add42.7 = add nsw i32 %27, %add42.6
  store i32 %add42.7, i32* %arrayidx41.7.pre-phi, align 4, !tbaa !6
  %add42.8 = add nsw i32 %26, %add42.7
  store i32 %add42.8, i32* %arrayidx41.8.pre-phi, align 4, !tbaa !6
  %add42.9 = add nsw i32 %25, %add42.8
  store i32 %add42.9, i32* %arrayidx41.9.pre-phi, align 4, !tbaa !6
  %add42.10 = add nsw i32 %24, %add42.9
  store i32 %add42.10, i32* %arrayidx41.10.pre-phi, align 4, !tbaa !6
  %add42.11 = add nsw i32 %23, %add42.10
  store i32 %add42.11, i32* %arrayidx41.11.pre-phi, align 4, !tbaa !6
  %add42.12 = add nsw i32 %22, %add42.11
  store i32 %add42.12, i32* %arrayidx41.12.pre-phi, align 4, !tbaa !6
  %add42.13 = add nsw i32 %21, %add42.12
  store i32 %add42.13, i32* %arrayidx41.13.pre-phi, align 4, !tbaa !6
  %add42.14 = add nsw i32 %20, %add42.13
  store i32 %add42.14, i32* %arrayidx41.14.pre-phi, align 4, !tbaa !6
  %add42.15 = add nsw i32 %19, %add42.14
  store i32 %add42.15, i32* %arrayidx41.15.pre-phi, align 4, !tbaa !6
  %add42.16 = add nsw i32 %18, %add42.15
  store i32 %add42.16, i32* %arrayidx41.16.pre-phi, align 4, !tbaa !6
  %add42.17 = add nsw i32 %17, %add42.16
  store i32 %add42.17, i32* %arrayidx41.17.pre-phi, align 4, !tbaa !6
  %add42.18 = add nsw i32 %16, %add42.17
  store i32 %add42.18, i32* %arrayidx41.18.pre-phi, align 4, !tbaa !6
  %add42.19 = add nsw i32 %15, %add42.18
  store i32 %add42.19, i32* %arrayidx41.19.pre-phi, align 4, !tbaa !6
  %add42.20 = add nsw i32 %14, %add42.19
  store i32 %add42.20, i32* %arrayidx41.20.pre-phi, align 4, !tbaa !6
  %add42.21 = add nsw i32 %13, %add42.20
  store i32 %add42.21, i32* %arrayidx41.21.pre-phi, align 4, !tbaa !6
  call void @llvm.memset.p0i8.i64(i8* %limit165, i8 0, i64 92, i32 4, i1 false)
  br i1 %cmp155, label %for.end71, label %for.body58.lr.ph

for.body58.lr.ph:                                 ; preds = %for.end33
  %35 = sext i32 %minLen to i64
  %36 = sext i32 %maxLen to i64
  br label %for.body58

for.body58:                                       ; preds = %for.body58, %for.body58.lr.ph
  %indvars.iv160 = phi i64 [ %indvars.iv.next161, %for.body58 ], [ %35, %for.body58.lr.ph ]
  %vec.0146 = phi i32 [ %shl, %for.body58 ], [ 0, %for.body58.lr.ph ]
  %indvars.iv.next161 = add nsw i64 %indvars.iv160, 1
  %arrayidx61 = getelementptr inbounds i32, i32* %base, i64 %indvars.iv.next161
  %37 = load i32, i32* %arrayidx61, align 4, !tbaa !6
  %arrayidx63 = getelementptr inbounds i32, i32* %base, i64 %indvars.iv160
  %38 = load i32, i32* %arrayidx63, align 4, !tbaa !6
  %sub64 = sub nsw i32 %37, %38
  %add65 = add nsw i32 %sub64, %vec.0146
  %sub66 = add nsw i32 %add65, -1
  %arrayidx68 = getelementptr inbounds i32, i32* %limit, i64 %indvars.iv160
  store i32 %sub66, i32* %arrayidx68, align 4, !tbaa !6
  %shl = shl i32 %add65, 1
  %cmp56 = icmp slt i64 %indvars.iv160, %36
  br i1 %cmp56, label %for.body58, label %for.end71

for.end71:                                        ; preds = %for.body58, %for.end33
  %cmp74141 = icmp slt i32 %minLen, %maxLen
  br i1 %cmp74141, label %for.body76.lr.ph, label %for.end89

for.body76.lr.ph:                                 ; preds = %for.end71
  %39 = sext i32 %minLen to i64
  %wide.trip.count = sext i32 %maxLen to i64
  %40 = sub nsw i64 %wide.trip.count, %39
  %min.iters.check = icmp ult i64 %40, 8
  br i1 %min.iters.check, label %for.body76.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body76.lr.ph
  %41 = add nsw i64 %39, 1
  %scevgep = getelementptr i32, i32* %base, i64 %41
  %42 = add nsw i64 %wide.trip.count, 1
  %scevgep227 = getelementptr i32, i32* %base, i64 %42
  %scevgep229 = getelementptr i32, i32* %limit, i64 %39
  %scevgep231 = getelementptr i32, i32* %limit, i64 %wide.trip.count
  %bound0 = icmp ult i32* %scevgep, %scevgep231
  %bound1 = icmp ult i32* %scevgep229, %scevgep227
  %memcheck.conflict = and i1 %bound0, %bound1
  br i1 %memcheck.conflict, label %for.body76.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %40, -8
  %ind.end = add nsw i64 %n.vec, %39
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %43 = add i64 %index, %39
  %44 = add nsw i64 %43, 1
  %45 = getelementptr inbounds i32, i32* %limit, i64 %43
  %46 = bitcast i32* %45 to <4 x i32>*
  %wide.load = load <4 x i32>, <4 x i32>* %46, align 4, !tbaa !6, !alias.scope !196
  %47 = getelementptr i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  %wide.load234 = load <4 x i32>, <4 x i32>* %48, align 4, !tbaa !6, !alias.scope !196
  %49 = shl <4 x i32> %wide.load, <i32 1, i32 1, i32 1, i32 1>
  %50 = shl <4 x i32> %wide.load234, <i32 1, i32 1, i32 1, i32 1>
  %51 = add <4 x i32> %49, <i32 2, i32 2, i32 2, i32 2>
  %52 = add <4 x i32> %50, <i32 2, i32 2, i32 2, i32 2>
  %53 = getelementptr inbounds i32, i32* %base, i64 %44
  %54 = bitcast i32* %53 to <4 x i32>*
  %wide.load235 = load <4 x i32>, <4 x i32>* %54, align 4, !tbaa !6, !alias.scope !199, !noalias !196
  %55 = getelementptr i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  %wide.load236 = load <4 x i32>, <4 x i32>* %56, align 4, !tbaa !6, !alias.scope !199, !noalias !196
  %57 = sub <4 x i32> %51, %wide.load235
  %58 = sub <4 x i32> %52, %wide.load236
  %59 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> %57, <4 x i32>* %59, align 4, !tbaa !6, !alias.scope !199, !noalias !196
  %60 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %60, align 4, !tbaa !6, !alias.scope !199, !noalias !196
  %index.next = add i64 %index, 8
  %61 = icmp eq i64 %index.next, %n.vec
  br i1 %61, label %middle.block, label %vector.body, !llvm.loop !201

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %40, %n.vec
  br i1 %cmp.n, label %for.end89, label %for.body76.preheader

for.body76.preheader:                             ; preds = %middle.block, %vector.memcheck, %for.body76.lr.ph
  %indvars.iv.ph = phi i64 [ %39, %vector.memcheck ], [ %39, %for.body76.lr.ph ], [ %ind.end, %middle.block ]
  %62 = sub nsw i64 %wide.trip.count, %indvars.iv.ph
  %63 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %62, 1
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body76.prol.loopexit, label %for.body76.prol

for.body76.prol:                                  ; preds = %for.body76.preheader
  %indvars.iv.next.prol = add nsw i64 %indvars.iv.ph, 1
  %arrayidx79.prol = getelementptr inbounds i32, i32* %limit, i64 %indvars.iv.ph
  %64 = load i32, i32* %arrayidx79.prol, align 4, !tbaa !6
  %add80.prol = shl i32 %64, 1
  %shl81.prol = add i32 %add80.prol, 2
  %arrayidx83.prol = getelementptr inbounds i32, i32* %base, i64 %indvars.iv.next.prol
  %65 = load i32, i32* %arrayidx83.prol, align 4, !tbaa !6
  %sub84.prol = sub i32 %shl81.prol, %65
  store i32 %sub84.prol, i32* %arrayidx83.prol, align 4, !tbaa !6
  br label %for.body76.prol.loopexit

for.body76.prol.loopexit:                         ; preds = %for.body76.prol, %for.body76.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body76.preheader ], [ %indvars.iv.next.prol, %for.body76.prol ]
  %66 = icmp eq i64 %63, %indvars.iv.ph
  br i1 %66, label %for.end89, label %for.body76.preheader.new

for.body76.preheader.new:                         ; preds = %for.body76.prol.loopexit
  br label %for.body76

for.body76:                                       ; preds = %for.body76, %for.body76.preheader.new
  %indvars.iv = phi i64 [ %indvars.iv.unr, %for.body76.preheader.new ], [ %indvars.iv.next.1, %for.body76 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx79 = getelementptr inbounds i32, i32* %limit, i64 %indvars.iv
  %67 = load i32, i32* %arrayidx79, align 4, !tbaa !6
  %add80 = shl i32 %67, 1
  %shl81 = add i32 %add80, 2
  %arrayidx83 = getelementptr inbounds i32, i32* %base, i64 %indvars.iv.next
  %68 = load i32, i32* %arrayidx83, align 4, !tbaa !6
  %sub84 = sub i32 %shl81, %68
  store i32 %sub84, i32* %arrayidx83, align 4, !tbaa !6
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %arrayidx79.1 = getelementptr inbounds i32, i32* %limit, i64 %indvars.iv.next
  %69 = load i32, i32* %arrayidx79.1, align 4, !tbaa !6
  %add80.1 = shl i32 %69, 1
  %shl81.1 = add i32 %add80.1, 2
  %arrayidx83.1 = getelementptr inbounds i32, i32* %base, i64 %indvars.iv.next.1
  %70 = load i32, i32* %arrayidx83.1, align 4, !tbaa !6
  %sub84.1 = sub i32 %shl81.1, %70
  store i32 %sub84.1, i32* %arrayidx83.1, align 4, !tbaa !6
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, %wide.trip.count
  br i1 %exitcond.1, label %for.end89, label %for.body76, !llvm.loop !202

for.end89:                                        ; preds = %for.body76, %for.body76.prol.loopexit, %middle.block, %for.end71
  ret void

if.then.us.1:                                     ; preds = %for.inc.us
  %idxprom6.us.1 = sext i32 %pp.2.us to i64
  %arrayidx7.us.1 = getelementptr inbounds i32, i32* %perm, i64 %idxprom6.us.1
  %71 = trunc i64 %indvars.iv.next179 to i32
  store i32 %71, i32* %arrayidx7.us.1, align 4, !tbaa !6
  %inc.us.1 = add nsw i32 %pp.2.us, 1
  br label %for.inc.us.1

for.inc.us.1:                                     ; preds = %if.then.us.1, %for.inc.us
  %pp.2.us.1 = phi i32 [ %inc.us.1, %if.then.us.1 ], [ %pp.2.us, %for.inc.us ]
  %indvars.iv.next179.1 = add nuw nsw i64 %indvars.iv178, 2
  %niter242.nsub.1 = add i64 %niter242, -2
  %niter242.ncmp.1 = icmp eq i64 %niter242.nsub.1, 0
  br i1 %niter242.ncmp.1, label %for.cond1.for.inc9_crit_edge.us.unr-lcssa, label %for.body3.us
}

attributes #0 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind readonly }
attributes #12 = { nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { cold }
attributes #16 = { cold nounwind }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{!3, !3, i64 0}
!3 = !{!"long", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!7, !7, i64 0}
!7 = !{!"int", !4, i64 0}
!8 = !{!9, !7, i64 0}
!9 = !{!"spec_fd_t", !7, i64 0, !7, i64 4, !7, i64 8, !10, i64 16}
!10 = !{!"any pointer", !4, i64 0}
!11 = !{!9, !10, i64 16}
!12 = !{!4, !4, i64 0}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !14}
!17 = !{!9, !7, i64 4}
!18 = !{!10, !10, i64 0}
!19 = !{!9, !7, i64 8}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !23, !21}
!23 = !{!"llvm.loop.unroll.runtime.disable"}
!24 = !{!25, !10, i64 56}
!25 = !{!"", !10, i64 0, !7, i64 8, !7, i64 12, !7, i64 16, !10, i64 24, !10, i64 32, !10, i64 40, !7, i64 48, !10, i64 56, !10, i64 64, !10, i64 72, !10, i64 80, !7, i64 88, !7, i64 92, !7, i64 96, !7, i64 100, !7, i64 104, !7, i64 108, !7, i64 112, !7, i64 116, !7, i64 120, !7, i64 124, !4, i64 128, !4, i64 384, !7, i64 640, !7, i64 644, !7, i64 648, !7, i64 652, !7, i64 656, !7, i64 660, !7, i64 664, !7, i64 668, !4, i64 672, !4, i64 1704, !4, i64 19706, !4, i64 37708, !4, i64 39256, !4, i64 45448, !4, i64 51640}
!26 = !{!25, !10, i64 64}
!27 = !{!25, !10, i64 40}
!28 = !{!25, !7, i64 108}
!29 = !{!25, !7, i64 656}
!30 = !{!25, !7, i64 88}
!31 = !{!25, !10, i64 24}
!32 = !{!25, !10, i64 32}
!33 = !{!34, !34, i64 0}
!34 = !{!"short", !4, i64 0}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !21}
!41 = distinct !{!41, !21}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !21}
!48 = distinct !{!48, !21}
!49 = !{!25, !7, i64 48}
!50 = distinct !{!50, !14}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !21}
!57 = distinct !{!57, !21}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !21}
!64 = distinct !{!64, !21}
!65 = distinct !{!65, !21}
!66 = distinct !{!66, !21}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !21}
!73 = distinct !{!73, !14}
!74 = distinct !{!74, !21}
!75 = !{!76, !10, i64 56}
!76 = !{!"", !10, i64 0, !7, i64 8, !7, i64 12, !7, i64 16, !10, i64 24, !7, i64 32, !7, i64 36, !7, i64 40, !10, i64 48, !10, i64 56, !10, i64 64, !10, i64 72}
!77 = !{!76, !10, i64 64}
!78 = !{!76, !10, i64 72}
!79 = !{!25, !10, i64 0}
!80 = !{!25, !7, i64 12}
!81 = !{!25, !7, i64 8}
!82 = !{!25, !7, i64 652}
!83 = !{!25, !7, i64 664}
!84 = !{!25, !7, i64 112}
!85 = !{!25, !10, i64 72}
!86 = !{!25, !10, i64 80}
!87 = !{!76, !10, i64 48}
!88 = !{!76, !7, i64 12}
!89 = !{!76, !7, i64 16}
!90 = !{!76, !7, i64 36}
!91 = !{!76, !7, i64 40}
!92 = !{!25, !7, i64 92}
!93 = !{!25, !7, i64 96}
!94 = !{!25, !7, i64 116}
!95 = !{!25, !7, i64 120}
!96 = !{!25, !7, i64 648}
!97 = !{!25, !7, i64 660}
!98 = !{!76, !7, i64 8}
!99 = !{!25, !7, i64 16}
!100 = !{!76, !7, i64 32}
!101 = !{!76, !10, i64 24}
!102 = !{!76, !10, i64 0}
!103 = !{!104, !10, i64 0}
!104 = !{!"", !10, i64 0, !7, i64 8, !4, i64 12, !7, i64 16, !4, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !4, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !4, i64 68, !7, i64 1092, !4, i64 1096, !4, i64 2124, !10, i64 3152, !10, i64 3160, !10, i64 3168, !7, i64 3176, !7, i64 3180, !7, i64 3184, !7, i64 3188, !7, i64 3192, !4, i64 3196, !4, i64 3452, !4, i64 3468, !4, i64 3724, !4, i64 7820, !4, i64 7884, !4, i64 25886, !4, i64 43888, !4, i64 45436, !4, i64 51628, !4, i64 57820, !4, i64 64012, !7, i64 64036, !7, i64 64040, !7, i64 64044, !7, i64 64048, !7, i64 64052, !7, i64 64056, !7, i64 64060, !7, i64 64064, !7, i64 64068, !7, i64 64072, !7, i64 64076, !7, i64 64080, !7, i64 64084, !7, i64 64088, !7, i64 64092, !7, i64 64096, !7, i64 64100, !7, i64 64104, !7, i64 64108, !7, i64 64112, !7, i64 64116, !10, i64 64120, !10, i64 64128, !10, i64 64136}
!105 = !{!104, !7, i64 8}
!106 = !{!104, !7, i64 36}
!107 = !{!104, !7, i64 32}
!108 = !{!104, !7, i64 3188}
!109 = !{!104, !4, i64 44}
!110 = !{!104, !7, i64 48}
!111 = !{!104, !7, i64 52}
!112 = !{!104, !4, i64 20}
!113 = !{!104, !7, i64 16}
!114 = !{!104, !4, i64 12}
!115 = !{!104, !7, i64 3184}
!116 = !{!104, !7, i64 1092}
!117 = !{!104, !7, i64 64080}
!118 = !{!104, !7, i64 64}
!119 = !{!104, !7, i64 60}
!120 = !{!104, !10, i64 3160}
!121 = !{!104, !10, i64 3168}
!122 = !{!104, !7, i64 24}
!123 = !{!104, !7, i64 28}
!124 = !{!104, !10, i64 3152}
!125 = !{!104, !7, i64 3176}
!126 = !{!104, !7, i64 3180}
!127 = !{!128, !7, i64 5096}
!128 = !{!"", !7, i64 0, !4, i64 4, !7, i64 5004, !4, i64 5008, !76, i64 5016, !7, i64 5096, !4, i64 5100}
!129 = !{!128, !4, i64 5100}
!130 = !{!128, !7, i64 5004}
!131 = !{!128, !7, i64 0}
!132 = !{!128, !4, i64 5008}
!133 = !{!128, !7, i64 5024}
!134 = !{!128, !10, i64 5016}
!135 = !{!128, !7, i64 5048}
!136 = !{!128, !10, i64 5040}
!137 = !{!128, !7, i64 5028}
!138 = !{!128, !7, i64 5032}
!139 = !{!128, !7, i64 5052}
!140 = !{!128, !7, i64 5056}
!141 = !{!25, !7, i64 644}
!142 = !{!25, !7, i64 640}
!143 = !{!25, !7, i64 124}
!144 = distinct !{!144, !21}
!145 = distinct !{!145, !14}
!146 = distinct !{!146, !23, !21}
!147 = !{!25, !7, i64 668}
!148 = distinct !{!148, !21}
!149 = distinct !{!149, !23, !21}
!150 = !{!104, !7, i64 64036}
!151 = !{!104, !7, i64 64040}
!152 = !{!104, !7, i64 64044}
!153 = !{!104, !7, i64 64048}
!154 = !{!104, !7, i64 64052}
!155 = !{!104, !7, i64 64056}
!156 = !{!104, !7, i64 64060}
!157 = !{!104, !7, i64 64064}
!158 = !{!104, !7, i64 64068}
!159 = !{!104, !7, i64 64072}
!160 = !{!104, !7, i64 64076}
!161 = !{!104, !7, i64 64084}
!162 = !{!104, !7, i64 64088}
!163 = !{!104, !7, i64 64092}
!164 = !{!104, !7, i64 64096}
!165 = !{!104, !7, i64 64100}
!166 = !{!104, !7, i64 64104}
!167 = !{!104, !7, i64 64108}
!168 = !{!104, !7, i64 64112}
!169 = !{!104, !7, i64 64116}
!170 = !{!104, !10, i64 64120}
!171 = !{!104, !10, i64 64128}
!172 = !{!104, !10, i64 64136}
!173 = !{!104, !7, i64 40}
!174 = !{!104, !7, i64 56}
!175 = !{!104, !7, i64 3192}
!176 = distinct !{!176, !21}
!177 = distinct !{!177, !14}
!178 = distinct !{!178, !21}
!179 = distinct !{!179, !14}
!180 = distinct !{!180, !21}
!181 = distinct !{!181, !23, !21}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !21}
!188 = distinct !{!188, !14}
!189 = distinct !{!189, !21}
!190 = distinct !{!190, !21}
!191 = distinct !{!191, !14}
!192 = distinct !{!192, !21}
!193 = distinct !{!193, !23, !21}
!194 = distinct !{!194, !21}
!195 = distinct !{!195, !23, !21}
!196 = !{!197}
!197 = distinct !{!197, !198}
!198 = distinct !{!198, !"LVerDomain"}
!199 = !{!200}
!200 = distinct !{!200, !198}
!201 = distinct !{!201, !21}
!202 = distinct !{!202, !21}
